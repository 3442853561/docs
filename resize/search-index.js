var searchIndex = {};
searchIndex['resize'] = {"items":[[0,"","resize","Simple resampling library in pure Rust.",null,null],[3,"Filter","","Resampling filter.",null,null],[12,"kernel","","Filter kernel.",0,null],[12,"support","","Filter support.",0,null],[3,"Resizer","","Simple resampler with preallocated buffers and coeffecients for the given\ndimensions. See also:\n* https://github.com/sekrit-twc/zimg/tree/master/src/zimg/resize\n* https://github.com/PistonDevelopers/image/blob/master/src/imageops/sample.rs",null,null],[4,"Type","","Resizing type to use.",null,null],[13,"Triangle","","Triangle (bilinear) filter.",1,null],[13,"Lanczos3","","Sinc-windowed filter with radius of 3.",1,null],[13,"Custom","","Custom filter.",1,null],[5,"new","","Create a new resizer instance. Alias for `Resizer::new`.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"type"}],"output":{"name":"resizer"}}],[11,"fmt","","",2,{"inputs":[{"name":"resizer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new resizer instance for the given dimensions and filter.",2,{"inputs":[{"name":"resizer"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"usize"},{"name":"type"}],"output":{"name":"resizer"}}],[11,"run","","Resize `src` image data into `dst`.",2,null]],"paths":[[3,"Filter"],[4,"Type"],[3,"Resizer"]]};
initSearch(searchIndex);
