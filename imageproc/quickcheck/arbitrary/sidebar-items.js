initSidebarItems({"fn":[["empty_shrinker","Creates a shrinker with zero elements."],["single_shrinker","Creates a shrinker with a single element."]],"struct":[["StdGen","StdGen is the default implementation of `Gen`.Values of type `StdGen` can be created with the `gen` function in this crate."]],"trait":[["Arbitrary","`Arbitrary` describes types whose values can be randomly generated and shrunk.Aside from shrinking, `Arbitrary` is different from the `std::Rand` trait in that it uses a `Gen` to control the distribution of random values.As of now, all types that implement `Arbitrary` must also implement `Clone`. (I'm not sure if this is a permanent restriction.)They must also be sendable and static since every test is run in its own thread using `thread::Builder::spawn`, which requires the `Send + 'static` bounds."],["Gen","`Gen` wraps a `rand::Rng` with parameters to control the distribution of random values.A value with type satisfying the `Gen` trait can be constructed with the `gen` function in this crate."]]});