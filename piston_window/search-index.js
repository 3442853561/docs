var searchIndex = {};
searchIndex['piston_window'] = {"items":[[0,"","piston_window","The official Piston window back-end for the Piston game engine",null,null],[11,"get_major_minor","shader_version::opengl","Gets the minor version of OpenGL.",0,null],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,{"inputs":[{"name":"opengl"}],"output":{"name":"glsl"}}],[11,"cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"opengl"}],"output":{"name":"opengl"}}],[11,"cmp","shader_version::glsl","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"glsl"}],"output":{"name":"glsl"}}],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,{"inputs":[{"name":"glsl"}],"output":{"name":"opengl"}}],[11,"pick_shader","","",1,{"inputs":[{"name":"glsl"},{"name":"shaders"}],"output":{"name":"option"}}],[11,"new","shader_version","Creates a new shader picker.",2,{"inputs":[{"name":"shaders"}],"output":{"name":"shaders"}}],[11,"set","","Sets source for a shader version.",2,{"inputs":[{"name":"shaders"},{"name":"v"},{"name":"s"}],"output":{"name":"shaders"}}],[11,"get","","Get the closest shader to a shader version.",2,{"inputs":[{"name":"shaders"},{"name":"v"}],"output":{"name":"option"}}],[4,"OpenGL","piston_window","",null,null],[13,"V2_0","","",0,null],[13,"V2_1","","",0,null],[13,"V3_0","","",0,null],[13,"V3_1","","",0,null],[13,"V3_2","","",0,null],[13,"V3_3","","",0,null],[13,"V4_0","","",0,null],[13,"V4_1","","",0,null],[13,"V4_2","","",0,null],[13,"V4_3","","",0,null],[13,"V4_4","","",0,null],[13,"V4_5","","",0,null],[11,"handle","gfx_texture","Gets a handle to the Gfx texture.",3,{"inputs":[{"name":"texture"}],"output":{"name":"texture"}}],[11,"empty","","Returns empty texture.",3,{"inputs":[{"name":"texture"},{"name":"f"}],"output":{"name":"result"}}],[11,"from_path","","Creates a texture from path.",3,{"inputs":[{"name":"texture"},{"name":"f"},{"name":"p"},{"name":"flip"},{"name":"texturesettings"}],"output":{"name":"result"}}],[11,"from_image","","Creates a texture from image.",3,{"inputs":[{"name":"texture"},{"name":"f"},{"name":"imagebuffer"},{"name":"texturesettings"}],"output":{"name":"result"}}],[11,"from_memory_alpha","","Creates texture from memory alpha.",3,null],[11,"update","","Updates the texture with an image.",3,{"inputs":[{"name":"texture"},{"name":"f"},{"name":"imagebuffer"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"flip"},{"name":"flip"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"flip"},{"name":"flip"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"flip"}],"output":{"name":"flip"}}],[11,"eq","","",3,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"texture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"texture"}],"output":{"name":"texture"}}],[11,"create","","",3,null],[11,"update","","",3,null],[11,"get_size","","",3,null],[3,"Texture","piston_window","Represents a texture.",null,null],[11,"new","texture","Create default settings.",5,{"inputs":[{"name":"texturesettings"}],"output":{"name":"texturesettings"}}],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color space.",5,{"inputs":[{"name":"texturesettings"}],"output":{"name":"bool"}}],[11,"set_convert_gamma","","Sets convert gamma.",5,null],[11,"convert_gamma","","Sets convert gamma.",5,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":{"name":"texturesettings"}}],[11,"get_compress","","Gets wheter compress on the GPU.",5,{"inputs":[{"name":"texturesettings"}],"output":{"name":"bool"}}],[11,"set_compress","","Sets compress.",5,null],[11,"compress","","Sets compress.",5,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":{"name":"texturesettings"}}],[11,"get_generate_mipmap","","Gets generate mipmap.",5,{"inputs":[{"name":"texturesettings"}],"output":{"name":"bool"}}],[11,"set_generate_mipmap","","Sets generate mipmap.",5,null],[11,"generate_mipmap","","Sets generate mipmap.",5,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":{"name":"texturesettings"}}],[3,"TextureSettings","piston_window","Texture creation parameters.",null,null],[4,"Flip","","Flip settings.",null,null],[13,"None","","Does not flip.",4,null],[13,"Vertical","","Flips image vertically.",4,null],[3,"PistonWindow","","Contains everything required for controlling window, graphics, event loop.",null,null],[12,"window","","The window.",6,null],[12,"stream","","GFX stream.",6,null],[12,"device","","GFX device.",6,null],[12,"g2d","","Gfx2d.",6,null],[12,"events","","The event loop.",6,null],[12,"event","","The event.",6,null],[12,"app","","Application structure.",6,null],[12,"factory","","The factory that was created along with the device.",6,null],[5,"empty_app","","Creates a new empty application.",null,{"inputs":[],"output":{"name":"rc"}}],[6,"GfxStream","","Actual gfx::Stream implementation carried by the window.",null,null],[6,"Glyphs","","Glyph cache.",null,null],[6,"G2d","","2D graphics.",null,null],[11,"build_from_window_settings","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"windowsettings"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"pistonwindow"}],"output":{"name":"self"}}],[11,"new","","Creates a new piston object.",6,{"inputs":[{"name":"pistonwindow"},{"name":"rc"},{"name":"rc"}],"output":{"name":"self"}}],[11,"app","","Changes application structure.",6,{"inputs":[{"name":"pistonwindow"},{"name":"rc"}],"output":{"name":"pistonwindow"}}],[11,"app_by_value","","Changes application structure.",6,{"inputs":[{"name":"pistonwindow"},{"name":"u"}],"output":{"name":"pistonwindow"}}],[11,"draw_2d","","Renders 2D graphics.",6,{"inputs":[{"name":"pistonwindow"},{"name":"f"}],"output":null}],[11,"draw_3d","","Renders 3D graphics.",6,{"inputs":[{"name":"pistonwindow"},{"name":"f"}],"output":null}],[11,"next","","",6,{"inputs":[{"name":"pistonwindow"}],"output":{"name":"option"}}],[11,"event_id","","",6,{"inputs":[{"name":"pistonwindow"}],"output":{"name":"eventid"}}],[11,"with_args","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"should_close","","",6,{"inputs":[{"name":"pistonwindow"}],"output":{"name":"bool"}}],[11,"set_should_close","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"bool"}],"output":null}],[11,"size","","",6,{"inputs":[{"name":"pistonwindow"}],"output":{"name":"size"}}],[11,"draw_size","","",6,{"inputs":[{"name":"pistonwindow"}],"output":{"name":"size"}}],[11,"swap_buffers","","",6,{"inputs":[{"name":"pistonwindow"}],"output":null}],[11,"poll_event","","",6,{"inputs":[{"name":"pistonwindow"}],"output":{"name":"option"}}],[11,"get_title","","",6,{"inputs":[{"name":"pistonwindow"}],"output":{"name":"string"}}],[11,"set_title","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"string"}],"output":null}],[11,"get_exit_on_esc","","",6,{"inputs":[{"name":"pistonwindow"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"bool"}],"output":null}],[11,"set_capture_cursor","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"bool"}],"output":null}],[11,"set_ups","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"u64"}],"output":null}],[11,"set_max_fps","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"u64"}],"output":null}],[11,"set_swap_buffers","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"bool"}],"output":null}],[11,"set_bench_mode","","",6,{"inputs":[{"name":"pistonwindow"},{"name":"bool"}],"output":null}]],"paths":[[4,"OpenGL"],[4,"GLSL"],[3,"Shaders"],[3,"Texture"],[4,"Flip"],[3,"TextureSettings"],[3,"PistonWindow"]]};
searchIndex['glutin_window'] = {"items":[[0,"","glutin_window","A Glutin window back-end for the Piston game engine.",null,null],[11,"get_major_minor","shader_version::opengl","Gets the minor version of OpenGL.",0,null],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,{"inputs":[{"name":"opengl"}],"output":{"name":"glsl"}}],[11,"cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"opengl"}],"output":{"name":"opengl"}}],[11,"cmp","shader_version::glsl","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"glsl"}],"output":{"name":"glsl"}}],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,{"inputs":[{"name":"glsl"}],"output":{"name":"opengl"}}],[11,"pick_shader","","",1,{"inputs":[{"name":"glsl"},{"name":"shaders"}],"output":{"name":"option"}}],[11,"new","shader_version","Creates a new shader picker.",2,{"inputs":[{"name":"shaders"}],"output":{"name":"shaders"}}],[11,"set","","Sets source for a shader version.",2,{"inputs":[{"name":"shaders"},{"name":"v"},{"name":"s"}],"output":{"name":"shaders"}}],[11,"get","","Get the closest shader to a shader version.",2,{"inputs":[{"name":"shaders"},{"name":"v"}],"output":{"name":"option"}}],[4,"OpenGL","glutin_window","",null,null],[13,"V2_0","","",0,null],[13,"V2_1","","",0,null],[13,"V3_0","","",0,null],[13,"V3_1","","",0,null],[13,"V3_2","","",0,null],[13,"V3_3","","",0,null],[13,"V4_0","","",0,null],[13,"V4_1","","",0,null],[13,"V4_2","","",0,null],[13,"V4_3","","",0,null],[13,"V4_4","","",0,null],[13,"V4_5","","",0,null],[3,"GlutinWindow","","Contains stuff for game window.",null,null],[12,"window","","The window.",3,null],[5,"map_key","","Maps Glutin's key to Piston's key.",null,{"inputs":[{"name":"virtualkeycode"}],"output":{"name":"key"}}],[5,"map_mouse","","Maps Glutin's mouse button to Piston's mouse button.",null,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"new","","Creates a new game window for Glutin.",3,{"inputs":[{"name":"glutinwindow"},{"name":"windowsettings"}],"output":{"name":"result"}}],[11,"size","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"size"}}],[11,"draw_size","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"size"}}],[11,"should_close","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"bool"}}],[11,"set_should_close","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"bool"}],"output":null}],[11,"swap_buffers","","",3,{"inputs":[{"name":"glutinwindow"}],"output":null}],[11,"poll_event","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"option"}}],[11,"build_from_window_settings","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"windowsettings"}],"output":{"name":"result"}}],[11,"get_title","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"string"}}],[11,"set_title","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"string"}],"output":null}],[11,"get_exit_on_esc","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"bool"}],"output":null}],[11,"set_capture_cursor","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"bool"}],"output":null}],[11,"get_proc_address","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"str"}],"output":{"name":"procaddress"}}],[11,"is_current","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"bool"}}],[11,"make_current","","",3,{"inputs":[{"name":"glutinwindow"}],"output":null}]],"paths":[[4,"OpenGL"],[4,"GLSL"],[3,"Shaders"],[3,"GlutinWindow"]]};
searchIndex['glutin'] = {"items":[[0,"","glutin","The purpose of this library is to provide an OpenGL context on as many\n platforms as possible.",null,null],[3,"Touch","","Represents touch event",null,null],[12,"phase","","",0,null],[12,"location","","",0,null],[12,"id","","unique identifier of a finger.",0,null],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",null,null],[3,"HeadlessContext","","Represents a headless OpenGL context.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[3,"Window","","Represents an OpenGL context and the Window or environment around it.",null,null],[3,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.",null,null],[3,"PollEventsIterator","","An iterator for the `poll_events` function.",null,null],[3,"WaitEventsIterator","","An iterator for the `wait_events` function.",null,null],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",null,null],[3,"MonitorID","","Identifier for a monitor.",null,null],[3,"PixelFormat","","Describes a possible format. Unused.",null,null],[12,"hardware_accelerated","","",1,null],[12,"color_bits","","",1,null],[12,"alpha_bits","","",1,null],[12,"depth_bits","","",1,null],[12,"stencil_bits","","",1,null],[12,"stereoscopy","","",1,null],[12,"double_buffer","","",1,null],[12,"multisampling","","",1,null],[12,"srgb","","",1,null],[4,"Event","","",null,null],[13,"Resized","","The size of the window has changed.",2,null],[13,"Moved","","The position of the window has changed.",2,null],[13,"Closed","","The window has been closed.",2,null],[13,"DroppedFile","","A file has been dropped into the window.",2,null],[13,"ReceivedCharacter","","The window received a unicode character.",2,null],[13,"Focused","","The window gained or lost focus.",2,null],[13,"KeyboardInput","","An event from the keyboard has been received.",2,null],[13,"MouseMoved","","The cursor has moved on the window.",2,null],[13,"MouseWheel","","A mouse wheel movement or touchpad scroll occurred.",2,null],[13,"MouseInput","","An event from the mouse has been received.",2,null],[13,"Awakened","","The event loop was woken up by another thread.",2,null],[13,"Refresh","","The window needs to be redrawn.",2,null],[13,"Suspended","","App has been suspended or resumed.",2,null],[13,"Touch","","Touch event has been received",2,null],[4,"TouchPhase","","",null,null],[13,"Started","","",3,null],[13,"Moved","","",3,null],[13,"Ended","","",3,null],[13,"Cancelled","","",3,null],[4,"ElementState","","",null,null],[13,"Pressed","","",4,null],[13,"Released","","",4,null],[4,"MouseButton","","",null,null],[13,"Left","","",5,null],[13,"Right","","",5,null],[13,"Middle","","",5,null],[13,"Other","","",5,null],[4,"MouseScrollDelta","","",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal\nand vertical directions.",6,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and\nvertical direction.",6,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The '1' key over the letters.",7,null],[13,"Key2","","The '2' key over the letters.",7,null],[13,"Key3","","The '3' key over the letters.",7,null],[13,"Key4","","The '4' key over the letters.",7,null],[13,"Key5","","The '5' key over the letters.",7,null],[13,"Key6","","The '6' key over the letters.",7,null],[13,"Key7","","The '7' key over the letters.",7,null],[13,"Key8","","The '8' key over the letters.",7,null],[13,"Key9","","The '9' key over the letters.",7,null],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",7,null],[13,"A","","",7,null],[13,"B","","",7,null],[13,"C","","",7,null],[13,"D","","",7,null],[13,"E","","",7,null],[13,"F","","",7,null],[13,"G","","",7,null],[13,"H","","",7,null],[13,"I","","",7,null],[13,"J","","",7,null],[13,"K","","",7,null],[13,"L","","",7,null],[13,"M","","",7,null],[13,"N","","",7,null],[13,"O","","",7,null],[13,"P","","",7,null],[13,"Q","","",7,null],[13,"R","","",7,null],[13,"S","","",7,null],[13,"T","","",7,null],[13,"U","","",7,null],[13,"V","","",7,null],[13,"W","","",7,null],[13,"X","","",7,null],[13,"Y","","",7,null],[13,"Z","","",7,null],[13,"Escape","","The Escape key, next to F1.",7,null],[13,"F1","","",7,null],[13,"F2","","",7,null],[13,"F3","","",7,null],[13,"F4","","",7,null],[13,"F5","","",7,null],[13,"F6","","",7,null],[13,"F7","","",7,null],[13,"F8","","",7,null],[13,"F9","","",7,null],[13,"F10","","",7,null],[13,"F11","","",7,null],[13,"F12","","",7,null],[13,"F13","","",7,null],[13,"F14","","",7,null],[13,"F15","","",7,null],[13,"Snapshot","","Print Screen/SysRq.",7,null],[13,"Scroll","","Scroll Lock.",7,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",7,null],[13,"Insert","","`Insert`, next to Backspace.",7,null],[13,"Home","","",7,null],[13,"Delete","","",7,null],[13,"End","","",7,null],[13,"PageDown","","",7,null],[13,"PageUp","","",7,null],[13,"Left","","",7,null],[13,"Up","","",7,null],[13,"Right","","",7,null],[13,"Down","","",7,null],[13,"Back","","The Backspace key, right over Enter.",7,null],[13,"Return","","The Enter key.",7,null],[13,"Space","","The space bar.",7,null],[13,"Numlock","","",7,null],[13,"Numpad0","","",7,null],[13,"Numpad1","","",7,null],[13,"Numpad2","","",7,null],[13,"Numpad3","","",7,null],[13,"Numpad4","","",7,null],[13,"Numpad5","","",7,null],[13,"Numpad6","","",7,null],[13,"Numpad7","","",7,null],[13,"Numpad8","","",7,null],[13,"Numpad9","","",7,null],[13,"AbntC1","","",7,null],[13,"AbntC2","","",7,null],[13,"Add","","",7,null],[13,"Apostrophe","","",7,null],[13,"Apps","","",7,null],[13,"At","","",7,null],[13,"Ax","","",7,null],[13,"Backslash","","",7,null],[13,"Calculator","","",7,null],[13,"Capital","","",7,null],[13,"Colon","","",7,null],[13,"Comma","","",7,null],[13,"Convert","","",7,null],[13,"Decimal","","",7,null],[13,"Divide","","",7,null],[13,"Equals","","",7,null],[13,"Grave","","",7,null],[13,"Kana","","",7,null],[13,"Kanji","","",7,null],[13,"LAlt","","",7,null],[13,"LBracket","","",7,null],[13,"LControl","","",7,null],[13,"LMenu","","",7,null],[13,"LShift","","",7,null],[13,"LWin","","",7,null],[13,"Mail","","",7,null],[13,"MediaSelect","","",7,null],[13,"MediaStop","","",7,null],[13,"Minus","","",7,null],[13,"Multiply","","",7,null],[13,"Mute","","",7,null],[13,"MyComputer","","",7,null],[13,"NextTrack","","",7,null],[13,"NoConvert","","",7,null],[13,"NumpadComma","","",7,null],[13,"NumpadEnter","","",7,null],[13,"NumpadEquals","","",7,null],[13,"OEM102","","",7,null],[13,"Period","","",7,null],[13,"PlayPause","","",7,null],[13,"Power","","",7,null],[13,"PrevTrack","","",7,null],[13,"RAlt","","",7,null],[13,"RBracket","","",7,null],[13,"RControl","","",7,null],[13,"RMenu","","",7,null],[13,"RShift","","",7,null],[13,"RWin","","",7,null],[13,"Semicolon","","",7,null],[13,"Slash","","",7,null],[13,"Sleep","","",7,null],[13,"Stop","","",7,null],[13,"Subtract","","",7,null],[13,"Sysrq","","",7,null],[13,"Tab","","",7,null],[13,"Underline","","",7,null],[13,"Unlabeled","","",7,null],[13,"VolumeDown","","",7,null],[13,"VolumeUp","","",7,null],[13,"Wake","","",7,null],[13,"WebBack","","",7,null],[13,"WebFavorites","","",7,null],[13,"WebForward","","",7,null],[13,"WebHome","","",7,null],[13,"WebRefresh","","",7,null],[13,"WebSearch","","",7,null],[13,"WebStop","","",7,null],[13,"Yen","","",7,null],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types\nto represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",8,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",8,null],[13,"Unavailable","","Other platforms (Android) don't support monitor identification.",8,null],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",9,null],[13,"NotSupported","","TODO: remove this error",9,null],[13,"RobustnessNotSupported","","",9,null],[13,"OpenGlVersionNotSupported","","",9,null],[13,"NoAvailablePixelFormat","","",9,null],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",null,null],[13,"IoError","","",10,null],[13,"ContextLost","","",10,null],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",11,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",11,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",11,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",12,null],[13,"Core","","Include all the future-compatible functions and definitions.",12,null],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",null,null],[13,"Latest","","Request the latest version of the \"best\" API of this platform.",13,null],[13,"Specific","","Request a specific version of a specific API.",13,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`.\nElse if OpenGL ES or WebGL is available, create a context with the\nspecified `opengles_version`.",13,null],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",13,null],[12,"opengles_version","","The version to use for OpenGL ES.",13,null],[4,"Robustness","glutin","Specifies the tolerance of the OpenGL context to faults. If you accept raw OpenGL commands\nand/or raw shader code from an untrusted source, you should definitely care about this.",null,null],[13,"NotRobust","","Not everything is checked. Your application can crash if you do something wrong with your\nshaders.",14,null],[13,"NoError","","The driver doesn't check anything. This option is very dangerous. Please know what you're\ndoing before using it. See the `GL_KHR_no_error` extension.",14,null],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will attempt to avoid any problem,\nbut if a problem occurs the behavior is implementation-defined. You are just guaranteed not\nto get a crash.",14,null],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context creation doesn't fail if it's not\nsupported.",14,null],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem occurs, the context will enter a\n\"context lost\" state. It must then be recreated. For the moment, glutin doesn't provide a\nway to recreate a context with the same window :-/",14,null],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context creation doesn't fail if it's not\nsupported.",14,null],[4,"MouseCursor","","",null,null],[13,"Default","","The platform-dependent default cursor.",15,null],[13,"Crosshair","","A simple crosshair.",15,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",15,null],[13,"Arrow","","Self explanatory.",15,null],[13,"Move","","Indicates something is to be moved.",15,null],[13,"Text","","Indicates text that may be selected or edited.",15,null],[13,"Wait","","Program busy indicator.",15,null],[13,"Help","","Help indicator (often rendered as a \"?\")",15,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith \"Wait\" the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass.",15,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",15,null],[13,"ContextMenu","","",15,null],[13,"NoneCursor","","",15,null],[13,"Cell","","",15,null],[13,"VerticalText","","",15,null],[13,"Alias","","",15,null],[13,"Copy","","",15,null],[13,"NoDrop","","",15,null],[13,"Grab","","",15,null],[13,"Grabbing","","",15,null],[13,"AllScroll","","",15,null],[13,"ZoomIn","","",15,null],[13,"ZoomOut","","",15,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor\nis used when the movement starts from the south-east corner of the box.",15,null],[13,"NResize","","",15,null],[13,"NeResize","","",15,null],[13,"NwResize","","",15,null],[13,"SResize","","",15,null],[13,"SeResize","","",15,null],[13,"SwResize","","",15,null],[13,"WResize","","",15,null],[13,"EwResize","","",15,null],[13,"NsResize","","",15,null],[13,"NeswResize","","",15,null],[13,"NwseResize","","",15,null],[13,"ColResize","","",15,null],[13,"RowResize","","",15,null],[4,"CursorState","","Describes how glutin handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",16,null],[13,"Hide","","The cursor will be invisible when over the window.",16,null],[13,"Grab","","Grabs the mouse cursor. The cursor's motion will be confined to this\nwindow and the window has exclusive access to further events regarding\nthe cursor.",16,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",17,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",17,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",17,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",17,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",17,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",17,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",17,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",17,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",17,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",17,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",17,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",17,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",17,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",17,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",17,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",17,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",17,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",17,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",17,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",17,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",17,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",17,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",18,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",18,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",18,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",18,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",19,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",19,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",19,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",19,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",19,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",19,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",19,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",19,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",19,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",19,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",19,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",19,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",19,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",19,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",19,null],[11,"eq","","",19,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",19,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",19,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",19,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",20,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",20,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",20,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",20,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",20,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",20,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",20,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",20,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",20,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",20,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",20,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",20,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",20,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",20,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",20,null],[11,"eq","","",20,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",20,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",20,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",20,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",21,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",22,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",23,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",23,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",23,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",23,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",24,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",24,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",24,null],[11,"clone","","",25,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",25,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",25,null],[11,"fmt","","",26,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",27,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",27,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",28,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",29,null],[11,"eq","","",30,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",31,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",31,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",32,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num","",33,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",34,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",34,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",35,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",36,null],[11,"fmt","","",36,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",36,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",36,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",36,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",36,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",36,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",36,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",36,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",36,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",36,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",37,null],[11,"get","","Dereferences the content.",37,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",37,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",37,null],[11,"fmt","","",37,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",38,null],[11,"eq","","",38,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",38,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",38,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",38,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",39,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",39,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",40,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",41,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",42,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",43,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",43,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",43,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","glutin::api","",44,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",44,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",44,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",44,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",44,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",44,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",44,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",45,null],[11,"fmt","","",45,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",45,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",46,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",47,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",48,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",49,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",50,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",46,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",46,null],[11,"swap","","Stores a value into the bool, returning the old value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",46,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",47,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",47,null],[11,"swap","","Stores a value into the isize, returning the old value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",47,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",48,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",48,null],[11,"swap","","Stores a value into the usize, returning the old value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",48,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",49,null],[11,"load","","Loads a value from the pointer.",49,null],[11,"store","","Stores a value into the pointer.",49,null],[11,"swap","","Stores a value into the pointer, returning the old value.",49,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",49,null],[11,"fmt","","",48,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",46,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",51,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",51,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",51,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",51,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",51,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",51,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",51,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",53,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",53,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",53,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",53,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",53,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",53,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",53,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",53,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",53,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",54,null],[11,"clone","","",54,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",55,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",55,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",55,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",55,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",56,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",56,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",57,null],[11,"deref","","",56,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",56,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",58,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",58,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",58,null],[11,"clone","core::char","",59,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",60,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",59,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",61,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",62,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",61,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",63,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",63,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",64,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",64,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",65,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",65,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"clone","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",66,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",67,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",67,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",68,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",68,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",69,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",70,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",70,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",71,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",71,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"nth","","",71,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",71,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",71,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",72,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",72,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",72,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",72,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",72,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",72,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",72,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",73,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"clone","","",74,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",74,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"clone","","",75,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",75,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",75,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",75,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",75,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"clone","","",76,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",76,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",76,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"clone","","",77,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",77,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"clone","","",78,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",78,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",79,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",79,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",79,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",79,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",79,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",80,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",80,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",81,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",41,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",40,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",81,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"clone","","",82,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",82,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next_back","","",82,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",81,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"next","core::ops","",40,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"next_back","","",40,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",41,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",83,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",83,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",84,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",84,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",84,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",84,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",85,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",85,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",85,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",17,null],[11,"fmt","","",17,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",17,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",17,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",86,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",86,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",87,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",87,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",88,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",89,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",89,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",17,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",90,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",91,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",92,null],[11,"fmt","","",92,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",92,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",92,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",92,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",92,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",92,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",92,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",92,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",92,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",92,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",92,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",92,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",92,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",92,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",92,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",92,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",92,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",92,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",92,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",92,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",92,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",92,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",93,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next_back","","",93,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",93,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",94,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",95,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",92,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",96,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",97,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",98,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",99,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",100,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",101,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",102,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",103,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",104,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",105,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",100,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",101,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",102,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",103,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",96,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",97,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",98,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",99,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",104,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",105,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",100,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",101,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",102,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",103,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",96,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",97,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",98,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",99,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",104,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",105,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",100,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",101,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",102,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",103,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",96,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",97,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",98,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",99,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",104,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",105,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",104,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",105,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",100,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",101,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",102,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",103,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",96,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",97,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",98,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",99,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",100,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",101,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",102,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",103,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",96,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",97,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",98,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",99,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",100,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",101,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",102,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",103,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",96,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",97,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",98,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",99,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",100,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",101,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",102,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",103,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",96,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",97,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",98,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",99,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",100,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",101,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",102,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",103,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",96,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",97,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",98,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",99,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",106,null],[11,"next","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"count","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",106,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",107,null],[11,"next","","",107,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"count","","",107,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",107,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",107,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",107,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",108,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",108,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"next_back","","",108,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",108,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",109,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",109,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"next_back","","",109,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",110,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next","","",111,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"next","","",112,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",112,null],[11,"next","","",113,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next","","",114,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"clone","","",115,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",115,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"count","","",115,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",115,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",115,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",115,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",116,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",116,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"count","","",116,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",116,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",116,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",116,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",117,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"count","","",117,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",117,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",117,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",117,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",118,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",118,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",119,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",120,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",119,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",119,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",119,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",121,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",121,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",121,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",121,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",121,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",121,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",121,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",121,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",122,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",122,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",122,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",122,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",122,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",122,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",122,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",123,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",123,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",123,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",123,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",123,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",123,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",123,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",123,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",124,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",125,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",126,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",124,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",124,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",124,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",124,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",124,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",127,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",128,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",128,null],[11,"matching","","",128,null],[11,"use_early_reject","","",129,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",129,null],[11,"matching","","",129,null],[11,"eq","core::str","",130,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",130,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",131,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",131,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",131,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",132,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",132,null],[11,"next_back","","",132,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",133,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"next_back","","",133,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",135,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",135,null],[11,"call_mut","","",135,null],[11,"call_once","","",135,null],[11,"next","","",134,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",134,null],[11,"next_back","","",134,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",134,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",136,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",137,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",137,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",138,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",137,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",138,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",139,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",140,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",140,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",139,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",140,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",141,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",142,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",142,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",143,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",143,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",144,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",145,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",145,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",146,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",146,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",145,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",146,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",147,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",148,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",148,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",149,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",149,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",148,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",149,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",150,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",150,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",150,null],[11,"next_back","","",150,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",151,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",152,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",152,null],[11,"call_mut","","",152,null],[11,"call_once","","",152,null],[11,"next","","",151,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",151,null],[11,"next_back","","",151,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",153,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",154,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",154,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",154,null],[11,"finish","","",154,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",154,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",154,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",155,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",156,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",157,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",158,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",158,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",159,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",159,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",160,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",160,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",161,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",162,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",163,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",163,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",164,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",164,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",164,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",165,null],[11,"entry","","Adds a new entry to the set output.",166,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",166,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",166,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",167,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",167,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",167,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",168,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",168,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",168,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",169,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",170,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",171,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",172,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",173,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",174,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",175,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",176,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",177,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",177,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",178,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",178,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",178,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",178,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",178,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",178,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",178,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",178,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",178,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",178,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",178,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",38,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",51,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroy","api::wayland::wayland::core::shell::shell_surface","Frees the `Surface` from its role of `shell_surface` and returns it.",179,{"inputs":[{"name":"shellsurface"}],"output":{"name":"s"}}],[11,"start_move","","Start an interactive move",179,null],[11,"start_resize","","Start a pointer-driven resizing of the surface.",179,null],[11,"set_toplevel","","Set this shell surface as being a toplevel window.",179,null],[11,"set_transient","","Set this shell surface as being a transient surface.",179,null],[11,"set_popup","","Set this shell surface as being a popup.",179,null],[11,"set_fullscreen","","Set this shell surface as being fullscreen.",179,null],[11,"set_maximised","","Set this shell surface as being maximised.",179,null],[11,"set_title","","Sets the shell surface title.",179,null],[11,"set_class","","Sets the shell surface class.",179,null],[11,"set_configure_callback","","Sets the callback to be invoked when a `configure` event is received for this shell surface.",179,null],[11,"set_popup_done_callback","","Sets the callback to be invoked when the popup grab of this popup surface is\nbroken. See `set_popup()` for details.",179,null],[11,"open","api::wayland::wayland::ffi::abi","",180,{"inputs":[{"name":"waylandclient"},{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",181,{"inputs":[{"name":"wayland_client_option"}],"output":{"name":"option"}}],[11,"deref","","",182,{"inputs":[{"name":"wayland_client_handle"}],"output":{"name":"waylandclient"}}],[11,"eq","api::wayland::wayland::ffi::enums","",183,{"inputs":[{"name":"keystate"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"keystate"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"eq","","",184,{"inputs":[{"name":"keymapformat"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"keymapformat"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"hash","","",185,null],[11,"cmp","","",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"option"}}],[11,"lt","","",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"le","","",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"gt","","",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"ge","","",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"clone","","",185,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"eq","","",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"fmt","","",185,{"inputs":[{"name":"outputmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",185,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"all","","Returns the set containing all flags.",185,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",185,{"inputs":[{"name":"outputmode"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",185,{"inputs":[{"name":"outputmode"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",185,{"inputs":[{"name":"outputmode"},{"name":"u32"}],"output":{"name":"outputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",185,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",185,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",185,null],[11,"remove","","Removes the specified flags in-place.",185,null],[11,"toggle","","Toggles the specified flags in-place.",185,null],[11,"bitor","","Returns the union of the two sets of flags.",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"sub","","Returns the set difference of the two sets of flags.",185,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"not","","Returns the complement of this set of flags.",185,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"from_iter","","",185,{"inputs":[{"name":"outputmode"},{"name":"t"}],"output":{"name":"outputmode"}}],[11,"clone","","",186,{"inputs":[{"name":"outputsubpixel"}],"output":{"name":"outputsubpixel"}}],[11,"clone","","",187,{"inputs":[{"name":"outputtransform"}],"output":{"name":"outputtransform"}}],[11,"eq","","",188,{"inputs":[{"name":"scrollaxis"},{"name":"scrollaxis"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"scrollaxis"},{"name":"scrollaxis"}],"output":{"name":"bool"}}],[11,"eq","","",189,{"inputs":[{"name":"buttonstate"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"buttonstate"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"hash","","",190,null],[11,"cmp","","",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"option"}}],[11,"lt","","",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"le","","",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"gt","","",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"ge","","",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"clone","","",190,{"inputs":[{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"eq","","",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"fmt","","",190,{"inputs":[{"name":"seatcapability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",190,{"inputs":[{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"all","","Returns the set containing all flags.",190,{"inputs":[{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",190,{"inputs":[{"name":"seatcapability"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",190,{"inputs":[{"name":"seatcapability"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",190,{"inputs":[{"name":"seatcapability"},{"name":"u32"}],"output":{"name":"seatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",190,{"inputs":[{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",190,{"inputs":[{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",190,null],[11,"remove","","Removes the specified flags in-place.",190,null],[11,"toggle","","Toggles the specified flags in-place.",190,null],[11,"bitor","","Returns the union of the two sets of flags.",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"sub","","Returns the set difference of the two sets of flags.",190,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"not","","Returns the complement of this set of flags.",190,{"inputs":[{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"from_iter","","",190,{"inputs":[{"name":"seatcapability"},{"name":"t"}],"output":{"name":"seatcapability"}}],[11,"eq","","",191,{"inputs":[{"name":"fullscreenmethod"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"fullscreenmethod"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"eq","","",192,{"inputs":[{"name":"shellsurfaceresize"},{"name":"shellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"shellsurfaceresize"},{"name":"shellsurfaceresize"}],"output":{"name":"bool"}}],[11,"hash","","",193,null],[11,"cmp","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"option"}}],[11,"lt","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"le","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"gt","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ge","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"clone","","",193,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"eq","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ne","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"fmt","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",193,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",193,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",193,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"u32"}],"output":{"name":"shellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",193,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",193,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",193,null],[11,"remove","","Removes the specified flags in-place.",193,null],[11,"toggle","","Toggles the specified flags in-place.",193,null],[11,"bitor","","Returns the union of the two sets of flags.",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"sub","","Returns the set difference of the two sets of flags.",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"not","","Returns the complement of this set of flags.",193,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"from_iter","","",193,{"inputs":[{"name":"shellsurfacetransient"},{"name":"t"}],"output":{"name":"shellsurfacetransient"}}],[11,"eq","","",194,{"inputs":[{"name":"shmformat"},{"name":"shmformat"}],"output":{"name":"bool"}}],[11,"ne","","",194,{"inputs":[{"name":"shmformat"},{"name":"shmformat"}],"output":{"name":"bool"}}],[11,"clone","api::wayland::wayland::core::display","",195,{"inputs":[{"name":"display"}],"output":{"name":"display"}}],[11,"get_registry","","Creates a Registry associated to this Display and returns it.",195,{"inputs":[{"name":"display"}],"output":{"name":"registry"}}],[11,"sync_roundtrip","","Performs a blocking synchronisation of the events of the server.",195,null],[11,"dispatch_pending","","Dispatches all pending events to their appropriate callbacks.",195,null],[11,"dispatch","","Dispatches all pending events to their appropriate callbacks.",195,null],[11,"flush","","Send as much requests to the server as possible.",195,{"inputs":[{"name":"display"}],"output":{"name":"result"}}],[11,"sync","","Send a `sync` message to the server.",195,null],[11,"set_sync_callback","","Sets the callback of a `done` event.",195,null],[11,"drop","","",196,null],[11,"ptr","","",195,null],[11,"ptr_mut","","",195,null],[11,"hash","api::wayland::wayland::core::ids","",197,null],[11,"clone","","",197,{"inputs":[{"name":"surfaceid"}],"output":{"name":"surfaceid"}}],[11,"eq","","",197,{"inputs":[{"name":"surfaceid"},{"name":"surfaceid"}],"output":{"name":"bool"}}],[11,"ne","","",197,{"inputs":[{"name":"surfaceid"},{"name":"surfaceid"}],"output":{"name":"bool"}}],[11,"clone","","",198,{"inputs":[{"name":"serial"}],"output":{"name":"serial"}}],[11,"clone","api::wayland::wayland::core::registry","",199,{"inputs":[{"name":"registry"}],"output":{"name":"registry"}}],[11,"get_display","","Returns a handle to the Display associated with this registry.",199,{"inputs":[{"name":"registry"}],"output":{"name":"display"}}],[11,"get_global_objects","","Returns a `Vec` of all global objects and their interface.",199,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_objects_with_interface","","Returns a `Vec` of all global objects implementing given interface.",199,{"inputs":[{"name":"registry"},{"name":"str"}],"output":{"name":"vec"}}],[11,"get_compositor","","Retrieves a handle to the global compositor",199,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_outputs","","Retrieve handles to all available outputs",199,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_seats","","Retrieve handles to all available seats",199,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_shell","","Retrieves a handle to the global shell",199,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_shm","","Retrieves a handle to the global shm",199,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_subcompositor","","Retrieves a handle to the global subcompositor",199,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"bind","","",199,{"inputs":[{"name":"registry"},{"name":"u32"},{"name":"u32"}],"output":{"name":"t"}}],[11,"from","","",199,{"inputs":[{"name":"registry"},{"name":"display"}],"output":{"name":"registry"}}],[11,"drop","","",200,null],[11,"ptr","","",199,null],[11,"ptr_mut","","",199,null],[11,"clone","api::wayland::wayland::core::compositor::compositor","",201,{"inputs":[{"name":"compositor"}],"output":{"name":"compositor"}}],[11,"create_surface","","Creates a new surface to draw on.",201,{"inputs":[{"name":"compositor"}],"output":{"name":"wsurface"}}],[11,"create_region","","Creates a new region.",201,{"inputs":[{"name":"compositor"}],"output":{"name":"region"}}],[11,"interface","","",201,{"inputs":[{"name":"compositor"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",201,null],[11,"drop","","",202,null],[11,"ptr","","",201,null],[11,"ptr_mut","","",201,null],[11,"add","api::wayland::wayland::core::compositor::region","Adds given rectangle to the region.",203,null],[11,"subtract","","Subtract given rectangle from the region.",203,null],[11,"from","","",203,{"inputs":[{"name":"region"},{"name":"compositor"}],"output":{"name":"region"}}],[11,"drop","","",203,null],[11,"ptr","","",203,null],[11,"ptr_mut","","",203,null],[11,"attach","api::wayland::wayland::core::compositor::surface","Attaches given buffer to be the content of the image.",204,null],[11,"commit","","Commit the changes to the server.",204,null],[11,"damage","","Mark part of this surface as damaged.",204,null],[11,"get_id","","Returns the unique `SurfaceId` associated to this surface.",204,{"inputs":[{"name":"wsurface"}],"output":{"name":"surfaceid"}}],[11,"set_opaque_region","","Sets the opaque region of this surface.",204,null],[11,"set_input_region","","Sets the input region of this surface.",204,null],[11,"set_buffer_transform","","Sets the transformation the server will apply to the buffer.",204,null],[11,"set_buffer_scale","","Sets the scale the server will apply to the buffer.",204,null],[11,"from","","",204,{"inputs":[{"name":"wsurface"},{"name":"compositor"}],"output":{"name":"wsurface"}}],[11,"drop","","",204,null],[11,"ptr","","",204,null],[11,"ptr_mut","","",204,null],[11,"get_wsurface","","",204,{"inputs":[{"name":"wsurface"}],"output":{"name":"wsurface"}}],[11,"hash","api::wayland::wayland::core::output::output","",205,null],[11,"eq","","",205,{"inputs":[{"name":"outputid"},{"name":"outputid"}],"output":{"name":"bool"}}],[11,"ne","","",205,{"inputs":[{"name":"outputid"},{"name":"outputid"}],"output":{"name":"bool"}}],[11,"clone","","",205,{"inputs":[{"name":"outputid"}],"output":{"name":"outputid"}}],[11,"clone","","",206,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"is_current","","",206,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"is_preferred","","",206,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"get_id","","The unique Id representing this output",207,{"inputs":[{"name":"output"}],"output":{"name":"outputid"}}],[11,"position","","The location of the top-left corner of this output in the\ncompositor space.",207,null],[11,"dimensions","","The dimensions (width, height) of this output, in milimeters",207,null],[11,"subpixel","","The subpixel orientation of this output",207,{"inputs":[{"name":"output"}],"output":{"name":"outputsubpixel"}}],[11,"transform","","The current transform of this output",207,{"inputs":[{"name":"output"}],"output":{"name":"outputtransform"}}],[11,"manufacturer","","The manufacturer of this output",207,{"inputs":[{"name":"output"}],"output":{"name":"string"}}],[11,"model","","The model of this output",207,{"inputs":[{"name":"output"}],"output":{"name":"string"}}],[11,"scale","","The current scaling factor of this output",207,{"inputs":[{"name":"output"}],"output":{"name":"i32"}}],[11,"modes","","The modes of this output",207,{"inputs":[{"name":"output"}],"output":{"name":"vec"}}],[11,"interface","","",207,{"inputs":[{"name":"output"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",207,null],[11,"drop","","",207,null],[11,"ptr","","",207,null],[11,"ptr_mut","","",207,null],[11,"hash","api::wayland::wayland::core::seat::keyboard","",208,null],[11,"clone","","",208,{"inputs":[{"name":"keyboardid"}],"output":{"name":"keyboardid"}}],[11,"eq","","",208,{"inputs":[{"name":"keyboardid"},{"name":"keyboardid"}],"output":{"name":"bool"}}],[11,"ne","","",208,{"inputs":[{"name":"keyboardid"},{"name":"keyboardid"}],"output":{"name":"bool"}}],[11,"new","","",209,{"inputs":[{"name":"keyboardlistener"},{"name":"keyboarddata"}],"output":{"name":"keyboardlistener"}}],[11,"from","","",210,{"inputs":[{"name":"keyboard"},{"name":"seat"}],"output":{"name":"keyboard"}}],[11,"get_id","","Returns the unique `KeyboardId` associated to this keyboard.",210,{"inputs":[{"name":"keyboard"}],"output":{"name":"keyboardid"}}],[11,"get_seat","","Get access to the seat associated with this keyboard",210,{"inputs":[{"name":"keyboard"}],"output":{"name":"seat"}}],[11,"keymap_fd","","Provides the file descriptor giving access to the keymap definition\ncurrently used by the compositor for this keyboard.",210,{"inputs":[{"name":"keyboard"}],"output":{"name":"option"}}],[11,"repeat_info","","Provides the repeat information of this keayboard.",210,{"inputs":[{"name":"keyboard"}],"output":{"name":"option"}}],[11,"release","","",210,null],[11,"set_enter_action","","Defines the action to be executed when a surface gains keyboard focus.",210,null],[11,"set_leave_action","","Defines the action to be executed when a surface loses keyboard focus.",210,null],[11,"set_key_action","","Defines the action to be executed when a keystroke is done.",210,null],[11,"set_modifiers_action","","Defines the action to be executed when a modifier is changed.",210,null],[11,"drop","","",210,null],[11,"ptr","","",210,null],[11,"ptr_mut","","",210,null],[11,"hash","api::wayland::wayland::core::seat::pointer","",211,null],[11,"clone","","",211,{"inputs":[{"name":"pointerid"}],"output":{"name":"pointerid"}}],[11,"eq","","",211,{"inputs":[{"name":"pointerid"},{"name":"pointerid"}],"output":{"name":"bool"}}],[11,"ne","","",211,{"inputs":[{"name":"pointerid"},{"name":"pointerid"}],"output":{"name":"bool"}}],[11,"advertise_cursor","","",212,null],[11,"enter_surface","","",212,{"inputs":[{"name":"pointerdata"},{"name":"surfaceid"}],"output":{"name":"bool"}}],[11,"leave_surface","","",212,{"inputs":[{"name":"pointerdata"}],"output":{"name":"bool"}}],[11,"is_on_handled_surface","","",212,{"inputs":[{"name":"pointerdata"}],"output":{"name":"bool"}}],[11,"new","","",213,{"inputs":[{"name":"pointerlistener"},{"name":"cursoradvertising"}],"output":{"name":"pointerlistener"}}],[11,"set_enter_handler","","",213,null],[11,"set_leave_handler","","",213,null],[11,"set_motion_handler","","",213,null],[11,"set_button_handler","","",213,null],[11,"set_axis_handler","","",213,null],[11,"from","","",214,{"inputs":[{"name":"pointer"},{"name":"seat"}],"output":{"name":"pointer"}}],[11,"get_id","","Returns the unique `PointerId` associated to this pointer.",214,{"inputs":[{"name":"pointer"}],"output":{"name":"pointerid"}}],[11,"get_seat","","Get access to the seat associated with this keyboard",214,{"inputs":[{"name":"pointer"}],"output":{"name":"seat"}}],[11,"set_cursor","","Change the surface for drawing the cursor.",214,null],[11,"set_cursor_hidden","","Hides or unhides the cursor image.",214,null],[11,"add_handled_surface","","Adds a surface to the set of surfaces this pointer handler\nwill change cursor and dispatch events.",214,null],[11,"remove_handled_surface","","Adds a surface to the set of surfaces this pointer handler\nwill change cursor and dispatch events.",214,null],[11,"release","","",214,{"inputs":[{"name":"pointer"}],"output":{"name":"option"}}],[11,"get_surface","","Provides a reference to the current cursor surface.",214,{"inputs":[{"name":"pointer"}],"output":{"name":"option"}}],[11,"set_enter_action","","Defines the action to be executed when the cursor enters a surface.",214,null],[11,"set_leave_action","","Defines the action to be executed when the cursor leaves a surface.",214,null],[11,"set_motion_action","","Defines the action to be executed when the cursor moves",214,null],[11,"set_button_action","","Defines the action to be executed when a button is clicked or released",214,null],[11,"set_axis_action","","Defines the action to be executed when a scrolling is done",214,null],[11,"drop","","",214,null],[11,"ptr","","",214,null],[11,"ptr_mut","","",214,null],[11,"clone","api::wayland::wayland::core::seat::seat","",215,{"inputs":[{"name":"seat"}],"output":{"name":"seat"}}],[11,"get_pointer","","",215,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"get_keyboard","","",215,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"get_touch","","",215,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"interface","","",215,{"inputs":[{"name":"seat"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",215,null],[11,"drop","","",216,null],[11,"ptr","","",215,null],[11,"ptr_mut","","",215,null],[11,"hash","api::wayland::wayland::core::seat::touch","",217,null],[11,"clone","","",217,{"inputs":[{"name":"touchid"}],"output":{"name":"touchid"}}],[11,"eq","","",217,{"inputs":[{"name":"touchid"},{"name":"touchid"}],"output":{"name":"bool"}}],[11,"ne","","",217,{"inputs":[{"name":"touchid"},{"name":"touchid"}],"output":{"name":"bool"}}],[11,"from","","",218,{"inputs":[{"name":"touch"},{"name":"seat"}],"output":{"name":"touch"}}],[11,"get_id","","Returns the unique \\TouchId` associated with this touch device.",218,{"inputs":[{"name":"touch"}],"output":{"name":"touchid"}}],[11,"get_seat","","Get access to the seat associated with this keyboard",218,{"inputs":[{"name":"touch"}],"output":{"name":"seat"}}],[11,"release","","",218,null],[11,"set_down_action","","Defines the action to be executed when a new touch point appears",218,null],[11,"set_up_action","","Defines the action to be executed when a touch point dissapears",218,null],[11,"set_motion_action","","Defines the action to be executed a touch point moves",218,null],[11,"set_frame_action","","",218,null],[11,"set_cancel_action","","Defines the action to be executed when a touch sequence is cancelled.",218,null],[11,"drop","","",218,null],[11,"ptr","","",218,null],[11,"ptr_mut","","",218,null],[11,"clone","api::wayland::wayland::core::shell::shell","",219,{"inputs":[{"name":"shell"}],"output":{"name":"shell"}}],[11,"get_shell_surface","","Assigns the `shell_surface` role to given surface.",219,{"inputs":[{"name":"shell"},{"name":"s"}],"output":{"name":"shellsurface"}}],[11,"interface","","",219,{"inputs":[{"name":"shell"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",219,null],[11,"drop","","",220,null],[11,"ptr","","",219,null],[11,"ptr_mut","","",219,null],[11,"deref","api::wayland::wayland::core::shell::shell_surface","",179,{"inputs":[{"name":"shellsurface"}],"output":{"name":"s"}}],[11,"from","","",179,null],[11,"drop","","",179,null],[11,"ptr","","",179,null],[11,"ptr_mut","","",179,null],[11,"from","api::wayland::wayland::core::shm::buffer","",221,null],[11,"drop","","",221,null],[11,"ptr","","",221,null],[11,"ptr_mut","","",221,null],[11,"clone","api::wayland::wayland::core::shm::shm","",222,{"inputs":[{"name":"shm"}],"output":{"name":"shm"}}],[11,"pool_from_fd","","Creates a shared memory pool from given file descriptor.",222,{"inputs":[{"name":"shm"},{"name":"f"},{"name":"i32"}],"output":{"name":"shmpool"}}],[11,"pool_from_raw_fd","","Creates a sahred memory pool from given raw file descriptor.",222,{"inputs":[{"name":"shm"},{"name":"i32"},{"name":"i32"}],"output":{"name":"shmpool"}}],[11,"interface","","",222,{"inputs":[{"name":"shm"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",222,null],[11,"drop","","",223,null],[11,"ptr","","",222,null],[11,"ptr_mut","","",222,null],[11,"create_buffer","api::wayland::wayland::core::shm::shm_pool","Creates a new buffer from this memory pool.",224,{"inputs":[{"name":"shmpool"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"shmformat"}],"output":{"name":"option"}}],[11,"resize","","Resizes the memory pool to a new size.",224,null],[11,"from","","",224,null],[11,"drop","","",224,null],[11,"ptr","","",224,null],[11,"ptr_mut","","",224,null],[11,"clone","api::wayland::wayland::core::subcompositor::subcompositor","",225,{"inputs":[{"name":"subcompositor"}],"output":{"name":"subcompositor"}}],[11,"get_subsurface","","Maps `surface` as a subsurface of `parent`.",225,{"inputs":[{"name":"subcompositor"},{"name":"s"},{"name":"wsurface"}],"output":{"name":"subsurface"}}],[11,"drop","","",226,null],[11,"interface","","",225,{"inputs":[{"name":"subcompositor"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",225,null],[11,"ptr","","",225,null],[11,"ptr_mut","","",225,null],[11,"destroy","api::wayland::wayland::core::subcompositor::subsurface","Frees the `Surface` from its role of `subsurface` and returns it.",227,{"inputs":[{"name":"subsurface"}],"output":{"name":"s"}}],[11,"set_position","","Sets the position of the subsurface in the parent surface coordinate\nsystem.",227,null],[11,"set_sync","","Sets of unsets the subsurface into synchronysed mode.",227,null],[11,"restack_sibling","","Sets this surface to be displayed above or below `other`, which\nmust be one of its siblings (but not itself).",227,null],[11,"restack_parent","","Sets this surface to be displayed above or below `other`, which\nmust be its parent.",227,null],[11,"deref","","",227,{"inputs":[{"name":"subsurface"}],"output":{"name":"s"}}],[11,"from","","",227,null],[11,"drop","","",227,null],[11,"ptr","","",227,null],[11,"ptr_mut","","",227,null],[11,"new","api::wayland::wayland::egl","Creates a new EGL surface on a wayland surface.",228,{"inputs":[{"name":"eglsurface"},{"name":"wsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eglsurface"}}],[11,"destroy","","Destroys the EGL association to this `WSurface` and returns it.",228,{"inputs":[{"name":"eglsurface"}],"output":{"name":"wsurface"}}],[11,"as_native_ptr","","Provides a ptr to the native window to be used for EGL initialization.",228,null],[11,"resize","","Resizes the egl surface.",228,null],[11,"get_attached_size","","The size of the EGL buffer attached to this surface.",228,null],[11,"get_wsurface","","",228,{"inputs":[{"name":"eglsurface"}],"output":{"name":"wsurface"}}],[11,"drop","","",228,null],[11,"ptr","","",228,null],[11,"ptr_mut","","",228,null],[11,"open","api::wayland::wayland::egl::eglffi","",229,{"inputs":[{"name":"waylandegl"},{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",230,{"inputs":[{"name":"wayland_egl_option"}],"output":{"name":"option"}}],[11,"deref","","",231,{"inputs":[{"name":"wayland_egl_handle"}],"output":{"name":"waylandegl"}}],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",232,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",232,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",232,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",232,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"from","alloc::boxed","",233,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",233,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",233,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",233,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",130,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",131,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",34,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",31,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",234,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",235,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","glutin::api::x11","Returns true if the boxed type is the same as `T`",236,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",236,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",236,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",236,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",236,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",236,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",236,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",236,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",236,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",236,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",236,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",236,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",237,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"next_back","","",237,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","std::thread::local","",238,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",238,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",238,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",239,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",239,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",240,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",240,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",241,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",241,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",241,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",242,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",242,null],[11,"get","","",242,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",243,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",243,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",243,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",243,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",244,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",244,null],[11,"name","","Gets the thread's name.",244,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",244,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",244,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",245,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",245,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",246,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",247,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",248,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",248,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",248,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",248,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",249,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",249,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",249,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",250,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",250,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",247,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",247,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",247,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",247,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",247,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",247,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",247,null],[11,"next","","",250,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",250,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",250,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",250,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",249,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",249,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",249,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",249,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",249,null],[11,"take","","Removes this bucket's key and value from the hashtable.",249,null],[11,"replace","","",249,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",249,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",249,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",249,null],[11,"expect_full","","",251,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",252,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",252,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",253,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",253,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",253,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",253,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",253,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",253,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",253,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",254,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",254,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",255,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",256,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",256,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",256,null],[11,"len","","",256,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",257,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",257,null],[11,"len","","",257,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",258,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",258,null],[11,"len","","",258,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",259,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",259,null],[11,"len","","",259,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",259,null],[11,"clone","","",253,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",253,null],[11,"clone","std::collections::hash::map","",260,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",261,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",261,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",261,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",261,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",261,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",261,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",261,null],[11,"get","","Returns a reference to the value corresponding to the key.",261,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",261,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",261,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",261,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",261,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",261,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",261,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",261,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",262,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",263,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",264,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",261,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",262,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",262,null],[11,"len","","",262,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",265,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",265,null],[11,"len","","",265,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",266,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",266,null],[11,"len","","",266,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",263,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",263,null],[11,"len","","",263,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",264,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",264,null],[11,"len","","",264,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",267,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",267,null],[11,"len","","",267,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",268,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",268,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",269,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",269,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",269,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",269,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",269,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",270,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",261,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",261,null],[11,"clone","","",271,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",271,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",271,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",271,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",272,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",272,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",272,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",272,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",272,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",272,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",272,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",272,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",272,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",272,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",272,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",272,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",272,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",272,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",272,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",272,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",272,null],[11,"contains","","Returns `true` if the set contains a value.",272,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",272,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",272,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",272,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",272,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",272,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"eq","","",272,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",272,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",272,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",272,null],[11,"default","","",272,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",272,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",273,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",273,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",273,null],[11,"len","","",273,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",274,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",274,null],[11,"len","","",274,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",275,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",275,null],[11,"len","","",275,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",276,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",276,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",276,null],[11,"clone","","",277,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",277,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",277,null],[11,"clone","","",278,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",278,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",278,null],[11,"clone","","",279,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",279,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",279,null],[11,"hasher","std::collections::hash::state","",280,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",280,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",280,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",281,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",282,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",283,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",283,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",284,null],[11,"iter","","Provides a forward iterator.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",284,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",284,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",284,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",284,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",284,null],[11,"next","","",281,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",281,null],[11,"next_back","","",281,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",285,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",285,null],[11,"next_back","","",285,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",285,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",285,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",282,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",282,null],[11,"next_back","","",282,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",284,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",284,null],[11,"extend","","",284,null],[11,"eq","","",284,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",284,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",284,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",284,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",284,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",284,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",284,null],[11,"clone","collections::vec_deque","",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",286,null],[11,"default","","",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",286,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",286,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",286,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",286,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",286,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",286,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",286,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",286,null],[11,"iter","","Returns a front-to-back iterator.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",286,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",286,null],[11,"len","","Returns the number of elements in the `VecDeque`.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",286,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",286,null],[11,"push_back","","Appends an element to the back of a buffer",286,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",286,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",286,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",286,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",286,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",286,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",286,null],[11,"retain","","Retains only the elements specified by the predicate.",286,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",286,null],[11,"clone","","",287,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",287,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",287,null],[11,"next_back","","",287,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",288,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",288,null],[11,"next_back","","",288,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",289,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",289,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",289,null],[11,"next_back","","",289,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",290,null],[11,"next","","",290,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",290,null],[11,"next_back","","",290,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",286,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",286,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",286,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",286,null],[11,"index","","",286,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",286,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",286,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",286,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",286,null],[11,"extend","","",286,null],[11,"fmt","","",286,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","collections::binary_heap","",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"default","","",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",291,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",291,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",291,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",291,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",291,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",291,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",291,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",291,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",291,null],[11,"drop","","",292,null],[11,"clone","","",293,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",293,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",293,null],[11,"next_back","","",293,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",294,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",294,null],[11,"next_back","","",294,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",295,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",295,null],[11,"next_back","","",295,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from_iter","","",291,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",291,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",291,null],[11,"extend","","",291,null],[11,"drop","std::dynamic_lib","",296,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",296,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",296,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",296,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",296,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",296,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",296,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",297,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",297,null],[11,"next","","",298,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",298,null],[11,"clone","","",299,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",299,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",299,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",299,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",299,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",299,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",300,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",300,null],[11,"fmt","","",301,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",301,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",301,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",302,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",302,null],[11,"len","","",302,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",303,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",303,null],[11,"len","","",303,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",304,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",304,null],[11,"cmp","","",304,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",304,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",304,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",304,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",304,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",304,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",304,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",304,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",305,null],[11,"fmt","","",306,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",306,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",306,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",306,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",304,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",304,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",304,null],[11,"from_raw","","Retakes ownership of a CString that was transferred to C.",304,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",304,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",304,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",304,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",304,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",305,null],[11,"as_ptr","","Returns the inner pointer to this C string.",305,null],[11,"to_bytes","","Converts this C string to a byte slice.",305,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",305,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",305,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",305,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",304,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",304,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",305,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",304,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",306,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",306,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",306,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",306,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",307,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"eq","std::ffi::c_str","",305,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",305,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",305,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",305,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",308,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",308,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",308,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",308,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",308,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",308,null],[11,"from","","",308,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",308,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",308,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",309,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",309,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",309,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",309,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",309,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",309,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",308,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",308,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",308,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",308,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",308,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",308,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",308,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",308,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",308,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",308,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",308,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",308,null],[11,"eq","","",309,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",309,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",309,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",309,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",309,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",309,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",309,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",309,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",309,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",309,null],[11,"fmt","","",309,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",308,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",309,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",309,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",308,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",310,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",311,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",312,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",312,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",312,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",312,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",313,null],[11,"eq","","",313,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",313,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",314,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",314,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",314,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",314,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",314,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",314,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",314,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",314,null],[11,"read_to_end","","",314,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",314,null],[11,"flush","","",314,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",314,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",311,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",311,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",311,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",311,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",311,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",311,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",311,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",315,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",315,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",315,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",315,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",315,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",312,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",312,null],[11,"is_dir","","Test whether this file type represents a directory.",313,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",313,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",313,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",316,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",317,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",317,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",317,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",317,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",318,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",319,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",319,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",319,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",319,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",319,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",319,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",319,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",319,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",320,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",320,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",320,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",321,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",321,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",321,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",321,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",321,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",321,null],[11,"fill_buf","","",321,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",321,null],[11,"fmt","","",321,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",321,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",323,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",323,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",323,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",323,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",323,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",323,null],[11,"flush","","",323,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",323,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",323,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",323,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",322,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",322,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",307,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",322,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",322,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",324,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",324,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",324,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",324,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",324,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",324,null],[11,"flush","","",324,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",324,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",325,null],[11,"fmt","std::io::cursor","",326,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",326,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",326,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",326,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",326,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",326,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",326,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",326,null],[11,"seek","","",326,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",326,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",326,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",326,null],[11,"read","","",326,null],[11,"read","","",326,null],[11,"fill_buf","","",326,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",326,null],[11,"fill_buf","","",326,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",326,null],[11,"fill_buf","","",326,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",326,null],[11,"write","","",326,null],[11,"flush","","",326,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",326,null],[11,"flush","","",326,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",307,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",327,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",328,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",328,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",328,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",328,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",307,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",307,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",307,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",307,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",307,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",307,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",307,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",307,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",329,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",307,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",307,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",307,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",233,null],[11,"read_to_end","","",233,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",233,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","","",233,null],[11,"flush","","",233,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",233,null],[11,"write_fmt","","",233,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",233,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",233,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",233,null],[11,"read_until","","",233,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",233,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",330,null],[11,"write_all","","",330,null],[11,"flush","","",330,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",331,null],[11,"get","","",331,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",332,null],[11,"fill_buf","","",332,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",332,null],[11,"read","","",333,null],[11,"write","","",334,null],[11,"flush","","",334,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",335,null],[11,"write","","",336,null],[11,"flush","","",336,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",337,null],[11,"flush","","",337,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",338,null],[11,"flush","","",338,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",338,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",339,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",339,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",339,null],[11,"read_to_end","","",339,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",339,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",340,null],[11,"read_to_end","","",340,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",340,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",340,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",341,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",341,null],[11,"flush","","",341,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",341,null],[11,"write_fmt","","",341,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",342,null],[11,"flush","","",342,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",343,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",343,null],[11,"flush","","",343,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",343,null],[11,"write_fmt","","",343,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",344,null],[11,"flush","","",344,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",345,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",345,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",345,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",345,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",346,null],[11,"flush","","",346,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",347,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",348,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",348,null],[11,"fill_buf","","",348,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",348,null],[11,"read","","",349,null],[11,"next","","",350,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",351,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",352,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",351,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",351,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",351,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",353,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",354,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",355,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",355,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",355,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",355,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",355,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",355,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",355,null],[11,"fmt","","",355,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",355,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",355,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",355,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",356,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",356,null],[11,"clone","","",356,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",356,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",356,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",357,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",357,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",355,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",357,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",357,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",357,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",357,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",357,null],[11,"partial_cmp","","",357,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",357,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",357,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",358,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",358,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",358,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",358,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",358,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",358,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",358,null],[11,"partial_cmp","","",358,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",358,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",359,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",359,null],[11,"eq","","",359,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",359,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",359,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",359,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",359,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",359,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",360,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",360,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",360,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",361,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",361,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",361,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",361,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",361,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",359,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",360,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",360,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",361,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",361,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",360,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",361,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",360,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",361,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",360,null],[11,"hash","","",361,null],[11,"to_socket_addrs","","",359,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",360,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",361,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",362,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",362,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",362,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",362,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",362,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",362,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",362,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",362,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",362,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",362,null],[11,"read_to_end","","",362,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",362,null],[11,"flush","","",362,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",362,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",363,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",363,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",363,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",363,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",363,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",364,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",363,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",365,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",365,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",365,null],[11,"local_addr","","Returns the socket address that this socket was created from.",365,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",365,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",365,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",365,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",365,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",365,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",365,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",355,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",357,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",358,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",359,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",366,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",366,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",366,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",366,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::net","",367,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",367,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",367,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",367,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",368,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"as_raw_fd","std::fs","",314,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",314,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",314,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",362,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",363,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",365,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",362,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",363,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",365,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",362,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",363,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",365,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",308,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",308,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",309,null],[11,"as_bytes","","",309,null],[11,"mode","std::fs","",312,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",312,null],[11,"from_mode","","",312,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",311,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"dev","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",313,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",313,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",313,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",313,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",317,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",320,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",369,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",369,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",369,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"signal","","",370,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",371,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",372,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",373,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",374,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",372,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",373,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",374,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",375,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",375,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",375,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",375,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",375,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",375,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",375,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",375,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",375,null],[11,"fmt","","",375,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",375,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",375,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",376,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",376,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",376,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",376,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",376,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",376,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",376,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",376,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",376,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",377,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",377,null],[11,"clone","","",377,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",377,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",377,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",377,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",377,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",377,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",378,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",378,null],[11,"cmp","","",378,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",378,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",378,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",378,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",378,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",378,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",378,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",378,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",378,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",378,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",378,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",379,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",380,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",379,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",379,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",379,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",379,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",380,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",380,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",380,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",380,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",380,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",379,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",379,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",379,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",379,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",379,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",381,null],[11,"clone","","",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",381,null],[11,"pop","","Truncate `self` to `self.parent()`.",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",381,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",381,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",381,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",381,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",381,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",381,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",381,null],[11,"fmt","","",381,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",319,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",319,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",319,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",319,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",319,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",319,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",319,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",319,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",319,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",319,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",319,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",319,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",319,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",319,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",319,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",319,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",319,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",319,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",319,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",319,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",319,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",319,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"deref","","",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",319,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",381,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",381,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",381,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",319,null],[11,"as_ref","","",319,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",319,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",382,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",382,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",319,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",319,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",319,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",319,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",309,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",308,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",310,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",381,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",372,null],[11,"flush","","",372,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",373,null],[11,"read","","",374,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",369,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",369,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",369,null],[11,"env","","Inserts or updates an environment variable mapping.",369,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",369,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",369,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",369,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",369,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",369,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",369,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",369,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",369,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",369,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",369,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",383,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",383,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",383,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",371,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",371,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",371,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",370,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",370,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",370,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",370,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",370,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",370,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",370,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",384,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",384,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",384,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",384,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",385,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",385,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",385,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",385,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",386,null],[11,"new","std::sync::mpsc::oneshot","",387,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",387,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",387,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",387,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",387,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",387,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",387,null],[11,"drop_port","","",387,null],[11,"can_recv","","",387,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",387,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",387,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",387,null],[11,"eq","std::sync::mpsc::select","",388,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",388,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",389,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",389,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",389,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",390,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",390,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",390,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",390,null],[11,"drop","","",389,null],[11,"drop","","",390,null],[11,"next","","",391,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",392,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",392,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",392,null],[11,"send","","",392,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",392,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",392,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",392,null],[11,"drop_chan","","",392,null],[11,"drop_port","","",392,null],[11,"can_recv","","",392,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",392,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",392,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",392,null],[11,"new","std::sync::mpsc::stream","",393,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",393,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",393,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",393,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",393,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",393,null],[11,"drop_port","","",393,null],[11,"can_recv","","",393,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",393,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",393,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",393,null],[11,"fmt","std::sync::mpsc::sync","",394,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",395,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",395,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",395,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",395,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",395,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",395,null],[11,"drop_chan","","",395,null],[11,"drop_port","","",395,null],[11,"can_recv","","",395,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",395,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",395,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",395,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",396,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",396,null],[11,"pop","","Pops some data from this queue.",396,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",396,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",397,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",397,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",397,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",397,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",397,null],[11,"clone","std::sync::mpsc","",398,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",398,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",398,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",399,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",399,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",399,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",399,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",400,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",400,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",400,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",400,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",401,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",401,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",401,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",402,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",402,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",402,null],[11,"send","","Sends a value on this synchronous channel.",403,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",403,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",403,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",403,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",404,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",404,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",404,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",405,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",406,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",404,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",404,null],[11,"fmt","","",398,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",398,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",398,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",398,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",401,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",401,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",401,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",401,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",399,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",399,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",399,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",400,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",400,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",400,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",407,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",407,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",408,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",409,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",409,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",409,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",409,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",409,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",410,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",410,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",410,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",410,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",410,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",410,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",410,null],[11,"drop","","",410,null],[11,"new","","Creates a new condition variable",411,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",411,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",411,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",411,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",411,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",411,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",411,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",411,null],[11,"drop","std::sync::mutex","",232,null],[11,"fmt","","",232,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",412,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",412,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",412,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",412,null],[11,"deref","","",413,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",413,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",413,null],[11,"new","std::sync::once","Creates a new `Once` value.",414,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",414,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",415,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",415,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",415,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",415,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",415,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",415,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"drop","","",415,null],[11,"fmt","","",415,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",416,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",416,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",416,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",416,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",416,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",416,null],[11,"deref","","",417,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",418,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",418,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",417,null],[11,"drop","","",418,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",419,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",419,null],[11,"release","","Release a resource from this semaphore.",419,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",419,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",420,null],[11,"fmt","std::time::duration","",421,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",421,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Crates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",421,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",421,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",421,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",421,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",421,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",421,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",421,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",421,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",421,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",422,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",422,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",422,null],[11,"wait","","Waits for a signal on the specified mutex.",422,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",422,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",422,null],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",423,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",423,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",423,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",423,null],[11,"destroy","","Deallocates all resources associated with this mutex.",423,null],[11,"next","std::sys_common::net","",424,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",424,null],[11,"connect","","",425,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",425,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",425,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",425,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",425,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",425,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",425,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",425,null],[11,"write","","",425,null],[11,"peer_addr","","",425,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",425,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",425,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",425,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",425,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",426,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",426,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",426,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",426,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",426,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",426,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",426,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",427,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",427,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",427,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",427,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",427,null],[11,"send_to","","",427,null],[11,"duplicate","","",427,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",427,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",427,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",427,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",427,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",427,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",428,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",428,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",428,null],[11,"get","","",428,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",429,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",429,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",429,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",429,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",429,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",429,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",429,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",430,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",430,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",430,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",430,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",430,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",431,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",431,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",431,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",431,null],[11,"fmt","","",431,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",432,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",432,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",433,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",433,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",433,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",433,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",433,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",433,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",433,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",433,null],[11,"new","std::sys_common::thread_local","",434,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",434,null],[11,"set","","Sets this TLS key to a new value.",434,null],[11,"destroy","","Deallocates this OS TLS key.",434,null],[11,"new","","Creates a new managed OS TLS key.",435,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",435,null],[11,"set","","See StaticKey::set",435,null],[11,"drop","","",435,null],[11,"clone","std::sys_common::wtf8","",436,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",436,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",436,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",436,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",436,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",436,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",436,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",436,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",436,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",436,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",436,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",436,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",436,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",436,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",436,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",436,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",437,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",438,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",438,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",438,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",438,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",438,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",438,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",438,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",437,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an new, empty WTF-8 string.",437,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates an new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",437,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",437,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",437,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",437,null],[11,"as_slice","","",437,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",437,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",437,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",437,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",437,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",437,null],[11,"push","","Append a code point at the end of the string.",437,null],[11,"truncate","","Shortens a string to the specified length.",437,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",437,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",437,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",437,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",437,null],[11,"eq","","",438,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",438,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",438,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",438,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",438,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",438,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",438,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",438,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",438,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",438,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",438,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",438,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",439,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",439,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",439,null],[11,"clone","","",440,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",440,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",440,null],[11,"hash","","",436,null],[11,"hash","","",437,null],[11,"hash","","",438,null],[11,"is_ascii","","",438,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",438,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",438,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",438,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",438,null],[11,"make_ascii_lowercase","","",438,null],[11,"new","std::sys::condvar","",441,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",441,null],[11,"notify_all","","",441,null],[11,"wait","","",441,null],[11,"wait_timeout","","",441,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",441,null],[11,"new","std::sys::fd","",442,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",442,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",442,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",442,null],[11,"write","","",442,null],[11,"set_cloexec","","",442,null],[11,"drop","","",442,null],[11,"clone","std::sys::fs","",443,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",444,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",444,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",444,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",444,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",445,null],[11,"eq","","",445,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",445,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",445,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",446,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",446,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",446,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",315,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",444,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",444,null],[11,"mode","","",444,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",445,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",445,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",445,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",445,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",447,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",448,null],[11,"path","","",449,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",449,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",449,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",449,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",449,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",443,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",443,null],[11,"write","","",443,null],[11,"append","","",443,null],[11,"truncate","","",443,null],[11,"create","","",443,null],[11,"mode","","",443,null],[11,"open","","",450,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",450,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",450,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",450,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",450,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",450,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",450,null],[11,"write","","",450,null],[11,"flush","","",450,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",450,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",450,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",450,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",451,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",451,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",451,null],[11,"fmt","","",450,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",452,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",452,null],[11,"unlock","","",452,null],[11,"try_lock","","",452,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",452,null],[11,"uninitialized","","",453,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",453,null],[11,"lock","","",453,null],[11,"try_lock","","",453,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",453,null],[11,"destroy","","",453,null],[11,"new","std::sys::net","",454,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",454,null],[11,"duplicate","","",454,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",454,null],[11,"set_timeout","","",454,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",454,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",455,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",455,null],[11,"fmt","","",456,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",456,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",456,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",457,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",457,null],[11,"len","","",457,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",458,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",458,null],[11,"hash","std::sys::os_str","",459,null],[11,"clone","","",459,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",460,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",459,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",459,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",459,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",459,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",459,null],[11,"from_str","","",460,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",460,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",460,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",460,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",461,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",461,null],[11,"write","","",461,null],[11,"raw","","",461,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",461,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",461,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",462,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",462,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",462,null],[11,"args","","",462,null],[11,"env","","",462,null],[11,"env_remove","","",462,null],[11,"env_clear","","",462,null],[11,"cwd","","",462,null],[11,"fmt","","",463,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",463,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",463,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",463,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",463,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",463,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",463,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",464,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",464,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",464,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",464,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",464,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",465,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",465,null],[11,"try_read","","",465,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",465,null],[11,"try_write","","",465,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",465,null],[11,"write_unlock","","",465,null],[11,"destroy","","",465,null],[11,"new","std::sys::stack_overflow","",466,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",466,null],[11,"new","std::sys::thread","",467,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",467,null],[11,"set_name","","",467,null],[11,"sleep","","",467,null],[11,"join","","",467,null],[11,"drop","","",467,null],[11,"now","std::sys::time::inner","",468,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",469,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",469,null],[11,"new","","",470,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",470,null],[11,"new","","",471,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",471,null],[11,"write","","",471,null],[11,"flush","","",471,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::rt::libunwind","",472,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",473,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"clone","std::rt::dwarf::eh","",474,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::rt::dwarf","",475,null],[11,"read","","",475,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",475,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",475,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",476,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",476,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",476,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",476,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",477,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",477,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",477,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",477,null],[11,"clone","std::rand","",478,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",478,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",478,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",478,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",478,null],[11,"from_seed","","",478,null],[11,"reseed","","",479,null],[11,"clone","","",480,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",480,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",480,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",480,null],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",330,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",330,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",330,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",330,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",330,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",330,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",330,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",330,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",330,null],[11,"as_slice","","Extracts a slice containing the entire vector.",330,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",330,null],[11,"set_len","","Sets the length of a vector.",330,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",330,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",330,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",330,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",330,null],[11,"push","","Appends an element to the back of a collection.",330,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",330,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",330,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",330,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",330,null],[11,"len","","Returns the number of elements in the vector.",330,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",330,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",330,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",330,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",330,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",330,null],[11,"clone","","",330,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",330,null],[11,"hash","","",330,null],[11,"index","","",330,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",330,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",330,null],[11,"index","","",330,null],[11,"index","","",330,null],[11,"index","","",330,null],[11,"index_mut","","",330,null],[11,"index_mut","","",330,null],[11,"index_mut","","",330,null],[11,"index_mut","","",330,null],[11,"deref","","",330,null],[11,"deref_mut","","",330,null],[11,"from_iter","","",330,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",330,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",330,null],[11,"extend","","",330,null],[11,"eq","","",330,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",330,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","collections::borrow","",481,null],[11,"ne","","",481,null],[11,"eq","","",481,null],[11,"ne","","",481,null],[11,"eq","","",481,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",481,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"eq","","",330,null],[11,"ne","","",330,null],[11,"partial_cmp","","",330,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",330,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",330,null],[11,"default","","",330,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",330,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",330,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",330,null],[11,"from","","",330,null],[11,"from","","",330,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",481,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",330,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",482,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",482,null],[11,"count","","",482,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",482,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",482,null],[11,"next","","",483,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",483,null],[11,"next_back","","",483,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",483,null],[11,"borrow","alloc::boxed","",233,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",233,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow","alloc::rc","",484,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",485,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",481,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",481,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",481,null],[11,"into_owned","","Extracts the owned data.",481,null],[11,"deref","","",481,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",481,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",481,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",481,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",481,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",481,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",481,null],[11,"into_cow","","",481,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",481,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"clone","collections::str","",486,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",486,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",486,null],[11,"borrow","collections::string","",310,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"clone","alloc::boxed","",487,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",488,null],[11,"make_place","","",488,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",488,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",233,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",487,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",488,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",233,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",233,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",233,null],[11,"default","","",233,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",233,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",233,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",233,null],[11,"clone","","",233,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",233,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",233,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",233,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",233,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",233,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",233,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",233,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",233,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",233,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",233,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",233,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",233,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",233,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",233,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",233,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",233,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",233,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",233,null],[11,"next_back","","",233,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",233,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",233,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",233,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"cmp","collections::string","",310,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",310,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",310,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",310,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",310,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",310,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",310,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",234,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",235,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",310,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",310,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",310,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",310,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",310,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",310,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",310,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",310,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",310,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",310,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",310,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",310,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",310,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",310,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",310,null],[11,"push","","Adds the given character to the end of the string.",310,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",310,null],[11,"truncate","","Shortens a string to the specified length.",310,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",310,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",310,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",310,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",310,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",310,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",310,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",310,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",310,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts the string into `Box<str>`.",310,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",310,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",234,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",234,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",234,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",235,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",310,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",310,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",310,null],[11,"extend","","",310,null],[11,"extend","","",310,null],[11,"eq","","",310,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",310,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",310,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",481,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",481,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",481,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",481,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",310,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",481,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",481,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",310,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",310,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",310,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",310,null],[11,"add","","",310,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",310,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",310,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",310,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",310,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",310,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",310,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",310,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",310,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",310,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",310,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"eq","","",489,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",489,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",489,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",489,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"from_str","","",310,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",310,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",310,null],[11,"from","","",310,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",481,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",481,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",310,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",310,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",310,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",310,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",490,null],[11,"next","","",490,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",490,null],[11,"next_back","","",490,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"borrow","collections::vec","",330,null],[11,"borrow_mut","","",330,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",484,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",484,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",484,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",484,null],[11,"clone","","Makes a clone of the `Rc<T>`.",484,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",484,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",484,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",484,null],[11,"fmt","","",484,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",484,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",484,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",491,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",491,null],[11,"clone","","Makes a clone of the `Weak<T>`.",491,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",491,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","rustc_unicode::char","",492,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",493,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",494,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"fmt","glutin","",2,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"clone","","",3,{"inputs":[{"name":"touchphase"}],"output":{"name":"touchphase"}}],[11,"eq","","",3,{"inputs":[{"name":"touchphase"},{"name":"touchphase"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"touchphase"},{"name":"touchphase"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"touchphase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"touch"}],"output":{"name":"touch"}}],[11,"fmt","","",0,{"inputs":[{"name":"touch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"elementstate"}],"output":{"name":"elementstate"}}],[11,"eq","","",4,{"inputs":[{"name":"elementstate"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"elementstate"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"elementstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"eq","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"mousescrolldelta"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"mousescrolldelta"},{"name":"mousescrolldelta"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"mousescrolldelta"}],"output":{"name":"mousescrolldelta"}}],[11,"fmt","","",6,{"inputs":[{"name":"mousescrolldelta"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"virtualkeycode"}],"output":{"name":"virtualkeycode"}}],[11,"eq","","",7,{"inputs":[{"name":"virtualkeycode"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"virtualkeycode"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"virtualkeycode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",495,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",495,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"glrequest"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",495,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"bool"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",495,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"robustness"}],"output":{"name":"headlessrendererbuilder"}}],[11,"build","","Builds the headless context.",495,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the headless context.",495,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",496,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"is_current","","Returns true if this context is the current one in this thread.",496,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",496,null],[11,"get_api","","Returns the API that is currently provided by this window.",496,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"set_window_resize_callback","","",496,{"inputs":[{"name":"headlesscontext"},{"name":"option"}],"output":null}],[11,"get_proc_addr","","",496,null],[11,"make_current","","",496,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"is_current","","",496,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",496,null],[11,"swap_buffers","","",496,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"result"}}],[11,"get_api","","",496,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",496,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"pixelformat"}}],[11,"new","","Initializes a new `WindowBuilder` with default values.",497,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",497,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_title","","Requests a specific title for the window.",497,{"inputs":[{"name":"windowbuilder"},{"name":"string"}],"output":{"name":"windowbuilder"}}],[11,"with_fullscreen","","Requests fullscreen mode.",497,{"inputs":[{"name":"windowbuilder"},{"name":"monitorid"}],"output":{"name":"windowbuilder"}}],[11,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",497,{"inputs":[{"name":"windowbuilder"},{"name":"window"}],"output":{"name":"windowbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",497,{"inputs":[{"name":"windowbuilder"},{"name":"glrequest"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",497,{"inputs":[{"name":"windowbuilder"},{"name":"glprofile"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",497,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",497,{"inputs":[{"name":"windowbuilder"},{"name":"robustness"}],"output":{"name":"windowbuilder"}}],[11,"with_vsync","","Requests that the window has vsync enabled.",497,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",497,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multisampling","","Sets the multisampling level to request.",497,{"inputs":[{"name":"windowbuilder"},{"name":"u16"}],"output":{"name":"windowbuilder"}}],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",497,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",497,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",497,{"inputs":[{"name":"windowbuilder"},{"name":"u8"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",497,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_srgb","","Sets whether sRGB should be enabled on the window. `None` means \"I don't care\".",497,{"inputs":[{"name":"windowbuilder"},{"name":"option"}],"output":{"name":"windowbuilder"}}],[11,"with_transparency","","Sets whether the background of the window should be transparent.",497,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",497,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multitouch","","Enables multitouch",497,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",497,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the window.",497,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"default","","",498,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"new","","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",498,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"set_title","","Modifies the title of the window.",498,{"inputs":[{"name":"window"},{"name":"str"}],"output":null}],[11,"show","","Shows the window if it was hidden.",498,{"inputs":[{"name":"window"}],"output":null}],[11,"hide","","Hides the window if it was visible.",498,{"inputs":[{"name":"window"}],"output":null}],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",498,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_position","","Modifies the position of the window.",498,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_inner_size","","Returns the size in points of the client area of the window.",498,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_inner_size_points","","Returns the size in points of the client area of the window.",498,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_inner_size_pixels","","Returns the size in pixels of the client area of the window.",498,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_outer_size","","Returns the size in pixels of the window.",498,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_inner_size","","Modifies the inner size of the window.",498,{"inputs":[{"name":"window"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"poll_events","","Returns an iterator that poll for the next event in the window's events queue.\nReturns `None` if there is no event in the queue.",498,{"inputs":[{"name":"window"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","Returns an iterator that returns events one by one, blocking if necessary until one is\navailable.",498,{"inputs":[{"name":"window"}],"output":{"name":"waiteventsiterator"}}],[11,"make_current","","Sets the context as the current context.",498,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","Returns true if this context is the current one in this thread.",498,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",498,null],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",498,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"platform_display","","Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",498,null],[11,"platform_window","","Gets the native platform specific window handle. This is\ntypically only required when integrating with other libraries\nthat need this information.",498,null],[11,"get_api","","Returns the API that is currently provided by this window.",498,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","Returns the pixel format of this window.",498,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",498,{"inputs":[{"name":"window"}],"output":{"name":"windowproxy"}}],[11,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",498,{"inputs":[{"name":"window"},{"name":"option"}],"output":null}],[11,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",498,{"inputs":[{"name":"window"},{"name":"mousecursor"}],"output":null}],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the\nwindow size in screen pixels. This is typically one for a normal display\nand two for a retina display.",498,{"inputs":[{"name":"window"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",498,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_cursor_state","","Sets how glutin handles the cursor. See the documentation of `CursorState` for details.",498,{"inputs":[{"name":"window"},{"name":"cursorstate"}],"output":{"name":"result"}}],[11,"get_proc_addr","","",498,null],[11,"make_current","","",498,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_current","","",498,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",498,null],[11,"swap_buffers","","",498,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"get_api","","",498,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",498,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"clone","","",499,{"inputs":[{"name":"windowproxy"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",499,{"inputs":[{"name":"windowproxy"}],"output":null}],[11,"next","","",500,{"inputs":[{"name":"polleventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",500,null],[11,"next","","",501,{"inputs":[{"name":"waiteventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",501,null],[11,"next","","",502,{"inputs":[{"name":"availablemonitorsiter"}],"output":{"name":"option"}}],[11,"size_hint","","",502,null],[11,"get_name","","Returns a human-readable name of the monitor.",503,{"inputs":[{"name":"monitorid"}],"output":{"name":"option"}}],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",503,{"inputs":[{"name":"monitorid"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",503,null],[11,"eq","","",8,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"nativemonitorid"}],"output":{"name":"nativemonitorid"}}],[6,"ScanCode","","",null,null],[7,"GL_CORE","","The minimum core profile GL context. Useful for getting the minimum\nrequired GL version while still running on OSX, which often forbids\nthe compatibility profile features.",null,null],[8,"GlContext","","Trait that describes objects that have access to an OpenGL context.",null,null],[10,"make_current","","Sets the context as the current context.",504,{"inputs":[{"name":"glcontext"}],"output":{"name":"result"}}],[10,"is_current","","Returns true if this context is the current one in this thread.",504,{"inputs":[{"name":"glcontext"}],"output":{"name":"bool"}}],[10,"get_proc_address","","Returns the address of an OpenGL function.",504,null],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",504,{"inputs":[{"name":"glcontext"}],"output":{"name":"result"}}],[10,"get_api","","Returns the OpenGL API being used.",504,{"inputs":[{"name":"glcontext"}],"output":{"name":"api"}}],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",504,{"inputs":[{"name":"glcontext"}],"output":{"name":"pixelformat"}}],[11,"eq","","",9,{"inputs":[{"name":"creationerror"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"creationerror"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"creationerror"}],"output":{"name":"creationerror"}}],[11,"fmt","","",9,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",9,{"inputs":[{"name":"creationerror"}],"output":{"name":"str"}}],[11,"fmt","","",10,{"inputs":[{"name":"contexterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"contexterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",10,{"inputs":[{"name":"contexterror"}],"output":{"name":"str"}}],[11,"eq","","",11,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"api"}],"output":{"name":"api"}}],[11,"fmt","","",11,{"inputs":[{"name":"api"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"glprofile"}],"output":{"name":"glprofile"}}],[11,"fmt","","",12,{"inputs":[{"name":"glprofile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"glrequest"}],"output":{"name":"glrequest"}}],[11,"fmt","","",13,{"inputs":[{"name":"glrequest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_gl_version","","Extract the desktop GL version, if any.",13,{"inputs":[{"name":"glrequest"}],"output":{"name":"option"}}],[11,"eq","","",14,{"inputs":[{"name":"robustness"},{"name":"robustness"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"robustness"},{"name":"robustness"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"robustness"}],"output":{"name":"robustness"}}],[11,"fmt","","",14,{"inputs":[{"name":"robustness"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"mousecursor"}],"output":{"name":"mousecursor"}}],[11,"fmt","","",15,{"inputs":[{"name":"mousecursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"cursorstate"}],"output":{"name":"cursorstate"}}],[11,"fmt","","",16,{"inputs":[{"name":"cursorstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"pixelformat"}],"output":{"name":"pixelformat"}}],[11,"fmt","","",1,{"inputs":[{"name":"pixelformat"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Touch"],[3,"PixelFormat"],[4,"Event"],[4,"TouchPhase"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"NativeMonitorId"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"MouseCursor"],[4,"CursorState"],[4,"Option"],[3,"Wrapping"],[3,"Big32x40"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"ShellSurface"],[3,"WaylandClient"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[4,"KeyState"],[4,"KeymapFormat"],[3,"OutputMode"],[4,"OutputSubpixel"],[4,"OutputTransform"],[4,"ScrollAxis"],[4,"ButtonState"],[3,"SeatCapability"],[4,"FullscreenMethod"],[4,"ShellSurfaceResize"],[3,"ShellSurfaceTransient"],[4,"ShmFormat"],[3,"Display"],[3,"InternalDisplay"],[3,"SurfaceId"],[3,"Serial"],[3,"Registry"],[3,"RegistryInternal"],[3,"Compositor"],[3,"CompositorInternal"],[3,"Region"],[3,"WSurface"],[3,"OutputId"],[3,"OutputMode"],[3,"Output"],[3,"KeyboardId"],[3,"KeyboardListener"],[3,"Keyboard"],[3,"PointerId"],[3,"PointerData"],[3,"PointerListener"],[3,"Pointer"],[3,"Seat"],[3,"InternalSeat"],[3,"TouchId"],[3,"Touch"],[3,"Shell"],[3,"InternalShell"],[3,"Buffer"],[3,"Shm"],[3,"InternalShm"],[3,"ShmPool"],[3,"SubCompositor"],[3,"InternalSubCompositor"],[3,"SubSurface"],[3,"EGLSurface"],[3,"WaylandEGL"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"Mutex"],[3,"Box"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"Metadata"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Vec"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"Duration"],[3,"Condvar"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"FileAttr"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"EHContext"],[3,"DwarfReader"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"Rc"],[3,"Arc"],[3,"Utf16Units"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"ParseError"],[3,"Drain"],[3,"Weak"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"HeadlessRendererBuilder"],[3,"HeadlessContext"],[3,"WindowBuilder"],[3,"Window"],[3,"WindowProxy"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"AvailableMonitorsIter"],[3,"MonitorID"],[8,"GlContext"]]};
searchIndex['x11_dl'] = {"items":[[0,"","x11_dl","",null,null],[0,"error","","",null,null],[3,"OpenError","x11_dl::error","",null,null],[4,"OpenErrorKind","","",null,null],[13,"Library","","",0,null],[13,"Symbol","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"openerror"}}],[11,"detail","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"new","","",1,{"inputs":[{"name":"openerror"},{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"openerrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"openerrorkind"}}],[11,"as_str","","",0,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"str"}}],[0,"glx","x11_dl","",null,null],[3,"Glx","x11_dl::glx","",null,null],[12,"glXChooseFBConfig","","",2,null],[12,"glXChooseVisual","","",2,null],[12,"glXCopyContext","","",2,null],[12,"glXCreateContext","","",2,null],[12,"glXCreateGLXPixmap","","",2,null],[12,"glXCreateNewContext","","",2,null],[12,"glXCreatePbuffer","","",2,null],[12,"glXCreatePixmap","","",2,null],[12,"glXCreateWindow","","",2,null],[12,"glXDestroyContext","","",2,null],[12,"glXDestroyGLXPixmap","","",2,null],[12,"glXDestroyPbuffer","","",2,null],[12,"glXDestroyPixmap","","",2,null],[12,"glXDestroyWindow","","",2,null],[12,"glXGetClientString","","",2,null],[12,"glXGetConfig","","",2,null],[12,"glXGetCurrentContext","","",2,null],[12,"glXGetCurrentDisplay","","",2,null],[12,"glXGetCurrentDrawable","","",2,null],[12,"glXGetCurrentReadDrawable","","",2,null],[12,"glXGetFBConfigAttrib","","",2,null],[12,"glXGetFBConfigs","","",2,null],[12,"glXGetProcAddress","","",2,null],[12,"glXGetSelectedEvent","","",2,null],[12,"glXGetVisualFromFBConfig","","",2,null],[12,"glXIsDirect","","",2,null],[12,"glXMakeContextCurrent","","",2,null],[12,"glXMakeCurrent","","",2,null],[12,"glXQueryContext","","",2,null],[12,"glXQueryDrawable","","",2,null],[12,"glXQueryExtension","","",2,null],[12,"glXQueryExtensionsString","","",2,null],[12,"glXQueryServerString","","",2,null],[12,"glXQueryVersion","","",2,null],[12,"glXSelectEvent","","",2,null],[12,"glXSwapBuffers","","",2,null],[12,"glXUseXFont","","",2,null],[12,"glXWaitGL","","",2,null],[12,"glXWaitX","","",2,null],[3,"__GLXcontextRec","","",null,null],[3,"__GLXFBConfigRec","","",null,null],[0,"arb","","",null,null],[17,"GLX_CONTEXT_MAJOR_VERSION_ARB","x11_dl::glx::arb","",null,null],[17,"GLX_CONTEXT_MINOR_VERSION_ARB","","",null,null],[17,"GLX_CONTEXT_FLAGS_ARB","","",null,null],[17,"GLX_CONTEXT_PROFILE_MASK_ARB","","",null,null],[17,"GLX_CONTEXT_DEBUG_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_CORE_PROFILE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","","",null,null],[0,"ext","x11_dl::glx","",null,null],[17,"GLX_SWAP_INTERVAL_EXT","x11_dl::glx::ext","",null,null],[17,"GLX_MAX_SWAP_INTERVAL_EXT","","",null,null],[6,"GLXContext","x11_dl::glx","",null,null],[6,"GLXContextID","","",null,null],[6,"GLXDrawable","","",null,null],[6,"GLXFBConfig","","",null,null],[6,"GLXFBConfigID","","",null,null],[6,"GLXPbuffer","","",null,null],[6,"GLXPixmap","","",null,null],[6,"GLXWindow","","",null,null],[17,"GLX_SLOW_CONFIG","","",null,null],[17,"GLX_NON_CONFORMANT_CONFIG","","",null,null],[17,"GLX_WINDOW_BIT","","",null,null],[17,"GLX_PIXMAP_BIT","","",null,null],[17,"GLX_PBUFFER_BIT","","",null,null],[17,"GLX_USE_GL","","",null,null],[17,"GLX_BUFFER_SIZE","","",null,null],[17,"GLX_LEVEL","","",null,null],[17,"GLX_RGBA","","",null,null],[17,"GLX_DOUBLEBUFFER","","",null,null],[17,"GLX_STEREO","","",null,null],[17,"GLX_AUX_BUFFERS","","",null,null],[17,"GLX_RED_SIZE","","",null,null],[17,"GLX_GREEN_SIZE","","",null,null],[17,"GLX_BLUE_SIZE","","",null,null],[17,"GLX_ALPHA_SIZE","","",null,null],[17,"GLX_DEPTH_SIZE","","",null,null],[17,"GLX_STENCIL_SIZE","","",null,null],[17,"GLX_ACCUM_RED_SIZE","","",null,null],[17,"GLX_ACCUM_GREEN_SIZE","","",null,null],[17,"GLX_ACCUM_BLUE_SIZE","","",null,null],[17,"GLX_ACCUM_ALPHA_SIZE","","",null,null],[17,"GLX_CONFIG_CAVEAT","","",null,null],[17,"GLX_X_VISUAL_TYPE","","",null,null],[17,"GLX_TRANSPARENT_TYPE","","",null,null],[17,"GLX_TRANSPARENT_INDEX_VALUE","","",null,null],[17,"GLX_TRANSPARENT_RED_VALUE","","",null,null],[17,"GLX_TRANSPARENT_GREEN_VALUE","","",null,null],[17,"GLX_TRANSPARENT_BLUE_VALUE","","",null,null],[17,"GLX_TRANSPARENT_ALPHA_VALUE","","",null,null],[17,"GLX_DRAWABLE_TYPE","","",null,null],[17,"GLX_RENDER_TYPE","","",null,null],[17,"GLX_X_RENDERABLE","","",null,null],[17,"GLX_FBCONFIG_ID","","",null,null],[17,"GLX_DONT_CARE","","",null,null],[17,"GLX_NONE","","",null,null],[17,"GLX_RGBA_BIT","","",null,null],[17,"GLX_COLOR_INDEX_BIT","","",null,null],[17,"GLX_TRANSPARENT_RGB","","",null,null],[17,"GLX_TRANSPARENT_INDEX","","",null,null],[17,"GLX_TRUE_COLOR","","",null,null],[17,"GLX_DIRECT_COLOR","","",null,null],[17,"GLX_PSEUDO_COLOR","","",null,null],[17,"GLX_STATIC_COLOR","","",null,null],[17,"GLX_GRAY_SCALE","","",null,null],[17,"GLX_STATIC_GRAY","","",null,null],[11,"open","","",2,{"inputs":[{"name":"glx"}],"output":{"name":"result"}}],[0,"keysym","x11_dl","",null,null],[17,"XK_BackSpace","x11_dl::keysym","",null,null],[17,"XK_Tab","","",null,null],[17,"XK_Linefeed","","",null,null],[17,"XK_Clear","","",null,null],[17,"XK_Return","","",null,null],[17,"XK_Pause","","",null,null],[17,"XK_Scroll_Lock","","",null,null],[17,"XK_Sys_Req","","",null,null],[17,"XK_Escape","","",null,null],[17,"XK_Delete","","",null,null],[17,"XK_Multi_key","","",null,null],[17,"XK_Kanji","","",null,null],[17,"XK_Muhenkan","","",null,null],[17,"XK_Henkan_Mode","","",null,null],[17,"XK_Henkan","","",null,null],[17,"XK_Romaji","","",null,null],[17,"XK_Hiragana","","",null,null],[17,"XK_Katakana","","",null,null],[17,"XK_Hiragana_Katakana","","",null,null],[17,"XK_Zenkaku","","",null,null],[17,"XK_Hankaku","","",null,null],[17,"XK_Zenkaku_Hankaku","","",null,null],[17,"XK_Touroku","","",null,null],[17,"XK_Massyo","","",null,null],[17,"XK_Kana_Lock","","",null,null],[17,"XK_Kana_Shift","","",null,null],[17,"XK_Eisu_Shift","","",null,null],[17,"XK_Eisu_toggle","","",null,null],[17,"XK_Home","","",null,null],[17,"XK_Left","","",null,null],[17,"XK_Up","","",null,null],[17,"XK_Right","","",null,null],[17,"XK_Down","","",null,null],[17,"XK_Prior","","",null,null],[17,"XK_Page_Up","","",null,null],[17,"XK_Next","","",null,null],[17,"XK_Page_Down","","",null,null],[17,"XK_End","","",null,null],[17,"XK_Begin","","",null,null],[17,"XK_Win_L","","",null,null],[17,"XK_Win_R","","",null,null],[17,"XK_App","","",null,null],[17,"XK_Select","","",null,null],[17,"XK_Print","","",null,null],[17,"XK_Execute","","",null,null],[17,"XK_Insert","","",null,null],[17,"XK_Undo","","",null,null],[17,"XK_Redo","","",null,null],[17,"XK_Menu","","",null,null],[17,"XK_Find","","",null,null],[17,"XK_Cancel","","",null,null],[17,"XK_Help","","",null,null],[17,"XK_Break","","",null,null],[17,"XK_Mode_switch","","",null,null],[17,"XK_script_switch","","",null,null],[17,"XK_Num_Lock","","",null,null],[17,"XK_KP_Space","","",null,null],[17,"XK_KP_Tab","","",null,null],[17,"XK_KP_Enter","","",null,null],[17,"XK_KP_F1","","",null,null],[17,"XK_KP_F2","","",null,null],[17,"XK_KP_F3","","",null,null],[17,"XK_KP_F4","","",null,null],[17,"XK_KP_Home","","",null,null],[17,"XK_KP_Left","","",null,null],[17,"XK_KP_Up","","",null,null],[17,"XK_KP_Right","","",null,null],[17,"XK_KP_Down","","",null,null],[17,"XK_KP_Prior","","",null,null],[17,"XK_KP_Page_Up","","",null,null],[17,"XK_KP_Next","","",null,null],[17,"XK_KP_Page_Down","","",null,null],[17,"XK_KP_End","","",null,null],[17,"XK_KP_Begin","","",null,null],[17,"XK_KP_Insert","","",null,null],[17,"XK_KP_Delete","","",null,null],[17,"XK_KP_Equal","","",null,null],[17,"XK_KP_Multiply","","",null,null],[17,"XK_KP_Add","","",null,null],[17,"XK_KP_Separator","","",null,null],[17,"XK_KP_Subtract","","",null,null],[17,"XK_KP_Decimal","","",null,null],[17,"XK_KP_Divide","","",null,null],[17,"XK_KP_0","","",null,null],[17,"XK_KP_1","","",null,null],[17,"XK_KP_2","","",null,null],[17,"XK_KP_3","","",null,null],[17,"XK_KP_4","","",null,null],[17,"XK_KP_5","","",null,null],[17,"XK_KP_6","","",null,null],[17,"XK_KP_7","","",null,null],[17,"XK_KP_8","","",null,null],[17,"XK_KP_9","","",null,null],[17,"XK_F1","","",null,null],[17,"XK_F2","","",null,null],[17,"XK_F3","","",null,null],[17,"XK_F4","","",null,null],[17,"XK_F5","","",null,null],[17,"XK_F6","","",null,null],[17,"XK_F7","","",null,null],[17,"XK_F8","","",null,null],[17,"XK_F9","","",null,null],[17,"XK_F10","","",null,null],[17,"XK_F11","","",null,null],[17,"XK_L1","","",null,null],[17,"XK_F12","","",null,null],[17,"XK_L2","","",null,null],[17,"XK_F13","","",null,null],[17,"XK_L3","","",null,null],[17,"XK_F14","","",null,null],[17,"XK_L4","","",null,null],[17,"XK_F15","","",null,null],[17,"XK_L5","","",null,null],[17,"XK_F16","","",null,null],[17,"XK_L6","","",null,null],[17,"XK_F17","","",null,null],[17,"XK_L7","","",null,null],[17,"XK_F18","","",null,null],[17,"XK_L8","","",null,null],[17,"XK_F19","","",null,null],[17,"XK_L9","","",null,null],[17,"XK_F20","","",null,null],[17,"XK_L10","","",null,null],[17,"XK_F21","","",null,null],[17,"XK_R1","","",null,null],[17,"XK_F22","","",null,null],[17,"XK_R2","","",null,null],[17,"XK_F23","","",null,null],[17,"XK_R3","","",null,null],[17,"XK_F24","","",null,null],[17,"XK_R4","","",null,null],[17,"XK_F25","","",null,null],[17,"XK_R5","","",null,null],[17,"XK_F26","","",null,null],[17,"XK_R6","","",null,null],[17,"XK_F27","","",null,null],[17,"XK_R7","","",null,null],[17,"XK_F28","","",null,null],[17,"XK_R8","","",null,null],[17,"XK_F29","","",null,null],[17,"XK_R9","","",null,null],[17,"XK_F30","","",null,null],[17,"XK_R10","","",null,null],[17,"XK_F31","","",null,null],[17,"XK_R11","","",null,null],[17,"XK_F32","","",null,null],[17,"XK_R12","","",null,null],[17,"XK_F33","","",null,null],[17,"XK_R13","","",null,null],[17,"XK_F34","","",null,null],[17,"XK_R14","","",null,null],[17,"XK_F35","","",null,null],[17,"XK_R15","","",null,null],[17,"XK_Shift_L","","",null,null],[17,"XK_Shift_R","","",null,null],[17,"XK_Control_L","","",null,null],[17,"XK_Control_R","","",null,null],[17,"XK_Caps_Lock","","",null,null],[17,"XK_Shift_Lock","","",null,null],[17,"XK_Meta_L","","",null,null],[17,"XK_Meta_R","","",null,null],[17,"XK_Alt_L","","",null,null],[17,"XK_Alt_R","","",null,null],[17,"XK_Super_L","","",null,null],[17,"XK_Super_R","","",null,null],[17,"XK_Hyper_L","","",null,null],[17,"XK_Hyper_R","","",null,null],[17,"XK_space","","",null,null],[17,"XK_exclam","","",null,null],[17,"XK_quotedbl","","",null,null],[17,"XK_numbersign","","",null,null],[17,"XK_dollar","","",null,null],[17,"XK_percent","","",null,null],[17,"XK_ampersand","","",null,null],[17,"XK_apostrophe","","",null,null],[17,"XK_quoteright","","",null,null],[17,"XK_parenleft","","",null,null],[17,"XK_parenright","","",null,null],[17,"XK_asterisk","","",null,null],[17,"XK_plus","","",null,null],[17,"XK_comma","","",null,null],[17,"XK_minus","","",null,null],[17,"XK_period","","",null,null],[17,"XK_slash","","",null,null],[17,"XK_0","","",null,null],[17,"XK_1","","",null,null],[17,"XK_2","","",null,null],[17,"XK_3","","",null,null],[17,"XK_4","","",null,null],[17,"XK_5","","",null,null],[17,"XK_6","","",null,null],[17,"XK_7","","",null,null],[17,"XK_8","","",null,null],[17,"XK_9","","",null,null],[17,"XK_colon","","",null,null],[17,"XK_semicolon","","",null,null],[17,"XK_less","","",null,null],[17,"XK_equal","","",null,null],[17,"XK_greater","","",null,null],[17,"XK_question","","",null,null],[17,"XK_at","","",null,null],[17,"XK_A","","",null,null],[17,"XK_B","","",null,null],[17,"XK_C","","",null,null],[17,"XK_D","","",null,null],[17,"XK_E","","",null,null],[17,"XK_F","","",null,null],[17,"XK_G","","",null,null],[17,"XK_H","","",null,null],[17,"XK_I","","",null,null],[17,"XK_J","","",null,null],[17,"XK_K","","",null,null],[17,"XK_L","","",null,null],[17,"XK_M","","",null,null],[17,"XK_N","","",null,null],[17,"XK_O","","",null,null],[17,"XK_P","","",null,null],[17,"XK_Q","","",null,null],[17,"XK_R","","",null,null],[17,"XK_S","","",null,null],[17,"XK_T","","",null,null],[17,"XK_U","","",null,null],[17,"XK_V","","",null,null],[17,"XK_W","","",null,null],[17,"XK_X","","",null,null],[17,"XK_Y","","",null,null],[17,"XK_Z","","",null,null],[17,"XK_bracketleft","","",null,null],[17,"XK_backslash","","",null,null],[17,"XK_bracketright","","",null,null],[17,"XK_asciicircum","","",null,null],[17,"XK_underscore","","",null,null],[17,"XK_grave","","",null,null],[17,"XK_quoteleft","","",null,null],[17,"XK_a","","",null,null],[17,"XK_b","","",null,null],[17,"XK_c","","",null,null],[17,"XK_d","","",null,null],[17,"XK_e","","",null,null],[17,"XK_f","","",null,null],[17,"XK_g","","",null,null],[17,"XK_h","","",null,null],[17,"XK_i","","",null,null],[17,"XK_j","","",null,null],[17,"XK_k","","",null,null],[17,"XK_l","","",null,null],[17,"XK_m","","",null,null],[17,"XK_n","","",null,null],[17,"XK_o","","",null,null],[17,"XK_p","","",null,null],[17,"XK_q","","",null,null],[17,"XK_r","","",null,null],[17,"XK_s","","",null,null],[17,"XK_t","","",null,null],[17,"XK_u","","",null,null],[17,"XK_v","","",null,null],[17,"XK_w","","",null,null],[17,"XK_x","","",null,null],[17,"XK_y","","",null,null],[17,"XK_z","","",null,null],[17,"XK_braceleft","","",null,null],[17,"XK_bar","","",null,null],[17,"XK_braceright","","",null,null],[17,"XK_asciitilde","","",null,null],[17,"XK_nobreakspace","","",null,null],[17,"XK_exclamdown","","",null,null],[17,"XK_cent","","",null,null],[17,"XK_sterling","","",null,null],[17,"XK_currency","","",null,null],[17,"XK_yen","","",null,null],[17,"XK_brokenbar","","",null,null],[17,"XK_section","","",null,null],[17,"XK_diaeresis","","",null,null],[17,"XK_copyright","","",null,null],[17,"XK_ordfeminine","","",null,null],[17,"XK_guillemotleft","","",null,null],[17,"XK_notsign","","",null,null],[17,"XK_hyphen","","",null,null],[17,"XK_registered","","",null,null],[17,"XK_macron","","",null,null],[17,"XK_degree","","",null,null],[17,"XK_plusminus","","",null,null],[17,"XK_twosuperior","","",null,null],[17,"XK_threesuperior","","",null,null],[17,"XK_acute","","",null,null],[17,"XK_mu","","",null,null],[17,"XK_paragraph","","",null,null],[17,"XK_periodcentered","","",null,null],[17,"XK_cedilla","","",null,null],[17,"XK_onesuperior","","",null,null],[17,"XK_masculine","","",null,null],[17,"XK_guillemotright","","",null,null],[17,"XK_onequarter","","",null,null],[17,"XK_onehalf","","",null,null],[17,"XK_threequarters","","",null,null],[17,"XK_questiondown","","",null,null],[17,"XK_Agrave","","",null,null],[17,"XK_Aacute","","",null,null],[17,"XK_Acircumflex","","",null,null],[17,"XK_Atilde","","",null,null],[17,"XK_Adiaeresis","","",null,null],[17,"XK_Aring","","",null,null],[17,"XK_AE","","",null,null],[17,"XK_Ccedilla","","",null,null],[17,"XK_Egrave","","",null,null],[17,"XK_Eacute","","",null,null],[17,"XK_Ecircumflex","","",null,null],[17,"XK_Ediaeresis","","",null,null],[17,"XK_Igrave","","",null,null],[17,"XK_Iacute","","",null,null],[17,"XK_Icircumflex","","",null,null],[17,"XK_Idiaeresis","","",null,null],[17,"XK_ETH","","",null,null],[17,"XK_Eth","","",null,null],[17,"XK_Ntilde","","",null,null],[17,"XK_Ograve","","",null,null],[17,"XK_Oacute","","",null,null],[17,"XK_Ocircumflex","","",null,null],[17,"XK_Otilde","","",null,null],[17,"XK_Odiaeresis","","",null,null],[17,"XK_multiply","","",null,null],[17,"XK_Ooblique","","",null,null],[17,"XK_Ugrave","","",null,null],[17,"XK_Uacute","","",null,null],[17,"XK_Ucircumflex","","",null,null],[17,"XK_Udiaeresis","","",null,null],[17,"XK_Yacute","","",null,null],[17,"XK_THORN","","",null,null],[17,"XK_Thorn","","",null,null],[17,"XK_ssharp","","",null,null],[17,"XK_agrave","","",null,null],[17,"XK_aacute","","",null,null],[17,"XK_acircumflex","","",null,null],[17,"XK_atilde","","",null,null],[17,"XK_adiaeresis","","",null,null],[17,"XK_aring","","",null,null],[17,"XK_ae","","",null,null],[17,"XK_ccedilla","","",null,null],[17,"XK_egrave","","",null,null],[17,"XK_eacute","","",null,null],[17,"XK_ecircumflex","","",null,null],[17,"XK_ediaeresis","","",null,null],[17,"XK_igrave","","",null,null],[17,"XK_iacute","","",null,null],[17,"XK_icircumflex","","",null,null],[17,"XK_idiaeresis","","",null,null],[17,"XK_eth","","",null,null],[17,"XK_ntilde","","",null,null],[17,"XK_ograve","","",null,null],[17,"XK_oacute","","",null,null],[17,"XK_ocircumflex","","",null,null],[17,"XK_otilde","","",null,null],[17,"XK_odiaeresis","","",null,null],[17,"XK_division","","",null,null],[17,"XK_oslash","","",null,null],[17,"XK_ugrave","","",null,null],[17,"XK_uacute","","",null,null],[17,"XK_ucircumflex","","",null,null],[17,"XK_udiaeresis","","",null,null],[17,"XK_yacute","","",null,null],[17,"XK_thorn","","",null,null],[17,"XK_ydiaeresis","","",null,null],[17,"XK_Aogonek","","",null,null],[17,"XK_breve","","",null,null],[17,"XK_Lstroke","","",null,null],[17,"XK_Lcaron","","",null,null],[17,"XK_Sacute","","",null,null],[17,"XK_Scaron","","",null,null],[17,"XK_Scedilla","","",null,null],[17,"XK_Tcaron","","",null,null],[17,"XK_Zacute","","",null,null],[17,"XK_Zcaron","","",null,null],[17,"XK_Zabovedot","","",null,null],[17,"XK_aogonek","","",null,null],[17,"XK_ogonek","","",null,null],[17,"XK_lstroke","","",null,null],[17,"XK_lcaron","","",null,null],[17,"XK_sacute","","",null,null],[17,"XK_caron","","",null,null],[17,"XK_scaron","","",null,null],[17,"XK_scedilla","","",null,null],[17,"XK_tcaron","","",null,null],[17,"XK_zacute","","",null,null],[17,"XK_doubleacute","","",null,null],[17,"XK_zcaron","","",null,null],[17,"XK_zabovedot","","",null,null],[17,"XK_Racute","","",null,null],[17,"XK_Abreve","","",null,null],[17,"XK_Lacute","","",null,null],[17,"XK_Cacute","","",null,null],[17,"XK_Ccaron","","",null,null],[17,"XK_Eogonek","","",null,null],[17,"XK_Ecaron","","",null,null],[17,"XK_Dcaron","","",null,null],[17,"XK_Dstroke","","",null,null],[17,"XK_Nacute","","",null,null],[17,"XK_Ncaron","","",null,null],[17,"XK_Odoubleacute","","",null,null],[17,"XK_Rcaron","","",null,null],[17,"XK_Uring","","",null,null],[17,"XK_Udoubleacute","","",null,null],[17,"XK_Tcedilla","","",null,null],[17,"XK_racute","","",null,null],[17,"XK_abreve","","",null,null],[17,"XK_lacute","","",null,null],[17,"XK_cacute","","",null,null],[17,"XK_ccaron","","",null,null],[17,"XK_eogonek","","",null,null],[17,"XK_ecaron","","",null,null],[17,"XK_dcaron","","",null,null],[17,"XK_dstroke","","",null,null],[17,"XK_nacute","","",null,null],[17,"XK_ncaron","","",null,null],[17,"XK_odoubleacute","","",null,null],[17,"XK_udoubleacute","","",null,null],[17,"XK_rcaron","","",null,null],[17,"XK_uring","","",null,null],[17,"XK_tcedilla","","",null,null],[17,"XK_abovedot","","",null,null],[17,"XK_Hstroke","","",null,null],[17,"XK_Hcircumflex","","",null,null],[17,"XK_Iabovedot","","",null,null],[17,"XK_Gbreve","","",null,null],[17,"XK_Jcircumflex","","",null,null],[17,"XK_hstroke","","",null,null],[17,"XK_hcircumflex","","",null,null],[17,"XK_idotless","","",null,null],[17,"XK_gbreve","","",null,null],[17,"XK_jcircumflex","","",null,null],[17,"XK_Cabovedot","","",null,null],[17,"XK_Ccircumflex","","",null,null],[17,"XK_Gabovedot","","",null,null],[17,"XK_Gcircumflex","","",null,null],[17,"XK_Ubreve","","",null,null],[17,"XK_Scircumflex","","",null,null],[17,"XK_cabovedot","","",null,null],[17,"XK_ccircumflex","","",null,null],[17,"XK_gabovedot","","",null,null],[17,"XK_gcircumflex","","",null,null],[17,"XK_ubreve","","",null,null],[17,"XK_scircumflex","","",null,null],[17,"XK_kra","","",null,null],[17,"XK_kappa","","",null,null],[17,"XK_Rcedilla","","",null,null],[17,"XK_Itilde","","",null,null],[17,"XK_Lcedilla","","",null,null],[17,"XK_Emacron","","",null,null],[17,"XK_Gcedilla","","",null,null],[17,"XK_Tslash","","",null,null],[17,"XK_rcedilla","","",null,null],[17,"XK_itilde","","",null,null],[17,"XK_lcedilla","","",null,null],[17,"XK_emacron","","",null,null],[17,"XK_gcedilla","","",null,null],[17,"XK_tslash","","",null,null],[17,"XK_ENG","","",null,null],[17,"XK_eng","","",null,null],[17,"XK_Amacron","","",null,null],[17,"XK_Iogonek","","",null,null],[17,"XK_Eabovedot","","",null,null],[17,"XK_Imacron","","",null,null],[17,"XK_Ncedilla","","",null,null],[17,"XK_Omacron","","",null,null],[17,"XK_Kcedilla","","",null,null],[17,"XK_Uogonek","","",null,null],[17,"XK_Utilde","","",null,null],[17,"XK_Umacron","","",null,null],[17,"XK_amacron","","",null,null],[17,"XK_iogonek","","",null,null],[17,"XK_eabovedot","","",null,null],[17,"XK_imacron","","",null,null],[17,"XK_ncedilla","","",null,null],[17,"XK_omacron","","",null,null],[17,"XK_kcedilla","","",null,null],[17,"XK_uogonek","","",null,null],[17,"XK_utilde","","",null,null],[17,"XK_umacron","","",null,null],[17,"XK_overline","","",null,null],[17,"XK_kana_fullstop","","",null,null],[17,"XK_kana_openingbracket","","",null,null],[17,"XK_kana_closingbracket","","",null,null],[17,"XK_kana_comma","","",null,null],[17,"XK_kana_conjunctive","","",null,null],[17,"XK_kana_middledot","","",null,null],[17,"XK_kana_WO","","",null,null],[17,"XK_kana_a","","",null,null],[17,"XK_kana_i","","",null,null],[17,"XK_kana_u","","",null,null],[17,"XK_kana_e","","",null,null],[17,"XK_kana_o","","",null,null],[17,"XK_kana_ya","","",null,null],[17,"XK_kana_yu","","",null,null],[17,"XK_kana_yo","","",null,null],[17,"XK_kana_tsu","","",null,null],[17,"XK_kana_tu","","",null,null],[17,"XK_prolongedsound","","",null,null],[17,"XK_kana_A","","",null,null],[17,"XK_kana_I","","",null,null],[17,"XK_kana_U","","",null,null],[17,"XK_kana_E","","",null,null],[17,"XK_kana_O","","",null,null],[17,"XK_kana_KA","","",null,null],[17,"XK_kana_KI","","",null,null],[17,"XK_kana_KU","","",null,null],[17,"XK_kana_KE","","",null,null],[17,"XK_kana_KO","","",null,null],[17,"XK_kana_SA","","",null,null],[17,"XK_kana_SHI","","",null,null],[17,"XK_kana_SU","","",null,null],[17,"XK_kana_SE","","",null,null],[17,"XK_kana_SO","","",null,null],[17,"XK_kana_TA","","",null,null],[17,"XK_kana_CHI","","",null,null],[17,"XK_kana_TI","","",null,null],[17,"XK_kana_TSU","","",null,null],[17,"XK_kana_TU","","",null,null],[17,"XK_kana_TE","","",null,null],[17,"XK_kana_TO","","",null,null],[17,"XK_kana_NA","","",null,null],[17,"XK_kana_NI","","",null,null],[17,"XK_kana_NU","","",null,null],[17,"XK_kana_NE","","",null,null],[17,"XK_kana_NO","","",null,null],[17,"XK_kana_HA","","",null,null],[17,"XK_kana_HI","","",null,null],[17,"XK_kana_FU","","",null,null],[17,"XK_kana_HU","","",null,null],[17,"XK_kana_HE","","",null,null],[17,"XK_kana_HO","","",null,null],[17,"XK_kana_MA","","",null,null],[17,"XK_kana_MI","","",null,null],[17,"XK_kana_MU","","",null,null],[17,"XK_kana_ME","","",null,null],[17,"XK_kana_MO","","",null,null],[17,"XK_kana_YA","","",null,null],[17,"XK_kana_YU","","",null,null],[17,"XK_kana_YO","","",null,null],[17,"XK_kana_RA","","",null,null],[17,"XK_kana_RI","","",null,null],[17,"XK_kana_RU","","",null,null],[17,"XK_kana_RE","","",null,null],[17,"XK_kana_RO","","",null,null],[17,"XK_kana_WA","","",null,null],[17,"XK_kana_N","","",null,null],[17,"XK_voicedsound","","",null,null],[17,"XK_semivoicedsound","","",null,null],[17,"XK_kana_switch","","",null,null],[17,"XK_Arabic_comma","","",null,null],[17,"XK_Arabic_semicolon","","",null,null],[17,"XK_Arabic_question_mark","","",null,null],[17,"XK_Arabic_hamza","","",null,null],[17,"XK_Arabic_maddaonalef","","",null,null],[17,"XK_Arabic_hamzaonalef","","",null,null],[17,"XK_Arabic_hamzaonwaw","","",null,null],[17,"XK_Arabic_hamzaunderalef","","",null,null],[17,"XK_Arabic_hamzaonyeh","","",null,null],[17,"XK_Arabic_alef","","",null,null],[17,"XK_Arabic_beh","","",null,null],[17,"XK_Arabic_tehmarbuta","","",null,null],[17,"XK_Arabic_teh","","",null,null],[17,"XK_Arabic_theh","","",null,null],[17,"XK_Arabic_jeem","","",null,null],[17,"XK_Arabic_hah","","",null,null],[17,"XK_Arabic_khah","","",null,null],[17,"XK_Arabic_dal","","",null,null],[17,"XK_Arabic_thal","","",null,null],[17,"XK_Arabic_ra","","",null,null],[17,"XK_Arabic_zain","","",null,null],[17,"XK_Arabic_seen","","",null,null],[17,"XK_Arabic_sheen","","",null,null],[17,"XK_Arabic_sad","","",null,null],[17,"XK_Arabic_dad","","",null,null],[17,"XK_Arabic_tah","","",null,null],[17,"XK_Arabic_zah","","",null,null],[17,"XK_Arabic_ain","","",null,null],[17,"XK_Arabic_ghain","","",null,null],[17,"XK_Arabic_tatweel","","",null,null],[17,"XK_Arabic_feh","","",null,null],[17,"XK_Arabic_qaf","","",null,null],[17,"XK_Arabic_kaf","","",null,null],[17,"XK_Arabic_lam","","",null,null],[17,"XK_Arabic_meem","","",null,null],[17,"XK_Arabic_noon","","",null,null],[17,"XK_Arabic_ha","","",null,null],[17,"XK_Arabic_heh","","",null,null],[17,"XK_Arabic_waw","","",null,null],[17,"XK_Arabic_alefmaksura","","",null,null],[17,"XK_Arabic_yeh","","",null,null],[17,"XK_Arabic_fathatan","","",null,null],[17,"XK_Arabic_dammatan","","",null,null],[17,"XK_Arabic_kasratan","","",null,null],[17,"XK_Arabic_fatha","","",null,null],[17,"XK_Arabic_damma","","",null,null],[17,"XK_Arabic_kasra","","",null,null],[17,"XK_Arabic_shadda","","",null,null],[17,"XK_Arabic_sukun","","",null,null],[17,"XK_Arabic_switch","","",null,null],[17,"XK_Serbian_dje","","",null,null],[17,"XK_Macedonia_gje","","",null,null],[17,"XK_Cyrillic_io","","",null,null],[17,"XK_Ukrainian_ie","","",null,null],[17,"XK_Ukranian_je","","",null,null],[17,"XK_Macedonia_dse","","",null,null],[17,"XK_Ukrainian_i","","",null,null],[17,"XK_Ukranian_i","","",null,null],[17,"XK_Ukrainian_yi","","",null,null],[17,"XK_Ukranian_yi","","",null,null],[17,"XK_Cyrillic_je","","",null,null],[17,"XK_Serbian_je","","",null,null],[17,"XK_Cyrillic_lje","","",null,null],[17,"XK_Serbian_lje","","",null,null],[17,"XK_Cyrillic_nje","","",null,null],[17,"XK_Serbian_nje","","",null,null],[17,"XK_Serbian_tshe","","",null,null],[17,"XK_Macedonia_kje","","",null,null],[17,"XK_Byelorussian_shortu","","",null,null],[17,"XK_Cyrillic_dzhe","","",null,null],[17,"XK_Serbian_dze","","",null,null],[17,"XK_numerosign","","",null,null],[17,"XK_Serbian_DJE","","",null,null],[17,"XK_Macedonia_GJE","","",null,null],[17,"XK_Cyrillic_IO","","",null,null],[17,"XK_Ukrainian_IE","","",null,null],[17,"XK_Ukranian_JE","","",null,null],[17,"XK_Macedonia_DSE","","",null,null],[17,"XK_Ukrainian_I","","",null,null],[17,"XK_Ukranian_I","","",null,null],[17,"XK_Ukrainian_YI","","",null,null],[17,"XK_Ukranian_YI","","",null,null],[17,"XK_Cyrillic_JE","","",null,null],[17,"XK_Serbian_JE","","",null,null],[17,"XK_Cyrillic_LJE","","",null,null],[17,"XK_Serbian_LJE","","",null,null],[17,"XK_Cyrillic_NJE","","",null,null],[17,"XK_Serbian_NJE","","",null,null],[17,"XK_Serbian_TSHE","","",null,null],[17,"XK_Macedonia_KJE","","",null,null],[17,"XK_Byelorussian_SHORTU","","",null,null],[17,"XK_Cyrillic_DZHE","","",null,null],[17,"XK_Serbian_DZE","","",null,null],[17,"XK_Cyrillic_yu","","",null,null],[17,"XK_Cyrillic_a","","",null,null],[17,"XK_Cyrillic_be","","",null,null],[17,"XK_Cyrillic_tse","","",null,null],[17,"XK_Cyrillic_de","","",null,null],[17,"XK_Cyrillic_ie","","",null,null],[17,"XK_Cyrillic_ef","","",null,null],[17,"XK_Cyrillic_ghe","","",null,null],[17,"XK_Cyrillic_ha","","",null,null],[17,"XK_Cyrillic_i","","",null,null],[17,"XK_Cyrillic_shorti","","",null,null],[17,"XK_Cyrillic_ka","","",null,null],[17,"XK_Cyrillic_el","","",null,null],[17,"XK_Cyrillic_em","","",null,null],[17,"XK_Cyrillic_en","","",null,null],[17,"XK_Cyrillic_o","","",null,null],[17,"XK_Cyrillic_pe","","",null,null],[17,"XK_Cyrillic_ya","","",null,null],[17,"XK_Cyrillic_er","","",null,null],[17,"XK_Cyrillic_es","","",null,null],[17,"XK_Cyrillic_te","","",null,null],[17,"XK_Cyrillic_u","","",null,null],[17,"XK_Cyrillic_zhe","","",null,null],[17,"XK_Cyrillic_ve","","",null,null],[17,"XK_Cyrillic_softsign","","",null,null],[17,"XK_Cyrillic_yeru","","",null,null],[17,"XK_Cyrillic_ze","","",null,null],[17,"XK_Cyrillic_sha","","",null,null],[17,"XK_Cyrillic_e","","",null,null],[17,"XK_Cyrillic_shcha","","",null,null],[17,"XK_Cyrillic_che","","",null,null],[17,"XK_Cyrillic_hardsign","","",null,null],[17,"XK_Cyrillic_YU","","",null,null],[17,"XK_Cyrillic_A","","",null,null],[17,"XK_Cyrillic_BE","","",null,null],[17,"XK_Cyrillic_TSE","","",null,null],[17,"XK_Cyrillic_DE","","",null,null],[17,"XK_Cyrillic_IE","","",null,null],[17,"XK_Cyrillic_EF","","",null,null],[17,"XK_Cyrillic_GHE","","",null,null],[17,"XK_Cyrillic_HA","","",null,null],[17,"XK_Cyrillic_I","","",null,null],[17,"XK_Cyrillic_SHORTI","","",null,null],[17,"XK_Cyrillic_KA","","",null,null],[17,"XK_Cyrillic_EL","","",null,null],[17,"XK_Cyrillic_EM","","",null,null],[17,"XK_Cyrillic_EN","","",null,null],[17,"XK_Cyrillic_O","","",null,null],[17,"XK_Cyrillic_PE","","",null,null],[17,"XK_Cyrillic_YA","","",null,null],[17,"XK_Cyrillic_ER","","",null,null],[17,"XK_Cyrillic_ES","","",null,null],[17,"XK_Cyrillic_TE","","",null,null],[17,"XK_Cyrillic_U","","",null,null],[17,"XK_Cyrillic_ZHE","","",null,null],[17,"XK_Cyrillic_VE","","",null,null],[17,"XK_Cyrillic_SOFTSIGN","","",null,null],[17,"XK_Cyrillic_YERU","","",null,null],[17,"XK_Cyrillic_ZE","","",null,null],[17,"XK_Cyrillic_SHA","","",null,null],[17,"XK_Cyrillic_E","","",null,null],[17,"XK_Cyrillic_SHCHA","","",null,null],[17,"XK_Cyrillic_CHE","","",null,null],[17,"XK_Cyrillic_HARDSIGN","","",null,null],[17,"XK_Greek_ALPHAaccent","","",null,null],[17,"XK_Greek_EPSILONaccent","","",null,null],[17,"XK_Greek_ETAaccent","","",null,null],[17,"XK_Greek_IOTAaccent","","",null,null],[17,"XK_Greek_IOTAdiaeresis","","",null,null],[17,"XK_Greek_OMICRONaccent","","",null,null],[17,"XK_Greek_UPSILONaccent","","",null,null],[17,"XK_Greek_UPSILONdieresis","","",null,null],[17,"XK_Greek_OMEGAaccent","","",null,null],[17,"XK_Greek_accentdieresis","","",null,null],[17,"XK_Greek_horizbar","","",null,null],[17,"XK_Greek_alphaaccent","","",null,null],[17,"XK_Greek_epsilonaccent","","",null,null],[17,"XK_Greek_etaaccent","","",null,null],[17,"XK_Greek_iotaaccent","","",null,null],[17,"XK_Greek_iotadieresis","","",null,null],[17,"XK_Greek_iotaaccentdieresis","","",null,null],[17,"XK_Greek_omicronaccent","","",null,null],[17,"XK_Greek_upsilonaccent","","",null,null],[17,"XK_Greek_upsilondieresis","","",null,null],[17,"XK_Greek_upsilonaccentdieresis","","",null,null],[17,"XK_Greek_omegaaccent","","",null,null],[17,"XK_Greek_ALPHA","","",null,null],[17,"XK_Greek_BETA","","",null,null],[17,"XK_Greek_GAMMA","","",null,null],[17,"XK_Greek_DELTA","","",null,null],[17,"XK_Greek_EPSILON","","",null,null],[17,"XK_Greek_ZETA","","",null,null],[17,"XK_Greek_ETA","","",null,null],[17,"XK_Greek_THETA","","",null,null],[17,"XK_Greek_IOTA","","",null,null],[17,"XK_Greek_KAPPA","","",null,null],[17,"XK_Greek_LAMDA","","",null,null],[17,"XK_Greek_LAMBDA","","",null,null],[17,"XK_Greek_MU","","",null,null],[17,"XK_Greek_NU","","",null,null],[17,"XK_Greek_XI","","",null,null],[17,"XK_Greek_OMICRON","","",null,null],[17,"XK_Greek_PI","","",null,null],[17,"XK_Greek_RHO","","",null,null],[17,"XK_Greek_SIGMA","","",null,null],[17,"XK_Greek_TAU","","",null,null],[17,"XK_Greek_UPSILON","","",null,null],[17,"XK_Greek_PHI","","",null,null],[17,"XK_Greek_CHI","","",null,null],[17,"XK_Greek_PSI","","",null,null],[17,"XK_Greek_OMEGA","","",null,null],[17,"XK_Greek_alpha","","",null,null],[17,"XK_Greek_beta","","",null,null],[17,"XK_Greek_gamma","","",null,null],[17,"XK_Greek_delta","","",null,null],[17,"XK_Greek_epsilon","","",null,null],[17,"XK_Greek_zeta","","",null,null],[17,"XK_Greek_eta","","",null,null],[17,"XK_Greek_theta","","",null,null],[17,"XK_Greek_iota","","",null,null],[17,"XK_Greek_kappa","","",null,null],[17,"XK_Greek_lamda","","",null,null],[17,"XK_Greek_lambda","","",null,null],[17,"XK_Greek_mu","","",null,null],[17,"XK_Greek_nu","","",null,null],[17,"XK_Greek_xi","","",null,null],[17,"XK_Greek_omicron","","",null,null],[17,"XK_Greek_pi","","",null,null],[17,"XK_Greek_rho","","",null,null],[17,"XK_Greek_sigma","","",null,null],[17,"XK_Greek_finalsmallsigma","","",null,null],[17,"XK_Greek_tau","","",null,null],[17,"XK_Greek_upsilon","","",null,null],[17,"XK_Greek_phi","","",null,null],[17,"XK_Greek_chi","","",null,null],[17,"XK_Greek_psi","","",null,null],[17,"XK_Greek_omega","","",null,null],[17,"XK_Greek_switch","","",null,null],[17,"XK_leftradical","","",null,null],[17,"XK_topleftradical","","",null,null],[17,"XK_horizconnector","","",null,null],[17,"XK_topintegral","","",null,null],[17,"XK_botintegral","","",null,null],[17,"XK_vertconnector","","",null,null],[17,"XK_topleftsqbracket","","",null,null],[17,"XK_botleftsqbracket","","",null,null],[17,"XK_toprightsqbracket","","",null,null],[17,"XK_botrightsqbracket","","",null,null],[17,"XK_topleftparens","","",null,null],[17,"XK_botleftparens","","",null,null],[17,"XK_toprightparens","","",null,null],[17,"XK_botrightparens","","",null,null],[17,"XK_leftmiddlecurlybrace","","",null,null],[17,"XK_rightmiddlecurlybrace","","",null,null],[17,"XK_topleftsummation","","",null,null],[17,"XK_botleftsummation","","",null,null],[17,"XK_topvertsummationconnector","","",null,null],[17,"XK_botvertsummationconnector","","",null,null],[17,"XK_toprightsummation","","",null,null],[17,"XK_botrightsummation","","",null,null],[17,"XK_rightmiddlesummation","","",null,null],[17,"XK_lessthanequal","","",null,null],[17,"XK_notequal","","",null,null],[17,"XK_greaterthanequal","","",null,null],[17,"XK_integral","","",null,null],[17,"XK_therefore","","",null,null],[17,"XK_variation","","",null,null],[17,"XK_infinity","","",null,null],[17,"XK_nabla","","",null,null],[17,"XK_approximate","","",null,null],[17,"XK_similarequal","","",null,null],[17,"XK_ifonlyif","","",null,null],[17,"XK_implies","","",null,null],[17,"XK_identical","","",null,null],[17,"XK_radical","","",null,null],[17,"XK_includedin","","",null,null],[17,"XK_includes","","",null,null],[17,"XK_intersection","","",null,null],[17,"XK_union","","",null,null],[17,"XK_logicaland","","",null,null],[17,"XK_logicalor","","",null,null],[17,"XK_partialderivative","","",null,null],[17,"XK_function","","",null,null],[17,"XK_leftarrow","","",null,null],[17,"XK_uparrow","","",null,null],[17,"XK_rightarrow","","",null,null],[17,"XK_downarrow","","",null,null],[17,"XK_blank","","",null,null],[17,"XK_soliddiamond","","",null,null],[17,"XK_checkerboard","","",null,null],[17,"XK_ht","","",null,null],[17,"XK_ff","","",null,null],[17,"XK_cr","","",null,null],[17,"XK_lf","","",null,null],[17,"XK_nl","","",null,null],[17,"XK_vt","","",null,null],[17,"XK_lowrightcorner","","",null,null],[17,"XK_uprightcorner","","",null,null],[17,"XK_upleftcorner","","",null,null],[17,"XK_lowleftcorner","","",null,null],[17,"XK_crossinglines","","",null,null],[17,"XK_horizlinescan1","","",null,null],[17,"XK_horizlinescan3","","",null,null],[17,"XK_horizlinescan5","","",null,null],[17,"XK_horizlinescan7","","",null,null],[17,"XK_horizlinescan9","","",null,null],[17,"XK_leftt","","",null,null],[17,"XK_rightt","","",null,null],[17,"XK_bott","","",null,null],[17,"XK_topt","","",null,null],[17,"XK_vertbar","","",null,null],[17,"XK_emspace","","",null,null],[17,"XK_enspace","","",null,null],[17,"XK_em3space","","",null,null],[17,"XK_em4space","","",null,null],[17,"XK_digitspace","","",null,null],[17,"XK_punctspace","","",null,null],[17,"XK_thinspace","","",null,null],[17,"XK_hairspace","","",null,null],[17,"XK_emdash","","",null,null],[17,"XK_endash","","",null,null],[17,"XK_signifblank","","",null,null],[17,"XK_ellipsis","","",null,null],[17,"XK_doubbaselinedot","","",null,null],[17,"XK_onethird","","",null,null],[17,"XK_twothirds","","",null,null],[17,"XK_onefifth","","",null,null],[17,"XK_twofifths","","",null,null],[17,"XK_threefifths","","",null,null],[17,"XK_fourfifths","","",null,null],[17,"XK_onesixth","","",null,null],[17,"XK_fivesixths","","",null,null],[17,"XK_careof","","",null,null],[17,"XK_figdash","","",null,null],[17,"XK_leftanglebracket","","",null,null],[17,"XK_decimalpoint","","",null,null],[17,"XK_rightanglebracket","","",null,null],[17,"XK_marker","","",null,null],[17,"XK_oneeighth","","",null,null],[17,"XK_threeeighths","","",null,null],[17,"XK_fiveeighths","","",null,null],[17,"XK_seveneighths","","",null,null],[17,"XK_trademark","","",null,null],[17,"XK_signaturemark","","",null,null],[17,"XK_trademarkincircle","","",null,null],[17,"XK_leftopentriangle","","",null,null],[17,"XK_rightopentriangle","","",null,null],[17,"XK_emopencircle","","",null,null],[17,"XK_emopenrectangle","","",null,null],[17,"XK_leftsinglequotemark","","",null,null],[17,"XK_rightsinglequotemark","","",null,null],[17,"XK_leftdoublequotemark","","",null,null],[17,"XK_rightdoublequotemark","","",null,null],[17,"XK_prescription","","",null,null],[17,"XK_minutes","","",null,null],[17,"XK_seconds","","",null,null],[17,"XK_latincross","","",null,null],[17,"XK_hexagram","","",null,null],[17,"XK_filledrectbullet","","",null,null],[17,"XK_filledlefttribullet","","",null,null],[17,"XK_filledrighttribullet","","",null,null],[17,"XK_emfilledcircle","","",null,null],[17,"XK_emfilledrect","","",null,null],[17,"XK_enopencircbullet","","",null,null],[17,"XK_enopensquarebullet","","",null,null],[17,"XK_openrectbullet","","",null,null],[17,"XK_opentribulletup","","",null,null],[17,"XK_opentribulletdown","","",null,null],[17,"XK_openstar","","",null,null],[17,"XK_enfilledcircbullet","","",null,null],[17,"XK_enfilledsqbullet","","",null,null],[17,"XK_filledtribulletup","","",null,null],[17,"XK_filledtribulletdown","","",null,null],[17,"XK_leftpointer","","",null,null],[17,"XK_rightpointer","","",null,null],[17,"XK_club","","",null,null],[17,"XK_diamond","","",null,null],[17,"XK_heart","","",null,null],[17,"XK_maltesecross","","",null,null],[17,"XK_dagger","","",null,null],[17,"XK_doubledagger","","",null,null],[17,"XK_checkmark","","",null,null],[17,"XK_ballotcross","","",null,null],[17,"XK_musicalsharp","","",null,null],[17,"XK_musicalflat","","",null,null],[17,"XK_malesymbol","","",null,null],[17,"XK_femalesymbol","","",null,null],[17,"XK_telephone","","",null,null],[17,"XK_telephonerecorder","","",null,null],[17,"XK_phonographcopyright","","",null,null],[17,"XK_caret","","",null,null],[17,"XK_singlelowquotemark","","",null,null],[17,"XK_doublelowquotemark","","",null,null],[17,"XK_cursor","","",null,null],[17,"XK_leftcaret","","",null,null],[17,"XK_rightcaret","","",null,null],[17,"XK_downcaret","","",null,null],[17,"XK_upcaret","","",null,null],[17,"XK_overbar","","",null,null],[17,"XK_downtack","","",null,null],[17,"XK_upshoe","","",null,null],[17,"XK_downstile","","",null,null],[17,"XK_underbar","","",null,null],[17,"XK_jot","","",null,null],[17,"XK_quad","","",null,null],[17,"XK_uptack","","",null,null],[17,"XK_circle","","",null,null],[17,"XK_upstile","","",null,null],[17,"XK_downshoe","","",null,null],[17,"XK_rightshoe","","",null,null],[17,"XK_leftshoe","","",null,null],[17,"XK_lefttack","","",null,null],[17,"XK_righttack","","",null,null],[17,"XK_hebrew_doublelowline","","",null,null],[17,"XK_hebrew_aleph","","",null,null],[17,"XK_hebrew_bet","","",null,null],[17,"XK_hebrew_beth","","",null,null],[17,"XK_hebrew_gimel","","",null,null],[17,"XK_hebrew_gimmel","","",null,null],[17,"XK_hebrew_dalet","","",null,null],[17,"XK_hebrew_daleth","","",null,null],[17,"XK_hebrew_he","","",null,null],[17,"XK_hebrew_waw","","",null,null],[17,"XK_hebrew_zain","","",null,null],[17,"XK_hebrew_zayin","","",null,null],[17,"XK_hebrew_chet","","",null,null],[17,"XK_hebrew_het","","",null,null],[17,"XK_hebrew_tet","","",null,null],[17,"XK_hebrew_teth","","",null,null],[17,"XK_hebrew_yod","","",null,null],[17,"XK_hebrew_finalkaph","","",null,null],[17,"XK_hebrew_kaph","","",null,null],[17,"XK_hebrew_lamed","","",null,null],[17,"XK_hebrew_finalmem","","",null,null],[17,"XK_hebrew_mem","","",null,null],[17,"XK_hebrew_finalnun","","",null,null],[17,"XK_hebrew_nun","","",null,null],[17,"XK_hebrew_samech","","",null,null],[17,"XK_hebrew_samekh","","",null,null],[17,"XK_hebrew_ayin","","",null,null],[17,"XK_hebrew_finalpe","","",null,null],[17,"XK_hebrew_pe","","",null,null],[17,"XK_hebrew_finalzade","","",null,null],[17,"XK_hebrew_finalzadi","","",null,null],[17,"XK_hebrew_zade","","",null,null],[17,"XK_hebrew_zadi","","",null,null],[17,"XK_hebrew_qoph","","",null,null],[17,"XK_hebrew_kuf","","",null,null],[17,"XK_hebrew_resh","","",null,null],[17,"XK_hebrew_shin","","",null,null],[17,"XK_hebrew_taw","","",null,null],[17,"XK_hebrew_taf","","",null,null],[17,"XK_Hebrew_switch","","",null,null],[0,"xcursor","x11_dl","",null,null],[3,"Xcursor","x11_dl::xcursor","",null,null],[12,"XcursorAnimateCreate","","",3,null],[12,"XcursorAnimateDestroy","","",3,null],[12,"XcursorAnimateNext","","",3,null],[12,"XcursorCommentCreate","","",3,null],[12,"XcursorCommentDestroy","","",3,null],[12,"XcursorCommentsCreate","","",3,null],[12,"XcursorCommentsDestroy","","",3,null],[12,"XcursorCursorsCreate","","",3,null],[12,"XcursorCursorsDestroy","","",3,null],[12,"XcursorFileLoad","","",3,null],[12,"XcursorFileLoadAllImages","","",3,null],[12,"XcursorFileLoadImage","","",3,null],[12,"XcursorFileLoadImages","","",3,null],[12,"XcursorFilenameLoad","","",3,null],[12,"XcursorFilenameLoadAllImages","","",3,null],[12,"XcursorFilenameLoadCursor","","",3,null],[12,"XcursorFilenameLoadCursors","","",3,null],[12,"XcursorFilenameLoadImage","","",3,null],[12,"XcursorFilenameLoadImages","","",3,null],[12,"XcursorFilenameSave","","",3,null],[12,"XcursorFilenameSaveImages","","",3,null],[12,"XcursorFileSave","","",3,null],[12,"XcursorFileSaveImages","","",3,null],[12,"XcursorGetDefaultSize","","",3,null],[12,"XcursorGetTheme","","",3,null],[12,"XcursorGetThemeCore","","",3,null],[12,"XcursorImageCreate","","",3,null],[12,"XcursorImageDestroy","","",3,null],[12,"XcursorImageHash","","",3,null],[12,"XcursorImageLoadCursor","","",3,null],[12,"XcursorImagesCreate","","",3,null],[12,"XcursorImagesDestroy","","",3,null],[12,"XcursorImagesLoadCursor","","",3,null],[12,"XcursorImagesLoadCursors","","",3,null],[12,"XcursorImagesSetName","","",3,null],[12,"XcursorLibraryLoadCursor","","",3,null],[12,"XcursorLibraryLoadCursors","","",3,null],[12,"XcursorLibraryLoadImage","","",3,null],[12,"XcursorLibraryLoadImages","","",3,null],[12,"XcursorLibraryPath","","",3,null],[12,"XcursorLibraryShape","","",3,null],[12,"XcursorNoticeCreateBitmap","","",3,null],[12,"XcursorNoticePutBitmap","","",3,null],[12,"XcursorSetDefaultSize","","",3,null],[12,"XcursorSetTheme","","",3,null],[12,"XcursorSetThemeCore","","",3,null],[12,"XcursorShapeLoadCursor","","",3,null],[12,"XcursorShapeLoadCursors","","",3,null],[12,"XcursorShapeLoadImage","","",3,null],[12,"XcursorShapeLoadImages","","",3,null],[12,"XcursorSupportsAnim","","",3,null],[12,"XcursorSupportsARGB","","",3,null],[12,"XcursorTryShapeBitmapCursor","","",3,null],[12,"XcursorTryShapeCursor","","",3,null],[12,"XcursorXcFileLoad","","",3,null],[12,"XcursorXcFileLoadAllImages","","",3,null],[12,"XcursorXcFileLoadImage","","",3,null],[12,"XcursorXcFileLoadImages","","",3,null],[12,"XcursorXcFileSave","","",3,null],[3,"_XcursorAnimate","","",null,null],[12,"cursors","","",4,null],[12,"sequence","","",4,null],[3,"_XcursorChunkHeader","","",null,null],[12,"header","","",5,null],[12,"type_","","",5,null],[12,"subtype","","",5,null],[12,"version","","",5,null],[3,"_XcursorComment","","",null,null],[12,"version","","",6,null],[12,"comment_type","","",6,null],[12,"comment","","",6,null],[3,"_XcursorComments","","",null,null],[12,"ncomment","","",7,null],[12,"comments","","",7,null],[3,"_XcursorCursors","","",null,null],[12,"dpy","","",8,null],[12,"ref_","","",8,null],[12,"ncursor","","",8,null],[12,"cursors","","",8,null],[3,"_XcursorFile","","",null,null],[12,"closure","","",9,null],[12,"read","","",9,null],[12,"write","","",9,null],[12,"seek","","",9,null],[3,"_XcursorFileHeader","","",null,null],[12,"magic","","",10,null],[12,"header","","",10,null],[12,"version","","",10,null],[12,"ntoc","","",10,null],[12,"tocs","","",10,null],[3,"_XcursorFileToc","","",null,null],[12,"type_","","",11,null],[12,"subtype","","",11,null],[12,"position","","",11,null],[3,"_XcursorImage","","",null,null],[12,"version","","",12,null],[12,"size","","",12,null],[12,"width","","",12,null],[12,"height","","",12,null],[12,"xhot","","",12,null],[12,"yhot","","",12,null],[12,"delay","","",12,null],[12,"pixels","","",12,null],[3,"_XcursorImages","","",null,null],[12,"nimage","","",13,null],[12,"images","","",13,null],[12,"name","","",13,null],[6,"XcursorBool","","",null,null],[6,"XcursorDim","","",null,null],[6,"XcursorPixel","","",null,null],[6,"XcursorUInt","","",null,null],[6,"XcursorAnimate","","",null,null],[6,"XcursorChunkHeader","","",null,null],[6,"XcursorComment","","",null,null],[6,"XcursorComments","","",null,null],[6,"XcursorCursors","","",null,null],[6,"XcursorFile","","",null,null],[6,"XcursorFileHeader","","",null,null],[6,"XcursorFileToc","","",null,null],[6,"XcursorImage","","",null,null],[6,"XcursorImages","","",null,null],[11,"open","","",3,{"inputs":[{"name":"xcursor"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"_xcursoranimate"}],"output":{"name":"_xcursoranimate"}}],[11,"clone","","",5,{"inputs":[{"name":"_xcursorchunkheader"}],"output":{"name":"_xcursorchunkheader"}}],[11,"clone","","",6,{"inputs":[{"name":"_xcursorcomment"}],"output":{"name":"_xcursorcomment"}}],[11,"clone","","",7,{"inputs":[{"name":"_xcursorcomments"}],"output":{"name":"_xcursorcomments"}}],[11,"clone","","",8,{"inputs":[{"name":"_xcursorcursors"}],"output":{"name":"_xcursorcursors"}}],[11,"clone","","",9,{"inputs":[{"name":"_xcursorfile"}],"output":{"name":"_xcursorfile"}}],[11,"clone","","",10,{"inputs":[{"name":"_xcursorfileheader"}],"output":{"name":"_xcursorfileheader"}}],[11,"clone","","",11,{"inputs":[{"name":"_xcursorfiletoc"}],"output":{"name":"_xcursorfiletoc"}}],[11,"clone","","",12,{"inputs":[{"name":"_xcursorimage"}],"output":{"name":"_xcursorimage"}}],[11,"clone","","",13,{"inputs":[{"name":"_xcursorimages"}],"output":{"name":"_xcursorimages"}}],[0,"xf86vmode","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xf86vmode","",null,null],[12,"XF86VidModeAddModeLine","","",14,null],[12,"XF86VidModeDeleteModeLine","","",14,null],[12,"XF86VidModeGetAllModeLines","","",14,null],[12,"XF86VidModeGetDotClocks","","",14,null],[12,"XF86VidModeGetGamma","","",14,null],[12,"XF86VidModeGetGammaRamp","","",14,null],[12,"XF86VidModeGetGammaRampSize","","",14,null],[12,"XF86VidModeGetModeLine","","",14,null],[12,"XF86VidModeGetMonitor","","",14,null],[12,"XF86VidModeGetPermissions","","",14,null],[12,"XF86VidModeGetViewPort","","",14,null],[12,"XF86VidModeLockModeSwitch","","",14,null],[12,"XF86VidModeModModeLine","","",14,null],[12,"XF86VidModeQueryExtension","","",14,null],[12,"XF86VidModeQueryVersion","","",14,null],[12,"XF86VidModeSetClientVersion","","",14,null],[12,"XF86VidModeSetGamma","","",14,null],[12,"XF86VidModeSetGammaRamp","","",14,null],[12,"XF86VidModeSetViewPort","","",14,null],[12,"XF86VidModeSwitchMode","","",14,null],[12,"XF86VidModeSwitchToMode","","",14,null],[12,"XF86VidModeValidateModeLine","","",14,null],[3,"XF86VidModeGamma","","",null,null],[12,"red","","",15,null],[12,"green","","",15,null],[12,"blue","","",15,null],[3,"XF86VidModeModeInfo","","",null,null],[12,"dotclock","","",16,null],[12,"hdisplay","","",16,null],[12,"hsyncstart","","",16,null],[12,"hsyncend","","",16,null],[12,"htotal","","",16,null],[12,"hskew","","",16,null],[12,"vdisplay","","",16,null],[12,"vsyncstart","","",16,null],[12,"vsyncend","","",16,null],[12,"vtotal","","",16,null],[12,"flags","","",16,null],[12,"privsize","","",16,null],[12,"private","","",16,null],[3,"XF86VidModeModeLine","","",null,null],[12,"hdisplay","","",17,null],[12,"hsyncstart","","",17,null],[12,"hsyncend","","",17,null],[12,"htotal","","",17,null],[12,"hskew","","",17,null],[12,"vdisplay","","",17,null],[12,"vsyncstart","","",17,null],[12,"vsyncend","","",17,null],[12,"vtotal","","",17,null],[12,"flags","","",17,null],[12,"privsize","","",17,null],[12,"private","","",17,null],[3,"XF86VidModeMonitor","","",null,null],[12,"vendor","","",18,null],[12,"model","","",18,null],[12,"EMPTY","","",18,null],[12,"nhsync","","",18,null],[12,"hsync","","",18,null],[12,"nvsync","","",18,null],[12,"vsync","","",18,null],[3,"XF86VidModeNotifyEvent","","",null,null],[12,"type_","","",19,null],[12,"serial","","",19,null],[12,"send_event","","",19,null],[12,"display","","",19,null],[12,"root","","",19,null],[12,"state","","",19,null],[12,"kind","","",19,null],[12,"forced","","",19,null],[12,"time","","",19,null],[3,"XF86VidModeSyncRange","","",null,null],[12,"hi","","",20,null],[12,"lo","","",20,null],[11,"open","","",14,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"xf86vidmodegamma"}],"output":{"name":"xf86vidmodegamma"}}],[11,"eq","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"}],"output":{"name":"xf86vidmodemodeinfo"}}],[11,"clone","","",17,{"inputs":[{"name":"xf86vidmodemodeline"}],"output":{"name":"xf86vidmodemodeline"}}],[11,"clone","","",18,{"inputs":[{"name":"xf86vidmodemonitor"}],"output":{"name":"xf86vidmodemonitor"}}],[11,"clone","","",19,{"inputs":[{"name":"xf86vidmodenotifyevent"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"clone","","",20,{"inputs":[{"name":"xf86vidmodesyncrange"}],"output":{"name":"xf86vidmodesyncrange"}}],[0,"xfixes","x11_dl","",null,null],[6,"PointerBarrier","x11_dl::xfixes","",null,null],[0,"xinerama","x11_dl","",null,null],[3,"Xlib","x11_dl::xinerama","",null,null],[12,"XineramaIsActive","","",21,null],[12,"XineramaQueryExtension","","",21,null],[12,"XineramaQueryScreens","","",21,null],[12,"XineramaQueryVersion","","",21,null],[12,"XPanoramiXAllocInfo","","",21,null],[12,"XPanoramiXGetScreenCount","","",21,null],[12,"XPanoramiXGetScreenSize","","",21,null],[12,"XPanoramiXGetState","","",21,null],[12,"XPanoramiXQueryExtension","","",21,null],[12,"XPanoramiXQueryVersion","","",21,null],[3,"XineramaScreenInfo","","",null,null],[12,"screen_number","","",22,null],[12,"x_org","","",22,null],[12,"y_org","","",22,null],[12,"width","","",22,null],[12,"height","","",22,null],[3,"XPanoramiXInfo","","",null,null],[12,"window","","",23,null],[12,"screen","","",23,null],[12,"State","","",23,null],[12,"width","","",23,null],[12,"height","","",23,null],[12,"ScreenCount","","",23,null],[12,"eventMask","","",23,null],[11,"open","","",21,{"inputs":[{"name":"xlib"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"xineramascreeninfo"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"xineramascreeninfo"},{"name":"xineramascreeninfo"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"xineramascreeninfo"}],"output":{"name":"xineramascreeninfo"}}],[11,"eq","","",23,{"inputs":[{"name":"xpanoramixinfo"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"xpanoramixinfo"},{"name":"xpanoramixinfo"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"xpanoramixinfo"}],"output":{"name":"xpanoramixinfo"}}],[0,"xinput","x11_dl","",null,null],[3,"XInput","x11_dl::xinput","",null,null],[12,"XAllowDeviceEvents","","",24,null],[12,"XChangeDeviceControl","","",24,null],[12,"XChangeDeviceDontPropagateList","","",24,null],[12,"XChangeDeviceKeyMapping","","",24,null],[12,"XChangeDeviceProperty","","",24,null],[12,"XChangeFeedbackControl","","",24,null],[12,"XChangeKeyboardDevice","","",24,null],[12,"XChangePointerDevice","","",24,null],[12,"XCloseDevice","","",24,null],[12,"XDeleteDeviceProperty","","",24,null],[12,"XDeviceBell","","",24,null],[12,"XFreeDeviceControl","","",24,null],[12,"XFreeDeviceList","","",24,null],[12,"XFreeDeviceMotionEvents","","",24,null],[12,"XFreeDeviceState","","",24,null],[12,"XFreeFeedbackList","","",24,null],[12,"XGetDeviceButtonMapping","","",24,null],[12,"XGetDeviceControl","","",24,null],[12,"XGetDeviceDontPropagateList","","",24,null],[12,"XGetDeviceFocus","","",24,null],[12,"XGetDeviceKeyMapping","","",24,null],[12,"XGetDeviceModifierMapping","","",24,null],[12,"XGetDeviceMotionEvents","","",24,null],[12,"XGetDeviceProperty","","",24,null],[12,"XGetExtensionVersion","","",24,null],[12,"XGetFeedbackControl","","",24,null],[12,"XGetSelectedExtensionEvents","","",24,null],[12,"XGrabDevice","","",24,null],[12,"XGrabDeviceButton","","",24,null],[12,"XGrabDeviceKey","","",24,null],[12,"XListDeviceProperties","","",24,null],[12,"XListInputDevices","","",24,null],[12,"XOpenDevice","","",24,null],[12,"XQueryDeviceState","","",24,null],[12,"XSelectExtensionEvent","","",24,null],[12,"XSendExtensionEvent","","",24,null],[12,"XSetDeviceButtonMapping","","",24,null],[12,"XSetDeviceFocus","","",24,null],[12,"XSetDeviceMode","","",24,null],[12,"XSetDeviceModifierMapping","","",24,null],[12,"XSetDeviceValuators","","",24,null],[12,"XUngrabDevice","","",24,null],[12,"XUngrabDeviceButton","","",24,null],[12,"XUngrabDeviceKey","","",24,null],[3,"XDevice","","",null,null],[12,"device_id","","",25,null],[12,"num_classes","","",25,null],[12,"classes","","",25,null],[3,"XDeviceControl","","",null,null],[12,"control","","",26,null],[12,"length","","",26,null],[3,"XDeviceInfo","","",null,null],[12,"id","","",27,null],[12,"type_","","",27,null],[12,"name","","",27,null],[12,"num_classes","","",27,null],[12,"use_","","",27,null],[12,"inputclassinfo","","",27,null],[3,"XDeviceState","","",null,null],[12,"device_id","","",28,null],[12,"num_classes","","",28,null],[12,"data","","",28,null],[3,"XDeviceTimeCoord","","",null,null],[12,"time","","",29,null],[12,"data","","",29,null],[3,"XExtensionVersion","","",null,null],[12,"present","","",30,null],[12,"major_version","","",30,null],[12,"minor_version","","",30,null],[3,"XFeedbackControl","","",null,null],[12,"class","","",31,null],[12,"length","","",31,null],[12,"id","","",31,null],[3,"XFeedbackState","","",null,null],[12,"class","","",32,null],[12,"length","","",32,null],[12,"id","","",32,null],[3,"XInputClass","","",null,null],[12,"class","","",33,null],[12,"length","","",33,null],[3,"XInputClassInfo","","",null,null],[12,"input_class","","",34,null],[12,"event_type_base","","",34,null],[4,"_XAnyClassinfo","","",null,null],[6,"XAnyClassPtr","","",null,null],[11,"open","","",24,{"inputs":[{"name":"xinput"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"xdevice"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"xdevice"},{"name":"xdevice"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"xdevice"}],"output":{"name":"xdevice"}}],[11,"eq","","",26,{"inputs":[{"name":"xdevicecontrol"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"xdevicecontrol"},{"name":"xdevicecontrol"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"xdevicecontrol"}],"output":{"name":"xdevicecontrol"}}],[11,"eq","","",27,{"inputs":[{"name":"xdeviceinfo"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"xdeviceinfo"},{"name":"xdeviceinfo"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"xdeviceinfo"}],"output":{"name":"xdeviceinfo"}}],[11,"eq","","",28,{"inputs":[{"name":"xdevicestate"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"xdevicestate"},{"name":"xdevicestate"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"xdevicestate"}],"output":{"name":"xdevicestate"}}],[11,"eq","","",29,{"inputs":[{"name":"xdevicetimecoord"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"xdevicetimecoord"},{"name":"xdevicetimecoord"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"xdevicetimecoord"}],"output":{"name":"xdevicetimecoord"}}],[11,"eq","","",30,{"inputs":[{"name":"xextensionversion"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"xextensionversion"},{"name":"xextensionversion"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"xextensionversion"}],"output":{"name":"xextensionversion"}}],[11,"eq","","",31,{"inputs":[{"name":"xfeedbackcontrol"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"xfeedbackcontrol"},{"name":"xfeedbackcontrol"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"xfeedbackcontrol"}],"output":{"name":"xfeedbackcontrol"}}],[11,"eq","","",32,{"inputs":[{"name":"xfeedbackstate"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"xfeedbackstate"},{"name":"xfeedbackstate"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"xfeedbackstate"}],"output":{"name":"xfeedbackstate"}}],[11,"eq","","",33,{"inputs":[{"name":"xinputclass"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"xinputclass"},{"name":"xinputclass"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"xinputclass"}],"output":{"name":"xinputclass"}}],[11,"eq","","",34,{"inputs":[{"name":"xinputclassinfo"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"xinputclassinfo"},{"name":"xinputclassinfo"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"xinputclassinfo"}],"output":{"name":"xinputclassinfo"}}],[0,"xinput2","x11_dl","",null,null],[3,"XInput2","x11_dl::xinput2","",null,null],[12,"XIAllowEvents","","",35,null],[12,"XIAllowTouchEvents","","",35,null],[12,"XIBarrierReleasePointer","","",35,null],[12,"XIBarrierReleasePointers","","",35,null],[12,"XIChangeHierarchy","","",35,null],[12,"XIChangeProperty","","",35,null],[12,"XIDefineCursor","","",35,null],[12,"XIDeleteProperty","","",35,null],[12,"XIFreeDeviceInfo","","",35,null],[12,"XIGetClientPointer","","",35,null],[12,"XIGetFocus","","",35,null],[12,"XIGetProperty","","",35,null],[12,"XIGetSelectedEvents","","",35,null],[12,"XIGrabButton","","",35,null],[12,"XIGrabDevice","","",35,null],[12,"XIGrabEnter","","",35,null],[12,"XIGrabFocusIn","","",35,null],[12,"XIGrabKeycode","","",35,null],[12,"XIGrabTouchBegin","","",35,null],[12,"XIListProperties","","",35,null],[12,"XIQueryDevice","","",35,null],[12,"XIQueryPointer","","",35,null],[12,"XIQueryVersion","","",35,null],[12,"XISelectEvents","","",35,null],[12,"XISetClientPointer","","",35,null],[12,"XISetFocus","","",35,null],[12,"XIUndefineCursor","","",35,null],[12,"XIUngrabButton","","",35,null],[12,"XIUngrabDevice","","",35,null],[12,"XIUngrabEnter","","",35,null],[12,"XIUngrabFocusIn","","",35,null],[12,"XIUngrabKeycode","","",35,null],[12,"XIUngrabTouchBegin","","",35,null],[12,"XIWarpPointer","","",35,null],[3,"Struct_Unnamed1","","",null,null],[12,"_type","","",36,null],[12,"name","","",36,null],[12,"send_core","","",36,null],[12,"enable","","",36,null],[3,"Struct_Unnamed2","","",null,null],[12,"_type","","",37,null],[12,"deviceid","","",37,null],[12,"return_mode","","",37,null],[12,"return_pointer","","",37,null],[12,"return_keyboard","","",37,null],[3,"Struct_Unnamed3","","",null,null],[12,"_type","","",38,null],[12,"deviceid","","",38,null],[12,"new_master","","",38,null],[3,"Struct_Unnamed4","","",null,null],[12,"_type","","",39,null],[12,"deviceid","","",39,null],[3,"Union_Unnamed5","","",null,null],[12,"_bindgen_data_","","",40,null],[3,"Struct_Unnamed6","","",null,null],[12,"base","","",41,null],[12,"latched","","",41,null],[12,"locked","","",41,null],[12,"effective","","",41,null],[3,"Struct_Unnamed7","","",null,null],[12,"mask_len","","",42,null],[12,"mask","","",42,null],[3,"Struct_Unnamed8","","",null,null],[12,"mask_len","","",43,null],[12,"mask","","",43,null],[12,"values","","",43,null],[3,"Struct_Unnamed9","","",null,null],[12,"deviceid","","",44,null],[12,"mask_len","","",44,null],[12,"mask","","",44,null],[3,"Struct_Unnamed10","","",null,null],[12,"_type","","",45,null],[12,"sourceid","","",45,null],[3,"Struct_Unnamed11","","",null,null],[12,"_type","","",46,null],[12,"sourceid","","",46,null],[12,"num_buttons","","",46,null],[12,"labels","","",46,null],[12,"state","","",46,null],[3,"Struct_Unnamed12","","",null,null],[12,"_type","","",47,null],[12,"sourceid","","",47,null],[12,"num_keycodes","","",47,null],[12,"keycodes","","",47,null],[3,"Struct_Unnamed13","","",null,null],[12,"_type","","",48,null],[12,"sourceid","","",48,null],[12,"number","","",48,null],[12,"label","","",48,null],[12,"min","","",48,null],[12,"max","","",48,null],[12,"value","","",48,null],[12,"resolution","","",48,null],[12,"mode","","",48,null],[3,"Struct_Unnamed14","","",null,null],[12,"_type","","",49,null],[12,"sourceid","","",49,null],[12,"number","","",49,null],[12,"scroll_type","","",49,null],[12,"increment","","",49,null],[12,"flags","","",49,null],[3,"Struct_Unnamed15","","",null,null],[12,"_type","","",50,null],[12,"sourceid","","",50,null],[12,"mode","","",50,null],[12,"num_touches","","",50,null],[3,"Struct_Unnamed16","","",null,null],[12,"deviceid","","",51,null],[12,"name","","",51,null],[12,"_use","","",51,null],[12,"attachment","","",51,null],[12,"enabled","","",51,null],[12,"num_classes","","",51,null],[12,"classes","","",51,null],[3,"Struct_Unnamed17","","",null,null],[12,"modifiers","","",52,null],[12,"status","","",52,null],[3,"Struct_Unnamed18","","",null,null],[12,"deviceid","","",53,null],[12,"barrier","","",53,null],[12,"eventid","","",53,null],[3,"Struct_Unnamed19","","",null,null],[12,"_type","","",54,null],[12,"serial","","",54,null],[12,"send_event","","",54,null],[12,"display","","",54,null],[12,"extension","","",54,null],[12,"evtype","","",54,null],[12,"time","","",54,null],[3,"Struct_Unnamed20","","",null,null],[12,"deviceid","","",55,null],[12,"attachment","","",55,null],[12,"_use","","",55,null],[12,"enabled","","",55,null],[12,"flags","","",55,null],[3,"Struct_Unnamed21","","",null,null],[12,"_type","","",56,null],[12,"serial","","",56,null],[12,"send_event","","",56,null],[12,"display","","",56,null],[12,"extension","","",56,null],[12,"evtype","","",56,null],[12,"time","","",56,null],[12,"flags","","",56,null],[12,"num_info","","",56,null],[12,"info","","",56,null],[3,"Struct_Unnamed22","","",null,null],[12,"_type","","",57,null],[12,"serial","","",57,null],[12,"send_event","","",57,null],[12,"display","","",57,null],[12,"extension","","",57,null],[12,"evtype","","",57,null],[12,"time","","",57,null],[12,"deviceid","","",57,null],[12,"sourceid","","",57,null],[12,"reason","","",57,null],[12,"num_classes","","",57,null],[12,"classes","","",57,null],[3,"Struct_Unnamed23","","",null,null],[12,"_type","","",58,null],[12,"serial","","",58,null],[12,"send_event","","",58,null],[12,"display","","",58,null],[12,"extension","","",58,null],[12,"evtype","","",58,null],[12,"time","","",58,null],[12,"deviceid","","",58,null],[12,"sourceid","","",58,null],[12,"detail","","",58,null],[12,"root","","",58,null],[12,"event","","",58,null],[12,"child","","",58,null],[12,"root_x","","",58,null],[12,"root_y","","",58,null],[12,"event_x","","",58,null],[12,"event_y","","",58,null],[12,"flags","","",58,null],[12,"buttons","","",58,null],[12,"valuators","","",58,null],[12,"mods","","",58,null],[12,"group","","",58,null],[3,"Struct_Unnamed24","","",null,null],[12,"_type","","",59,null],[12,"serial","","",59,null],[12,"send_event","","",59,null],[12,"display","","",59,null],[12,"extension","","",59,null],[12,"evtype","","",59,null],[12,"time","","",59,null],[12,"deviceid","","",59,null],[12,"sourceid","","",59,null],[12,"detail","","",59,null],[12,"flags","","",59,null],[12,"valuators","","",59,null],[12,"raw_values","","",59,null],[3,"Struct_Unnamed25","","",null,null],[12,"_type","","",60,null],[12,"serial","","",60,null],[12,"send_event","","",60,null],[12,"display","","",60,null],[12,"extension","","",60,null],[12,"evtype","","",60,null],[12,"time","","",60,null],[12,"deviceid","","",60,null],[12,"sourceid","","",60,null],[12,"detail","","",60,null],[12,"root","","",60,null],[12,"event","","",60,null],[12,"child","","",60,null],[12,"root_x","","",60,null],[12,"root_y","","",60,null],[12,"event_x","","",60,null],[12,"event_y","","",60,null],[12,"mode","","",60,null],[12,"focus","","",60,null],[12,"same_screen","","",60,null],[12,"buttons","","",60,null],[12,"mods","","",60,null],[12,"group","","",60,null],[3,"Struct_Unnamed26","","",null,null],[12,"_type","","",61,null],[12,"serial","","",61,null],[12,"send_event","","",61,null],[12,"display","","",61,null],[12,"extension","","",61,null],[12,"evtype","","",61,null],[12,"time","","",61,null],[12,"deviceid","","",61,null],[12,"property","","",61,null],[12,"what","","",61,null],[3,"Struct_Unnamed27","","",null,null],[12,"_type","","",62,null],[12,"serial","","",62,null],[12,"send_event","","",62,null],[12,"display","","",62,null],[12,"extension","","",62,null],[12,"evtype","","",62,null],[12,"time","","",62,null],[12,"deviceid","","",62,null],[12,"sourceid","","",62,null],[12,"touchid","","",62,null],[12,"root","","",62,null],[12,"event","","",62,null],[12,"child","","",62,null],[12,"flags","","",62,null],[3,"Struct_Unnamed28","","",null,null],[12,"_type","","",63,null],[12,"serial","","",63,null],[12,"send_event","","",63,null],[12,"display","","",63,null],[12,"extension","","",63,null],[12,"evtype","","",63,null],[12,"time","","",63,null],[12,"deviceid","","",63,null],[12,"sourceid","","",63,null],[12,"event","","",63,null],[12,"root","","",63,null],[12,"root_x","","",63,null],[12,"root_y","","",63,null],[12,"dx","","",63,null],[12,"dy","","",63,null],[12,"dtime","","",63,null],[12,"flags","","",63,null],[12,"barrier","","",63,null],[12,"eventid","","",63,null],[5,"XISetMask","","",null,null],[5,"XIClearMask","","",null,null],[5,"XIMaskIsSet","","",null,null],[6,"XIAddMasterInfo","","",null,null],[6,"XIRemoveMasterInfo","","",null,null],[6,"XIAttachSlaveInfo","","",null,null],[6,"XIDetachSlaveInfo","","",null,null],[6,"XIAnyHierarchyChangeInfo","","",null,null],[6,"XIModifierState","","",null,null],[6,"XIGroupState","","",null,null],[6,"XIButtonState","","",null,null],[6,"XIValuatorState","","",null,null],[6,"XIEventMask","","",null,null],[6,"XIAnyClassInfo","","",null,null],[6,"XIButtonClassInfo","","",null,null],[6,"XIKeyClassInfo","","",null,null],[6,"XIValuatorClassInfo","","",null,null],[6,"XIScrollClassInfo","","",null,null],[6,"XITouchClassInfo","","",null,null],[6,"XIDeviceInfo","","",null,null],[6,"XIGrabModifiers","","",null,null],[6,"BarrierEventID","","",null,null],[6,"XIBarrierReleasePointerInfo","","",null,null],[6,"XIEvent","","",null,null],[6,"XIHierarchyInfo","","",null,null],[6,"XIHierarchyEvent","","",null,null],[6,"XIDeviceChangedEvent","","",null,null],[6,"XIDeviceEvent","","",null,null],[6,"XIRawEvent","","",null,null],[6,"XIEnterEvent","","",null,null],[6,"XILeaveEvent","","",null,null],[6,"XIFocusInEvent","","",null,null],[6,"XIFocusOutEvent","","",null,null],[6,"XIPropertyEvent","","",null,null],[6,"XITouchOwnershipEvent","","",null,null],[6,"XIBarrierEvent","","",null,null],[17,"XInput_2_0","","",null,null],[17,"XI_2_Major","","",null,null],[17,"XI_2_Minor","","",null,null],[17,"XIPropertyDeleted","","",null,null],[17,"XIPropertyCreated","","",null,null],[17,"XIPropertyModified","","",null,null],[17,"XIPropModeReplace","","",null,null],[17,"XIPropModePrepend","","",null,null],[17,"XIPropModeAppend","","",null,null],[17,"XINotifyNormal","","",null,null],[17,"XINotifyGrab","","",null,null],[17,"XINotifyUngrab","","",null,null],[17,"XINotifyWhileGrabbed","","",null,null],[17,"XINotifyPassiveGrab","","",null,null],[17,"XINotifyPassiveUngrab","","",null,null],[17,"XINotifyAncestor","","",null,null],[17,"XINotifyVirtual","","",null,null],[17,"XINotifyInferior","","",null,null],[17,"XINotifyNonlinear","","",null,null],[17,"XINotifyNonlinearVirtual","","",null,null],[17,"XINotifyPointer","","",null,null],[17,"XINotifyPointerRoot","","",null,null],[17,"XINotifyDetailNone","","",null,null],[17,"XIGrabModeSync","","",null,null],[17,"XIGrabModeAsync","","",null,null],[17,"XIGrabModeTouch","","",null,null],[17,"XIGrabSuccess","","",null,null],[17,"XIAlreadyGrabbed","","",null,null],[17,"XIGrabInvalidTime","","",null,null],[17,"XIGrabNotViewable","","",null,null],[17,"XIGrabFrozen","","",null,null],[17,"XIGrabtypeButton","","",null,null],[17,"XIGrabtypeKeycode","","",null,null],[17,"XIGrabtypeEnter","","",null,null],[17,"XIGrabtypeFocusIn","","",null,null],[17,"XIGrabtypeTouchBegin","","",null,null],[17,"XIAnyButton","","",null,null],[17,"XIAnyKeycode","","",null,null],[17,"XIAsyncDevice","","",null,null],[17,"XISyncDevice","","",null,null],[17,"XIReplayDevice","","",null,null],[17,"XIAsyncPairedDevice","","",null,null],[17,"XIAsyncPair","","",null,null],[17,"XISyncPair","","",null,null],[17,"XIAcceptTouch","","",null,null],[17,"XIRejectTouch","","",null,null],[17,"XISlaveSwitch","","",null,null],[17,"XIDeviceChange","","",null,null],[17,"XIMasterAdded","","",null,null],[17,"XIMasterRemoved","","",null,null],[17,"XISlaveAdded","","",null,null],[17,"XISlaveRemoved","","",null,null],[17,"XISlaveAttached","","",null,null],[17,"XISlaveDetached","","",null,null],[17,"XIDeviceEnabled","","",null,null],[17,"XIDeviceDisabled","","",null,null],[17,"XIAddMaster","","",null,null],[17,"XIRemoveMaster","","",null,null],[17,"XIAttachSlave","","",null,null],[17,"XIDetachSlave","","",null,null],[17,"XIAttachToMaster","","",null,null],[17,"XIFloating","","",null,null],[17,"XIModeRelative","","",null,null],[17,"XIModeAbsolute","","",null,null],[17,"XIMasterPointer","","",null,null],[17,"XIMasterKeyboard","","",null,null],[17,"XISlavePointer","","",null,null],[17,"XISlaveKeyboard","","",null,null],[17,"XIFloatingSlave","","",null,null],[17,"XIKeyClass","","",null,null],[17,"XIButtonClass","","",null,null],[17,"XIValuatorClass","","",null,null],[17,"XIScrollClass","","",null,null],[17,"XITouchClass","","",null,null],[17,"XIScrollTypeVertical","","",null,null],[17,"XIScrollTypeHorizontal","","",null,null],[17,"XIScrollFlagNoEmulation","","",null,null],[17,"XIScrollFlagPreferred","","",null,null],[17,"XIKeyRepeat","","",null,null],[17,"XIPointerEmulated","","",null,null],[17,"XITouchPendingEnd","","",null,null],[17,"XITouchEmulatingPointer","","",null,null],[17,"XIBarrierPointerReleased","","",null,null],[17,"XIBarrierDeviceIsGrabbed","","",null,null],[17,"XIDirectTouch","","",null,null],[17,"XIDependentTouch","","",null,null],[17,"XIAllDevices","","",null,null],[17,"XIAllMasterDevices","","",null,null],[17,"XI_DeviceChanged","","",null,null],[17,"XI_KeyPress","","",null,null],[17,"XI_KeyRelease","","",null,null],[17,"XI_ButtonPress","","",null,null],[17,"XI_ButtonRelease","","",null,null],[17,"XI_Motion","","",null,null],[17,"XI_Enter","","",null,null],[17,"XI_Leave","","",null,null],[17,"XI_FocusIn","","",null,null],[17,"XI_FocusOut","","",null,null],[17,"XI_HierarchyChanged","","",null,null],[17,"XI_PropertyEvent","","",null,null],[17,"XI_RawKeyPress","","",null,null],[17,"XI_RawKeyRelease","","",null,null],[17,"XI_RawButtonPress","","",null,null],[17,"XI_RawButtonRelease","","",null,null],[17,"XI_RawMotion","","",null,null],[17,"XI_TouchBegin","","",null,null],[17,"XI_TouchUpdate","","",null,null],[17,"XI_TouchEnd","","",null,null],[17,"XI_TouchOwnership","","",null,null],[17,"XI_RawTouchBegin","","",null,null],[17,"XI_RawTouchUpdate","","",null,null],[17,"XI_RawTouchEnd","","",null,null],[17,"XI_BarrierHit","","",null,null],[17,"XI_BarrierLeave","","",null,null],[17,"XI_LASTEVENT","","",null,null],[17,"XI_DeviceChangedMask","","",null,null],[17,"XI_KeyPressMask","","",null,null],[17,"XI_KeyReleaseMask","","",null,null],[17,"XI_ButtonPressMask","","",null,null],[17,"XI_ButtonReleaseMask","","",null,null],[17,"XI_MotionMask","","",null,null],[17,"XI_EnterMask","","",null,null],[17,"XI_LeaveMask","","",null,null],[17,"XI_FocusInMask","","",null,null],[17,"XI_FocusOutMask","","",null,null],[17,"XI_HierarchyChangedMask","","",null,null],[17,"XI_PropertyEventMask","","",null,null],[17,"XI_RawKeyPressMask","","",null,null],[17,"XI_RawKeyReleaseMask","","",null,null],[17,"XI_RawButtonPressMask","","",null,null],[17,"XI_RawButtonReleaseMask","","",null,null],[17,"XI_RawMotionMask","","",null,null],[17,"XI_TouchBeginMask","","",null,null],[17,"XI_TouchEndMask","","",null,null],[17,"XI_TouchOwnershipChangedMask","","",null,null],[17,"XI_TouchUpdateMask","","",null,null],[17,"XI_RawTouchBeginMask","","",null,null],[17,"XI_RawTouchEndMask","","",null,null],[17,"XI_RawTouchUpdateMask","","",null,null],[17,"XI_BarrierHitMask","","",null,null],[17,"XI_BarrierLeaveMask","","",null,null],[11,"open","","",35,{"inputs":[{"name":"xinput2"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"self"}}],[11,"default","","",36,{"inputs":[{"name":"struct_unnamed1"}],"output":{"name":"self"}}],[11,"clone","","",37,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"self"}}],[11,"default","","",37,{"inputs":[{"name":"struct_unnamed2"}],"output":{"name":"self"}}],[11,"clone","","",38,{"inputs":[{"name":"struct_unnamed3"}],"output":{"name":"self"}}],[11,"default","","",38,{"inputs":[{"name":"struct_unnamed3"}],"output":{"name":"self"}}],[11,"clone","","",39,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"self"}}],[11,"default","","",39,{"inputs":[{"name":"struct_unnamed4"}],"output":{"name":"self"}}],[11,"_type","","",40,null],[11,"add","","",40,null],[11,"remove","","",40,null],[11,"attach","","",40,null],[11,"detach","","",40,null],[11,"clone","","",40,{"inputs":[{"name":"union_unnamed5"}],"output":{"name":"self"}}],[11,"default","","",40,{"inputs":[{"name":"union_unnamed5"}],"output":{"name":"self"}}],[11,"clone","","",41,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"self"}}],[11,"default","","",41,{"inputs":[{"name":"struct_unnamed6"}],"output":{"name":"self"}}],[11,"clone","","",42,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"self"}}],[11,"default","","",42,{"inputs":[{"name":"struct_unnamed7"}],"output":{"name":"self"}}],[11,"clone","","",43,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"self"}}],[11,"default","","",43,{"inputs":[{"name":"struct_unnamed8"}],"output":{"name":"self"}}],[11,"clone","","",44,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"self"}}],[11,"default","","",44,{"inputs":[{"name":"struct_unnamed9"}],"output":{"name":"self"}}],[11,"clone","","",45,{"inputs":[{"name":"struct_unnamed10"}],"output":{"name":"self"}}],[11,"default","","",45,{"inputs":[{"name":"struct_unnamed10"}],"output":{"name":"self"}}],[11,"clone","","",46,{"inputs":[{"name":"struct_unnamed11"}],"output":{"name":"self"}}],[11,"default","","",46,{"inputs":[{"name":"struct_unnamed11"}],"output":{"name":"self"}}],[11,"clone","","",47,{"inputs":[{"name":"struct_unnamed12"}],"output":{"name":"self"}}],[11,"default","","",47,{"inputs":[{"name":"struct_unnamed12"}],"output":{"name":"self"}}],[11,"clone","","",48,{"inputs":[{"name":"struct_unnamed13"}],"output":{"name":"self"}}],[11,"default","","",48,{"inputs":[{"name":"struct_unnamed13"}],"output":{"name":"self"}}],[11,"clone","","",49,{"inputs":[{"name":"struct_unnamed14"}],"output":{"name":"self"}}],[11,"default","","",49,{"inputs":[{"name":"struct_unnamed14"}],"output":{"name":"self"}}],[11,"clone","","",50,{"inputs":[{"name":"struct_unnamed15"}],"output":{"name":"self"}}],[11,"default","","",50,{"inputs":[{"name":"struct_unnamed15"}],"output":{"name":"self"}}],[11,"clone","","",51,{"inputs":[{"name":"struct_unnamed16"}],"output":{"name":"self"}}],[11,"default","","",51,{"inputs":[{"name":"struct_unnamed16"}],"output":{"name":"self"}}],[11,"clone","","",52,{"inputs":[{"name":"struct_unnamed17"}],"output":{"name":"self"}}],[11,"default","","",52,{"inputs":[{"name":"struct_unnamed17"}],"output":{"name":"self"}}],[11,"clone","","",53,{"inputs":[{"name":"struct_unnamed18"}],"output":{"name":"self"}}],[11,"default","","",53,{"inputs":[{"name":"struct_unnamed18"}],"output":{"name":"self"}}],[11,"clone","","",54,{"inputs":[{"name":"struct_unnamed19"}],"output":{"name":"self"}}],[11,"default","","",54,{"inputs":[{"name":"struct_unnamed19"}],"output":{"name":"self"}}],[11,"clone","","",55,{"inputs":[{"name":"struct_unnamed20"}],"output":{"name":"self"}}],[11,"default","","",55,{"inputs":[{"name":"struct_unnamed20"}],"output":{"name":"self"}}],[11,"clone","","",56,{"inputs":[{"name":"struct_unnamed21"}],"output":{"name":"self"}}],[11,"default","","",56,{"inputs":[{"name":"struct_unnamed21"}],"output":{"name":"self"}}],[11,"clone","","",57,{"inputs":[{"name":"struct_unnamed22"}],"output":{"name":"self"}}],[11,"default","","",57,{"inputs":[{"name":"struct_unnamed22"}],"output":{"name":"self"}}],[11,"clone","","",58,{"inputs":[{"name":"struct_unnamed23"}],"output":{"name":"self"}}],[11,"default","","",58,{"inputs":[{"name":"struct_unnamed23"}],"output":{"name":"self"}}],[11,"clone","","",59,{"inputs":[{"name":"struct_unnamed24"}],"output":{"name":"self"}}],[11,"default","","",59,{"inputs":[{"name":"struct_unnamed24"}],"output":{"name":"self"}}],[11,"clone","","",60,{"inputs":[{"name":"struct_unnamed25"}],"output":{"name":"self"}}],[11,"default","","",60,{"inputs":[{"name":"struct_unnamed25"}],"output":{"name":"self"}}],[11,"clone","","",61,{"inputs":[{"name":"struct_unnamed26"}],"output":{"name":"self"}}],[11,"default","","",61,{"inputs":[{"name":"struct_unnamed26"}],"output":{"name":"self"}}],[11,"clone","","",62,{"inputs":[{"name":"struct_unnamed27"}],"output":{"name":"self"}}],[11,"default","","",62,{"inputs":[{"name":"struct_unnamed27"}],"output":{"name":"self"}}],[11,"clone","","",63,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"self"}}],[11,"default","","",63,{"inputs":[{"name":"struct_unnamed28"}],"output":{"name":"self"}}],[0,"xlib","x11_dl","",null,null],[3,"Xlib","x11_dl::xlib","",null,null],[12,"XActivateScreenSaver","","",64,null],[12,"XAddConnectionWatch","","",64,null],[12,"XAddExtension","","",64,null],[12,"XAddHost","","",64,null],[12,"XAddHosts","","",64,null],[12,"XAddPixel","","",64,null],[12,"XAddToExtensionList","","",64,null],[12,"XAddToSaveSet","","",64,null],[12,"XAllocClassHint","","",64,null],[12,"XAllocColor","","",64,null],[12,"XAllocColorCells","","",64,null],[12,"XAllocColorPlanes","","",64,null],[12,"XAllocIconSize","","",64,null],[12,"XAllocNamedColor","","",64,null],[12,"XAllocSizeHints","","",64,null],[12,"XAllocStandardColormap","","",64,null],[12,"XAllocWMHints","","",64,null],[12,"XAllowEvents","","",64,null],[12,"XAllPlanes","","",64,null],[12,"XAutoRepeatOff","","",64,null],[12,"XAutoRepeatOn","","",64,null],[12,"XBaseFontNameListOfFontSet","","",64,null],[12,"XBell","","",64,null],[12,"XBitmapBitOrder","","",64,null],[12,"XBitmapPad","","",64,null],[12,"XBitmapUnit","","",64,null],[12,"XBlackPixel","","",64,null],[12,"XBlackPixelOfScreen","","",64,null],[12,"XCellsOfScreen","","",64,null],[12,"XChangeActivePointerGrab","","",64,null],[12,"XChangeGC","","",64,null],[12,"XChangeKeyboardControl","","",64,null],[12,"XChangeKeyboardMapping","","",64,null],[12,"XChangePointerControl","","",64,null],[12,"XChangeProperty","","",64,null],[12,"XChangeSaveSet","","",64,null],[12,"XChangeWindowAttributes","","",64,null],[12,"XCheckIfEvent","","",64,null],[12,"XCheckMaskEvent","","",64,null],[12,"XCheckTypedEvent","","",64,null],[12,"XCheckTypedWindowEvent","","",64,null],[12,"XCheckWindowEvent","","",64,null],[12,"XCirculateSubwindows","","",64,null],[12,"XCirculateSubwindowsDown","","",64,null],[12,"XCirculateSubwindowsUp","","",64,null],[12,"XClearArea","","",64,null],[12,"XClearWindow","","",64,null],[12,"XClipBox","","",64,null],[12,"XCloseDisplay","","",64,null],[12,"XCloseIM","","",64,null],[12,"XCloseOM","","",64,null],[12,"XcmsAddColorSpace","","",64,null],[12,"XcmsAddFunctionSet","","",64,null],[12,"XcmsAllocColor","","",64,null],[12,"XcmsAllocNamedColor","","",64,null],[12,"XcmsCCCOfColormap","","",64,null],[12,"XcmsCIELabClipab","","",64,null],[12,"XcmsCIELabClipL","","",64,null],[12,"XcmsCIELabClipLab","","",64,null],[12,"XcmsCIELabQueryMaxC","","",64,null],[12,"XcmsCIELabQueryMaxL","","",64,null],[12,"XcmsCIELabQueryMaxLC","","",64,null],[12,"XcmsCIELabQueryMinL","","",64,null],[12,"XcmsCIELabToCIEXYZ","","",64,null],[12,"XcmsCIELabWhiteShiftColors","","",64,null],[12,"XcmsCIELuvClipL","","",64,null],[12,"XcmsCIELuvClipLuv","","",64,null],[12,"XcmsCIELuvClipuv","","",64,null],[12,"XcmsCIELuvQueryMaxC","","",64,null],[12,"XcmsCIELuvQueryMaxL","","",64,null],[12,"XcmsCIELuvQueryMaxLC","","",64,null],[12,"XcmsCIELuvQueryMinL","","",64,null],[12,"XcmsCIELuvToCIEuvY","","",64,null],[12,"XcmsCIELuvWhiteShiftColors","","",64,null],[12,"XcmsCIEuvYToCIELuv","","",64,null],[12,"XcmsCIEuvYToCIEXYZ","","",64,null],[12,"XcmsCIEuvYToTekHVC","","",64,null],[12,"XcmsCIExyYToCIEXYZ","","",64,null],[12,"XcmsCIEXYZToCIELab","","",64,null],[12,"XcmsCIEXYZToCIEuvY","","",64,null],[12,"XcmsCIEXYZToCIExyY","","",64,null],[12,"XcmsCIEXYZToRGBi","","",64,null],[12,"XcmsClientWhitePointOfCCC","","",64,null],[12,"XcmsConvertColors","","",64,null],[12,"XcmsCreateCCC","","",64,null],[12,"XcmsDefaultCCC","","",64,null],[12,"XcmsDisplayOfCCC","","",64,null],[12,"XcmsFormatOfPrefix","","",64,null],[12,"XcmsFreeCCC","","",64,null],[12,"XcmsLookupColor","","",64,null],[12,"XcmsPrefixOfFormat","","",64,null],[12,"XcmsQueryBlack","","",64,null],[12,"XcmsQueryBlue","","",64,null],[12,"XcmsQueryColor","","",64,null],[12,"XcmsQueryColors","","",64,null],[12,"XcmsQueryGreen","","",64,null],[12,"XcmsQueryRed","","",64,null],[12,"XcmsQueryWhite","","",64,null],[12,"XcmsRGBiToCIEXYZ","","",64,null],[12,"XcmsRGBiToRGB","","",64,null],[12,"XcmsRGBToRGBi","","",64,null],[12,"XcmsScreenNumberOfCCC","","",64,null],[12,"XcmsScreenWhitePointOfCCC","","",64,null],[12,"XcmsSetCCCOfColormap","","",64,null],[12,"XcmsSetCompressionProc","","",64,null],[12,"XcmsSetWhiteAdjustProc","","",64,null],[12,"XcmsSetWhitePoint","","",64,null],[12,"XcmsStoreColor","","",64,null],[12,"XcmsStoreColors","","",64,null],[12,"XcmsTekHVCClipC","","",64,null],[12,"XcmsTekHVCClipV","","",64,null],[12,"XcmsTekHVCClipVC","","",64,null],[12,"XcmsTekHVCQueryMaxC","","",64,null],[12,"XcmsTekHVCQueryMaxV","","",64,null],[12,"XcmsTekHVCQueryMaxVC","","",64,null],[12,"XcmsTekHVCQueryMaxVSamples","","",64,null],[12,"XcmsTekHVCQueryMinV","","",64,null],[12,"XcmsTekHVCToCIEuvY","","",64,null],[12,"XcmsTekHVCWhiteShiftColors","","",64,null],[12,"XcmsVisualOfCCC","","",64,null],[12,"XConfigureWindow","","",64,null],[12,"XConnectionNumber","","",64,null],[12,"XContextDependentDrawing","","",64,null],[12,"XContextualDrawing","","",64,null],[12,"XConvertCase","","",64,null],[12,"XConvertSelection","","",64,null],[12,"XCopyArea","","",64,null],[12,"XCopyColormapAndFree","","",64,null],[12,"XCopyGC","","",64,null],[12,"XCopyPlane","","",64,null],[12,"XCreateBitmapFromData","","",64,null],[12,"XCreateColormap","","",64,null],[12,"XCreateFontCursor","","",64,null],[12,"XCreateFontSet","","",64,null],[12,"XCreateGC","","",64,null],[12,"XCreateGlyphCursor","","",64,null],[12,"XCreateImage","","",64,null],[12,"XCreatePixmap","","",64,null],[12,"XCreatePixmapCursor","","",64,null],[12,"XCreatePixmapFromBitmapData","","",64,null],[12,"XCreateRegion","","",64,null],[12,"XCreateSimpleWindow","","",64,null],[12,"XCreateWindow","","",64,null],[12,"XDefaultColormap","","",64,null],[12,"XDefaultColormapOfScreen","","",64,null],[12,"XDefaultDepth","","",64,null],[12,"XDefaultDepthOfScreen","","",64,null],[12,"XDefaultGC","","",64,null],[12,"XDefaultGCOfScreen","","",64,null],[12,"XDefaultRootWindow","","",64,null],[12,"XDefaultScreen","","",64,null],[12,"XDefaultScreenOfDisplay","","",64,null],[12,"XDefaultString","","",64,null],[12,"XDefaultVisual","","",64,null],[12,"XDefaultVisualOfScreen","","",64,null],[12,"XDefineCursor","","",64,null],[12,"XDeleteContext","","",64,null],[12,"XDeleteModifiermapEntry","","",64,null],[12,"XDeleteProperty","","",64,null],[12,"XDestroyIC","","",64,null],[12,"XDestroyImage","","",64,null],[12,"XDestroyOC","","",64,null],[12,"XDestroyRegion","","",64,null],[12,"XDestroySubwindows","","",64,null],[12,"XDestroyWindow","","",64,null],[12,"XDirectionalDependentDrawing","","",64,null],[12,"XDisableAccessControl","","",64,null],[12,"XDisplayCells","","",64,null],[12,"XDisplayHeight","","",64,null],[12,"XDisplayHeightMM","","",64,null],[12,"XDisplayKeycodes","","",64,null],[12,"XDisplayMotionBufferSize","","",64,null],[12,"XDisplayName","","",64,null],[12,"XDisplayOfIM","","",64,null],[12,"XDisplayOfOM","","",64,null],[12,"XDisplayOfScreen","","",64,null],[12,"XDisplayPlanes","","",64,null],[12,"XDisplayString","","",64,null],[12,"XDisplayWidth","","",64,null],[12,"XDisplayWidthMM","","",64,null],[12,"XDoesBackingStore","","",64,null],[12,"XDoesSaveUnders","","",64,null],[12,"XDrawArc","","",64,null],[12,"XDrawArcs","","",64,null],[12,"XDrawImageString","","",64,null],[12,"XDrawImageString16","","",64,null],[12,"XDrawLine","","",64,null],[12,"XDrawLines","","",64,null],[12,"XDrawPoint","","",64,null],[12,"XDrawPoints","","",64,null],[12,"XDrawRectangle","","",64,null],[12,"XDrawRectangles","","",64,null],[12,"XDrawSegments","","",64,null],[12,"XDrawString","","",64,null],[12,"XDrawString16","","",64,null],[12,"XDrawText","","",64,null],[12,"XDrawText16","","",64,null],[12,"XEHeadOfExtensionList","","",64,null],[12,"XEmptyRegion","","",64,null],[12,"XEnableAccessControl","","",64,null],[12,"XEqualRegion","","",64,null],[12,"XESetBeforeFlush","","",64,null],[12,"XESetCloseDisplay","","",64,null],[12,"XESetCopyEventCookie","","",64,null],[12,"XESetCopyGC","","",64,null],[12,"XESetCreateFont","","",64,null],[12,"XESetCreateGC","","",64,null],[12,"XESetError","","",64,null],[12,"XESetErrorString","","",64,null],[12,"XESetEventToWire","","",64,null],[12,"XESetFlushGC","","",64,null],[12,"XESetFreeFont","","",64,null],[12,"XESetFreeGC","","",64,null],[12,"XESetPrintErrorValues","","",64,null],[12,"XESetWireToError","","",64,null],[12,"XESetWireToEvent","","",64,null],[12,"XESetWireToEventCookie","","",64,null],[12,"XEventMaskOfScreen","","",64,null],[12,"XEventsQueued","","",64,null],[12,"XExtendedMaxRequestSize","","",64,null],[12,"XExtentsOfFontSet","","",64,null],[12,"XFetchBuffer","","",64,null],[12,"XFetchBytes","","",64,null],[12,"XFetchName","","",64,null],[12,"XFillArc","","",64,null],[12,"XFillArcs","","",64,null],[12,"XFillPolygon","","",64,null],[12,"XFillRectangle","","",64,null],[12,"XFillRectangles","","",64,null],[12,"XFilterEvent","","",64,null],[12,"XFindContext","","",64,null],[12,"XFindOnExtensionList","","",64,null],[12,"XFlush","","",64,null],[12,"XFlushGC","","",64,null],[12,"XFontsOfFontSet","","",64,null],[12,"XForceScreenSaver","","",64,null],[12,"XFree","","",64,null],[12,"XFreeColormap","","",64,null],[12,"XFreeColors","","",64,null],[12,"XFreeCursor","","",64,null],[12,"XFreeEventData","","",64,null],[12,"XFreeExtensionList","","",64,null],[12,"XFreeFont","","",64,null],[12,"XFreeFontInfo","","",64,null],[12,"XFreeFontNames","","",64,null],[12,"XFreeFontPath","","",64,null],[12,"XFreeFontSet","","",64,null],[12,"XFreeGC","","",64,null],[12,"XFreeModifiermap","","",64,null],[12,"XFreePixmap","","",64,null],[12,"XFreeStringList","","",64,null],[12,"XGContextFromGC","","",64,null],[12,"XGeometry","","",64,null],[12,"XGetAtomName","","",64,null],[12,"XGetAtomNames","","",64,null],[12,"XGetClassHint","","",64,null],[12,"XGetCommand","","",64,null],[12,"XGetDefault","","",64,null],[12,"XGetErrorDatabaseText","","",64,null],[12,"XGetErrorText","","",64,null],[12,"XGetEventData","","",64,null],[12,"XGetFontPath","","",64,null],[12,"XGetFontProperty","","",64,null],[12,"XGetGCValues","","",64,null],[12,"XGetGeometry","","",64,null],[12,"XGetIconName","","",64,null],[12,"XGetIconSizes","","",64,null],[12,"XGetImage","","",64,null],[12,"XGetInputFocus","","",64,null],[12,"XGetKeyboardControl","","",64,null],[12,"XGetKeyboardMapping","","",64,null],[12,"XGetModifierMapping","","",64,null],[12,"XGetMotionEvents","","",64,null],[12,"XGetNormalHints","","",64,null],[12,"XGetPixel","","",64,null],[12,"XGetPointerControl","","",64,null],[12,"XGetPointerMapping","","",64,null],[12,"XGetRGBColormaps","","",64,null],[12,"XGetScreenSaver","","",64,null],[12,"XGetSelectionOwner","","",64,null],[12,"XGetSizeHints","","",64,null],[12,"XGetStandardColormap","","",64,null],[12,"XGetSubImage","","",64,null],[12,"XGetTextProperty","","",64,null],[12,"XGetTransientForHint","","",64,null],[12,"XGetVisualInfo","","",64,null],[12,"XGetWindowAttributes","","",64,null],[12,"XGetWindowProperty","","",64,null],[12,"XGetWMClientMachine","","",64,null],[12,"XGetWMColormapWindows","","",64,null],[12,"XGetWMHints","","",64,null],[12,"XGetWMIconName","","",64,null],[12,"XGetWMName","","",64,null],[12,"XGetWMNormalHints","","",64,null],[12,"XGetWMProtocols","","",64,null],[12,"XGetWMSizeHints","","",64,null],[12,"XGetZoomHints","","",64,null],[12,"XGrabButton","","",64,null],[12,"XGrabKey","","",64,null],[12,"XGrabKeyboard","","",64,null],[12,"XGrabPointer","","",64,null],[12,"XGrabServer","","",64,null],[12,"XHeightMMOfScreen","","",64,null],[12,"XHeightOfScreen","","",64,null],[12,"XIconifyWindow","","",64,null],[12,"XIfEvent","","",64,null],[12,"XImageByteOrder","","",64,null],[12,"XIMOfIC","","",64,null],[12,"XInitExtension","","",64,null],[12,"XInitImage","","",64,null],[12,"XInitThreads","","",64,null],[12,"XInsertModifiermapEntry","","",64,null],[12,"XInstallColormap","","",64,null],[12,"XInternalConnectionNumbers","","",64,null],[12,"XInternAtom","","",64,null],[12,"XInternAtoms","","",64,null],[12,"XIntersectRegion","","",64,null],[12,"XkbAddDeviceLedInfo","","",64,null],[12,"XkbAddGeomColor","","",64,null],[12,"XkbAddGeomDoodad","","",64,null],[12,"XkbAddGeomKey","","",64,null],[12,"XkbAddGeomKeyAlias","","",64,null],[12,"XkbAddGeomOutline","","",64,null],[12,"XkbAddGeomOverlay","","",64,null],[12,"XkbAddGeomOverlayKey","","",64,null],[12,"XkbAddGeomOverlayRow","","",64,null],[12,"XkbAddGeomProperty","","",64,null],[12,"XkbAddGeomRow","","",64,null],[12,"XkbAddGeomSection","","",64,null],[12,"XkbAddGeomShape","","",64,null],[12,"XkbAddKeyType","","",64,null],[12,"XkbAllocClientMap","","",64,null],[12,"XkbAllocCompatMap","","",64,null],[12,"XkbAllocControls","","",64,null],[12,"XkbAllocDeviceInfo","","",64,null],[12,"XkbAllocGeomColors","","",64,null],[12,"XkbAllocGeomDoodads","","",64,null],[12,"XkbAllocGeometry","","",64,null],[12,"XkbAllocGeomKeyAliases","","",64,null],[12,"XkbAllocGeomKeys","","",64,null],[12,"XkbAllocGeomOutlines","","",64,null],[12,"XkbAllocGeomOverlayKeys","","",64,null],[12,"XkbAllocGeomOverlayRows","","",64,null],[12,"XkbAllocGeomOverlays","","",64,null],[12,"XkbAllocGeomPoints","","",64,null],[12,"XkbAllocGeomProps","","",64,null],[12,"XkbAllocGeomRows","","",64,null],[12,"XkbAllocGeomSectionDoodads","","",64,null],[12,"XkbAllocGeomSections","","",64,null],[12,"XkbAllocGeomShapes","","",64,null],[12,"XkbAllocIndicatorMaps","","",64,null],[12,"XkbAllocKeyboard","","",64,null],[12,"XkbAllocNames","","",64,null],[12,"XkbAllocServerMap","","",64,null],[12,"XkbApplyCompatMapToKey","","",64,null],[12,"XkbApplyVirtualModChanges","","",64,null],[12,"XkbBell","","",64,null],[12,"XkbBellEvent","","",64,null],[12,"XkbChangeDeviceInfo","","",64,null],[12,"XkbChangeEnabledControls","","",64,null],[12,"XkbChangeKeycodeRange","","",64,null],[12,"XkbChangeMap","","",64,null],[12,"XkbChangeNames","","",64,null],[12,"XkbChangeTypesOfKey","","",64,null],[12,"XkbComputeEffectiveMap","","",64,null],[12,"XkbComputeRowBounds","","",64,null],[12,"XkbComputeSectionBounds","","",64,null],[12,"XkbComputeShapeBounds","","",64,null],[12,"XkbComputeShapeTop","","",64,null],[12,"XkbCopyKeyType","","",64,null],[12,"XkbCopyKeyTypes","","",64,null],[12,"XkbDeviceBell","","",64,null],[12,"XkbDeviceBellEvent","","",64,null],[12,"XkbFindOverlayForKey","","",64,null],[12,"XkbForceBell","","",64,null],[12,"XkbForceDeviceBell","","",64,null],[12,"XkbFreeClientMap","","",64,null],[12,"XkbFreeCompatMap","","",64,null],[12,"XkbFreeComponentList","","",64,null],[12,"XkbFreeControls","","",64,null],[12,"XkbFreeDeviceInfo","","",64,null],[12,"XkbFreeGeomColors","","",64,null],[12,"XkbFreeGeomDoodads","","",64,null],[12,"XkbFreeGeometry","","",64,null],[12,"XkbFreeGeomKeyAliases","","",64,null],[12,"XkbFreeGeomKeys","","",64,null],[12,"XkbFreeGeomOutlines","","",64,null],[12,"XkbFreeGeomOverlayKeys","","",64,null],[12,"XkbFreeGeomOverlayRows","","",64,null],[12,"XkbFreeGeomOverlays","","",64,null],[12,"XkbFreeGeomPoints","","",64,null],[12,"XkbFreeGeomProperties","","",64,null],[12,"XkbFreeGeomRows","","",64,null],[12,"XkbFreeGeomSections","","",64,null],[12,"XkbFreeGeomShapes","","",64,null],[12,"XkbFreeIndicatorMaps","","",64,null],[12,"XkbFreeKeyboard","","",64,null],[12,"XkbFreeNames","","",64,null],[12,"XkbFreeServerMap","","",64,null],[12,"XkbGetAutoRepeatRate","","",64,null],[12,"XkbGetAutoResetControls","","",64,null],[12,"XkbGetCompatMap","","",64,null],[12,"XkbGetControls","","",64,null],[12,"XkbGetDetectableAutoRepeat","","",64,null],[12,"XkbGetDeviceButtonActions","","",64,null],[12,"XkbGetDeviceInfo","","",64,null],[12,"XkbGetDeviceInfoChanges","","",64,null],[12,"XkbGetDeviceLedInfo","","",64,null],[12,"XkbGetGeometry","","",64,null],[12,"XkbGetIndicatorMap","","",64,null],[12,"XkbGetIndicatorState","","",64,null],[12,"XkbGetKeyActions","","",64,null],[12,"XkbGetKeyBehaviors","","",64,null],[12,"XkbGetKeyboard","","",64,null],[12,"XkbGetKeyboardByName","","",64,null],[12,"XkbGetKeyExplicitComponents","","",64,null],[12,"XkbGetKeyModifierMap","","",64,null],[12,"XkbGetKeySyms","","",64,null],[12,"XkbGetKeyTypes","","",64,null],[12,"XkbGetKeyVirtualModMap","","",64,null],[12,"XkbGetMap","","",64,null],[12,"XkbGetMapChanges","","",64,null],[12,"XkbGetNamedDeviceIndicator","","",64,null],[12,"XkbGetNamedGeometry","","",64,null],[12,"XkbGetNamedIndicator","","",64,null],[12,"XkbGetNames","","",64,null],[12,"XkbGetPerClientControls","","",64,null],[12,"XkbGetState","","",64,null],[12,"XkbGetUpdatedMap","","",64,null],[12,"XkbGetVirtualMods","","",64,null],[12,"XkbGetXlibControls","","",64,null],[12,"XkbIgnoreExtension","","",64,null],[12,"XkbInitCanonicalKeyTypes","","",64,null],[12,"XkbKeycodeToKeysym","","",64,null],[12,"XkbKeysymToModifiers","","",64,null],[12,"XkbKeyTypesForCoreSymbols","","",64,null],[12,"XkbLatchGroup","","",64,null],[12,"XkbLatchModifiers","","",64,null],[12,"XkbLibraryVersion","","",64,null],[12,"XkbListComponents","","",64,null],[12,"XkbLockGroup","","",64,null],[12,"XkbLockModifiers","","",64,null],[12,"XkbLookupKeyBinding","","",64,null],[12,"XkbLookupKeySym","","",64,null],[12,"XkbNoteControlsChanges","","",64,null],[12,"XkbNoteDeviceChanges","","",64,null],[12,"XkbNoteMapChanges","","",64,null],[12,"XkbNoteNameChanges","","",64,null],[12,"XkbOpenDisplay","","",64,null],[12,"XkbQueryExtension","","",64,null],[12,"XkbRefreshKeyboardMapping","","",64,null],[12,"XkbResizeDeviceButtonActions","","",64,null],[12,"XkbResizeKeyActions","","",64,null],[12,"XkbResizeKeySyms","","",64,null],[12,"XkbResizeKeyType","","",64,null],[12,"XkbSelectEventDetails","","",64,null],[12,"XkbSelectEvents","","",64,null],[12,"XkbSetAtomFuncs","","",64,null],[12,"XkbSetAutoRepeatRate","","",64,null],[12,"XkbSetAutoResetControls","","",64,null],[12,"XkbSetCompatMap","","",64,null],[12,"XkbSetControls","","",64,null],[12,"XkbSetDebuggingFlags","","",64,null],[12,"XkbSetDetectableAutoRepeat","","",64,null],[12,"XkbSetDeviceButtonActions","","",64,null],[12,"XkbSetDeviceInfo","","",64,null],[12,"XkbSetDeviceLedInfo","","",64,null],[12,"XkbSetGeometry","","",64,null],[12,"XkbSetIgnoreLockMods","","",64,null],[12,"XkbSetIndicatorMap","","",64,null],[12,"XkbSetMap","","",64,null],[12,"XkbSetNamedDeviceIndicator","","",64,null],[12,"XkbSetNamedIndicator","","",64,null],[12,"XkbSetNames","","",64,null],[12,"XkbSetPerClientControls","","",64,null],[12,"XkbSetServerInternalMods","","",64,null],[12,"XkbSetXlibControls","","",64,null],[12,"XkbToControl","","",64,null],[12,"XkbTranslateKeyCode","","",64,null],[12,"XkbTranslateKeySym","","",64,null],[12,"XkbUpdateActionVirtualMods","","",64,null],[12,"XkbUpdateKeyTypeVirtualMods","","",64,null],[12,"XkbUpdateMapFromCore","","",64,null],[12,"XkbUseExtension","","",64,null],[12,"XkbVirtualModsToReal","","",64,null],[12,"XkbXlibControlsImplemented","","",64,null],[12,"XKeycodeToKeysym","","",64,null],[12,"XKeysymToKeycode","","",64,null],[12,"XKeysymToString","","",64,null],[12,"XKillClient","","",64,null],[12,"XLastKnownRequestProcessed","","",64,null],[12,"XListDepths","","",64,null],[12,"XListExtensions","","",64,null],[12,"XListFonts","","",64,null],[12,"XListFontsWithInfo","","",64,null],[12,"XListHosts","","",64,null],[12,"XListInstalledColormaps","","",64,null],[12,"XListPixmapFormats","","",64,null],[12,"XListProperties","","",64,null],[12,"XLoadFont","","",64,null],[12,"XLoadQueryFont","","",64,null],[12,"XLocaleOfFontSet","","",64,null],[12,"XLocaleOfIM","","",64,null],[12,"XLocaleOfOM","","",64,null],[12,"XLockDisplay","","",64,null],[12,"XLookupColor","","",64,null],[12,"XLookupKeysym","","",64,null],[12,"XLookupString","","",64,null],[12,"XLowerWindow","","",64,null],[12,"XMapRaised","","",64,null],[12,"XMapSubwindows","","",64,null],[12,"XMapWindow","","",64,null],[12,"XMaskEvent","","",64,null],[12,"XMatchVisualInfo","","",64,null],[12,"XMaxCmapsOfScreen","","",64,null],[12,"XMaxRequestSize","","",64,null],[12,"XmbDrawImageString","","",64,null],[12,"XmbDrawString","","",64,null],[12,"XmbDrawText","","",64,null],[12,"XmbLookupString","","",64,null],[12,"XmbResetIC","","",64,null],[12,"XmbSetWMProperties","","",64,null],[12,"XmbTextEscapement","","",64,null],[12,"XmbTextExtents","","",64,null],[12,"XmbTextListToTextProperty","","",64,null],[12,"XmbTextPerCharExtents","","",64,null],[12,"XmbTextPropertyToTextList","","",64,null],[12,"XMinCmapsOfScreen","","",64,null],[12,"XMoveResizeWindow","","",64,null],[12,"XMoveWindow","","",64,null],[12,"XNewModifiermap","","",64,null],[12,"XNextEvent","","",64,null],[12,"XNextRequest","","",64,null],[12,"XNoOp","","",64,null],[12,"XOffsetRegion","","",64,null],[12,"XOMOfOC","","",64,null],[12,"XOpenDisplay","","",64,null],[12,"XOpenIM","","",64,null],[12,"XOpenOM","","",64,null],[12,"XParseColor","","",64,null],[12,"XParseGeometry","","",64,null],[12,"XPeekEvent","","",64,null],[12,"XPeekIfEvent","","",64,null],[12,"XPending","","",64,null],[12,"Xpermalloc","","",64,null],[12,"XPlanesOfScreen","","",64,null],[12,"XPointInRegion","","",64,null],[12,"XPolygonRegion","","",64,null],[12,"XProcessInternalConnection","","",64,null],[12,"XProtocolRevision","","",64,null],[12,"XProtocolVersion","","",64,null],[12,"XPutBackEvent","","",64,null],[12,"XPutImage","","",64,null],[12,"XPutPixel","","",64,null],[12,"XQLength","","",64,null],[12,"XQueryBestCursor","","",64,null],[12,"XQueryBestSize","","",64,null],[12,"XQueryBestStipple","","",64,null],[12,"XQueryBestTile","","",64,null],[12,"XQueryColor","","",64,null],[12,"XQueryColors","","",64,null],[12,"XQueryExtension","","",64,null],[12,"XQueryFont","","",64,null],[12,"XQueryKeymap","","",64,null],[12,"XQueryPointer","","",64,null],[12,"XQueryTextExtents","","",64,null],[12,"XQueryTextExtents16","","",64,null],[12,"XQueryTree","","",64,null],[12,"XRaiseWindow","","",64,null],[12,"XReadBitmapFile","","",64,null],[12,"XReadBitmapFileData","","",64,null],[12,"XRebindKeysym","","",64,null],[12,"XRecolorCursor","","",64,null],[12,"XReconfigureWMWindow","","",64,null],[12,"XRectInRegion","","",64,null],[12,"XRefreshKeyboardMapping","","",64,null],[12,"XRegisterIMInstantiateCallback","","",64,null],[12,"XRemoveConnectionWatch","","",64,null],[12,"XRemoveFromSaveSet","","",64,null],[12,"XRemoveHost","","",64,null],[12,"XRemoveHosts","","",64,null],[12,"XReparentWindow","","",64,null],[12,"XResetScreenSaver","","",64,null],[12,"XResizeWindow","","",64,null],[12,"XResourceManagerString","","",64,null],[12,"XRestackWindows","","",64,null],[12,"XrmCombineDatabase","","",64,null],[12,"XrmCombineFileDatabase","","",64,null],[12,"XrmDestroyDatabase","","",64,null],[12,"XrmEnumerateDatabase","","",64,null],[12,"XrmGetDatabase","","",64,null],[12,"XrmGetFileDatabase","","",64,null],[12,"XrmGetResource","","",64,null],[12,"XrmGetStringDatabase","","",64,null],[12,"XrmInitialize","","",64,null],[12,"XrmLocaleOfDatabase","","",64,null],[12,"XrmMergeDatabases","","",64,null],[12,"XrmParseCommand","","",64,null],[12,"XrmPermStringToQuark","","",64,null],[12,"XrmPutFileDatabase","","",64,null],[12,"XrmPutLineResource","","",64,null],[12,"XrmPutResource","","",64,null],[12,"XrmPutStringResource","","",64,null],[12,"XrmQGetResource","","",64,null],[12,"XrmQGetSearchList","","",64,null],[12,"XrmQGetSearchResource","","",64,null],[12,"XrmQPutResource","","",64,null],[12,"XrmQPutStringResource","","",64,null],[12,"XrmQuarkToString","","",64,null],[12,"XrmSetDatabase","","",64,null],[12,"XrmStringToBindingQuarkList","","",64,null],[12,"XrmStringToQuark","","",64,null],[12,"XrmStringToQuarkList","","",64,null],[12,"XrmUniqueQuark","","",64,null],[12,"XRootWindow","","",64,null],[12,"XRootWindowOfScreen","","",64,null],[12,"XRotateBuffers","","",64,null],[12,"XRotateWindowProperties","","",64,null],[12,"XSaveContext","","",64,null],[12,"XScreenCount","","",64,null],[12,"XScreenNumberOfScreen","","",64,null],[12,"XScreenOfDisplay","","",64,null],[12,"XScreenResourceString","","",64,null],[12,"XSelectInput","","",64,null],[12,"XSendEvent","","",64,null],[12,"XServerVendor","","",64,null],[12,"XSetAccessControl","","",64,null],[12,"XSetAfterFunction","","",64,null],[12,"XSetArcMode","","",64,null],[12,"XSetAuthorization","","",64,null],[12,"XSetBackground","","",64,null],[12,"XSetClassHint","","",64,null],[12,"XSetClipMask","","",64,null],[12,"XSetClipOrigin","","",64,null],[12,"XSetClipRectangles","","",64,null],[12,"XSetCloseDownMode","","",64,null],[12,"XSetCommand","","",64,null],[12,"XSetDashes","","",64,null],[12,"XSetErrorHandler","","",64,null],[12,"XSetFillRule","","",64,null],[12,"XSetFillStyle","","",64,null],[12,"XSetFont","","",64,null],[12,"XSetFontPath","","",64,null],[12,"XSetForeground","","",64,null],[12,"XSetFunction","","",64,null],[12,"XSetGraphicsExposures","","",64,null],[12,"XSetICFocus","","",64,null],[12,"XSetIconName","","",64,null],[12,"XSetIconSizes","","",64,null],[12,"XSetInputFocus","","",64,null],[12,"XSetIOErrorHandler","","",64,null],[12,"XSetLineAttributes","","",64,null],[12,"XSetLocaleModifiers","","",64,null],[12,"XSetModifierMapping","","",64,null],[12,"XSetNormalHints","","",64,null],[12,"XSetPlaneMask","","",64,null],[12,"XSetPointerMapping","","",64,null],[12,"XSetRegion","","",64,null],[12,"XSetRGBColormaps","","",64,null],[12,"XSetScreenSaver","","",64,null],[12,"XSetSelectionOwner","","",64,null],[12,"XSetSizeHints","","",64,null],[12,"XSetStandardColormap","","",64,null],[12,"XSetStandardProperties","","",64,null],[12,"XSetState","","",64,null],[12,"XSetStipple","","",64,null],[12,"XSetSubwindowMode","","",64,null],[12,"XSetTextProperty","","",64,null],[12,"XSetTile","","",64,null],[12,"XSetTransientForHint","","",64,null],[12,"XSetTSOrigin","","",64,null],[12,"XSetWindowBackground","","",64,null],[12,"XSetWindowBackgroundPixmap","","",64,null],[12,"XSetWindowBorder","","",64,null],[12,"XSetWindowBorderPixmap","","",64,null],[12,"XSetWindowBorderWidth","","",64,null],[12,"XSetWindowColormap","","",64,null],[12,"XSetWMClientMachine","","",64,null],[12,"XSetWMColormapWindows","","",64,null],[12,"XSetWMHints","","",64,null],[12,"XSetWMIconName","","",64,null],[12,"XSetWMName","","",64,null],[12,"XSetWMNormalHints","","",64,null],[12,"XSetWMProperties","","",64,null],[12,"XSetWMProtocols","","",64,null],[12,"XSetWMSizeHints","","",64,null],[12,"XSetZoomHints","","",64,null],[12,"XShrinkRegion","","",64,null],[12,"XStoreBuffer","","",64,null],[12,"XStoreBytes","","",64,null],[12,"XStoreColor","","",64,null],[12,"XStoreColors","","",64,null],[12,"XStoreName","","",64,null],[12,"XStoreNamedColor","","",64,null],[12,"XStringListToTextProperty","","",64,null],[12,"XStringToKeysym","","",64,null],[12,"XSubImage","","",64,null],[12,"XSubtractRegion","","",64,null],[12,"XSupportsLocale","","",64,null],[12,"XSync","","",64,null],[12,"XSynchronize","","",64,null],[12,"XTextExtents","","",64,null],[12,"XTextExtents16","","",64,null],[12,"XTextPropertyToStringList","","",64,null],[12,"XTextWidth","","",64,null],[12,"XTextWidth16","","",64,null],[12,"XTranslateCoordinates","","",64,null],[12,"XUndefineCursor","","",64,null],[12,"XUngrabButton","","",64,null],[12,"XUngrabKey","","",64,null],[12,"XUngrabKeyboard","","",64,null],[12,"XUngrabPointer","","",64,null],[12,"XUngrabServer","","",64,null],[12,"XUninstallColormap","","",64,null],[12,"XUnionRectWithRegion","","",64,null],[12,"XUnionRegion","","",64,null],[12,"XUnloadFont","","",64,null],[12,"XUnlockDisplay","","",64,null],[12,"XUnmapSubwindows","","",64,null],[12,"XUnmapWindow","","",64,null],[12,"XUnregisterIMInstantiateCallback","","",64,null],[12,"XUnsetICFocus","","",64,null],[12,"Xutf8DrawImageString","","",64,null],[12,"Xutf8DrawString","","",64,null],[12,"Xutf8DrawText","","",64,null],[12,"Xutf8LookupString","","",64,null],[12,"Xutf8ResetIC","","",64,null],[12,"Xutf8SetWMProperties","","",64,null],[12,"Xutf8TextEscapement","","",64,null],[12,"Xutf8TextExtents","","",64,null],[12,"Xutf8TextListToTextProperty","","",64,null],[12,"Xutf8TextPerCharExtents","","",64,null],[12,"Xutf8TextPropertyToTextList","","",64,null],[12,"XVendorRelease","","",64,null],[12,"XVisualIDFromVisual","","",64,null],[12,"XWarpPointer","","",64,null],[12,"XwcDrawImageString","","",64,null],[12,"XwcDrawString","","",64,null],[12,"XwcDrawText","","",64,null],[12,"XwcFreeStringList","","",64,null],[12,"XwcLookupString","","",64,null],[12,"XwcResetIC","","",64,null],[12,"XwcTextEscapement","","",64,null],[12,"XwcTextExtents","","",64,null],[12,"XwcTextListToTextProperty","","",64,null],[12,"XwcTextPerCharExtents","","",64,null],[12,"XwcTextPropertyToTextList","","",64,null],[12,"XWhitePixel","","",64,null],[12,"XWhitePixelOfScreen","","",64,null],[12,"XWidthMMOfScreen","","",64,null],[12,"XWidthOfScreen","","",64,null],[12,"XWindowEvent","","",64,null],[12,"XWithdrawWindow","","",64,null],[12,"XWMGeometry","","",64,null],[12,"XWriteBitmapFile","","",64,null],[12,"XXorRegion","","",64,null],[12,"XCreateIC","","",64,null],[12,"XCreateOC","","",64,null],[12,"XGetICValues","","",64,null],[12,"XGetIMValues","","",64,null],[12,"XGetOCValues","","",64,null],[12,"XGetOMValues","","",64,null],[12,"XSetICValues","","",64,null],[12,"XSetIMValues","","",64,null],[12,"XSetOCValues","","",64,null],[12,"XSetOMValues","","",64,null],[12,"XVaCreateNestedList","","",64,null],[3,"_XcmsCCC","","",null,null],[3,"XcmsColor","","",null,null],[3,"_XcmsColorSpace","","",null,null],[3,"_XcmsFunctionSet","","",null,null],[3,"_XkbAction","","",null,null],[3,"_XkbBounds","","",null,null],[3,"_XkbChanges","","",null,null],[3,"_XkbClientMapRec","","",null,null],[3,"_XkbColor","","",null,null],[3,"_XkbComponentList","","",null,null],[3,"_XkbComponentNames","","",null,null],[3,"_XkbControls","","",null,null],[3,"_XkbControlsChanges","","",null,null],[3,"_XkbControlsNotify","","",null,null],[3,"_XkbDeviceChanges","","",null,null],[3,"_XkbDeviceInfo","","",null,null],[3,"_XkbDeviceLedInfo","","",null,null],[3,"_XkbDoodad","","",null,null],[3,"_XkbExtensionDeviceNotify","","",null,null],[3,"_XkbGeometry","","",null,null],[3,"_XkbGeometrySizes","","",null,null],[3,"_XkbIndicatorMapRec","","",null,null],[3,"_XkbKey","","",null,null],[3,"_XkbKeyType","","",null,null],[3,"_XkbMapChanges","","",null,null],[3,"_XkbMapNotifyEvent","","",null,null],[3,"_XkbMods","","",null,null],[3,"_XkbNameChanges","","",null,null],[3,"_XkbNamesNotify","","",null,null],[3,"_XkbOutline","","",null,null],[3,"_XkbOverlay","","",null,null],[3,"_XkbOverlayKey","","",null,null],[3,"_XkbOverlayRow","","",null,null],[3,"_XkbProperty","","",null,null],[3,"_XkbRow","","",null,null],[3,"_XkbSection","","",null,null],[3,"_XkbServerMapRec","","",null,null],[3,"_XkbShape","","",null,null],[3,"_XkbStateRec","","",null,null],[3,"_XkbSymInterpretRec","","",null,null],[3,"XEvent","","",null,null],[12,"pad","","",65,null],[3,"XAnyEvent","","",null,null],[12,"type_","","",66,null],[12,"serial","","",66,null],[12,"send_event","","",66,null],[12,"display","","",66,null],[12,"window","","",66,null],[3,"XButtonEvent","","",null,null],[12,"type_","","",67,null],[12,"serial","","",67,null],[12,"send_event","","",67,null],[12,"display","","",67,null],[12,"window","","",67,null],[12,"root","","",67,null],[12,"subwindow","","",67,null],[12,"time","","",67,null],[12,"x","","",67,null],[12,"y","","",67,null],[12,"x_root","","",67,null],[12,"y_root","","",67,null],[12,"state","","",67,null],[12,"button","","",67,null],[12,"same_screen","","",67,null],[3,"XCirculateEvent","","",null,null],[12,"type_","","",68,null],[12,"serial","","",68,null],[12,"send_event","","",68,null],[12,"display","","",68,null],[12,"event","","",68,null],[12,"window","","",68,null],[12,"place","","",68,null],[3,"XCirculateRequestEvent","","",null,null],[12,"type_","","",69,null],[12,"serial","","",69,null],[12,"send_event","","",69,null],[12,"display","","",69,null],[12,"parent","","",69,null],[12,"window","","",69,null],[12,"place","","",69,null],[3,"XClientMessageEvent","","",null,null],[12,"type_","","",70,null],[12,"serial","","",70,null],[12,"send_event","","",70,null],[12,"display","","",70,null],[12,"window","","",70,null],[12,"message_type","","",70,null],[12,"format","","",70,null],[12,"data","","",70,null],[3,"XColormapEvent","","",null,null],[12,"type_","","",71,null],[12,"serial","","",71,null],[12,"send_event","","",71,null],[12,"display","","",71,null],[12,"window","","",71,null],[12,"colormap","","",71,null],[12,"new","","",71,null],[12,"state","","",71,null],[3,"XConfigureEvent","","",null,null],[12,"type_","","",72,null],[12,"serial","","",72,null],[12,"send_event","","",72,null],[12,"display","","",72,null],[12,"event","","",72,null],[12,"window","","",72,null],[12,"x","","",72,null],[12,"y","","",72,null],[12,"width","","",72,null],[12,"height","","",72,null],[12,"border_width","","",72,null],[12,"above","","",72,null],[12,"override_redirect","","",72,null],[3,"XConfigureRequestEvent","","",null,null],[12,"type_","","",73,null],[12,"serial","","",73,null],[12,"send_event","","",73,null],[12,"display","","",73,null],[12,"parent","","",73,null],[12,"window","","",73,null],[12,"x","","",73,null],[12,"y","","",73,null],[12,"width","","",73,null],[12,"height","","",73,null],[12,"border_width","","",73,null],[12,"above","","",73,null],[12,"detail","","",73,null],[12,"value_mask","","",73,null],[3,"XCreateWindowEvent","","",null,null],[12,"type_","","",74,null],[12,"serial","","",74,null],[12,"send_event","","",74,null],[12,"display","","",74,null],[12,"parent","","",74,null],[12,"window","","",74,null],[12,"x","","",74,null],[12,"y","","",74,null],[12,"width","","",74,null],[12,"height","","",74,null],[12,"border_width","","",74,null],[12,"override_redirect","","",74,null],[3,"XCrossingEvent","","",null,null],[12,"type_","","",75,null],[12,"serial","","",75,null],[12,"send_event","","",75,null],[12,"display","","",75,null],[12,"window","","",75,null],[12,"root","","",75,null],[12,"subwindow","","",75,null],[12,"time","","",75,null],[12,"x","","",75,null],[12,"y","","",75,null],[12,"x_root","","",75,null],[12,"y_root","","",75,null],[12,"mode","","",75,null],[12,"detail","","",75,null],[12,"same_screen","","",75,null],[12,"focus","","",75,null],[12,"state","","",75,null],[3,"XDestroyWindowEvent","","",null,null],[12,"type_","","",76,null],[12,"serial","","",76,null],[12,"send_event","","",76,null],[12,"display","","",76,null],[12,"event","","",76,null],[12,"window","","",76,null],[3,"XErrorEvent","","",null,null],[12,"type_","","",77,null],[12,"display","","",77,null],[12,"serial","","",77,null],[12,"error_code","","",77,null],[12,"request_code","","",77,null],[12,"minor_code","","",77,null],[12,"resourceid","","",77,null],[3,"XExposeEvent","","",null,null],[12,"type_","","",78,null],[12,"serial","","",78,null],[12,"send_event","","",78,null],[12,"display","","",78,null],[12,"window","","",78,null],[12,"x","","",78,null],[12,"y","","",78,null],[12,"width","","",78,null],[12,"height","","",78,null],[12,"count","","",78,null],[3,"XFocusChangeEvent","","",null,null],[12,"type_","","",79,null],[12,"serial","","",79,null],[12,"send_event","","",79,null],[12,"display","","",79,null],[12,"window","","",79,null],[12,"mode","","",79,null],[12,"detail","","",79,null],[3,"XGraphicsExposeEvent","","",null,null],[12,"type_","","",80,null],[12,"serial","","",80,null],[12,"send_event","","",80,null],[12,"display","","",80,null],[12,"drawable","","",80,null],[12,"x","","",80,null],[12,"y","","",80,null],[12,"width","","",80,null],[12,"height","","",80,null],[12,"count","","",80,null],[12,"major_code","","",80,null],[12,"minor_code","","",80,null],[3,"XGravityEvent","","",null,null],[12,"type_","","",81,null],[12,"serial","","",81,null],[12,"send_event","","",81,null],[12,"display","","",81,null],[12,"event","","",81,null],[12,"window","","",81,null],[12,"x","","",81,null],[12,"y","","",81,null],[3,"XKeyEvent","","",null,null],[12,"type_","","",82,null],[12,"serial","","",82,null],[12,"send_event","","",82,null],[12,"display","","",82,null],[12,"window","","",82,null],[12,"root","","",82,null],[12,"subwindow","","",82,null],[12,"time","","",82,null],[12,"x","","",82,null],[12,"y","","",82,null],[12,"x_root","","",82,null],[12,"y_root","","",82,null],[12,"state","","",82,null],[12,"keycode","","",82,null],[12,"same_screen","","",82,null],[3,"XKeymapEvent","","",null,null],[12,"type_","","",83,null],[12,"serial","","",83,null],[12,"send_event","","",83,null],[12,"display","","",83,null],[12,"window","","",83,null],[12,"key_vector","","",83,null],[3,"XMapEvent","","",null,null],[12,"type_","","",84,null],[12,"serial","","",84,null],[12,"send_event","","",84,null],[12,"display","","",84,null],[12,"event","","",84,null],[12,"window","","",84,null],[12,"override_redirect","","",84,null],[3,"XMappingEvent","","",null,null],[12,"type_","","",85,null],[12,"serial","","",85,null],[12,"send_event","","",85,null],[12,"display","","",85,null],[12,"event","","",85,null],[12,"request","","",85,null],[12,"first_keycode","","",85,null],[12,"count","","",85,null],[3,"XMapRequestEvent","","",null,null],[12,"type_","","",86,null],[12,"serial","","",86,null],[12,"send_event","","",86,null],[12,"display","","",86,null],[12,"parent","","",86,null],[12,"window","","",86,null],[3,"XMotionEvent","","",null,null],[12,"type_","","",87,null],[12,"serial","","",87,null],[12,"send_event","","",87,null],[12,"display","","",87,null],[12,"window","","",87,null],[12,"root","","",87,null],[12,"subwindow","","",87,null],[12,"time","","",87,null],[12,"x","","",87,null],[12,"y","","",87,null],[12,"x_root","","",87,null],[12,"y_root","","",87,null],[12,"state","","",87,null],[12,"is_hint","","",87,null],[12,"same_screen","","",87,null],[3,"XNoExposeEvent","","",null,null],[12,"type_","","",88,null],[12,"serial","","",88,null],[12,"send_event","","",88,null],[12,"display","","",88,null],[12,"drawable","","",88,null],[12,"major_code","","",88,null],[12,"minor_code","","",88,null],[3,"XPropertyEvent","","",null,null],[12,"type_","","",89,null],[12,"serial","","",89,null],[12,"send_event","","",89,null],[12,"display","","",89,null],[12,"window","","",89,null],[12,"atom","","",89,null],[12,"time","","",89,null],[12,"state","","",89,null],[3,"XReparentEvent","","",null,null],[12,"type_","","",90,null],[12,"serial","","",90,null],[12,"send_event","","",90,null],[12,"display","","",90,null],[12,"event","","",90,null],[12,"window","","",90,null],[12,"parent","","",90,null],[12,"x","","",90,null],[12,"y","","",90,null],[12,"override_redirect","","",90,null],[3,"XResizeRequestEvent","","",null,null],[12,"type_","","",91,null],[12,"serial","","",91,null],[12,"send_event","","",91,null],[12,"display","","",91,null],[12,"window","","",91,null],[12,"width","","",91,null],[12,"height","","",91,null],[3,"XSelectionClearEvent","","",null,null],[12,"type_","","",92,null],[12,"serial","","",92,null],[12,"send_event","","",92,null],[12,"display","","",92,null],[12,"window","","",92,null],[12,"selection","","",92,null],[12,"time","","",92,null],[3,"XSelectionEvent","","",null,null],[12,"type_","","",93,null],[12,"serial","","",93,null],[12,"send_event","","",93,null],[12,"display","","",93,null],[12,"requestor","","",93,null],[12,"selection","","",93,null],[12,"target","","",93,null],[12,"property","","",93,null],[12,"time","","",93,null],[3,"XSelectionRequestEvent","","",null,null],[12,"type_","","",94,null],[12,"serial","","",94,null],[12,"send_event","","",94,null],[12,"display","","",94,null],[12,"owner","","",94,null],[12,"requestor","","",94,null],[12,"selection","","",94,null],[12,"target","","",94,null],[12,"property","","",94,null],[12,"time","","",94,null],[3,"XUnmapEvent","","",null,null],[12,"type_","","",95,null],[12,"serial","","",95,null],[12,"send_event","","",95,null],[12,"display","","",95,null],[12,"event","","",95,null],[12,"window","","",95,null],[12,"from_configure","","",95,null],[3,"XVisibilityEvent","","",null,null],[12,"type_","","",96,null],[12,"serial","","",96,null],[12,"send_event","","",96,null],[12,"display","","",96,null],[12,"window","","",96,null],[12,"state","","",96,null],[3,"_XkbCompatMapRec","","",null,null],[12,"sym_interpret","","",97,null],[12,"groups","","",97,null],[12,"num_si","","",97,null],[12,"size_si","","",97,null],[3,"_XkbDesc","","",null,null],[12,"dpy","","",98,null],[12,"flags","","",98,null],[12,"device_spec","","",98,null],[12,"min_key_code","","",98,null],[12,"max_key_code","","",98,null],[12,"ctrls","","",98,null],[12,"server","","",98,null],[12,"map","","",98,null],[12,"indicators","","",98,null],[12,"names","","",98,null],[12,"compat","","",98,null],[12,"geom","","",98,null],[3,"_XkbIndicatorRec","","",null,null],[12,"phys_indicators","","",99,null],[12,"maps","","",99,null],[3,"_XkbKeyAliasRec","","",null,null],[12,"real","","",100,null],[12,"alias","","",100,null],[3,"_XkbKeyNameRec","","",null,null],[12,"name","","",101,null],[3,"_XkbNamesRec","","",null,null],[12,"keycodes","","",102,null],[12,"geometry","","",102,null],[12,"symbols","","",102,null],[12,"types","","",102,null],[12,"compat","","",102,null],[12,"vmods","","",102,null],[12,"indicators","","",102,null],[12,"groups","","",102,null],[12,"keys","","",102,null],[12,"key_aliases","","",102,null],[12,"radio_groups","","",102,null],[12,"phys_symbols","","",102,null],[12,"num_keys","","",102,null],[12,"num_key_aliases","","",102,null],[12,"num_rg","","",102,null],[3,"Depth","","",null,null],[12,"depth","","",103,null],[12,"nvisuals","","",103,null],[12,"visuals","","",103,null],[3,"Screen","","",null,null],[12,"ext_data","","",104,null],[12,"display","","",104,null],[12,"root","","",104,null],[12,"width","","",104,null],[12,"height","","",104,null],[12,"mwidth","","",104,null],[12,"mheight","","",104,null],[12,"ndepths","","",104,null],[12,"depths","","",104,null],[12,"root_depth","","",104,null],[12,"root_visual","","",104,null],[12,"default_gc","","",104,null],[12,"cmap","","",104,null],[12,"white_pixel","","",104,null],[12,"black_pixel","","",104,null],[12,"max_maps","","",104,null],[12,"min_maps","","",104,null],[12,"backing_store","","",104,null],[12,"save_unders","","",104,null],[12,"root_input_mask","","",104,null],[3,"ScreenFormat","","",null,null],[12,"ext_data","","",105,null],[12,"depth","","",105,null],[12,"bits_per_pixel","","",105,null],[12,"scanline_pad","","",105,null],[3,"Visual","","",null,null],[12,"ext_data","","",106,null],[12,"visualid","","",106,null],[12,"class","","",106,null],[12,"red_mask","","",106,null],[12,"green_mask","","",106,null],[12,"blue_mask","","",106,null],[12,"bits_per_rgb","","",106,null],[12,"map_entries","","",106,null],[3,"XArc","","",null,null],[12,"x","","",107,null],[12,"y","","",107,null],[12,"width","","",107,null],[12,"height","","",107,null],[12,"angle1","","",107,null],[12,"angle2","","",107,null],[3,"XChar2b","","",null,null],[12,"byte1","","",108,null],[12,"byte2","","",108,null],[3,"XCharStruct","","",null,null],[12,"lbearing","","",109,null],[12,"rbearing","","",109,null],[12,"width","","",109,null],[12,"ascent","","",109,null],[12,"descent","","",109,null],[12,"attributes","","",109,null],[3,"XClassHint","","",null,null],[12,"res_name","","",110,null],[12,"res_class","","",110,null],[3,"XColor","","",null,null],[12,"pixel","","",111,null],[12,"red","","",111,null],[12,"green","","",111,null],[12,"blue","","",111,null],[12,"flags","","",111,null],[12,"pad","","",111,null],[3,"XComposeStatus","","",null,null],[12,"compose_ptr","","",112,null],[12,"chars_matched","","",112,null],[3,"XExtCodes","","",null,null],[12,"extension","","",113,null],[12,"major_opcode","","",113,null],[12,"first_event","","",113,null],[12,"first_error","","",113,null],[3,"XExtData","","",null,null],[12,"number","","",114,null],[12,"next","","",114,null],[12,"free_private","","",114,null],[12,"private_data","","",114,null],[3,"XFontProp","","",null,null],[12,"name","","",115,null],[12,"card32","","",115,null],[3,"XFontSetExtents","","",null,null],[12,"max_ink_extent","","",116,null],[12,"max_logical_extent","","",116,null],[3,"XFontStruct","","",null,null],[12,"ext_data","","",117,null],[12,"fid","","",117,null],[12,"direction","","",117,null],[12,"min_char_or_byte2","","",117,null],[12,"max_char_or_byte2","","",117,null],[12,"min_byte1","","",117,null],[12,"max_byte1","","",117,null],[12,"all_chars_exist","","",117,null],[12,"default_char","","",117,null],[12,"n_properties","","",117,null],[12,"properties","","",117,null],[12,"min_bounds","","",117,null],[12,"max_bounds","","",117,null],[12,"per_char","","",117,null],[12,"ascent","","",117,null],[12,"descent","","",117,null],[3,"XGCValues","","",null,null],[12,"function","","",118,null],[12,"plane_mask","","",118,null],[12,"foreground","","",118,null],[12,"background","","",118,null],[12,"line_width","","",118,null],[12,"line_style","","",118,null],[12,"cap_style","","",118,null],[12,"join_style","","",118,null],[12,"fill_style","","",118,null],[12,"fill_rule","","",118,null],[12,"arc_mode","","",118,null],[12,"tile","","",118,null],[12,"stipple","","",118,null],[12,"ts_x_origin","","",118,null],[12,"ts_y_origin","","",118,null],[12,"font","","",118,null],[12,"subwindow_mode","","",118,null],[12,"graphics_exposures","","",118,null],[12,"clip_x_origin","","",118,null],[12,"clip_y_origin","","",118,null],[12,"clip_mask","","",118,null],[12,"dash_offset","","",118,null],[12,"dashes","","",118,null],[3,"XGenericEventCookie","","",null,null],[12,"type_","","",119,null],[12,"serial","","",119,null],[12,"send_event","","",119,null],[12,"display","","",119,null],[12,"extension","","",119,null],[12,"evtype","","",119,null],[12,"cookie","","",119,null],[12,"data","","",119,null],[3,"XHostAddress","","",null,null],[12,"family","","",120,null],[12,"length","","",120,null],[12,"address","","",120,null],[3,"XIconSize","","",null,null],[12,"min_width","","",121,null],[12,"min_height","","",121,null],[12,"max_width","","",121,null],[12,"max_height","","",121,null],[12,"width_inc","","",121,null],[12,"height_inc","","",121,null],[3,"XImage","","",null,null],[12,"width","","",122,null],[12,"height","","",122,null],[12,"xoffset","","",122,null],[12,"format","","",122,null],[12,"data","","",122,null],[12,"byte_order","","",122,null],[12,"bitmap_unity","","",122,null],[12,"bitmap_bit_order","","",122,null],[12,"bitmap_pad","","",122,null],[12,"depth","","",122,null],[12,"bytes_per_line","","",122,null],[12,"bits_per_pixel","","",122,null],[12,"red_mask","","",122,null],[12,"green_mask","","",122,null],[12,"blue_mask","","",122,null],[12,"obdata","","",122,null],[12,"funcs","","",122,null],[3,"XKeyboardControl","","",null,null],[12,"key_click_percent","","",123,null],[12,"bell_percent","","",123,null],[12,"bell_pitch","","",123,null],[12,"bell_duration","","",123,null],[12,"led","","",123,null],[12,"led_mode","","",123,null],[12,"key","","",123,null],[12,"auto_repeat_mode","","",123,null],[3,"XKeyboardState","","",null,null],[12,"key_click_percent","","",124,null],[12,"bell_percent","","",124,null],[12,"bell_pitch","","",124,null],[12,"bell_duration","","",124,null],[12,"led_mask","","",124,null],[12,"global_auto_repeat","","",124,null],[12,"auto_repeats","","",124,null],[3,"XmbTextItem","","",null,null],[12,"chars","","",125,null],[12,"nchars","","",125,null],[12,"delta","","",125,null],[12,"font_set","","",125,null],[3,"XModifierKeymap","","",null,null],[12,"max_keypermod","","",126,null],[12,"modifiermap","","",126,null],[3,"XOMCharSetList","","",null,null],[12,"charset_count","","",127,null],[12,"charset_list","","",127,null],[3,"XPixmapFormatValues","","",null,null],[12,"depth","","",128,null],[12,"bits_per_pixel","","",128,null],[12,"scanline_pad","","",128,null],[3,"XPoint","","",null,null],[12,"x","","",129,null],[12,"y","","",129,null],[3,"XRectangle","","",null,null],[12,"x","","",130,null],[12,"y","","",130,null],[12,"width","","",130,null],[12,"height","","",130,null],[3,"XrmOptionDescRec","","",null,null],[12,"option","","",131,null],[12,"specifier","","",131,null],[12,"argKind","","",131,null],[12,"value","","",131,null],[3,"XrmValue","","",null,null],[12,"size","","",132,null],[12,"addr","","",132,null],[3,"XSegment","","",null,null],[12,"x1","","",133,null],[12,"y1","","",133,null],[12,"x2","","",133,null],[12,"y2","","",133,null],[3,"XSetWindowAttributes","","",null,null],[12,"background_pixmap","","",134,null],[12,"background_pixel","","",134,null],[12,"border_pixmap","","",134,null],[12,"border_pixel","","",134,null],[12,"bit_gravity","","",134,null],[12,"win_gravity","","",134,null],[12,"backing_store","","",134,null],[12,"backing_planes","","",134,null],[12,"backing_pixel","","",134,null],[12,"save_under","","",134,null],[12,"event_mask","","",134,null],[12,"do_not_propagate_mask","","",134,null],[12,"override_redirect","","",134,null],[12,"colormap","","",134,null],[12,"cursor","","",134,null],[3,"XSizeHints","","",null,null],[12,"flags","","",135,null],[12,"x","","",135,null],[12,"y","","",135,null],[12,"width","","",135,null],[12,"height","","",135,null],[12,"min_width","","",135,null],[12,"min_height","","",135,null],[12,"max_width","","",135,null],[12,"max_height","","",135,null],[12,"width_inc","","",135,null],[12,"height_inc","","",135,null],[12,"min_aspect","","",135,null],[12,"max_aspect","","",135,null],[12,"base_width","","",135,null],[12,"base_height","","",135,null],[12,"win_gravity","","",135,null],[3,"XStandardColormap","","",null,null],[12,"colormap","","",136,null],[12,"red_max","","",136,null],[12,"red_mult","","",136,null],[12,"green_max","","",136,null],[12,"green_mult","","",136,null],[12,"blue_max","","",136,null],[12,"blue_mult","","",136,null],[12,"base_pixel","","",136,null],[12,"visualid","","",136,null],[12,"killid","","",136,null],[3,"XTextItem","","",null,null],[12,"chars","","",137,null],[12,"nchars","","",137,null],[12,"delta","","",137,null],[12,"font","","",137,null],[3,"XTextItem16","","",null,null],[12,"chars","","",138,null],[12,"nchars","","",138,null],[12,"delta","","",138,null],[12,"font","","",138,null],[3,"XTextProperty","","",null,null],[12,"value","","",139,null],[12,"encoding","","",139,null],[12,"format","","",139,null],[12,"nitems","","",139,null],[3,"XTimeCoord","","",null,null],[12,"time","","",140,null],[12,"x","","",140,null],[12,"y","","",140,null],[3,"XVisualInfo","","",null,null],[12,"visual","","",141,null],[12,"visualid","","",141,null],[12,"screen","","",141,null],[12,"depth","","",141,null],[12,"class","","",141,null],[12,"red_mask","","",141,null],[12,"green_mask","","",141,null],[12,"blue_mask","","",141,null],[12,"colormap_size","","",141,null],[12,"bits_per_rgb","","",141,null],[3,"XwcTextItem","","",null,null],[12,"chars","","",142,null],[12,"nchars","","",142,null],[12,"delta","","",142,null],[12,"font_set","","",142,null],[3,"XWindowAttributes","","",null,null],[12,"x","","",143,null],[12,"y","","",143,null],[12,"width","","",143,null],[12,"height","","",143,null],[12,"border_width","","",143,null],[12,"depth","","",143,null],[12,"visual","","",143,null],[12,"root","","",143,null],[12,"class","","",143,null],[12,"bit_gravity","","",143,null],[12,"win_gravity","","",143,null],[12,"backing_store","","",143,null],[12,"backing_planes","","",143,null],[12,"backing_pixel","","",143,null],[12,"save_under","","",143,null],[12,"colormap","","",143,null],[12,"map_installed","","",143,null],[12,"map_state","","",143,null],[12,"all_event_masks","","",143,null],[12,"your_event_mask","","",143,null],[12,"do_not_propagate_mask","","",143,null],[12,"override_redirect","","",143,null],[12,"screen","","",143,null],[3,"XWindowChanges","","",null,null],[12,"x","","",144,null],[12,"y","","",144,null],[12,"width","","",144,null],[12,"height","","",144,null],[12,"border_width","","",144,null],[12,"sibling","","",144,null],[12,"stack_mode","","",144,null],[3,"XWMHints","","",null,null],[12,"flags","","",145,null],[12,"input","","",145,null],[12,"initial_state","","",145,null],[12,"icon_pixmap","","",145,null],[12,"icon_window","","",145,null],[12,"icon_x","","",145,null],[12,"icon_y","","",145,null],[12,"icon_mask","","",145,null],[12,"window_group","","",145,null],[3,"AspectRatio","","",null,null],[12,"x","","",146,null],[12,"y","","",146,null],[3,"ClientMessageData","","",null,null],[3,"ImageFns","","",null,null],[12,"create_image","","",147,null],[12,"destroy_image","","",147,null],[12,"get_pixel","","",147,null],[12,"put_pixel","","",147,null],[12,"sub_image","","",147,null],[12,"add_pixel","","",147,null],[4,"_XDisplay","","",null,null],[4,"xError","","",null,null],[4,"xEvent","","",null,null],[4,"_XGC","","",null,null],[4,"_XIC","","",null,null],[4,"_XIM","","",null,null],[4,"_XRegion","","",null,null],[4,"_XOC","","",null,null],[4,"_XOM","","",null,null],[4,"_XrmHashBucketRec","","",null,null],[6,"Atom","","",null,null],[6,"Bool","","",null,null],[6,"Colormap","","",null,null],[6,"Cursor","","",null,null],[6,"Drawable","","",null,null],[6,"Font","","",null,null],[6,"GContext","","",null,null],[6,"KeyCode","","",null,null],[6,"KeySym","","",null,null],[6,"Mask","","",null,null],[6,"Pixmap","","",null,null],[6,"Status","","",null,null],[6,"Time","","",null,null],[6,"VisualID","","",null,null],[6,"Window","","",null,null],[6,"XID","","",null,null],[6,"XPointer","","",null,null],[6,"XEDataObject","","",null,null],[6,"Display","","",null,null],[6,"GC","","",null,null],[6,"Region","","",null,null],[6,"XcmsCCC","","",null,null],[6,"XcmsColorSpace","","",null,null],[6,"XcmsFunctionSet","","",null,null],[6,"XFontSet","","",null,null],[6,"XIC","","",null,null],[6,"XIM","","",null,null],[6,"XkbAction","","",null,null],[6,"XkbBoundsPtr","","",null,null],[6,"XkbChangesPtr","","",null,null],[6,"XkbClientMapPtr","","",null,null],[6,"XkbColorPtr","","",null,null],[6,"XkbCompatMapPtr","","",null,null],[6,"XkbComponentListPtr","","",null,null],[6,"XkbComponentNamesPtr","","",null,null],[6,"XkbControlsChangesPtr","","",null,null],[6,"XkbControlsNotifyEvent","","",null,null],[6,"XkbControlsPtr","","",null,null],[6,"XkbDescPtr","","",null,null],[6,"XkbDeviceChangesPtr","","",null,null],[6,"XkbDeviceInfoPtr","","",null,null],[6,"XkbDeviceLedInfoPtr","","",null,null],[6,"XkbDoodadPtr","","",null,null],[6,"XkbExtensionDeviceNotifyEvent","","",null,null],[6,"XkbGeometryPtr","","",null,null],[6,"XkbGeometrySizesPtr","","",null,null],[6,"XkbIndicatorMapPtr","","",null,null],[6,"XkbIndicatorMapRec","","",null,null],[6,"XkbIndicatorPtr","","",null,null],[6,"XkbKeyTypePtr","","",null,null],[6,"XkbMapChangesPtr","","",null,null],[6,"XkbMapNotifyEvent","","",null,null],[6,"XkbModsPtr","","",null,null],[6,"XkbModsRec","","",null,null],[6,"XkbNameChangesPtr","","",null,null],[6,"XkbNamesNotifyEvent","","",null,null],[6,"XkbNamesPtr","","",null,null],[6,"XkbKeyAliasPtr","","",null,null],[6,"XkbKeyNamePtr","","",null,null],[6,"XkbKeyPtr","","",null,null],[6,"XkbOutlinePtr","","",null,null],[6,"XkbOverlayKeyPtr","","",null,null],[6,"XkbOverlayPtr","","",null,null],[6,"XkbOverlayRowPtr","","",null,null],[6,"XkbPropertyPtr","","",null,null],[6,"XkbRowPtr","","",null,null],[6,"XkbSectionPtr","","",null,null],[6,"XkbServerMapPtr","","",null,null],[6,"XkbShapePtr","","",null,null],[6,"XkbStatePtr","","",null,null],[6,"XkbSymInterpretPtr","","",null,null],[6,"XOM","","",null,null],[6,"XrmDatabase","","",null,null],[6,"XrmOptionDescList","","",null,null],[6,"XConnectionWatchProc","","",null,null],[6,"XICCEncodingStyle","","",null,null],[6,"XOrientation","","",null,null],[6,"XrmBinding","","",null,null],[6,"XrmOptionKind","","",null,null],[6,"XButtonPressedEvent","","",null,null],[6,"XButtonReleasedEvent","","",null,null],[6,"XEnterWindowEvent","","",null,null],[6,"XLeaveWindowEvent","","",null,null],[6,"XFocusInEvent","","",null,null],[6,"XFocusOutEvent","","",null,null],[6,"XKeyPressedEvent","","",null,null],[6,"XKeyReleasedEvent","","",null,null],[6,"XPointerMovedEvent","","",null,null],[17,"AllocNone","","",null,null],[17,"AllocAll","","",null,null],[17,"XkbKeyNameLength","","",null,null],[17,"XkbNumIndicators","","",null,null],[17,"XkbNumKbdGroups","","",null,null],[17,"XkbNumVirtualMods","","",null,null],[17,"XA_PRIMARY","","",null,null],[17,"XA_SECONDARY","","",null,null],[17,"XA_ARC","","",null,null],[17,"XA_ATOM","","",null,null],[17,"XA_BITMAP","","",null,null],[17,"XA_CARDINAL","","",null,null],[17,"XA_COLORMAP","","",null,null],[17,"XA_CURSOR","","",null,null],[17,"XA_CUT_BUFFER0","","",null,null],[17,"XA_CUT_BUFFER1","","",null,null],[17,"XA_CUT_BUFFER2","","",null,null],[17,"XA_CUT_BUFFER3","","",null,null],[17,"XA_CUT_BUFFER4","","",null,null],[17,"XA_CUT_BUFFER5","","",null,null],[17,"XA_CUT_BUFFER6","","",null,null],[17,"XA_CUT_BUFFER7","","",null,null],[17,"XA_DRAWABLE","","",null,null],[17,"XA_FONT","","",null,null],[17,"XA_INTEGER","","",null,null],[17,"XA_PIXMAP","","",null,null],[17,"XA_POINT","","",null,null],[17,"XA_RECTANGLE","","",null,null],[17,"XA_RESOURCE_MANAGER","","",null,null],[17,"XA_RGB_COLOR_MAP","","",null,null],[17,"XA_RGB_BEST_MAP","","",null,null],[17,"XA_RGB_BLUE_MAP","","",null,null],[17,"XA_RGB_DEFAULT_MAP","","",null,null],[17,"XA_RGB_GRAY_MAP","","",null,null],[17,"XA_RGB_GREEN_MAP","","",null,null],[17,"XA_RGB_RED_MAP","","",null,null],[17,"XA_STRING","","",null,null],[17,"XA_VISUALID","","",null,null],[17,"XA_WINDOW","","",null,null],[17,"XA_WM_COMMAND","","",null,null],[17,"XA_WM_HINTS","","",null,null],[17,"XA_WM_CLIENT_MACHINE","","",null,null],[17,"XA_WM_ICON_NAME","","",null,null],[17,"XA_WM_ICON_SIZE","","",null,null],[17,"XA_WM_NAME","","",null,null],[17,"XA_WM_NORMAL_HINTS","","",null,null],[17,"XA_WM_SIZE_HINTS","","",null,null],[17,"XA_WM_ZOOM_HINTS","","",null,null],[17,"XA_MIN_SPACE","","",null,null],[17,"XA_NORM_SPACE","","",null,null],[17,"XA_MAX_SPACE","","",null,null],[17,"XA_END_SPACE","","",null,null],[17,"XA_SUPERSCRIPT_X","","",null,null],[17,"XA_SUPERSCRIPT_Y","","",null,null],[17,"XA_SUBSCRIPT_X","","",null,null],[17,"XA_SUBSCRIPT_Y","","",null,null],[17,"XA_UNDERLINE_POSITION","","",null,null],[17,"XA_UNDERLINE_THICKNESS","","",null,null],[17,"XA_STRIKEOUT_ASCENT","","",null,null],[17,"XA_STRIKEOUT_DESCENT","","",null,null],[17,"XA_ITALIC_ANGLE","","",null,null],[17,"XA_X_HEIGHT","","",null,null],[17,"XA_QUAD_WIDTH","","",null,null],[17,"XA_WEIGHT","","",null,null],[17,"XA_POINT_SIZE","","",null,null],[17,"XA_RESOLUTION","","",null,null],[17,"XA_COPYRIGHT","","",null,null],[17,"XA_NOTICE","","",null,null],[17,"XA_FONT_NAME","","",null,null],[17,"XA_FAMILY_NAME","","",null,null],[17,"XA_FULL_NAME","","",null,null],[17,"XA_CAP_HEIGHT","","",null,null],[17,"XA_WM_CLASS","","",null,null],[17,"XA_WM_TRANSIENT_FOR","","",null,null],[17,"False","","",null,null],[17,"True","","",null,null],[17,"Unsorted","","",null,null],[17,"YSorted","","",null,null],[17,"YXSorted","","",null,null],[17,"YXBanded","","",null,null],[17,"DoRed","","",null,null],[17,"DoGreen","","",null,null],[17,"DoBlue","","",null,null],[17,"Success","","",null,null],[17,"BadRequest","","",null,null],[17,"BadValue","","",null,null],[17,"BadWindow","","",null,null],[17,"BadPixmap","","",null,null],[17,"BadAtom","","",null,null],[17,"BadCursor","","",null,null],[17,"BadFont","","",null,null],[17,"BadMatch","","",null,null],[17,"BadDrawable","","",null,null],[17,"BadAccess","","",null,null],[17,"BadAlloc","","",null,null],[17,"BadColor","","",null,null],[17,"BadGC","","",null,null],[17,"BadIDChoice","","",null,null],[17,"BadName","","",null,null],[17,"BadLength","","",null,null],[17,"BadImplementation","","",null,null],[17,"FirstExtensionError","","",null,null],[17,"LastExtensionError","","",null,null],[17,"KeyPress","","",null,null],[17,"KeyRelease","","",null,null],[17,"ButtonPress","","",null,null],[17,"ButtonRelease","","",null,null],[17,"MotionNotify","","",null,null],[17,"EnterNotify","","",null,null],[17,"LeaveNotify","","",null,null],[17,"FocusIn","","",null,null],[17,"FocusOut","","",null,null],[17,"KeymapNotify","","",null,null],[17,"Expose","","",null,null],[17,"GraphicsExpose","","",null,null],[17,"NoExpose","","",null,null],[17,"VisibilityNotify","","",null,null],[17,"CreateNotify","","",null,null],[17,"DestroyNotify","","",null,null],[17,"UnmapNotify","","",null,null],[17,"MapNotify","","",null,null],[17,"MapRequest","","",null,null],[17,"ReparentNotify","","",null,null],[17,"ConfigureNotify","","",null,null],[17,"ConfigureRequest","","",null,null],[17,"GravityNotify","","",null,null],[17,"ResizeRequest","","",null,null],[17,"CirculateNotify","","",null,null],[17,"CirculateRequest","","",null,null],[17,"PropertyNotify","","",null,null],[17,"SelectionClear","","",null,null],[17,"SelectionRequest","","",null,null],[17,"SelectionNotify","","",null,null],[17,"ColormapNotify","","",null,null],[17,"ClientMessage","","",null,null],[17,"MappingNotify","","",null,null],[17,"GenericEvent","","",null,null],[17,"LASTEvent","","",null,null],[17,"NoEventMask","","",null,null],[17,"KeyPressMask","","",null,null],[17,"KeyReleaseMask","","",null,null],[17,"ButtonPressMask","","",null,null],[17,"ButtonReleaseMask","","",null,null],[17,"EnterWindowMask","","",null,null],[17,"LeaveWindowMask","","",null,null],[17,"PointerMotionMask","","",null,null],[17,"PointerMotionHintMask","","",null,null],[17,"Button1MotionMask","","",null,null],[17,"Button2MotionMask","","",null,null],[17,"Button3MotionMask","","",null,null],[17,"Button4MotionMask","","",null,null],[17,"Button5MotionMask","","",null,null],[17,"ButtonMotionMask","","",null,null],[17,"KeymapStateMask","","",null,null],[17,"ExposureMask","","",null,null],[17,"VisibilityChangeMask","","",null,null],[17,"StructureNotifyMask","","",null,null],[17,"ResizeRedirectMask","","",null,null],[17,"SubstructureNotifyMask","","",null,null],[17,"SubstructureRedirectMask","","",null,null],[17,"FocusChangeMask","","",null,null],[17,"PropertyChangeMask","","",null,null],[17,"ColormapChangeMask","","",null,null],[17,"OwnerGrabButtonMask","","",null,null],[17,"PropModeReplace","","",null,null],[17,"PropModePrepend","","",null,null],[17,"PropModeAppend","","",null,null],[17,"ShiftMapIndex","","",null,null],[17,"LockMapIndex","","",null,null],[17,"ControlMapIndex","","",null,null],[17,"Mod1MapIndex","","",null,null],[17,"Mod2MapIndex","","",null,null],[17,"Mod3MapIndex","","",null,null],[17,"Mod4MapIndex","","",null,null],[17,"Mod5MapIndex","","",null,null],[17,"Button1Mask","","",null,null],[17,"Button2Mask","","",null,null],[17,"Button3Mask","","",null,null],[17,"Button4Mask","","",null,null],[17,"Button5Mask","","",null,null],[17,"AnyModifier","","",null,null],[17,"NotifyNormal","","",null,null],[17,"NotifyGrab","","",null,null],[17,"NotifyUngrab","","",null,null],[17,"NotifyWhileGrabbed","","",null,null],[17,"NotifyHint","","",null,null],[17,"NotifyAncestor","","",null,null],[17,"NotifyVirtual","","",null,null],[17,"NotifyInferior","","",null,null],[17,"NotifyNonlinear","","",null,null],[17,"NotifyNonlinearVirtual","","",null,null],[17,"NotifyPointer","","",null,null],[17,"NotifyPointerRoot","","",null,null],[17,"NotifyDetailNone","","",null,null],[17,"VisibilityUnobscured","","",null,null],[17,"VisibilityPartiallyObscured","","",null,null],[17,"VisibilityFullyObscured","","",null,null],[17,"PlaceOnTop","","",null,null],[17,"PlaceOnBottom","","",null,null],[17,"FamilyInternet","","",null,null],[17,"FamilyDECnet","","",null,null],[17,"FamilyChaos","","",null,null],[17,"FamilyInternet6","","",null,null],[17,"FamilyServerInterpreted","","",null,null],[17,"PropertyNewValue","","",null,null],[17,"PropertyDelete","","",null,null],[17,"ColormapUninstalled","","",null,null],[17,"ColormapInstalled","","",null,null],[17,"GrabModeSync","","",null,null],[17,"GrabModeAsync","","",null,null],[17,"GrabSuccess","","",null,null],[17,"AlreadyGrabbed","","",null,null],[17,"GrabInvalidTime","","",null,null],[17,"GrabNotViewable","","",null,null],[17,"GrabFrozen","","",null,null],[17,"AsyncPointer","","",null,null],[17,"SyncPointer","","",null,null],[17,"ReplayPointer","","",null,null],[17,"AsyncKeyboard","","",null,null],[17,"SyncKeyboard","","",null,null],[17,"ReplayKeyboard","","",null,null],[17,"AsyncBoth","","",null,null],[17,"SyncBoth","","",null,null],[17,"RevertToNone","","",null,null],[17,"RevertToPointerRoot","","",null,null],[17,"RevertToParent","","",null,null],[17,"CWX","","",null,null],[17,"CWY","","",null,null],[17,"CWWidth","","",null,null],[17,"CWHeight","","",null,null],[17,"CWBorderWidth","","",null,null],[17,"CWSibling","","",null,null],[17,"CWStackMode","","",null,null],[17,"ForgetGravity","","",null,null],[17,"UnmapGravity","","",null,null],[17,"NorthWestGravity","","",null,null],[17,"NorthGravity","","",null,null],[17,"NorthEastGravity","","",null,null],[17,"WestGravity","","",null,null],[17,"CenterGravity","","",null,null],[17,"EastGravity","","",null,null],[17,"SouthWestGravity","","",null,null],[17,"SouthGravity","","",null,null],[17,"SouthEastGravity","","",null,null],[17,"StaticGravity","","",null,null],[17,"XYBitmap","","",null,null],[17,"XYPixmap","","",null,null],[17,"ZPixmap","","",null,null],[17,"NotUseful","","",null,null],[17,"WhenMapped","","",null,null],[17,"Always","","",null,null],[17,"IsUnmapped","","",null,null],[17,"IsUnviewable","","",null,null],[17,"IsViewable","","",null,null],[17,"ShiftMask","","",null,null],[17,"LockMask","","",null,null],[17,"ControlMask","","",null,null],[17,"Mod1Mask","","",null,null],[17,"Mod2Mask","","",null,null],[17,"Mod3Mask","","",null,null],[17,"Mod4Mask","","",null,null],[17,"Mod5Mask","","",null,null],[17,"Button1","","",null,null],[17,"Button2","","",null,null],[17,"Button3","","",null,null],[17,"Button4","","",null,null],[17,"Button5","","",null,null],[17,"USPosition","","",null,null],[17,"USSize","","",null,null],[17,"PPosition","","",null,null],[17,"PSize","","",null,null],[17,"PMinSize","","",null,null],[17,"PMaxSize","","",null,null],[17,"PResizeInc","","",null,null],[17,"PAspect","","",null,null],[17,"PBaseSize","","",null,null],[17,"PWinGravity","","",null,null],[17,"PAllHints","","",null,null],[17,"SetModeInsert","","",null,null],[17,"SetModeDelete","","",null,null],[17,"DestroyAll","","",null,null],[17,"RetainPermanent","","",null,null],[17,"RetainTemporary","","",null,null],[17,"Above","","",null,null],[17,"Below","","",null,null],[17,"TopIf","","",null,null],[17,"BottomIf","","",null,null],[17,"Opposite","","",null,null],[17,"RaiseLowest","","",null,null],[17,"LowerHighest","","",null,null],[17,"GXclear","","",null,null],[17,"GXand","","",null,null],[17,"GXandReverse","","",null,null],[17,"GXcopy","","",null,null],[17,"GXandInverted","","",null,null],[17,"GXnoop","","",null,null],[17,"GXxor","","",null,null],[17,"GXor","","",null,null],[17,"GXnor","","",null,null],[17,"GXequiv","","",null,null],[17,"GXinvert","","",null,null],[17,"GXorReverse","","",null,null],[17,"GXcopyInverted","","",null,null],[17,"GXorInverted","","",null,null],[17,"GXnand","","",null,null],[17,"GXset","","",null,null],[17,"LineSolid","","",null,null],[17,"LineOnOffDash","","",null,null],[17,"LineDoubleDash","","",null,null],[17,"CapNotLast","","",null,null],[17,"CapButt","","",null,null],[17,"CapRound","","",null,null],[17,"CapProjecting","","",null,null],[17,"JoinMiter","","",null,null],[17,"JoinRound","","",null,null],[17,"JoinBevel","","",null,null],[17,"FillSolid","","",null,null],[17,"FillTiled","","",null,null],[17,"FillStippled","","",null,null],[17,"FillOpaqueStippled","","",null,null],[17,"EvenOddRule","","",null,null],[17,"WindingRule","","",null,null],[17,"ClipByChildren","","",null,null],[17,"IncludeInferiors","","",null,null],[17,"CoordModeOrigin","","",null,null],[17,"CoordModePrevious","","",null,null],[17,"Complex","","",null,null],[17,"Nonconvex","","",null,null],[17,"Convex","","",null,null],[17,"ArcChord","","",null,null],[17,"ArcPieSlice","","",null,null],[17,"GCFunction","","",null,null],[17,"GCPlaneMask","","",null,null],[17,"GCForeground","","",null,null],[17,"GCBackground","","",null,null],[17,"GCLineWidth","","",null,null],[17,"GCLineStyle","","",null,null],[17,"GCCapStyle","","",null,null],[17,"GCJoinStyle","","",null,null],[17,"GCFillStyle","","",null,null],[17,"GCFillRule","","",null,null],[17,"GCTile","","",null,null],[17,"GCStipple","","",null,null],[17,"GCTileStipXOrigin","","",null,null],[17,"GCTileStipYOrigin","","",null,null],[17,"GCFont","","",null,null],[17,"GCSubwindowMode","","",null,null],[17,"GCGraphicsExposures","","",null,null],[17,"GCClipXOrigin","","",null,null],[17,"GCClipYOrigin","","",null,null],[17,"GCClipMask","","",null,null],[17,"GCDashOffset","","",null,null],[17,"GCDashList","","",null,null],[17,"GCArcMode","","",null,null],[17,"GCLastBit","","",null,null],[17,"FontLeftToRight","","",null,null],[17,"FontRightToLeft","","",null,null],[17,"FontChange","","",null,null],[17,"CursorShape","","",null,null],[17,"TileShape","","",null,null],[17,"StippleShape","","",null,null],[17,"AutoRepeatModeOff","","",null,null],[17,"AutoRepeatModeOn","","",null,null],[17,"AutoRepeatModeDefault","","",null,null],[17,"LedModeOff","","",null,null],[17,"LedModeOn","","",null,null],[17,"KBKeyClickPercent","","",null,null],[17,"KBBellPercent","","",null,null],[17,"KBBellPitch","","",null,null],[17,"KBBellDuration","","",null,null],[17,"KBLed","","",null,null],[17,"KBLedMode","","",null,null],[17,"KBKey","","",null,null],[17,"KBAutoRepeatMode","","",null,null],[17,"MappingSuccess","","",null,null],[17,"MappingBusy","","",null,null],[17,"MappingFailed","","",null,null],[17,"MappingModifier","","",null,null],[17,"MappingKeyboard","","",null,null],[17,"MappingPointer","","",null,null],[17,"DontPreferBlanking","","",null,null],[17,"PreferBlanking","","",null,null],[17,"DefaultBlanking","","",null,null],[17,"DisableScreenSaver","","",null,null],[17,"DisableScreenInterval","","",null,null],[17,"DontAllowExposures","","",null,null],[17,"AllowExposures","","",null,null],[17,"DefaultExposures","","",null,null],[17,"ScreenSaverReset","","",null,null],[17,"ScreenSaverActive","","",null,null],[17,"HostInsert","","",null,null],[17,"HostDelete","","",null,null],[17,"EnableAccess","","",null,null],[17,"DisableAccess","","",null,null],[17,"StaticGray","","",null,null],[17,"GrayScale","","",null,null],[17,"StaticColor","","",null,null],[17,"PseudoColor","","",null,null],[17,"TrueColor","","",null,null],[17,"DirectColor","","",null,null],[17,"VisualNoMask","","",null,null],[17,"VisualIDMask","","",null,null],[17,"VisualScreenMask","","",null,null],[17,"VisualDepthMask","","",null,null],[17,"VisualClassMask","","",null,null],[17,"VisualRedMaskMask","","",null,null],[17,"VisualGreenMaskMask","","",null,null],[17,"VisualBlueMaskMask","","",null,null],[17,"VisualColormapSizeMask","","",null,null],[17,"VisualBitsPerRGBMask","","",null,null],[17,"VisualAllMask","","",null,null],[17,"CWBackPixmap","","",null,null],[17,"CWBackPixel","","",null,null],[17,"CWBorderPixmap","","",null,null],[17,"CWBorderPixel","","",null,null],[17,"CWBitGravity","","",null,null],[17,"CWWinGravity","","",null,null],[17,"CWBackingStore","","",null,null],[17,"CWBackingPlanes","","",null,null],[17,"CWBackingPixel","","",null,null],[17,"CWOverrideRedirect","","",null,null],[17,"CWSaveUnder","","",null,null],[17,"CWEventMask","","",null,null],[17,"CWDontPropagate","","",null,null],[17,"CWColormap","","",null,null],[17,"CWCursor","","",null,null],[17,"InputOutput","","",null,null],[17,"InputOnly","","",null,null],[17,"XIMPreeditArea","","",null,null],[17,"XIMPreeditCallbacks","","",null,null],[17,"XIMPreeditPosition","","",null,null],[17,"XIMPreeditNothing","","",null,null],[17,"XIMPreeditNone","","",null,null],[17,"XIMStatusArea","","",null,null],[17,"XIMStatusCallbacks","","",null,null],[17,"XIMStatusNothing","","",null,null],[17,"XIMStatusNone","","",null,null],[17,"LSBFirst","","",null,null],[17,"MSBFirst","","",null,null],[17,"ParentRelative","","",null,null],[17,"CopyFromParent","","",null,null],[17,"PointerWindow","","",null,null],[17,"InputFocus","","",null,null],[17,"PointerRoot","","",null,null],[17,"AnyPropertyType","","",null,null],[17,"AnyKey","","",null,null],[17,"AnyButton","","",null,null],[17,"AllTemporary","","",null,null],[17,"CurrentTime","","",null,null],[17,"NoSymbol","","",null,null],[17,"X_PROTOCOL","","",null,null],[17,"X_PROTOCOL_REVISION","","",null,null],[17,"XNVaNestedList","","",null,null],[17,"XNQueryInputStyle","","",null,null],[17,"XNClientWindow","","",null,null],[17,"XNInputStyle","","",null,null],[17,"XNFocusWindow","","",null,null],[17,"XNResourceName","","",null,null],[17,"XNResourceClass","","",null,null],[17,"XNGeometryCallback","","",null,null],[17,"XNDestroyCallback","","",null,null],[17,"XNFilterEvents","","",null,null],[17,"XNPreeditStartCallback","","",null,null],[17,"XNPreeditDoneCallback","","",null,null],[17,"XNPreeditDrawCallback","","",null,null],[17,"XNPreeditCaretCallback","","",null,null],[17,"XNPreeditStateNotifyCallback","","",null,null],[17,"XNPreeditAttributes","","",null,null],[17,"XNStatusStartCallback","","",null,null],[17,"XNStatusDoneCallback","","",null,null],[17,"XNStatusDrawCallback","","",null,null],[17,"XNStatusAttributes","","",null,null],[17,"XNArea","","",null,null],[17,"XNAreaNeeded","","",null,null],[17,"XNSpotLocation","","",null,null],[17,"XNColormap","","",null,null],[17,"XNStdColormap","","",null,null],[17,"XNForeground","","",null,null],[17,"XNBackground","","",null,null],[17,"XNBackgroundPixmap","","",null,null],[17,"XNFontSet","","",null,null],[17,"XNLineSpace","","",null,null],[17,"XNCursor","","",null,null],[17,"XNQueryIMValuesList","","",null,null],[17,"XNQueryICValuesList","","",null,null],[17,"XNVisiblePosition","","",null,null],[17,"XNR6PreeditCallback","","",null,null],[17,"XNStringConversionCallback","","",null,null],[17,"XNStringConversion","","",null,null],[17,"XNResetState","","",null,null],[17,"XNHotKey","","",null,null],[17,"XNHotKeyState","","",null,null],[17,"XNPreeditState","","",null,null],[17,"XNSeparatorofNestedList","","",null,null],[17,"XBufferOverflow","","",null,null],[17,"XLookupNone","","",null,null],[17,"XLookupChars","","",null,null],[17,"XLookupKeySym","","",null,null],[17,"XLookupBoth","","",null,null],[11,"open","","",64,{"inputs":[{"name":"xlib"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"xevent"}],"output":{"name":"xevent"}}],[11,"get_type","","",65,{"inputs":[{"name":"xevent"}],"output":{"name":"c_int"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",65,{"inputs":[{"name":"xevent"},{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"eq","","",66,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",66,{"inputs":[{"name":"xanyevent"},{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"eq","","",67,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",67,{"inputs":[{"name":"xbuttonevent"},{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"eq","","",68,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",68,{"inputs":[{"name":"xcirculateevent"},{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"eq","","",69,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",69,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"eq","","",70,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",70,{"inputs":[{"name":"xclientmessageevent"},{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"eq","","",71,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",71,{"inputs":[{"name":"xcolormapevent"},{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"eq","","",72,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",72,{"inputs":[{"name":"xconfigureevent"},{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"eq","","",73,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",73,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"eq","","",74,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",74,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"eq","","",75,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",75,{"inputs":[{"name":"xcrossingevent"},{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"eq","","",76,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",76,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"eq","","",77,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",77,{"inputs":[{"name":"xerrorevent"},{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"eq","","",78,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",78,{"inputs":[{"name":"xexposeevent"},{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"eq","","",79,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",79,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"eq","","",80,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",80,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"eq","","",81,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",81,{"inputs":[{"name":"xgravityevent"},{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"eq","","",82,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",82,{"inputs":[{"name":"xkeyevent"},{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"eq","","",83,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",83,{"inputs":[{"name":"xkeymapevent"},{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"eq","","",84,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",84,{"inputs":[{"name":"xmapevent"},{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"eq","","",85,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",85,{"inputs":[{"name":"xmappingevent"},{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"eq","","",86,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",86,{"inputs":[{"name":"xmaprequestevent"},{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"eq","","",87,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",87,{"inputs":[{"name":"xmotionevent"},{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"eq","","",88,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",88,{"inputs":[{"name":"xnoexposeevent"},{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"eq","","",89,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",89,{"inputs":[{"name":"xpropertyevent"},{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"eq","","",90,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",90,{"inputs":[{"name":"xreparentevent"},{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"eq","","",91,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",91,{"inputs":[{"name":"xresizerequestevent"},{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"eq","","",92,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",92,{"inputs":[{"name":"xselectionclearevent"},{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"eq","","",93,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",93,{"inputs":[{"name":"xselectionevent"},{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"eq","","",94,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",94,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"eq","","",95,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",95,{"inputs":[{"name":"xunmapevent"},{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"eq","","",96,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",96,{"inputs":[{"name":"xvisibilityevent"},{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",98,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"_xkbdesc"}],"output":{"name":"_xkbdesc"}}],[11,"eq","","",100,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"_xkbkeyaliasrec"}],"output":{"name":"_xkbkeyaliasrec"}}],[11,"eq","","",101,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"_xkbkeynamerec"}],"output":{"name":"_xkbkeynamerec"}}],[11,"eq","","",102,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"_xkbnamesrec"}],"output":{"name":"_xkbnamesrec"}}],[11,"eq","","",103,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"eq","","",104,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"screen"}],"output":{"name":"screen"}}],[11,"eq","","",105,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"screenformat"}],"output":{"name":"screenformat"}}],[11,"eq","","",106,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"visual"}],"output":{"name":"visual"}}],[11,"eq","","",107,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"xarc"}],"output":{"name":"xarc"}}],[11,"eq","","",108,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"xchar2b"}],"output":{"name":"xchar2b"}}],[11,"eq","","",109,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"xcharstruct"}],"output":{"name":"xcharstruct"}}],[11,"eq","","",110,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"xclasshint"}],"output":{"name":"xclasshint"}}],[11,"eq","","",111,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"xcolor"}],"output":{"name":"xcolor"}}],[11,"eq","","",112,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"xcomposestatus"}],"output":{"name":"xcomposestatus"}}],[11,"eq","","",113,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"xextcodes"}],"output":{"name":"xextcodes"}}],[11,"eq","","",115,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"xfontprop"}],"output":{"name":"xfontprop"}}],[11,"eq","","",116,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"xfontsetextents"}],"output":{"name":"xfontsetextents"}}],[11,"eq","","",117,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"xfontstruct"}],"output":{"name":"xfontstruct"}}],[11,"eq","","",118,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"xgcvalues"}],"output":{"name":"xgcvalues"}}],[11,"eq","","",119,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xgenericeventcookie"}}],[11,"from","","",119,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xevent"}],"output":{"name":"xgenericeventcookie"}}],[11,"eq","","",120,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"xhostaddress"}],"output":{"name":"xhostaddress"}}],[11,"eq","","",121,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"xiconsize"}],"output":{"name":"xiconsize"}}],[11,"eq","","",122,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"ximage"}],"output":{"name":"ximage"}}],[11,"eq","","",123,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"xkeyboardcontrol"}],"output":{"name":"xkeyboardcontrol"}}],[11,"eq","","",124,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"xkeyboardstate"}],"output":{"name":"xkeyboardstate"}}],[11,"eq","","",125,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"xmbtextitem"}],"output":{"name":"xmbtextitem"}}],[11,"eq","","",126,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"xmodifierkeymap"}],"output":{"name":"xmodifierkeymap"}}],[11,"eq","","",127,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"xomcharsetlist"}],"output":{"name":"xomcharsetlist"}}],[11,"eq","","",128,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"xpixmapformatvalues"}],"output":{"name":"xpixmapformatvalues"}}],[11,"eq","","",129,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"xpoint"}],"output":{"name":"xpoint"}}],[11,"eq","","",130,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"xrectangle"}],"output":{"name":"xrectangle"}}],[11,"eq","","",131,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"xrmoptiondescrec"}],"output":{"name":"xrmoptiondescrec"}}],[11,"eq","","",132,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"xrmvalue"}],"output":{"name":"xrmvalue"}}],[11,"eq","","",133,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"xsegment"}],"output":{"name":"xsegment"}}],[11,"eq","","",134,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"xsetwindowattributes"}],"output":{"name":"xsetwindowattributes"}}],[11,"eq","","",135,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"xsizehints"}],"output":{"name":"xsizehints"}}],[11,"eq","","",136,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"xstandardcolormap"}],"output":{"name":"xstandardcolormap"}}],[11,"eq","","",137,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"xtextitem"}],"output":{"name":"xtextitem"}}],[11,"eq","","",138,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"xtextitem16"}],"output":{"name":"xtextitem16"}}],[11,"eq","","",139,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"xtextproperty"}],"output":{"name":"xtextproperty"}}],[11,"eq","","",140,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"xtimecoord"}],"output":{"name":"xtimecoord"}}],[11,"eq","","",141,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"xvisualinfo"}],"output":{"name":"xvisualinfo"}}],[11,"eq","","",142,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"xwctextitem"}],"output":{"name":"xwctextitem"}}],[11,"eq","","",143,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"xwindowattributes"}],"output":{"name":"xwindowattributes"}}],[11,"eq","","",144,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"xwindowchanges"}],"output":{"name":"xwindowchanges"}}],[11,"eq","","",145,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"xwmhints"}],"output":{"name":"xwmhints"}}],[11,"eq","","",146,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"aspectratio"}],"output":{"name":"aspectratio"}}],[11,"eq","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"clientmessagedata"}],"output":{"name":"clientmessagedata"}}],[11,"get_byte","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_char"}}],[11,"get_long","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_long"}}],[11,"get_short","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_short"}}],[11,"set_byte","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_char"}],"output":null}],[11,"set_long","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_long"}],"output":null}],[11,"set_short","","",148,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_short"}],"output":null}],[11,"clone","","",147,{"inputs":[{"name":"imagefns"}],"output":{"name":"imagefns"}}],[11,"eq","","",147,{"inputs":[{"name":"imagefns"},{"name":"imagefns"}],"output":{"name":"bool"}}],[0,"xmu","x11_dl","",null,null],[3,"Xmu","x11_dl::xmu","",null,null],[12,"XmuAddCloseDisplayHook","","",149,null],[12,"XmuAddInitializer","","",149,null],[12,"XmuAllStandardColormaps","","",149,null],[12,"XmuAppendSegment","","",149,null],[12,"XmuAreaAnd","","",149,null],[12,"XmuAreaCopy","","",149,null],[12,"XmuAreaDup","","",149,null],[12,"XmuAreaNot","","",149,null],[12,"XmuAreaOrXor","","",149,null],[12,"XmuCallInitializers","","",149,null],[12,"XmuClientWindow","","",149,null],[12,"XmuCompareISOLatin1","","",149,null],[12,"XmuConvertStandardSelection","","",149,null],[12,"XmuCopyISOLatin1Lowered","","",149,null],[12,"XmuCopyISOLatin1Uppered","","",149,null],[12,"XmuCreateColormap","","",149,null],[12,"XmuCreatePixmapFromBitmap","","",149,null],[12,"XmuCreateStippledPixmap","","",149,null],[12,"XmuCursorNameToIndex","","",149,null],[12,"XmuCvtBackingStoreToString","","",149,null],[12,"XmuCvtFunctionToCallback","","",149,null],[12,"XmuCvtGravityToString","","",149,null],[12,"XmuCvtJustifyToString","","",149,null],[12,"XmuCvtLongToString","","",149,null],[12,"XmuCvtOrientationToString","","",149,null],[12,"XmuCvtShapeStyleToString","","",149,null],[12,"XmuCvtStringToBackingStore","","",149,null],[12,"XmuCvtStringToBitmap","","",149,null],[12,"XmuCvtStringToColorCursor","","",149,null],[12,"XmuCvtStringToCursor","","",149,null],[12,"XmuCvtStringToGravity","","",149,null],[12,"XmuCvtStringToJustify","","",149,null],[12,"XmuCvtStringToLong","","",149,null],[12,"XmuCvtStringToOrientation","","",149,null],[12,"XmuCvtStringToShapeStyle","","",149,null],[12,"XmuCvtStringToWidget","","",149,null],[12,"XmuCvtWidgetToString","","",149,null],[12,"XmuDeleteStandardColormap","","",149,null],[12,"XmuDestroyScanlineList","","",149,null],[12,"XmuDestroySegmentList","","",149,null],[12,"XmuDistinguishableColors","","",149,null],[12,"XmuDistinguishablePixels","","",149,null],[12,"XmuDQAddDisplay","","",149,null],[12,"XmuDQCreate","","",149,null],[12,"XmuDQDestroy","","",149,null],[12,"XmuDQLookupDisplay","","",149,null],[12,"XmuDQRemoveDisplay","","",149,null],[12,"XmuDrawLogo","","",149,null],[12,"XmuDrawRoundedRectangle","","",149,null],[12,"XmuFillRoundedRectangle","","",149,null],[12,"XmuGetAtomName","","",149,null],[12,"XmuGetColormapAllocation","","",149,null],[12,"XmuGetHostname","","",149,null],[12,"XmuInternAtom","","",149,null],[12,"XmuInternStrings","","",149,null],[12,"XmuLocateBitmapFile","","",149,null],[12,"XmuLocatePixmapFile","","",149,null],[12,"XmuLookupAPL","","",149,null],[12,"XmuLookupArabic","","",149,null],[12,"XmuLookupCloseDisplayHook","","",149,null],[12,"XmuLookupCyrillic","","",149,null],[12,"XmuLookupGreek","","",149,null],[12,"XmuLookupHebrew","","",149,null],[12,"XmuLookupJISX0201","","",149,null],[12,"XmuLookupKana","","",149,null],[12,"XmuLookupLatin1","","",149,null],[12,"XmuLookupLatin2","","",149,null],[12,"XmuLookupLatin3","","",149,null],[12,"XmuLookupLatin4","","",149,null],[12,"XmuLookupStandardColormap","","",149,null],[12,"XmuLookupString","","",149,null],[12,"XmuMakeAtom","","",149,null],[12,"XmuNameOfAtom","","",149,null],[12,"XmuNCopyISOLatin1Lowered","","",149,null],[12,"XmuNCopyISOLatin1Uppered","","",149,null],[12,"XmuNewArea","","",149,null],[12,"XmuNewCvtStringToWidget","","",149,null],[12,"XmuNewScanline","","",149,null],[12,"XmuNewSegment","","",149,null],[12,"XmuOptimizeArea","","",149,null],[12,"XmuOptimizeScanline","","",149,null],[12,"XmuPrintDefaultErrorMessage","","",149,null],[12,"XmuReadBitmapData","","",149,null],[12,"XmuReadBitmapDataFromFile","","",149,null],[12,"XmuRegisterExternalAgent","","",149,null],[12,"XmuReleaseStippledPixmap","","",149,null],[12,"XmuRemoveCloseDisplayHook","","",149,null],[12,"XmuReshapeWidget","","",149,null],[12,"XmuScanlineAnd","","",149,null],[12,"XmuScanlineAndSegment","","",149,null],[12,"XmuScanlineCopy","","",149,null],[12,"XmuScanlineEqu","","",149,null],[12,"XmuScanlineNot","","",149,null],[12,"XmuScanlineOr","","",149,null],[12,"XmuScanlineOrSegment","","",149,null],[12,"XmuScanlineXor","","",149,null],[12,"XmuScanlineXorSegment","","",149,null],[12,"XmuScreenOfWindow","","",149,null],[12,"XmuSimpleErrorHandler","","",149,null],[12,"XmuStandardColormap","","",149,null],[12,"XmuUpdateMapHints","","",149,null],[12,"XmuValidArea","","",149,null],[12,"XmuValidScanline","","",149,null],[12,"XmuVisualStandardColormaps","","",149,null],[12,"XmuWnCountOwnedResources","","",149,null],[12,"XmuWnFetchResources","","",149,null],[12,"XmuWnInitializeNodes","","",149,null],[12,"XmuWnNameToNode","","",149,null],[12,"XmuSnprintf","","",149,null],[12,"_XA_ATOM_PAIR","","",149,null],[12,"_XA_CHARACTER_POSITION","","",149,null],[12,"_XA_CLASS","","",149,null],[12,"_XA_CLIENT_WINDOW","","",149,null],[12,"_XA_CLIPBOARD","","",149,null],[12,"_XA_COMPOUND_TEXT","","",149,null],[12,"_XA_DECNET_ADDRESS","","",149,null],[12,"_XA_DELETE","","",149,null],[12,"_XA_FILENAME","","",149,null],[12,"_XA_HOSTNAME","","",149,null],[12,"_XA_IP_ADDRESS","","",149,null],[12,"_XA_LENGTH","","",149,null],[12,"_XA_LIST_LENGTH","","",149,null],[12,"_XA_NAME","","",149,null],[12,"_XA_NET_ADDRESS","","",149,null],[12,"_XA_NULL","","",149,null],[12,"_XA_OWNER_OS","","",149,null],[12,"_XA_SPAN","","",149,null],[12,"_XA_TARGETS","","",149,null],[12,"_XA_TEXT","","",149,null],[12,"_XA_TIMESTAMP","","",149,null],[12,"_XA_USER","","",149,null],[12,"_XA_UTF8_STRING","","",149,null],[3,"_AtomRec","","",null,null],[3,"_XmuArea","","",null,null],[3,"_XmuDisplayQueue","","",null,null],[3,"_XmuDisplayQueueEntry","","",null,null],[3,"_XmuScanline","","",null,null],[3,"_XmuSegment","","",null,null],[3,"_XmuWidgetNode","","",null,null],[6,"AtomPtr","","",null,null],[6,"XmuArea","","",null,null],[6,"XmuDisplayQueue","","",null,null],[6,"XmuDisplayQueueEntry","","",null,null],[6,"XmuScanline","","",null,null],[6,"XmuSegment","","",null,null],[6,"XmuWidgetNode","","",null,null],[11,"open","","",149,{"inputs":[{"name":"xmu"}],"output":{"name":"result"}}],[0,"xrecord","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xrecord","",null,null],[12,"XRecordAllocRange","","",150,null],[12,"XRecordCreateContext","","",150,null],[12,"XRecordDisableContext","","",150,null],[12,"XRecordEnableContext","","",150,null],[12,"XRecordEnableContextAsync","","",150,null],[12,"XRecordFreeContext","","",150,null],[12,"XRecordFreeData","","",150,null],[12,"XRecordFreeState","","",150,null],[12,"XRecordGetContext","","",150,null],[12,"XRecordIdBaseMask","","",150,null],[12,"XRecordProcessReplies","","",150,null],[12,"XRecordQueryVersion","","",150,null],[12,"XRecordRegisterClients","","",150,null],[12,"XRecordUnregisterClients","","",150,null],[3,"XRecordClientInfo","","",null,null],[12,"client","","",151,null],[12,"nranges","","",151,null],[12,"ranges","","",151,null],[3,"XRecordExtRange","","",null,null],[12,"ext_major","","",152,null],[12,"ext_minor","","",152,null],[3,"XRecordInterceptData","","",null,null],[12,"id_base","","",153,null],[12,"server_time","","",153,null],[12,"client_seq","","",153,null],[12,"category","","",153,null],[12,"client_swapped","","",153,null],[12,"data","","",153,null],[12,"data_len","","",153,null],[3,"XRecordRange","","",null,null],[12,"core_requests","","",154,null],[12,"core_replies","","",154,null],[12,"ext_requests","","",154,null],[12,"ext_replies","","",154,null],[12,"delivered_events","","",154,null],[12,"device_events","","",154,null],[12,"errors","","",154,null],[12,"client_started","","",154,null],[12,"client_died","","",154,null],[3,"XRecordRange8","","",null,null],[12,"first","","",155,null],[12,"last","","",155,null],[3,"XRecordRange16","","",null,null],[12,"first","","",156,null],[12,"last","","",156,null],[3,"XRecordState","","",null,null],[12,"enabled","","",157,null],[12,"datum_flags","","",157,null],[12,"nclients","","",157,null],[12,"client_info","","",157,null],[6,"XRecordClientSpec","","",null,null],[6,"XRecordContext","","",null,null],[11,"open","","",150,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"xrecordclientinfo"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"xrecordclientinfo"},{"name":"xrecordclientinfo"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"xrecordclientinfo"}],"output":{"name":"xrecordclientinfo"}}],[11,"eq","","",152,{"inputs":[{"name":"xrecordextrange"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"xrecordextrange"},{"name":"xrecordextrange"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"xrecordextrange"}],"output":{"name":"xrecordextrange"}}],[11,"eq","","",153,{"inputs":[{"name":"xrecordinterceptdata"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"xrecordinterceptdata"},{"name":"xrecordinterceptdata"}],"output":{"name":"bool"}}],[11,"clone","","",153,{"inputs":[{"name":"xrecordinterceptdata"}],"output":{"name":"xrecordinterceptdata"}}],[11,"eq","","",154,{"inputs":[{"name":"xrecordrange"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"xrecordrange"},{"name":"xrecordrange"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"xrecordrange"}],"output":{"name":"xrecordrange"}}],[11,"eq","","",155,{"inputs":[{"name":"xrecordrange8"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"xrecordrange8"},{"name":"xrecordrange8"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"xrecordrange8"}],"output":{"name":"xrecordrange8"}}],[11,"eq","","",156,{"inputs":[{"name":"xrecordrange16"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"xrecordrange16"},{"name":"xrecordrange16"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"xrecordrange16"}],"output":{"name":"xrecordrange16"}}],[11,"eq","","",157,{"inputs":[{"name":"xrecordstate"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"xrecordstate"},{"name":"xrecordstate"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"xrecordstate"}],"output":{"name":"xrecordstate"}}],[0,"xrender","x11_dl","",null,null],[3,"Xrender","x11_dl::xrender","",null,null],[12,"XRenderAddGlyphs","","",158,null],[12,"XRenderAddTraps","","",158,null],[12,"XRenderChangePicture","","",158,null],[12,"XRenderComposite","","",158,null],[12,"XRenderCompositeDoublePoly","","",158,null],[12,"XRenderCompositeString16","","",158,null],[12,"XRenderCompositeString32","","",158,null],[12,"XRenderCompositeString8","","",158,null],[12,"XRenderCompositeText16","","",158,null],[12,"XRenderCompositeText32","","",158,null],[12,"XRenderCompositeText8","","",158,null],[12,"XRenderCompositeTrapezoids","","",158,null],[12,"XRenderCompositeTriangles","","",158,null],[12,"XRenderCompositeTriFan","","",158,null],[12,"XRenderCompositeTriStrip","","",158,null],[12,"XRenderCreateAnimCursor","","",158,null],[12,"XRenderCreateConicalGradient","","",158,null],[12,"XRenderCreateCursor","","",158,null],[12,"XRenderCreateGlyphSet","","",158,null],[12,"XRenderCreateLinearGradient","","",158,null],[12,"XRenderCreatePicture","","",158,null],[12,"XRenderCreateRadialGradient","","",158,null],[12,"XRenderCreateSolidFill","","",158,null],[12,"XRenderFillRectangle","","",158,null],[12,"XRenderFillRectangles","","",158,null],[12,"XRenderFindFormat","","",158,null],[12,"XRenderFindStandardFormat","","",158,null],[12,"XRenderFindVisualFormat","","",158,null],[12,"XRenderFreeGlyphs","","",158,null],[12,"XRenderFreeGlyphSet","","",158,null],[12,"XRenderFreePicture","","",158,null],[12,"XRenderParseColor","","",158,null],[12,"XRenderQueryExtension","","",158,null],[12,"XRenderQueryFilters","","",158,null],[12,"XRenderQueryFormats","","",158,null],[12,"XRenderQueryPictIndexValues","","",158,null],[12,"XRenderQuerySubpixelOrder","","",158,null],[12,"XRenderQueryVersion","","",158,null],[12,"XRenderReferenceGlyphSet","","",158,null],[12,"XRenderSetPictureClipRectangles","","",158,null],[12,"XRenderSetPictureClipRegion","","",158,null],[12,"XRenderSetPictureFilter","","",158,null],[12,"XRenderSetPictureTransform","","",158,null],[12,"XRenderSetSubpixelOrder","","",158,null],[3,"_XAnimCursor","","",null,null],[12,"cursor","","",159,null],[12,"delay","","",159,null],[3,"_XCircle","","",null,null],[12,"x","","",160,null],[12,"y","","",160,null],[12,"radius","","",160,null],[3,"_XConicalGradient","","",null,null],[12,"center","","",161,null],[12,"angle","","",161,null],[3,"_XFilters","","",null,null],[12,"nfilter","","",162,null],[12,"filter","","",162,null],[12,"nalias","","",162,null],[12,"alias","","",162,null],[3,"_XGlyphElt8","","",null,null],[12,"glyphset","","",163,null],[12,"chars","","",163,null],[12,"nchars","","",163,null],[12,"xOff","","",163,null],[12,"yOff","","",163,null],[3,"_XGlyphElt16","","",null,null],[12,"glyphset","","",164,null],[12,"chars","","",164,null],[12,"nchars","","",164,null],[12,"xOff","","",164,null],[12,"yOff","","",164,null],[3,"_XGlyphElt32","","",null,null],[12,"glyphset","","",165,null],[12,"chars","","",165,null],[12,"nchars","","",165,null],[12,"xOff","","",165,null],[12,"yOff","","",165,null],[3,"_XGlyphInfo","","",null,null],[12,"width","","",166,null],[12,"height","","",166,null],[12,"x","","",166,null],[12,"y","","",166,null],[12,"xOff","","",166,null],[12,"yOff","","",166,null],[3,"_XIndexValue","","",null,null],[12,"pixel","","",167,null],[12,"red","","",167,null],[12,"green","","",167,null],[12,"blue","","",167,null],[12,"alpha","","",167,null],[3,"_XLinearGradient","","",null,null],[12,"p1","","",168,null],[12,"p2","","",168,null],[3,"_XLineFixed","","",null,null],[12,"p1","","",169,null],[12,"p2","","",169,null],[3,"_XPointDouble","","",null,null],[12,"x","","",170,null],[12,"y","","",170,null],[3,"_XPointFixed","","",null,null],[12,"x","","",171,null],[12,"y","","",171,null],[3,"_XRadialGradient","","",null,null],[12,"inner","","",172,null],[12,"outer","","",172,null],[3,"XRenderColor","","",null,null],[12,"red","","",173,null],[12,"green","","",173,null],[12,"blue","","",173,null],[12,"alpha","","",173,null],[3,"XRenderDirectFormat","","",null,null],[12,"red","","",174,null],[12,"redMask","","",174,null],[12,"green","","",174,null],[12,"greenMask","","",174,null],[12,"blue","","",174,null],[12,"blueMask","","",174,null],[12,"alpha","","",174,null],[12,"alphaMask","","",174,null],[3,"XRenderPictFormat","","",null,null],[12,"id","","",175,null],[12,"type_","","",175,null],[12,"depth","","",175,null],[12,"direct","","",175,null],[12,"colormap","","",175,null],[3,"_XRenderPictureAttributes","","",null,null],[12,"repeat","","",176,null],[12,"alpha_map","","",176,null],[12,"alpha_x_origin","","",176,null],[12,"alpha_y_origin","","",176,null],[12,"clip_x_origin","","",176,null],[12,"clip_y_origin","","",176,null],[12,"clip_mask","","",176,null],[12,"graphics_exposures","","",176,null],[12,"subwindow_mode","","",176,null],[12,"poly_edge","","",176,null],[12,"poly_mode","","",176,null],[12,"dither","","",176,null],[12,"component_alpha","","",176,null],[3,"_XSpanFix","","",null,null],[12,"left","","",177,null],[12,"right","","",177,null],[12,"y","","",177,null],[3,"_XTrap","","",null,null],[12,"top","","",178,null],[12,"bottom","","",178,null],[3,"_XTrapezoid","","",null,null],[12,"top","","",179,null],[12,"bottom","","",179,null],[12,"left","","",179,null],[12,"right","","",179,null],[3,"_XTriangle","","",null,null],[12,"p1","","",180,null],[12,"p2","","",180,null],[12,"p3","","",180,null],[3,"_XTransform","","",null,null],[12,"matrix","","",181,null],[6,"Glyph","","",null,null],[6,"GlyphSet","","",null,null],[6,"PictFormat","","",null,null],[6,"Picture","","",null,null],[6,"XDouble","","",null,null],[6,"XFixed","","",null,null],[6,"XAnimCursor","","",null,null],[6,"XCircle","","",null,null],[6,"XConicalGradient","","",null,null],[6,"XFilters","","",null,null],[6,"XGlyphElt8","","",null,null],[6,"XGlyphElt16","","",null,null],[6,"XGlyphElt32","","",null,null],[6,"XGlyphInfo","","",null,null],[6,"XIndexValue","","",null,null],[6,"XLinearGradient","","",null,null],[6,"XLineFixed","","",null,null],[6,"XPointDouble","","",null,null],[6,"XPointFixed","","",null,null],[6,"XRadialGradient","","",null,null],[6,"XRenderPictureAttributes","","",null,null],[6,"XSpanFix","","",null,null],[6,"XTrap","","",null,null],[6,"XTrapezoid","","",null,null],[6,"XTriangle","","",null,null],[6,"XTransform","","",null,null],[11,"open","","",158,{"inputs":[{"name":"xrender"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"_xanimcursor"}],"output":{"name":"_xanimcursor"}}],[11,"clone","","",160,{"inputs":[{"name":"_xcircle"}],"output":{"name":"_xcircle"}}],[11,"clone","","",161,{"inputs":[{"name":"_xconicalgradient"}],"output":{"name":"_xconicalgradient"}}],[11,"clone","","",162,{"inputs":[{"name":"_xfilters"}],"output":{"name":"_xfilters"}}],[11,"clone","","",163,{"inputs":[{"name":"_xglyphelt8"}],"output":{"name":"_xglyphelt8"}}],[11,"clone","","",164,{"inputs":[{"name":"_xglyphelt16"}],"output":{"name":"_xglyphelt16"}}],[11,"clone","","",165,{"inputs":[{"name":"_xglyphelt32"}],"output":{"name":"_xglyphelt32"}}],[11,"clone","","",166,{"inputs":[{"name":"_xglyphinfo"}],"output":{"name":"_xglyphinfo"}}],[11,"clone","","",167,{"inputs":[{"name":"_xindexvalue"}],"output":{"name":"_xindexvalue"}}],[11,"clone","","",168,{"inputs":[{"name":"_xlineargradient"}],"output":{"name":"_xlineargradient"}}],[11,"clone","","",169,{"inputs":[{"name":"_xlinefixed"}],"output":{"name":"_xlinefixed"}}],[11,"clone","","",170,{"inputs":[{"name":"_xpointdouble"}],"output":{"name":"_xpointdouble"}}],[11,"clone","","",171,{"inputs":[{"name":"_xpointfixed"}],"output":{"name":"_xpointfixed"}}],[11,"clone","","",172,{"inputs":[{"name":"_xradialgradient"}],"output":{"name":"_xradialgradient"}}],[11,"clone","","",173,{"inputs":[{"name":"xrendercolor"}],"output":{"name":"xrendercolor"}}],[11,"clone","","",174,{"inputs":[{"name":"xrenderdirectformat"}],"output":{"name":"xrenderdirectformat"}}],[11,"clone","","",175,{"inputs":[{"name":"xrenderpictformat"}],"output":{"name":"xrenderpictformat"}}],[11,"clone","","",176,{"inputs":[{"name":"_xrenderpictureattributes"}],"output":{"name":"_xrenderpictureattributes"}}],[11,"clone","","",177,{"inputs":[{"name":"_xspanfix"}],"output":{"name":"_xspanfix"}}],[11,"clone","","",178,{"inputs":[{"name":"_xtrap"}],"output":{"name":"_xtrap"}}],[11,"clone","","",179,{"inputs":[{"name":"_xtrapezoid"}],"output":{"name":"_xtrapezoid"}}],[11,"clone","","",180,{"inputs":[{"name":"_xtriangle"}],"output":{"name":"_xtriangle"}}],[11,"clone","","",181,{"inputs":[{"name":"_xtransform"}],"output":{"name":"_xtransform"}}],[0,"xt","x11_dl","",null,null],[3,"Xt","x11_dl::xt","",null,null],[12,"XtAddActions","","",182,null],[12,"XtAddCallback","","",182,null],[12,"XtAddCallbacks","","",182,null],[12,"XtAddConverter","","",182,null],[12,"XtAddEventHandler","","",182,null],[12,"XtAddExposureToRegion","","",182,null],[12,"XtAddGrab","","",182,null],[12,"XtAddInput","","",182,null],[12,"XtAddRawEventHandler","","",182,null],[12,"XtAddSignal","","",182,null],[12,"XtAddTimeOut","","",182,null],[12,"XtAddWorkProc","","",182,null],[12,"XtAllocateGC","","",182,null],[12,"XtAppAddActionHook","","",182,null],[12,"XtAppAddActions","","",182,null],[12,"XtAppAddBlockHook","","",182,null],[12,"XtAppAddConverter","","",182,null],[12,"XtAppAddInput","","",182,null],[12,"XtAppAddSignal","","",182,null],[12,"XtAppAddTimeOut","","",182,null],[12,"XtAppAddWorkProc","","",182,null],[12,"XtAppCreateShell","","",182,null],[12,"XtAppError","","",182,null],[12,"XtAppErrorMsg","","",182,null],[12,"XtAppGetErrorDatabase","","",182,null],[12,"XtAppGetErrorDatabaseText","","",182,null],[12,"XtAppGetExitFlag","","",182,null],[12,"XtAppGetSelectionTimeout","","",182,null],[12,"XtAppInitialize","","",182,null],[12,"XtAppLock","","",182,null],[12,"XtAppMainLoop","","",182,null],[12,"XtAppNextEvent","","",182,null],[12,"XtAppPeekEvent","","",182,null],[12,"XtAppPending","","",182,null],[12,"XtAppProcessEvent","","",182,null],[12,"XtAppReleaseCacheRefs","","",182,null],[12,"XtAppSetErrorHandler","","",182,null],[12,"XtAppSetErrorMsgHandler","","",182,null],[12,"XtAppSetExitFlag","","",182,null],[12,"XtAppSetFallbackResources","","",182,null],[12,"XtAppSetSelectionTimeout","","",182,null],[12,"XtAppSetTypeConverter","","",182,null],[12,"XtAppSetWarningHandler","","",182,null],[12,"XtAppSetWarningMsgHandler","","",182,null],[12,"XtAppUnlock","","",182,null],[12,"XtAppWarning","","",182,null],[12,"XtAppWarningMsg","","",182,null],[12,"XtAugmentTranslations","","",182,null],[12,"XtBuildEventMask","","",182,null],[12,"XtCallAcceptFocus","","",182,null],[12,"XtCallActionProc","","",182,null],[12,"XtCallbackExclusive","","",182,null],[12,"XtCallbackNone","","",182,null],[12,"XtCallbackNonexclusive","","",182,null],[12,"XtCallbackPopdown","","",182,null],[12,"XtCallbackReleaseCacheRef","","",182,null],[12,"XtCallbackReleaseCacheRefList","","",182,null],[12,"XtCallCallbackList","","",182,null],[12,"XtCallCallbacks","","",182,null],[12,"XtCallConverter","","",182,null],[12,"XtCalloc","","",182,null],[12,"XtCancelSelectionRequest","","",182,null],[12,"XtChangeManagedSet","","",182,null],[12,"XtClass","","",182,null],[12,"XtCloseDisplay","","",182,null],[12,"XtConfigureWidget","","",182,null],[12,"XtConvert","","",182,null],[12,"XtConvertAndStore","","",182,null],[12,"XtConvertCase","","",182,null],[12,"XtCreateApplicationContext","","",182,null],[12,"XtCreateApplicationShell","","",182,null],[12,"XtCreateManagedWidget","","",182,null],[12,"XtCreatePopupShell","","",182,null],[12,"XtCreateSelectionRequest","","",182,null],[12,"XtCreateWidget","","",182,null],[12,"XtCreateWindow","","",182,null],[12,"XtCvtColorToPixel","","",182,null],[12,"XtCvtIntToBool","","",182,null],[12,"XtCvtIntToBoolean","","",182,null],[12,"XtCvtIntToColor","","",182,null],[12,"XtCvtIntToFloat","","",182,null],[12,"XtCvtIntToFont","","",182,null],[12,"XtCvtIntToPixel","","",182,null],[12,"XtCvtIntToPixmap","","",182,null],[12,"XtCvtIntToShort","","",182,null],[12,"XtCvtIntToUnsignedChar","","",182,null],[12,"XtCvtStringToAcceleratorTable","","",182,null],[12,"XtCvtStringToAtom","","",182,null],[12,"XtCvtStringToBool","","",182,null],[12,"XtCvtStringToBoolean","","",182,null],[12,"XtCvtStringToCommandArgArray","","",182,null],[12,"XtCvtStringToCursor","","",182,null],[12,"XtCvtStringToDimension","","",182,null],[12,"XtCvtStringToDirectoryString","","",182,null],[12,"XtCvtStringToDisplay","","",182,null],[12,"XtCvtStringToFile","","",182,null],[12,"XtCvtStringToFloat","","",182,null],[12,"XtCvtStringToFont","","",182,null],[12,"XtCvtStringToFontSet","","",182,null],[12,"XtCvtStringToFontStruct","","",182,null],[12,"XtCvtStringToGravity","","",182,null],[12,"XtCvtStringToInitialState","","",182,null],[12,"XtCvtStringToInt","","",182,null],[12,"XtCvtStringToPixel","","",182,null],[12,"XtCvtStringToRestartStyle","","",182,null],[12,"XtCvtStringToShort","","",182,null],[12,"XtCvtStringToTranslationTable","","",182,null],[12,"XtCvtStringToUnsignedChar","","",182,null],[12,"XtCvtStringToVisual","","",182,null],[12,"XtDatabase","","",182,null],[12,"XtDestroyApplicationContext","","",182,null],[12,"XtDestroyGC","","",182,null],[12,"XtDestroyWidget","","",182,null],[12,"XtDirectConvert","","",182,null],[12,"XtDisownSelection","","",182,null],[12,"XtDispatchEvent","","",182,null],[12,"XtDispatchEventToWidget","","",182,null],[12,"XtDisplay","","",182,null],[12,"XtDisplayInitialize","","",182,null],[12,"XtDisplayOfObject","","",182,null],[12,"XtDisplayStringConversionWarning","","",182,null],[12,"XtDisplayToApplicationContext","","",182,null],[12,"XtError","","",182,null],[12,"XtErrorMsg","","",182,null],[12,"XtFindFile","","",182,null],[12,"XtFree","","",182,null],[12,"XtGetActionKeysym","","",182,null],[12,"XtGetActionList","","",182,null],[12,"XtGetApplicationNameAndClass","","",182,null],[12,"XtGetApplicationResources","","",182,null],[12,"XtGetClassExtension","","",182,null],[12,"XtGetConstraintResourceList","","",182,null],[12,"XtGetDisplays","","",182,null],[12,"XtGetErrorDatabase","","",182,null],[12,"XtGetErrorDatabaseText","","",182,null],[12,"XtGetGC","","",182,null],[12,"XtGetKeyboardFocusWidget","","",182,null],[12,"XtGetKeysymTable","","",182,null],[12,"XtGetMultiClickTime","","",182,null],[12,"XtGetResourceList","","",182,null],[12,"XtGetSelectionParameters","","",182,null],[12,"XtGetSelectionRequest","","",182,null],[12,"XtGetSelectionTimeout","","",182,null],[12,"XtGetSelectionValue","","",182,null],[12,"XtGetSelectionValueIncremental","","",182,null],[12,"XtGetSelectionValues","","",182,null],[12,"XtGetSelectionValuesIncremental","","",182,null],[12,"XtGetSubresources","","",182,null],[12,"XtGetSubvalues","","",182,null],[12,"XtGetValues","","",182,null],[12,"XtGrabButton","","",182,null],[12,"XtGrabKey","","",182,null],[12,"XtGrabKeyboard","","",182,null],[12,"XtGrabPointer","","",182,null],[12,"XtHasCallbacks","","",182,null],[12,"XtHooksOfDisplay","","",182,null],[12,"XtInitialize","","",182,null],[12,"XtInitializeWidgetClass","","",182,null],[12,"XtInsertEventHandler","","",182,null],[12,"XtInsertEventTypeHandler","","",182,null],[12,"XtInsertRawEventHandler","","",182,null],[12,"XtInstallAccelerators","","",182,null],[12,"XtInstallAllAccelerators","","",182,null],[12,"XtIsApplicationShell","","",182,null],[12,"XtIsComposite","","",182,null],[12,"XtIsConstraint","","",182,null],[12,"XtIsManaged","","",182,null],[12,"XtIsObject","","",182,null],[12,"XtIsOverrideShell","","",182,null],[12,"XtIsRealized","","",182,null],[12,"XtIsRectObj","","",182,null],[12,"XtIsSensitive","","",182,null],[12,"XtIsSessionShell","","",182,null],[12,"XtIsShell","","",182,null],[12,"XtIsSubclass","","",182,null],[12,"XtIsTopLevelShell","","",182,null],[12,"XtIsTransientShell","","",182,null],[12,"XtIsVendorShell","","",182,null],[12,"XtIsWidget","","",182,null],[12,"XtIsWMShell","","",182,null],[12,"XtKeysymToKeycodeList","","",182,null],[12,"XtLastEventProcessed","","",182,null],[12,"XtLastTimestampProcessed","","",182,null],[12,"XtMainLoop","","",182,null],[12,"XtMakeGeometryRequest","","",182,null],[12,"XtMakeResizeRequest","","",182,null],[12,"XtMalloc","","",182,null],[12,"XtManageChild","","",182,null],[12,"XtManageChildren","","",182,null],[12,"XtMapWidget","","",182,null],[12,"XtMenuPopupAction","","",182,null],[12,"XtMergeArgLists","","",182,null],[12,"XtMoveWidget","","",182,null],[12,"XtName","","",182,null],[12,"XtNameToWidget","","",182,null],[12,"XtNewString","","",182,null],[12,"XtNextEvent","","",182,null],[12,"XtNoticeSignal","","",182,null],[12,"XtOpenApplication","","",182,null],[12,"XtOpenDisplay","","",182,null],[12,"XtOverrideTranslations","","",182,null],[12,"XtOwnSelection","","",182,null],[12,"XtOwnSelectionIncremental","","",182,null],[12,"XtParent","","",182,null],[12,"XtParseAcceleratorTable","","",182,null],[12,"XtParseTranslationTable","","",182,null],[12,"XtPeekEvent","","",182,null],[12,"XtPending","","",182,null],[12,"XtPopdown","","",182,null],[12,"XtPopup","","",182,null],[12,"XtPopupSpringLoaded","","",182,null],[12,"XtProcessEvent","","",182,null],[12,"XtProcessLock","","",182,null],[12,"XtProcessUnlock","","",182,null],[12,"XtQueryGeometry","","",182,null],[12,"XtRealizeWidget","","",182,null],[12,"XtRealloc","","",182,null],[12,"XtRegisterCaseConverter","","",182,null],[12,"XtRegisterDrawable","","",182,null],[12,"XtRegisterExtensionSelector","","",182,null],[12,"XtRegisterGrabAction","","",182,null],[12,"XtReleaseGC","","",182,null],[12,"XtReleasePropertyAtom","","",182,null],[12,"XtRemoveActionHook","","",182,null],[12,"XtRemoveAllCallbacks","","",182,null],[12,"XtRemoveBlockHook","","",182,null],[12,"XtRemoveCallback","","",182,null],[12,"XtRemoveCallbacks","","",182,null],[12,"XtRemoveEventHandler","","",182,null],[12,"XtRemoveEventTypeHandler","","",182,null],[12,"XtRemoveGrab","","",182,null],[12,"XtRemoveInput","","",182,null],[12,"XtRemoveRawEventHandler","","",182,null],[12,"XtRemoveSignal","","",182,null],[12,"XtRemoveTimeOut","","",182,null],[12,"XtRemoveWorkProc","","",182,null],[12,"XtReservePropertyAtom","","",182,null],[12,"XtResizeWidget","","",182,null],[12,"XtResizeWindow","","",182,null],[12,"XtResolvePathname","","",182,null],[12,"XtScreen","","",182,null],[12,"XtScreenDatabase","","",182,null],[12,"XtScreenOfObject","","",182,null],[12,"XtSendSelectionRequest","","",182,null],[12,"XtSessionGetToken","","",182,null],[12,"XtSessionReturnToken","","",182,null],[12,"XtSetErrorHandler","","",182,null],[12,"XtSetErrorMsgHandler","","",182,null],[12,"XtSetEventDispatcher","","",182,null],[12,"XtSetKeyboardFocus","","",182,null],[12,"XtSetKeyTranslator","","",182,null],[12,"XtSetLanguageProc","","",182,null],[12,"XtSetMappedWhenManaged","","",182,null],[12,"XtSetMultiClickTime","","",182,null],[12,"XtSetSelectionParameters","","",182,null],[12,"XtSetSelectionTimeout","","",182,null],[12,"XtSetSensitive","","",182,null],[12,"XtSetSubvalues","","",182,null],[12,"XtSetTypeConverter","","",182,null],[12,"XtSetValues","","",182,null],[12,"XtSetWarningHandler","","",182,null],[12,"XtSetWarningMsgHandler","","",182,null],[12,"XtSetWMColormapWindows","","",182,null],[12,"XtStringConversionWarning","","",182,null],[12,"XtSuperclass","","",182,null],[12,"XtToolkitInitialize","","",182,null],[12,"XtToolkitThreadInitialize","","",182,null],[12,"XtTranslateCoords","","",182,null],[12,"XtTranslateKey","","",182,null],[12,"XtTranslateKeycode","","",182,null],[12,"XtUngrabButton","","",182,null],[12,"XtUngrabKey","","",182,null],[12,"XtUngrabKeyboard","","",182,null],[12,"XtUngrabPointer","","",182,null],[12,"XtUninstallTranslations","","",182,null],[12,"XtUnmanageChild","","",182,null],[12,"XtUnmanageChildren","","",182,null],[12,"XtUnmapWidget","","",182,null],[12,"XtUnrealizeWidget","","",182,null],[12,"XtUnregisterDrawable","","",182,null],[12,"XtWarning","","",182,null],[12,"XtWarningMsg","","",182,null],[12,"XtWidgetToApplicationContext","","",182,null],[12,"XtWindow","","",182,null],[12,"XtWindowOfObject","","",182,null],[12,"XtWindowToWidget","","",182,null],[12,"XtAsprintf","","",182,null],[12,"XtVaAppCreateShell","","",182,null],[12,"XtVaAppInitialize","","",182,null],[12,"XtVaCreateArgsList","","",182,null],[12,"XtVaCreateManagedWidget","","",182,null],[12,"XtVaCreatePopupShell","","",182,null],[12,"XtVaCreateWidget","","",182,null],[12,"XtVaGetApplicationResources","","",182,null],[12,"XtVaGetSubresources","","",182,null],[12,"XtVaGetSubvalues","","",182,null],[12,"XtVaGetValues","","",182,null],[12,"XtVaOpenApplication","","",182,null],[12,"XtVaSetSubvalues","","",182,null],[12,"XtVaSetValues","","",182,null],[3,"Arg","","",null,null],[3,"SubstitutionRec","","",null,null],[3,"_TranslationData","","",null,null],[3,"_WidgetClassRec","","",null,null],[3,"_WidgetRec","","",null,null],[3,"_XtActionsRec","","",null,null],[3,"_XtAppStruct","","",null,null],[3,"_XtCallbackRec","","",null,null],[3,"_XtCheckpointTokenRec","","",null,null],[3,"XtConvertArgRec","","",null,null],[3,"_XtResource","","",null,null],[3,"XtWidgetGeometry","","",null,null],[6,"XtCallbackStatus","","",null,null],[6,"XtGeometryResult","","",null,null],[6,"XtGrabKind","","",null,null],[6,"XtListPosition","","",null,null],[6,"ArgList","","",null,null],[6,"Substitution","","",null,null],[6,"Widget","","",null,null],[6,"WidgetClass","","",null,null],[6,"XtAccelerators","","",null,null],[6,"XtActionList","","",null,null],[6,"XtActionsRec","","",null,null],[6,"XtAppContext","","",null,null],[6,"XtCallbackList","","",null,null],[6,"XtCallbackRec","","",null,null],[6,"XtCheckpointToken","","",null,null],[6,"XtCheckpointTokenRec","","",null,null],[6,"XtConvertArgList","","",null,null],[6,"XtResource","","",null,null],[6,"XtResourceList","","",null,null],[6,"XtTranslations","","",null,null],[11,"open","","",182,{"inputs":[{"name":"xt"}],"output":{"name":"result"}}],[0,"xtest","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xtest","",null,null],[12,"XTestCompareCurrentCursorWithWindow","","",183,null],[12,"XTestCompareCursorWithWindow","","",183,null],[12,"XTestDiscard","","",183,null],[12,"XTestFakeButtonEvent","","",183,null],[12,"XTestFakeDeviceButtonEvent","","",183,null],[12,"XTestFakeDeviceKeyEvent","","",183,null],[12,"XTestFakeDeviceMotionEvent","","",183,null],[12,"XTestFakeKeyEvent","","",183,null],[12,"XTestFakeMotionEvent","","",183,null],[12,"XTestFakeProximityEvent","","",183,null],[12,"XTestFakeRelativeMotionEvent","","",183,null],[12,"XTestGrabControl","","",183,null],[12,"XTestQueryExtension","","",183,null],[12,"XTestSetGContextOfGC","","",183,null],[12,"XTestSetVisualIDOfVisual","","",183,null],[11,"open","","",183,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}]],"paths":[[4,"OpenErrorKind"],[3,"OpenError"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeNotifyEvent"],[3,"XF86VidModeSyncRange"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"Struct_Unnamed1"],[3,"Struct_Unnamed2"],[3,"Struct_Unnamed3"],[3,"Struct_Unnamed4"],[3,"Union_Unnamed5"],[3,"Struct_Unnamed6"],[3,"Struct_Unnamed7"],[3,"Struct_Unnamed8"],[3,"Struct_Unnamed9"],[3,"Struct_Unnamed10"],[3,"Struct_Unnamed11"],[3,"Struct_Unnamed12"],[3,"Struct_Unnamed13"],[3,"Struct_Unnamed14"],[3,"Struct_Unnamed15"],[3,"Struct_Unnamed16"],[3,"Struct_Unnamed17"],[3,"Struct_Unnamed18"],[3,"Struct_Unnamed19"],[3,"Struct_Unnamed20"],[3,"Struct_Unnamed21"],[3,"Struct_Unnamed22"],[3,"Struct_Unnamed23"],[3,"Struct_Unnamed24"],[3,"Struct_Unnamed25"],[3,"Struct_Unnamed26"],[3,"Struct_Unnamed27"],[3,"Struct_Unnamed28"],[3,"Xlib"],[3,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbCompatMapRec"],[3,"_XkbDesc"],[3,"_XkbIndicatorRec"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XExtData"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ImageFns"],[3,"ClientMessageData"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xt"],[3,"Xf86vmode"]]};
searchIndex['gfx_graphics'] = {"items":[[0,"","gfx_graphics","A Piston 2D graphics back-end using gfx-rs.",null,null],[3,"Gfx2d","","The data used for drawing 2D graphics.",null,null],[3,"GfxGraphics","","Used for rendering 2D graphics.",null,null],[3,"GlyphCache","","A struct used for caching rendered font.",null,null],[12,"face","","The font face.",0,null],[11,"new","","Creates a new Gfx2d object.",1,{"inputs":[{"name":"gfx2d"},{"name":"f"}],"output":{"name":"self"}}],[11,"draw","","Renders graphics to a Gfx renderer.",1,{"inputs":[{"name":"gfx2d"},{"name":"renderer"},{"name":"o"},{"name":"viewport"},{"name":"f"}],"output":null}],[11,"new","","Creates a new object for rendering 2D graphics.",2,{"inputs":[{"name":"gfxgraphics"},{"name":"renderer"},{"name":"o"},{"name":"gfx2d"}],"output":{"name":"self"}}],[11,"has_texture_alpha","","Returns true if texture has alpha channel.",2,{"inputs":[{"name":"gfxgraphics"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"clear_color","","",2,null],[11,"clear_stencil","","",2,{"inputs":[{"name":"gfxgraphics"},{"name":"u8"}],"output":null}],[11,"tri_list","","",2,null],[11,"tri_list_uv","","",2,null],[11,"new","","Constructor for a GlyphCache.",0,{"inputs":[{"name":"glyphcache"},{"name":"p"},{"name":"f"}],"output":{"name":"result"}}],[11,"character","","",0,{"inputs":[{"name":"glyphcache"},{"name":"fontsize"},{"name":"char"}],"output":{"name":"character"}}]],"paths":[[3,"GlyphCache"],[3,"Gfx2d"],[3,"GfxGraphics"]]};
searchIndex['gfx_device_gl'] = {"items":[[0,"","gfx_device_gl","OpenGL implementation of a device, striving to support OpenGL 2.0 with at\nleast VAOs, but using newer extensions when available.",null,null],[11,"fmt","gfx::device::attrib","",0,{"inputs":[{"name":"signflag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"signflag"}],"output":{"name":"signflag"}}],[11,"hash","","",0,null],[11,"partial_cmp","","",0,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"ordering"}}],[11,"fmt","","",1,{"inputs":[{"name":"intsubtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"intsubtype"}],"output":{"name":"intsubtype"}}],[11,"hash","","",1,null],[11,"partial_cmp","","",1,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"ordering"}}],[11,"fmt","","",2,{"inputs":[{"name":"intsize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"intsize"}],"output":{"name":"intsize"}}],[11,"hash","","",2,null],[11,"partial_cmp","","",2,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"ordering"}}],[11,"fmt","","",3,{"inputs":[{"name":"floatsubtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"floatsubtype"}],"output":{"name":"floatsubtype"}}],[11,"hash","","",3,null],[11,"partial_cmp","","",3,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"ordering"}}],[11,"fmt","","",4,{"inputs":[{"name":"floatsize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"floatsize"}],"output":{"name":"floatsize"}}],[11,"hash","","",4,null],[11,"partial_cmp","","",4,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"ordering"}}],[11,"fmt","","",5,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"hash","","",5,null],[11,"partial_cmp","","",5,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"ordering"}}],[11,"is_compatible","","Check if the attribute is compatible with a particular shader type.",5,{"inputs":[{"name":"type"},{"name":"basetype"}],"output":{"name":"result"}}],[11,"get_size","","Return the size of the type in bytes.",5,{"inputs":[{"name":"type"}],"output":{"name":"u8"}}],[11,"fmt","","",6,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"hash","","",6,null],[11,"partial_cmp","","",6,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"ordering"}}],[11,"hash","","",7,null],[11,"eq","","",7,{"inputs":[{"name":"fixedpoint"},{"name":"fixedpoint"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"fixedpoint"},{"name":"fixedpoint"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"fixedpoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"fixedpoint"}}],[11,"cast2","","Cast a fixed-size2 array to fixed-point.",7,null],[11,"cast3","","Cast a fixed-size3 array to fixed-point.",7,null],[11,"cast4","","Cast a fixed-size4 array to fixed-point.",7,null],[11,"hash","","",8,null],[11,"eq","","",8,{"inputs":[{"name":"floater"},{"name":"floater"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"floater"},{"name":"floater"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"floater"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"floater"}],"output":{"name":"floater"}}],[11,"cast2","","Cast a fixed-size2 array to floating-point.",8,null],[11,"cast3","","Cast a fixed-size3 array to floating-point.",8,null],[11,"cast4","","Cast a fixed-size4 array to floating-point.",8,null],[11,"describe","","",7,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",7,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",7,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",7,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",7,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",7,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",8,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",8,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",8,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",8,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",8,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",8,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"fmt","gfx::device::command","",9,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"iter","","",10,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"iter"}}],[11,"new","","",10,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"commandbuffer"}}],[11,"clear","","",10,null],[11,"bind_program","","",10,null],[11,"bind_array_buffer","","",10,null],[11,"bind_attribute","","",10,null],[11,"bind_index","","",10,null],[11,"bind_frame_buffer","","",10,null],[11,"unbind_target","","",10,null],[11,"bind_target_surface","","",10,null],[11,"bind_target_texture","","",10,null],[11,"bind_uniform_block","","",10,null],[11,"bind_uniform","","",10,null],[11,"bind_texture","","",10,null],[11,"set_draw_color_buffers","","",10,null],[11,"set_primitive","","",10,null],[11,"set_viewport","","",10,null],[11,"set_multi_sample","","",10,null],[11,"set_scissor","","",10,null],[11,"set_depth_stencil","","",10,null],[11,"set_blend","","",10,null],[11,"set_color_mask","","",10,null],[11,"update_buffer","","",10,null],[11,"update_texture","","",10,null],[11,"call_clear","","",10,null],[11,"call_draw","","",10,null],[11,"call_draw_indexed","","",10,null],[11,"call_blit","","",10,null],[11,"fmt","gfx::device::draw","",11,{"inputs":[{"name":"datapointer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"datapointer"},{"name":"datapointer"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"datapointer"},{"name":"datapointer"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"datapointer"}],"output":{"name":"datapointer"}}],[11,"new","","Create a fresh new data buffer.",12,{"inputs":[{"name":"databuffer"}],"output":{"name":"databuffer"}}],[11,"clear","","Clear all the data but retain the allocated storage.",12,null],[11,"add_struct","","Copy a given structure into the buffer, return the offset and the size.",12,{"inputs":[{"name":"databuffer"},{"name":"t"}],"output":{"name":"datapointer"}}],[11,"add_vec","","Copy a given vector slice into the buffer",12,null],[11,"get_ref","","Return a reference to a stored data object.",12,null],[11,"fmt","","",13,{"inputs":[{"name":"access"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"access"}],"output":{"name":"access"}}],[11,"fmt","","",14,{"inputs":[{"name":"gamma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"gamma"},{"name":"gamma"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"gamma"},{"name":"gamma"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"fmt","","",15,{"inputs":[{"name":"target"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"target"},{"name":"target"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"target"},{"name":"target"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"target"}],"output":{"name":"target"}}],[11,"eq","gfx::device::dummy","",16,{"inputs":[{"name":"dummyresources"},{"name":"dummyresources"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"dummyresources"},{"name":"dummyresources"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"fmt","","",16,{"inputs":[{"name":"dummyresources"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"dummyresources"}],"output":{"name":"dummyresources"}}],[11,"get_capabilities","","",17,{"inputs":[{"name":"dummydevice"}],"output":{"name":"capabilities"}}],[11,"reset_state","","",17,null],[11,"submit","","",17,null],[11,"cleanup","","",17,null],[11,"eq","gfx::device::handle","",18,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"hash","","",18,null],[11,"fmt","","",18,{"inputs":[{"name":"rawbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"rawbuffer"}}],[11,"get_info","","Get raw buffer info",18,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"bufferinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",18,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"ordering"}}],[11,"eq","","",19,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"fmt","","",19,{"inputs":[{"name":"buffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"buffer"}],"output":{"name":"buffer"}}],[11,"from_raw","","Create a type-safe Buffer from a RawBuffer",19,{"inputs":[{"name":"buffer"},{"name":"rawbuffer"}],"output":{"name":"buffer"}}],[11,"cast","","Cast the type this Buffer references",19,{"inputs":[{"name":"buffer"}],"output":{"name":"buffer"}}],[11,"raw","","Get the underlying raw Handle",19,{"inputs":[{"name":"buffer"}],"output":{"name":"rawbuffer"}}],[11,"get_info","","Get the associated information about the buffer",19,{"inputs":[{"name":"buffer"}],"output":{"name":"bufferinfo"}}],[11,"len","","Get the number of elements in the buffer.",19,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[11,"eq","","",20,{"inputs":[{"name":"arraybuffer"},{"name":"arraybuffer"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"arraybuffer"},{"name":"arraybuffer"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"fmt","","",20,{"inputs":[{"name":"arraybuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"arraybuffer"}],"output":{"name":"arraybuffer"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",20,{"inputs":[{"name":"arraybuffer"},{"name":"arraybuffer"}],"output":{"name":"ordering"}}],[11,"eq","","",21,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"fmt","","",21,{"inputs":[{"name":"shader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"shader"}],"output":{"name":"shader"}}],[11,"get_stage","","Get shader stage",21,{"inputs":[{"name":"shader"}],"output":{"name":"stage"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",21,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"ordering"}}],[11,"eq","","",22,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"program"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"program"}],"output":{"name":"program"}}],[11,"get_info","","Get program info",22,{"inputs":[{"name":"program"}],"output":{"name":"programinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",22,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"ordering"}}],[11,"eq","","",23,{"inputs":[{"name":"framebuffer"},{"name":"framebuffer"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"framebuffer"},{"name":"framebuffer"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"fmt","","",23,{"inputs":[{"name":"framebuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"framebuffer"}],"output":{"name":"framebuffer"}}],[11,"eq","","",24,{"inputs":[{"name":"surface"},{"name":"surface"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"surface"},{"name":"surface"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"fmt","","",24,{"inputs":[{"name":"surface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"surface"}],"output":{"name":"surface"}}],[11,"get_info","","Get surface info",24,{"inputs":[{"name":"surface"}],"output":{"name":"surfaceinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",24,{"inputs":[{"name":"surface"},{"name":"surface"}],"output":{"name":"ordering"}}],[11,"eq","","",25,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"fmt","","",25,{"inputs":[{"name":"texture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"texture"}],"output":{"name":"texture"}}],[11,"get_info","","Get texture info",25,{"inputs":[{"name":"texture"}],"output":{"name":"textureinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",25,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"ordering"}}],[11,"eq","","",26,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"sampler"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"sampler"}],"output":{"name":"sampler"}}],[11,"get_info","","Get sampler info",26,{"inputs":[{"name":"sampler"}],"output":{"name":"samplerinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",26,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"ordering"}}],[11,"eq","","",27,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"fence"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"fence"}],"output":{"name":"fence"}}],[11,"make_buffer","","",28,null],[11,"make_array_buffer","","",28,null],[11,"make_shader","","",28,null],[11,"make_program","","",28,null],[11,"make_frame_buffer","","",28,null],[11,"make_surface","","",28,null],[11,"make_texture","","",28,null],[11,"make_sampler","","",28,null],[11,"make_fence","","",28,null],[11,"clean_with","","",28,null],[11,"new","","Create a new handle manager",28,{"inputs":[{"name":"manager"}],"output":{"name":"manager"}}],[11,"clear","","Clear all references",28,null],[11,"extend","","Extend with all references of another handle manager",28,null],[11,"count","","Count the total number of referenced resources",28,{"inputs":[{"name":"manager"}],"output":{"name":"usize"}}],[11,"ref_buffer","","Reference a buffer",28,null],[11,"ref_array_buffer","","Reference am array buffer",28,null],[11,"ref_shader","","Reference a shader",28,null],[11,"ref_program","","Reference a program",28,null],[11,"ref_frame_buffer","","Reference a frame buffer",28,null],[11,"ref_surface","","Reference a surface",28,null],[11,"ref_texture","","Reference a texture",28,null],[11,"ref_sampler","","Reference a sampler",28,null],[11,"ref_fence","","Reference a fence",28,null],[11,"deref","gfx::device::mapping","",29,null],[11,"drop","","",29,null],[11,"set","","Set a value in the buffer",30,null],[11,"drop","","",30,null],[11,"deref","","",31,null],[11,"deref_mut","","",31,null],[11,"drop","","",31,null],[11,"fmt","gfx::device::shade","",32,{"inputs":[{"name":"isarray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"isarray"},{"name":"isarray"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"isarray"},{"name":"isarray"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"isarray"}],"output":{"name":"isarray"}}],[11,"fmt","","",33,{"inputs":[{"name":"isshadow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"isshadow"},{"name":"isshadow"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"isshadow"},{"name":"isshadow"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"isshadow"}],"output":{"name":"isshadow"}}],[11,"fmt","","",34,{"inputs":[{"name":"ismultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"ismultisample"},{"name":"ismultisample"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"ismultisample"},{"name":"ismultisample"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"ismultisample"}],"output":{"name":"ismultisample"}}],[11,"fmt","","",35,{"inputs":[{"name":"isrect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"isrect"},{"name":"isrect"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"isrect"},{"name":"isrect"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"isrect"}],"output":{"name":"isrect"}}],[11,"fmt","","",36,{"inputs":[{"name":"matrixformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"matrixformat"},{"name":"matrixformat"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"matrixformat"},{"name":"matrixformat"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"matrixformat"}],"output":{"name":"matrixformat"}}],[11,"fmt","","",37,{"inputs":[{"name":"samplertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"samplertype"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"samplertype"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"samplertype"}],"output":{"name":"samplertype"}}],[11,"fmt","","",38,{"inputs":[{"name":"basetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"basetype"},{"name":"basetype"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"basetype"},{"name":"basetype"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"basetype"}],"output":{"name":"basetype"}}],[11,"fmt","","",39,{"inputs":[{"name":"containertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"containertype"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"containertype"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"containertype"}],"output":{"name":"containertype"}}],[11,"eq","","",40,{"inputs":[{"name":"stage"},{"name":"stage"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"stage"},{"name":"stage"}],"output":{"name":"bool"}}],[11,"hash","","",40,null],[11,"fmt","","",40,{"inputs":[{"name":"stage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"stage"}],"output":{"name":"stage"}}],[11,"is_same_type","","Whether two `UniformValue`s have the same type.",41,{"inputs":[{"name":"uniformvalue"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"uniformvalue"}],"output":{"name":"uniformvalue"}}],[11,"fmt","","",41,{"inputs":[{"name":"uniformvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"fmt","","",43,{"inputs":[{"name":"uniformvar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"uniformvar"},{"name":"uniformvar"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"uniformvar"},{"name":"uniformvar"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"uniformvar"}],"output":{"name":"uniformvar"}}],[11,"fmt","","",44,{"inputs":[{"name":"blockvar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"blockvar"},{"name":"blockvar"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"blockvar"},{"name":"blockvar"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"blockvar"}],"output":{"name":"blockvar"}}],[11,"fmt","","",45,{"inputs":[{"name":"samplervar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"samplervar"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"samplervar"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"samplervar"}],"output":{"name":"samplervar"}}],[11,"fmt","","",46,{"inputs":[{"name":"programinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"programinfo"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"programinfo"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"programinfo"}],"output":{"name":"programinfo"}}],[11,"fmt","","",47,{"inputs":[{"name":"compatibilityerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"compatibilityerror"}],"output":{"name":"compatibilityerror"}}],[11,"is_compatible","","Whether a value is compatible with this variable. That is, whether the value can be stored\nin this variable.",43,{"inputs":[{"name":"uniformvar"},{"name":"uniformvalue"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"createshadererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",48,{"inputs":[{"name":"createshadererror"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"createshadererror"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"createshadererror"}],"output":{"name":"createshadererror"}}],[11,"fmt","","",49,{"inputs":[{"name":"createprogramerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"createprogramerror"},{"name":"createprogramerror"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"createprogramerror"},{"name":"createprogramerror"}],"output":{"name":"bool"}}],[11,"clone","","",49,{"inputs":[{"name":"createprogramerror"}],"output":{"name":"createprogramerror"}}],[11,"fmt","","",50,{"inputs":[{"name":"shadermodel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"option"}}],[11,"lt","","",50,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"le","","",50,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"gt","","",50,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"ge","","",50,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"eq","","",50,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"clone","","",50,{"inputs":[{"name":"shadermodel"}],"output":{"name":"shadermodel"}}],[11,"to_number","","Return the shader model as a numeric value.",50,{"inputs":[{"name":"shadermodel"}],"output":{"name":"u8"}}],[11,"fmt","gfx::device::tex","",51,{"inputs":[{"name":"surfaceerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"surfaceerror"},{"name":"surfaceerror"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"surfaceerror"},{"name":"surfaceerror"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"surfaceerror"}],"output":{"name":"surfaceerror"}}],[11,"eq","","",52,{"inputs":[{"name":"textureerror"},{"name":"textureerror"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"textureerror"},{"name":"textureerror"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"textureerror"}],"output":{"name":"textureerror"}}],[11,"fmt","","",52,{"inputs":[{"name":"textureerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"aamode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"aamode"}],"output":{"name":"aamode"}}],[11,"hash","","",53,null],[11,"partial_cmp","","",53,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"option"}}],[11,"lt","","",53,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"le","","",53,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"gt","","",53,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ge","","",53,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"eq","","",53,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"cmp","","",53,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"ordering"}}],[11,"fmt","","",54,{"inputs":[{"name":"components"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"hash","","",54,null],[11,"partial_cmp","","",54,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"lt","","",54,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"le","","",54,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"gt","","",54,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"ge","","",54,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"eq","","",54,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"cmp","","",54,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"get_count","","Get the number of components.",54,{"inputs":[{"name":"components"}],"output":{"name":"u8"}}],[11,"fmt","","",55,{"inputs":[{"name":"compression"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"compression"}],"output":{"name":"compression"}}],[11,"hash","","",55,null],[11,"partial_cmp","","",55,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"option"}}],[11,"lt","","",55,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"le","","",55,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"gt","","",55,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"ge","","",55,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"eq","","",55,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"cmp","","",55,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"ordering"}}],[11,"fmt","","",56,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"hash","","",56,null],[11,"partial_cmp","","",56,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"option"}}],[11,"lt","","",56,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"le","","",56,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"gt","","",56,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ge","","",56,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"eq","","",56,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"cmp","","",56,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"ordering"}}],[11,"get_components","","Extract the components format",56,{"inputs":[{"name":"format"}],"output":{"name":"option"}}],[11,"is_color","","Check if it's a color format.",56,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"has_depth","","Check if it has a depth component.",56,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"has_stencil","","Check if it has a stencil component.",56,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"is_compressed","","Check if it's a compressed format.",56,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"does_convert_gamma","","Check if it's a sRGB color space.",56,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"get_size","","Get size of the texel in bytes.",56,{"inputs":[{"name":"format"}],"output":{"name":"option"}}],[11,"fmt","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"surfaceinfo"}],"output":{"name":"surfaceinfo"}}],[11,"hash","","",57,null],[11,"partial_cmp","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"eq","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"cmp","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"ordering"}}],[11,"fmt","","",58,{"inputs":[{"name":"filtermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"filtermethod"}],"output":{"name":"filtermethod"}}],[11,"hash","","",58,null],[11,"partial_cmp","","",58,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"eq","","",58,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"cmp","","",58,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"ordering"}}],[11,"fmt","","",59,{"inputs":[{"name":"cubeface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"cubeface"}],"output":{"name":"cubeface"}}],[11,"hash","","",59,null],[11,"partial_cmp","","",59,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"option"}}],[11,"lt","","",59,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"le","","",59,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"gt","","",59,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"ge","","",59,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"eq","","",59,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"cmp","","",59,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"ordering"}}],[11,"fmt","","",60,{"inputs":[{"name":"kind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"kind"}],"output":{"name":"kind"}}],[11,"hash","","",60,null],[11,"partial_cmp","","",60,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"option"}}],[11,"lt","","",60,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"le","","",60,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"gt","","",60,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ge","","",60,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"eq","","",60,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"cmp","","",60,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"ordering"}}],[11,"get_aa_mode","","Return the anti-aliasing mode of the texture",60,{"inputs":[{"name":"kind"}],"output":{"name":"option"}}],[11,"fmt","","",61,{"inputs":[{"name":"textureinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"textureinfo"}],"output":{"name":"textureinfo"}}],[11,"hash","","",61,null],[11,"partial_cmp","","",61,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"eq","","",61,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"cmp","","",61,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"ordering"}}],[11,"fmt","","",62,{"inputs":[{"name":"imageinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"imageinfo"}],"output":{"name":"imageinfo"}}],[11,"hash","","",62,null],[11,"partial_cmp","","",62,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"eq","","",62,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"cmp","","",62,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"ordering"}}],[11,"default","","",62,{"inputs":[{"name":"imageinfo"}],"output":{"name":"imageinfo"}}],[11,"default","","",61,{"inputs":[{"name":"textureinfo"}],"output":{"name":"textureinfo"}}],[11,"new","","Create a new empty texture info.",61,{"inputs":[{"name":"textureinfo"}],"output":{"name":"textureinfo"}}],[11,"contains","","Check if given ImageInfo is a part of the texture.",61,{"inputs":[{"name":"textureinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"from","","",62,{"inputs":[{"name":"imageinfo"},{"name":"textureinfo"}],"output":{"name":"imageinfo"}}],[11,"from","","",57,{"inputs":[{"name":"surfaceinfo"},{"name":"textureinfo"}],"output":{"name":"surfaceinfo"}}],[11,"new","","Create a new `ImageInfo`, using default values.",62,{"inputs":[{"name":"imageinfo"}],"output":{"name":"imageinfo"}}],[11,"get_texel_count","","Get the total number of texels.",62,{"inputs":[{"name":"imageinfo"}],"output":{"name":"usize"}}],[11,"fmt","","",63,{"inputs":[{"name":"wrapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"wrapmode"}],"output":{"name":"wrapmode"}}],[11,"hash","","",63,null],[11,"partial_cmp","","",63,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"option"}}],[11,"lt","","",63,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"le","","",63,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"gt","","",63,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"ge","","",63,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"eq","","",63,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"cmp","","",63,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"ordering"}}],[11,"fmt","","",64,{"inputs":[{"name":"samplerinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"samplerinfo"}],"output":{"name":"samplerinfo"}}],[11,"partial_cmp","","",64,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"option"}}],[11,"lt","","",64,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"le","","",64,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"gt","","",64,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ge","","",64,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"eq","","",64,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"new","","Create a new sampler description with a given filter method and wrapping mode, using no LOD\nmodifications.",64,{"inputs":[{"name":"samplerinfo"},{"name":"filtermethod"},{"name":"wrapmode"}],"output":{"name":"samplerinfo"}}],[11,"new","gfx::device::arc","Create a new Arc<T>",65,{"inputs":[{"name":"arc"},{"name":"t"}],"output":{"name":"arc"}}],[11,"cmp_ref","","Like Ord, but checks by ref vs value",65,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"ordering"}}],[11,"is_unique","","Check to see if this is unique",65,{"inputs":[{"name":"arc"}],"output":{"name":"option"}}],[11,"clone","","",65,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"deref","","",65,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"fmt","","",65,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"hash","","",65,null],[11,"drop","","",65,null],[11,"fmt","gfx::device","",66,{"inputs":[{"name":"notsupported"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"notsupported"},{"name":"notsupported"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"notsupported"},{"name":"notsupported"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"notsupported"}],"output":{"name":"notsupported"}}],[11,"fmt","","",67,{"inputs":[{"name":"capabilities"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"capabilities"}],"output":{"name":"capabilities"}}],[11,"clone","","",68,{"inputs":[{"name":"mapaccess"}],"output":{"name":"mapaccess"}}],[11,"fmt","","",69,{"inputs":[{"name":"primitivetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"primitivetype"},{"name":"primitivetype"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"primitivetype"},{"name":"primitivetype"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"primitivetype"}],"output":{"name":"primitivetype"}}],[11,"eq","","",70,{"inputs":[{"name":"bufferrole"},{"name":"bufferrole"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"bufferrole"},{"name":"bufferrole"}],"output":{"name":"bool"}}],[11,"hash","","",70,null],[11,"fmt","","",70,{"inputs":[{"name":"bufferrole"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"bufferrole"}],"output":{"name":"bufferrole"}}],[11,"eq","","",71,{"inputs":[{"name":"bufferusage"},{"name":"bufferusage"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"bufferusage"},{"name":"bufferusage"}],"output":{"name":"bool"}}],[11,"hash","","",71,null],[11,"fmt","","",71,{"inputs":[{"name":"bufferusage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"bufferusage"}],"output":{"name":"bufferusage"}}],[11,"eq","","",72,{"inputs":[{"name":"bufferinfo"},{"name":"bufferinfo"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"bufferinfo"},{"name":"bufferinfo"}],"output":{"name":"bool"}}],[11,"hash","","",72,null],[11,"fmt","","",72,{"inputs":[{"name":"bufferinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"bufferinfo"}],"output":{"name":"bufferinfo"}}],[11,"fmt","","",73,{"inputs":[{"name":"bufferupdateerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"bufferupdateerror"},{"name":"bufferupdateerror"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"bufferupdateerror"},{"name":"bufferupdateerror"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"bufferupdateerror"}],"output":{"name":"bufferupdateerror"}}],[11,"fmt","draw_state::state","",74,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",74,null],[11,"partial_cmp","","",74,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"lt","","",74,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"le","","",74,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"gt","","",74,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ge","","",74,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",74,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",74,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",75,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",75,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",75,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",75,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"cmp","","",76,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",76,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"lt","","",76,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"le","","",76,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"gt","","",76,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ge","","",76,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"hash","","",76,null],[11,"fmt","","",76,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"partial_cmp","","",77,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",77,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",77,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",77,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",77,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"fmt","","",77,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"partial_cmp","","",78,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"option"}}],[11,"lt","","",78,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"le","","",78,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"gt","","",78,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ge","","",78,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"fmt","","",78,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",78,{"inputs":[{"name":"primitive"}],"output":{"name":"cullface"}}],[11,"default","","",78,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"cmp","","",79,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"lt","","",79,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"le","","",79,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"gt","","",79,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ge","","",79,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"hash","","",79,null],[11,"fmt","","",79,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"cmp","","",80,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",80,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"lt","","",80,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"le","","",80,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"gt","","",80,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ge","","",80,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"hash","","",80,null],[11,"fmt","","",80,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"cmp","","",81,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",81,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"lt","","",81,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"le","","",81,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"gt","","",81,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ge","","",81,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"hash","","",81,null],[11,"fmt","","",81,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"cmp","","",82,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",82,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",82,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",82,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",82,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",82,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"hash","","",82,null],[11,"fmt","","",82,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"default","","",82,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"cmp","","",83,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",83,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",83,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",83,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",83,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"hash","","",83,null],[11,"fmt","","",83,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"cmp","","",84,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"hash","","",84,null],[11,"fmt","","",84,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"default","","",84,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"cmp","","",85,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"lt","","",85,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"le","","",85,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"gt","","",85,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ge","","",85,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"hash","","",85,null],[11,"fmt","","",85,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",85,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"cmp","","",86,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"hash","","",86,null],[11,"fmt","","",86,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"cmp","","",87,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",87,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",87,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",87,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",87,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",87,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"hash","","",87,null],[11,"fmt","","",87,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"fmt","","",88,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",88,null],[11,"partial_cmp","","",88,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",88,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",88,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",88,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"eq","","",89,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"default","","",89,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",89,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",90,null],[11,"cmp","","",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"fmt","","",90,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",90,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",90,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",90,{"inputs":[{"name":"colormask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",90,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",90,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",90,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",90,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",90,null],[11,"remove","","Removes the specified flags in-place.",90,null],[11,"toggle","","Toggles the specified flags in-place.",90,null],[11,"bitor","","Returns the union of the two sets of flags.",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",90,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",90,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"from_iter","","",90,{"inputs":[{"name":"colormask"},{"name":"t"}],"output":{"name":"colormask"}}],[11,"partial_cmp","draw_state::target","",91,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",91,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",91,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",91,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",91,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"fmt","","",91,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",92,null],[11,"cmp","","",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"option"}}],[11,"lt","","",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"le","","",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"gt","","",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ge","","",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"eq","","",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"fmt","","",92,{"inputs":[{"name":"mask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",92,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"all","","Returns the set containing all flags.",92,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",92,{"inputs":[{"name":"mask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",92,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",92,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"mask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",92,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",92,null],[11,"remove","","Removes the specified flags in-place.",92,null],[11,"toggle","","Toggles the specified flags in-place.",92,null],[11,"bitor","","Returns the union of the two sets of flags.",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",92,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"not","","Returns the complement of this set of flags.",92,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"from_iter","","",92,{"inputs":[{"name":"mask"},{"name":"t"}],"output":{"name":"mask"}}],[11,"hash","","",93,null],[11,"cmp","","",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",93,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",93,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",93,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",93,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",93,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",93,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",93,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",93,null],[11,"remove","","Removes the specified flags in-place.",93,null],[11,"toggle","","Toggles the specified flags in-place.",93,null],[11,"bitor","","Returns the union of the two sets of flags.",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",93,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",93,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"from_iter","","",93,{"inputs":[{"name":"mirror"},{"name":"t"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"option"}}],[11,"lt","","",94,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"le","","",94,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"gt","","",94,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ge","","",94,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"eq","","",94,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"cleardata"}],"output":{"name":"cleardata"}}],[11,"fmt","","",94,{"inputs":[{"name":"cleardata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","gfx::extra::shade","",95,{"inputs":[{"name":"programerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"programerror"},{"name":"programerror"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"programerror"},{"name":"programerror"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"programerror"}],"output":{"name":"programerror"}}],[11,"fmt","","",96,{"inputs":[{"name":"shadersource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",96,{"inputs":[{"name":"shadersource"},{"name":"shadersource"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"shadersource"},{"name":"shadersource"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"shadersource"}],"output":{"name":"shadersource"}}],[11,"empty","","Create an empty shader source. Useful for specifying the remaining\nstructure members upon construction.",96,{"inputs":[{"name":"shadersource"}],"output":{"name":"shadersource"}}],[11,"choose","","Pick one of the stored versions that is the highest supported by the device.",96,{"inputs":[{"name":"shadersource"},{"name":"shadermodel"}],"output":{"name":"result"}}],[11,"get_output","gfx::extra::stream","",97,{"inputs":[{"name":"ownedstream"}],"output":{"name":"o"}}],[11,"access","","",97,null],[11,"present","","Show what we've been drawing all this time.",97,null],[11,"eq","gfx::render::batch","",98,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",98,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",99,{"inputs":[{"name":"full"}],"output":{"name":"full"}}],[11,"new","","Create a new full batch",99,{"inputs":[{"name":"full"},{"name":"mesh"},{"name":"program"},{"name":"t"}],"output":{"name":"result"}}],[11,"get_data","","",99,{"inputs":[{"name":"full"}],"output":{"name":"result"}}],[11,"fill_params","","",99,{"inputs":[{"name":"full"},{"name":"paramstorage"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"core"}],"output":{"name":"core"}}],[11,"new","","Create a new core batch.",100,{"inputs":[{"name":"core"},{"name":"mesh"},{"name":"program"}],"output":{"name":"result"}}],[11,"with","","Add missing components to complete the batch for rendering.",100,null],[11,"program","","Read the ProgramHandle",100,{"inputs":[{"name":"core"}],"output":{"name":"program"}}],[11,"mesh","","Read the Mesh",100,{"inputs":[{"name":"core"}],"output":{"name":"mesh"}}],[11,"eq","gfx::render::mesh","",101,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"hash","","",101,null],[11,"fmt","","",101,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"eq","","",102,{"inputs":[{"name":"mesh"},{"name":"mesh"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"mesh"},{"name":"mesh"}],"output":{"name":"bool"}}],[11,"hash","","",102,null],[11,"fmt","","",102,{"inputs":[{"name":"mesh"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"mesh"}],"output":{"name":"mesh"}}],[11,"new","","Create a new mesh, which is a `TriangleList` with no attributes and `nv` vertices.",102,{"inputs":[{"name":"mesh"},{"name":"u32"}],"output":{"name":"mesh"}}],[11,"from_format","","Create a new `Mesh` from a struct that implements `VertexFormat` and a buffer.",102,{"inputs":[{"name":"mesh"},{"name":"buffer"},{"name":"u32"}],"output":{"name":"mesh"}}],[11,"from_format_instanced","","Create a new intanced `Mesh` given a vertex buffer and an instance buffer.",102,{"inputs":[{"name":"mesh"},{"name":"buffer"},{"name":"u32"},{"name":"buffer"}],"output":{"name":"mesh"}}],[11,"eq","","",103,{"inputs":[{"name":"slice"},{"name":"slice"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"slice"},{"name":"slice"}],"output":{"name":"bool"}}],[11,"fmt","","",103,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"get_prim_count","","Get the number of primitives in this slice.",103,{"inputs":[{"name":"slice"}],"output":{"name":"u32"}}],[11,"eq","","",104,{"inputs":[{"name":"slicekind"},{"name":"slicekind"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"slicekind"},{"name":"slicekind"}],"output":{"name":"bool"}}],[11,"fmt","","",104,{"inputs":[{"name":"slicekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"slicekind"}],"output":{"name":"slicekind"}}],[11,"to_slice","","Return a vertex slice of the whole mesh.",102,{"inputs":[{"name":"mesh"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[11,"to_slice","gfx::device::handle","",19,{"inputs":[{"name":"buffer"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[11,"to_slice","","",19,{"inputs":[{"name":"buffer"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[11,"to_slice","","",19,{"inputs":[{"name":"buffer"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[11,"eq","gfx::render::mesh","",105,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",105,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",106,{"inputs":[{"name":"attributeiter"}],"output":{"name":"attributeiter"}}],[11,"next","","",106,{"inputs":[{"name":"attributeiter"}],"output":{"name":"option"}}],[11,"clone","","",107,{"inputs":[{"name":"link"}],"output":{"name":"link"}}],[11,"new","","Match mesh attributes against shader inputs, produce a mesh link.\nExposed to public to allow external `Batch` implementations to use it.",107,{"inputs":[{"name":"link"},{"name":"mesh"},{"name":"programinfo"}],"output":{"name":"result"}}],[11,"from_iter","","Construct a new link from an iterator over attribute indices.",107,{"inputs":[{"name":"link"},{"name":"i"}],"output":{"name":"result"}}],[11,"to_iter","","Convert to an iterator returning attribute indices",107,{"inputs":[{"name":"link"}],"output":{"name":"attributeiter"}}],[11,"fmt","gfx::render::shade","",108,{"inputs":[{"name":"parametererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"parametererror"},{"name":"parametererror"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"parametererror"},{"name":"parametererror"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"parametererror"}],"output":{"name":"parametererror"}}],[11,"check_block","gfx::device::handle","",18,{"inputs":[{"name":"rawbuffer"},{"name":"blockvar"}],"output":{"name":"bool"}}],[11,"put","","",18,null],[11,"check_block","","",19,{"inputs":[{"name":"buffer"},{"name":"blockvar"}],"output":{"name":"bool"}}],[11,"put","","",19,null],[11,"create_link","core::option","",109,{"inputs":[{"name":"option"},{"name":"option"},{"name":"programinfo"}],"output":{"name":"result"}}],[11,"fill_params","","",109,null],[11,"clone","gfx::render::shade","",110,{"inputs":[{"name":"paramdictionarylink"}],"output":{"name":"paramdictionarylink"}}],[11,"create_link","","",111,{"inputs":[{"name":"paramdictionary"},{"name":"option"},{"name":"programinfo"}],"output":{"name":"result"}}],[11,"fill_params","","",111,null],[11,"fmt","gfx::render::target","",112,{"inputs":[{"name":"plane"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"plane"},{"name":"plane"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"plane"},{"name":"plane"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"plane"}],"output":{"name":"plane"}}],[11,"get_surface_info","","Get the surface info.",112,{"inputs":[{"name":"plane"}],"output":{"name":"surfaceinfo"}}],[11,"get_format","","Get surface/texture format.",112,{"inputs":[{"name":"plane"}],"output":{"name":"format"}}],[11,"get_size","","",112,null],[11,"get_colors","","",112,null],[11,"get_depth","","",112,{"inputs":[{"name":"plane"}],"output":{"name":"option"}}],[11,"get_stencil","","",112,{"inputs":[{"name":"plane"}],"output":{"name":"option"}}],[11,"fmt","","",113,{"inputs":[{"name":"frame"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",113,{"inputs":[{"name":"frame"},{"name":"frame"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"frame"},{"name":"frame"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"empty","","Create an empty `Frame`.",113,{"inputs":[{"name":"frame"},{"name":"u16"},{"name":"u16"}],"output":{"name":"frame"}}],[11,"get_size","","",113,null],[11,"get_colors","","",113,null],[11,"get_depth","","",113,{"inputs":[{"name":"frame"}],"output":{"name":"option"}}],[11,"get_stencil","","",113,{"inputs":[{"name":"frame"}],"output":{"name":"option"}}],[11,"get_gamma","","",113,{"inputs":[{"name":"frame"}],"output":{"name":"gamma"}}],[11,"eq","gfx::render","",114,{"inputs":[{"name":"bliterror"},{"name":"bliterror"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"bliterror"},{"name":"bliterror"}],"output":{"name":"bool"}}],[11,"fmt","","",114,{"inputs":[{"name":"bliterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"bliterror"}],"output":{"name":"bliterror"}}],[11,"eq","","",115,{"inputs":[{"name":"updateerror"},{"name":"updateerror"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"updateerror"},{"name":"updateerror"}],"output":{"name":"bool"}}],[11,"fmt","","",115,{"inputs":[{"name":"updateerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"updateerror"}],"output":{"name":"updateerror"}}],[11,"eq","","",116,{"inputs":[{"name":"drawerror"},{"name":"drawerror"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"drawerror"},{"name":"drawerror"}],"output":{"name":"bool"}}],[11,"fmt","","",116,{"inputs":[{"name":"drawerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"drawerror"}],"output":{"name":"drawerror"}}],[11,"reset","","Reset all commands for the command buffer re-usal.",117,null],[11,"as_buffer","","Get command and data buffers to be submitted to the device.",117,null],[11,"clone_empty","","Clone the renderer shared data but ignore the commands.",117,{"inputs":[{"name":"renderer"}],"output":{"name":"renderer"}}],[11,"clear","","Clear the output with given `ClearData`.",117,null],[11,"draw","","Draw a 'batch' with all known parameters specified, internal use only.",117,{"inputs":[{"name":"renderer"},{"name":"b"},{"name":"option"},{"name":"o"}],"output":{"name":"result"}}],[11,"blit","","Blit one frame onto another.",117,{"inputs":[{"name":"renderer"},{"name":"i"},{"name":"rect"},{"name":"o"},{"name":"rect"},{"name":"mirror"},{"name":"mask"}],"output":{"name":"result"}}],[11,"update_buffer","","Update a buffer with a slice of data.",117,null],[11,"update_block","","Update a buffer with a data struct.",117,{"inputs":[{"name":"renderer"},{"name":"buffer"},{"name":"t"}],"output":{"name":"result"}}],[11,"update_texture","","Update the contents of a texture.",117,null],[4,"Command","gfx_device_gl","Serialized device command.",null,null],[13,"BindProgram","","",9,null],[13,"BindArrayBuffer","","",9,null],[13,"BindAttribute","","",9,null],[13,"BindIndex","","",9,null],[13,"BindFrameBuffer","","",9,null],[13,"UnbindTarget","","",9,null],[13,"BindTargetSurface","","",9,null],[13,"BindTargetTexture","","",9,null],[13,"BindUniformBlock","","",9,null],[13,"BindUniform","","",9,null],[13,"BindTexture","","",9,null],[13,"SetDrawColorBuffers","","",9,null],[13,"SetPrimitiveState","","",9,null],[13,"SetViewport","","",9,null],[13,"SetMultiSampleState","","",9,null],[13,"SetScissor","","",9,null],[13,"SetDepthStencilState","","",9,null],[13,"SetBlendState","","",9,null],[13,"SetColorMask","","",9,null],[13,"UpdateBuffer","","",9,null],[13,"UpdateTexture","","",9,null],[13,"Clear","","",9,null],[13,"Draw","","",9,null],[13,"DrawIndexed","","",9,null],[13,"Blit","","",9,null],[3,"CommandBuffer","","Generic command buffer to be used by multiple backends",null,null],[3,"Factory","","GL resource factory.",null,null],[3,"Output","","A placeholder for a real `Output` implemented by your window.",null,null],[12,"width","","render frame width.",118,null],[12,"height","","render frame height.",118,null],[3,"Info","","OpenGL implementation information",null,null],[12,"platform_name","","The platform identifier",119,null],[12,"version","","The OpenGL API vesion number",119,null],[12,"shading_language","","The GLSL vesion number",119,null],[12,"extensions","","The extensions supported by the implementation",119,null],[3,"PlatformName","","A unique platform identifier that does not change between releases",null,null],[12,"vendor","","The company responsible for the OpenGL implementation",120,null],[12,"renderer","","The name of the renderer",120,null],[3,"Version","","A version number for a specific component of an OpenGL implementation",null,null],[12,"major","","",121,null],[12,"minor","","",121,null],[12,"revision","","",121,null],[12,"vendor_info","","",121,null],[3,"Fence","","",null,null],[3,"Device","","An OpenGL device with GLSL shaders.",null,null],[4,"Resources","","",null,null],[4,"Error","","",null,null],[13,"NoError","","",122,null],[13,"InvalidEnum","","",122,null],[13,"InvalidValue","","",122,null],[13,"InvalidOperation","","",122,null],[13,"InvalidFramebufferOperation","","",122,null],[13,"OutOfMemory","","",122,null],[13,"UnknownError","","",122,null],[5,"create","","Create a new device with a factory.",null,null],[11,"get_handle","","",118,{"inputs":[{"name":"output"}],"output":{"name":"option"}}],[11,"get_size","","",118,null],[11,"get_mask","","",118,{"inputs":[{"name":"output"}],"output":{"name":"mask"}}],[11,"clone","","",123,{"inputs":[{"name":"factory"}],"output":{"name":"factory"}}],[11,"new","","Create a new `Factory`.",123,{"inputs":[{"name":"factory"},{"name":"rc"}],"output":{"name":"factory"}}],[11,"get_main_frame_buffer","","",123,{"inputs":[{"name":"factory"}],"output":{"name":"framebuffer"}}],[11,"make_fake_output","","",123,{"inputs":[{"name":"factory"},{"name":"size"},{"name":"size"}],"output":{"name":"output"}}],[11,"get_capabilities","","",123,{"inputs":[{"name":"factory"}],"output":{"name":"capabilities"}}],[11,"create_buffer_raw","","",123,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bufferusage"}],"output":{"name":"rawbuffer"}}],[11,"create_buffer_static_raw","","",123,null],[11,"create_array_buffer","","",123,{"inputs":[{"name":"factory"}],"output":{"name":"result"}}],[11,"create_shader","","",123,null],[11,"create_program","","",123,null],[11,"create_frame_buffer","","",123,{"inputs":[{"name":"factory"}],"output":{"name":"result"}}],[11,"create_surface","","",123,{"inputs":[{"name":"factory"},{"name":"surfaceinfo"}],"output":{"name":"result"}}],[11,"create_texture","","",123,{"inputs":[{"name":"factory"},{"name":"textureinfo"}],"output":{"name":"result"}}],[11,"create_sampler","","",123,{"inputs":[{"name":"factory"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[11,"update_buffer_raw","","",123,null],[11,"update_texture_raw","","",123,null],[11,"generate_mipmap","","",123,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":null}],[11,"map_buffer_raw","","",123,{"inputs":[{"name":"factory"},{"name":"rawbuffer"},{"name":"mapaccess"}],"output":{"name":"rawmapping"}}],[11,"unmap_buffer_raw","","",123,{"inputs":[{"name":"factory"},{"name":"rawmapping"}],"output":null}],[11,"map_buffer_readable","","",123,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"readable"}}],[11,"map_buffer_writable","","",123,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"writable"}}],[11,"map_buffer_rw","","",123,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"rw"}}],[11,"eq","","",121,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"version"}],"output":{"name":"version"}}],[11,"cmp","","",121,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",121,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"option"}}],[11,"new","","Create a new OpenGL version number",121,{"inputs":[{"name":"version"},{"name":"u32"},{"name":"u32"},{"name":"option"},{"name":"str"}],"output":{"name":"version"}}],[11,"parse","","According to the OpenGL specification, the version information is\nexpected to follow the following syntax:",121,{"inputs":[{"name":"version"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"platformname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",120,{"inputs":[{"name":"platformname"},{"name":"platformname"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"platformname"},{"name":"platformname"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"platformname"}],"output":{"name":"platformname"}}],[11,"fmt","","",119,{"inputs":[{"name":"info"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_extension_supported","","Returns `true` if the implementation supports the extension",119,{"inputs":[{"name":"info"},{"name":"str"}],"output":{"name":"bool"}}],[11,"is_version_or_extension_supported","","",119,{"inputs":[{"name":"info"},{"name":"u32"},{"name":"u32"},{"name":"str"}],"output":{"name":"bool"}}],[6,"Buffer","","",null,null],[6,"ArrayBuffer","","",null,null],[6,"Shader","","",null,null],[6,"Program","","",null,null],[6,"FrameBuffer","","",null,null],[6,"Surface","","",null,null],[6,"Sampler","","",null,null],[6,"Texture","","",null,null],[11,"fmt","","",124,{"inputs":[{"name":"fence"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",124,null],[11,"eq","","",124,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"fence"}],"output":{"name":"fence"}}],[11,"eq","","",125,{"inputs":[{"name":"resources"},{"name":"resources"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"resources"},{"name":"resources"}],"output":{"name":"bool"}}],[11,"hash","","",125,null],[11,"fmt","","",125,{"inputs":[{"name":"resources"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"resources"}],"output":{"name":"resources"}}],[11,"fmt","","",122,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",122,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_error_code","","",122,{"inputs":[{"name":"error"},{"name":"glenum"}],"output":{"name":"error"}}],[11,"with_gl","","Access the OpenGL directly via a closure. OpenGL types and enumerations\ncan be found in the `gl` crate.",126,{"inputs":[{"name":"device"},{"name":"f"}],"output":null}],[11,"get_info","","Get the OpenGL-specific driver information",126,{"inputs":[{"name":"device"}],"output":{"name":"info"}}],[11,"get_capabilities","","",126,{"inputs":[{"name":"device"}],"output":{"name":"capabilities"}}],[11,"reset_state","","",126,{"inputs":[{"name":"device"}],"output":null}],[11,"submit","","",126,{"inputs":[{"name":"device"},{"name":"submitinfo"}],"output":null}],[11,"cleanup","","",126,{"inputs":[{"name":"device"}],"output":null}],[11,"fenced_submit","","",126,{"inputs":[{"name":"device"},{"name":"submitinfo"},{"name":"option"}],"output":{"name":"fence"}}],[11,"fence_wait","","",126,{"inputs":[{"name":"device"},{"name":"fence"}],"output":null}]],"paths":[[4,"SignFlag"],[4,"IntSubType"],[4,"IntSize"],[4,"FloatSubType"],[4,"FloatSize"],[4,"Type"],[3,"Format"],[3,"FixedPoint"],[3,"Floater"],[4,"Command"],[3,"CommandBuffer"],[3,"DataPointer"],[3,"DataBuffer"],[4,"Access"],[4,"Gamma"],[4,"Target"],[4,"DummyResources"],[3,"DummyDevice"],[3,"RawBuffer"],[3,"Buffer"],[3,"ArrayBuffer"],[3,"Shader"],[3,"Program"],[3,"FrameBuffer"],[3,"Surface"],[3,"Texture"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[3,"Readable"],[3,"Writable"],[3,"RW"],[4,"IsArray"],[4,"IsShadow"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"SamplerType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[4,"UniformValue"],[3,"Attribute"],[3,"UniformVar"],[3,"BlockVar"],[3,"SamplerVar"],[3,"ProgramInfo"],[4,"CompatibilityError"],[4,"CreateShaderError"],[4,"CreateProgramError"],[4,"ShaderModel"],[4,"SurfaceError"],[4,"TextureError"],[4,"AaMode"],[4,"Components"],[4,"Compression"],[4,"Format"],[3,"SurfaceInfo"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[3,"TextureInfo"],[3,"ImageInfo"],[4,"WrapMode"],[3,"SamplerInfo"],[3,"Arc"],[3,"NotSupported"],[3,"Capabilities"],[4,"MapAccess"],[4,"PrimitiveType"],[4,"BufferRole"],[4,"BufferUsage"],[3,"BufferInfo"],[4,"BufferUpdateError"],[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Primitive"],[3,"MultiSample"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Rect"],[3,"Mask"],[3,"Mirror"],[3,"ClearData"],[4,"ProgramError"],[3,"ShaderSource"],[3,"OwnedStream"],[4,"Error"],[3,"Full"],[3,"Core"],[3,"Attribute"],[3,"Mesh"],[3,"Slice"],[4,"SliceKind"],[4,"Error"],[3,"AttributeIter"],[3,"Link"],[4,"ParameterError"],[4,"Option"],[3,"ParamDictionaryLink"],[3,"ParamDictionary"],[4,"Plane"],[3,"Frame"],[4,"BlitError"],[4,"UpdateError"],[4,"DrawError"],[3,"Renderer"],[3,"Output"],[3,"Info"],[3,"PlatformName"],[3,"Version"],[4,"Error"],[3,"Factory"],[3,"Fence"],[4,"Resources"],[3,"Device"]]};
searchIndex['gfx_texture'] = {"items":[[0,"","gfx_texture","A Gfx texture representation that works nicely with Piston libraries.",null,null],[3,"Texture","","Represents a texture.",null,null],[4,"Flip","","Flip settings.",null,null],[13,"None","","Does not flip.",0,null],[13,"Vertical","","Flips image vertically.",0,null],[11,"eq","","",0,{"inputs":[{"name":"flip"},{"name":"flip"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"flip"},{"name":"flip"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"flip"}],"output":{"name":"flip"}}],[11,"eq","","",1,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"texture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"texture"}],"output":{"name":"texture"}}],[11,"handle","","Gets a handle to the Gfx texture.",1,{"inputs":[{"name":"texture"}],"output":{"name":"texture"}}],[11,"empty","","Returns empty texture.",1,{"inputs":[{"name":"texture"},{"name":"f"}],"output":{"name":"result"}}],[11,"from_path","","Creates a texture from path.",1,{"inputs":[{"name":"texture"},{"name":"f"},{"name":"p"},{"name":"flip"},{"name":"texturesettings"}],"output":{"name":"result"}}],[11,"from_image","","Creates a texture from image.",1,{"inputs":[{"name":"texture"},{"name":"f"},{"name":"rgbaimage"},{"name":"texturesettings"}],"output":{"name":"result"}}],[11,"from_memory_alpha","","Creates texture from memory alpha.",1,null],[11,"update","","Updates the texture with an image.",1,{"inputs":[{"name":"texture"},{"name":"f"},{"name":"rgbaimage"}],"output":{"name":"result"}}],[11,"create","","",1,null],[11,"update","","",1,null],[11,"get_size","","",1,null]],"paths":[[4,"Flip"],[3,"Texture"]]};
searchIndex['gfx'] = {"items":[[0,"","gfx","An efficient, low-level, bindless graphics API for Rust. See [the\nblog](http://gfx-rs.github.io/) for explanations and annotated examples.",null,null],[11,"new","draw_state","Create a default `DrawState`. Uses counter-clockwise winding, culls the backface of each\nprimitive, and does no scissor/stencil/depth/blend/color masking.",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"get_target_mask","","Return a target mask that contains all the planes required by this state.",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"mask"}}],[11,"multi_sample","","Enable multi-sampled rasterization",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"stencil","","Set the stencil test to a simple expression",0,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"u8"}],"output":{"name":"drawstate"}}],[11,"depth","","Set the depth test with the mask",0,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"bool"}],"output":{"name":"drawstate"}}],[11,"scissor","","Set the scissor",0,{"inputs":[{"name":"drawstate"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"drawstate"}}],[11,"blend","","Set the blend mode to one of the presets",0,{"inputs":[{"name":"drawstate"},{"name":"blendpreset"}],"output":{"name":"drawstate"}}],[11,"fmt","draw_state::state","",1,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",1,null],[11,"partial_cmp","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"cmp","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",5,{"inputs":[{"name":"primitive"}],"output":{"name":"cullface"}}],[11,"default","","",5,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"cmp","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"cmp","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"cmp","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"cmp","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"default","","",9,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"cmp","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"cmp","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"default","","",11,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"cmp","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"cmp","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"cmp","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"fmt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",15,null],[11,"partial_cmp","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",15,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"eq","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"default","","",16,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",16,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"cmp","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",17,null],[11,"remove","","Removes the specified flags in-place.",17,null],[11,"toggle","","Toggles the specified flags in-place.",17,null],[11,"bitor","","Returns the union of the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"from_iter","","",17,{"inputs":[{"name":"colormask"},{"name":"t"}],"output":{"name":"colormask"}}],[11,"partial_cmp","draw_state::target","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",19,null],[11,"cmp","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"eq","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"mask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"all","","Returns the set containing all flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",19,{"inputs":[{"name":"mask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",19,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",19,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"mask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",19,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",19,null],[11,"remove","","Removes the specified flags in-place.",19,null],[11,"toggle","","Toggles the specified flags in-place.",19,null],[11,"bitor","","Returns the union of the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"not","","Returns the complement of this set of flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"from_iter","","",19,{"inputs":[{"name":"mask"},{"name":"t"}],"output":{"name":"mask"}}],[11,"hash","","",20,null],[11,"cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[11,"bitor","","Returns the union of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"from_iter","","",20,{"inputs":[{"name":"mirror"},{"name":"t"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"eq","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"cleardata"}],"output":{"name":"cleardata"}}],[11,"fmt","","",21,{"inputs":[{"name":"cleardata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","draw_state","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"drawstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"cmp","","",22,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"hash","","",22,null],[11,"fmt","","",22,{"inputs":[{"name":"blendpreset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"blendpreset"}],"output":{"name":"blendpreset"}}],[3,"DrawState","gfx","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",0,null],[12,"multi_sample","","Multi-sampling mode",0,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",0,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",0,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",0,null],[12,"blend","","Blend function to use. If None, no blending is done.",0,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",0,null],[4,"BlendPreset","","Blend function presets for ease of use.",null,null],[13,"Add","","When combining two fragments, add their values together, saturating at 1.0",22,null],[13,"Multiply","","When combining two fragments, multiply their values together.",22,null],[13,"Alpha","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",22,null],[13,"Invert","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",22,null],[0,"state","","Fixed-function hardware state.",null,null],[4,"FrontFace","gfx::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",1,null],[13,"CounterClockwise","","Counter-clockwise winding order.",1,null],[6,"LineWidth","","",null,null],[6,"OffsetFactor","","",null,null],[6,"OffsetUnits","","",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",3,null],[13,"Front","","",3,null],[13,"Back","","",3,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",4,null],[13,"Line","","Rasterize as a line with the given width.",4,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",4,null],[3,"Primitive","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",7,null],[13,"Less","","`x < y`",7,null],[13,"LessEqual","","`x <= y`",7,null],[13,"Equal","","`x == y`",7,null],[13,"GreaterEqual","","`x >= y`",7,null],[13,"Greater","","`x > y`",7,null],[13,"NotEqual","","`x != y`",7,null],[13,"Always","","`true`",7,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",8,null],[13,"Zero","","Set the value in the stencil buffer to zero.",8,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",8,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",8,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",8,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",8,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",8,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",8,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",9,null],[12,"value","","Reference value to compare the value in the stencil buffer with.",9,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",9,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",9,null],[12,"op_fail","","What operation to do if the stencil test fails.",9,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",9,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",9,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",10,null],[12,"back","","",10,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",11,null],[12,"write","","Specify whether to write to the depth buffer or not.",11,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",12,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",12,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",12,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",13,null],[13,"SourceAlpha","","",13,null],[13,"DestColor","","",13,null],[13,"DestAlpha","","",13,null],[13,"ConstColor","","",13,null],[13,"ConstAlpha","","",13,null],[4,"Factor","","",null,null],[13,"Zero","","",14,null],[13,"One","","",14,null],[13,"SourceAlphaSaturated","","",14,null],[13,"ZeroPlus","","",14,null],[13,"OneMinus","","",14,null],[3,"BlendChannel","","",null,null],[12,"equation","","",15,null],[12,"source","","",15,null],[12,"destination","","",15,null],[3,"Blend","","",null,null],[12,"color","","",16,null],[12,"alpha","","",16,null],[12,"value","","",16,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[0,"traits","gfx","public re-exported traits",null,null],[0,"device","","Graphics device. Not meant for direct use.",null,null],[0,"target","gfx::device","Render target specification.",null,null],[6,"Layer","gfx::device::target","",null,null],[6,"Level","","",null,null],[6,"Depth","","",null,null],[6,"Stencil","","",null,null],[3,"Rect","","A screen space rectangle",null,null],[12,"x","","",18,null],[12,"y","","",18,null],[12,"w","","",18,null],[12,"h","","",18,null],[6,"ColorValue","","",null,null],[3,"Mask","","Output mask, used for blitting and clearing",null,null],[17,"COLOR","","",null,null],[17,"COLOR0","","",null,null],[17,"COLOR1","","",null,null],[17,"COLOR2","","",null,null],[17,"COLOR3","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[3,"Mirror","","Mirroring flags, used for blitting",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[3,"ClearData","","How to clear a frame.",null,null],[12,"color","","The color to clear the frame with",21,null],[12,"depth","","The depth value to clear the frame with",21,null],[12,"stencil","","The stencil value to clear the frame with",21,null],[0,"state","gfx::device","Fixed-function hardware state.",null,null],[4,"FrontFace","gfx::device::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",1,null],[13,"CounterClockwise","","Counter-clockwise winding order.",1,null],[6,"LineWidth","","",null,null],[6,"OffsetFactor","","",null,null],[6,"OffsetUnits","","",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",3,null],[13,"Front","","",3,null],[13,"Back","","",3,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",4,null],[13,"Line","","Rasterize as a line with the given width.",4,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",4,null],[3,"Primitive","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",7,null],[13,"Less","","`x < y`",7,null],[13,"LessEqual","","`x <= y`",7,null],[13,"Equal","","`x == y`",7,null],[13,"GreaterEqual","","`x >= y`",7,null],[13,"Greater","","`x > y`",7,null],[13,"NotEqual","","`x != y`",7,null],[13,"Always","","`true`",7,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",8,null],[13,"Zero","","Set the value in the stencil buffer to zero.",8,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",8,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",8,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",8,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",8,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",8,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",8,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",9,null],[12,"value","","Reference value to compare the value in the stencil buffer with.",9,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",9,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",9,null],[12,"op_fail","","What operation to do if the stencil test fails.",9,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",9,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",9,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",10,null],[12,"back","","",10,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",11,null],[12,"write","","Specify whether to write to the depth buffer or not.",11,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",12,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",12,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",12,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",13,null],[13,"SourceAlpha","","",13,null],[13,"DestColor","","",13,null],[13,"DestAlpha","","",13,null],[13,"ConstColor","","",13,null],[13,"ConstAlpha","","",13,null],[4,"Factor","","",null,null],[13,"Zero","","",14,null],[13,"One","","",14,null],[13,"SourceAlphaSaturated","","",14,null],[13,"ZeroPlus","","",14,null],[13,"OneMinus","","",14,null],[3,"BlendChannel","","",null,null],[12,"equation","","",15,null],[12,"source","","",15,null],[12,"destination","","",15,null],[3,"Blend","","",null,null],[12,"color","","",16,null],[12,"alpha","","",16,null],[12,"value","","",16,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[3,"NotSupported","gfx::device","Generic error for features that are not supported\nby the device capabilities.",null,null],[3,"Capabilities","","Features that the device supports.",null,null],[12,"shader_model","","",23,null],[12,"max_vertex_count","","",23,null],[12,"max_index_count","","",23,null],[12,"max_draw_buffers","","",23,null],[12,"max_texture_size","","",23,null],[12,"max_vertex_attributes","","",23,null],[12,"buffer_role_change_allowed","","In GLES it is not allowed to re-bind a buffer to a different\ntarget than the one it was initialized with.",23,null],[12,"array_buffer_supported","","",23,null],[12,"fragment_output_supported","","",23,null],[12,"immutable_storage_supported","","",23,null],[12,"instance_base_supported","","",23,null],[12,"instance_call_supported","","",23,null],[12,"instance_rate_supported","","",23,null],[12,"render_targets_supported","","",23,null],[12,"sampler_objects_supported","","",23,null],[12,"srgb_color_supported","","",23,null],[12,"uniform_block_supported","","",23,null],[12,"vertex_base_supported","","",23,null],[3,"BufferInfo","","An information block that is immutable and associated with each buffer",null,null],[12,"role","","Role",24,null],[12,"usage","","Usage hint",24,null],[12,"size","","Size in bytes",24,null],[4,"MapAccess","","Specifies the access allowed to a buffer mapping.",null,null],[13,"Readable","","Only allow reads.",25,null],[13,"Writable","","Only allow writes.",25,null],[13,"RW","","Allow full access.",25,null],[4,"PrimitiveType","","Describes what geometric primitives are created from vertex data.",null,null],[13,"Point","","Each vertex represents a single point.",26,null],[13,"Line","","Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\ne]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.",26,null],[13,"LineStrip","","Every two consecutive vertices represent a single line segment. Visually forms a \"path\" of\nlines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\nline, and `b` and `c` form a line.",26,null],[13,"TriangleList","","Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n`a`, `b`, and `c` form a triangle, `d` and `e` are discarded.",26,null],[13,"TriangleStrip","","Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\nd]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.",26,null],[13,"TriangleFan","","The first vertex with the last two are forming a triangle. For example, with `[a, b, c, d\n]`, `a` , `b`, and `c` form a triangle, and `a`, `c`, and `d` form a triangle.",26,null],[4,"BufferRole","","Role of the memory buffer. GLES doesn't chaning bind points for buffers.",null,null],[13,"Vertex","","Generic vertex buffer",27,null],[13,"Index","","Index buffer",27,null],[13,"Uniform","","Uniform block buffer",27,null],[4,"BufferUsage","","A hint as to how this buffer will be used.",null,null],[13,"Static","","Once uploaded, this buffer will rarely change, but will be read from often.",28,null],[13,"Dynamic","","This buffer will be updated \"frequently\", and will be read from multiple times between\nupdates.",28,null],[13,"Stream","","This buffer always or almost always be updated after each read.",28,null],[4,"BufferUpdateError","","An error happening on buffer updates.",null,null],[13,"OutOfBounds","","Trying to change the contents outside of the allocation.",29,null],[5,"as_byte_slice","","Treat a given slice as `&[u8]` for the given function call",null,null],[0,"attrib","","Vertex attribute types.",null,null],[3,"Format","gfx::device::attrib","Complete format of a vertex attribute.",null,null],[12,"elem_count","","Number of elements per vertex",30,null],[12,"elem_type","","Type of a single element",30,null],[12,"offset","","Offset in bytes to the first vertex",30,null],[12,"stride","","Stride in bytes between consecutive vertices",30,null],[12,"instance_rate","","Instance rate per vertex",30,null],[3,"FixedPoint","","Fixed-point version of integer attributes.",null,null],[3,"Floater","","Floating-point version of integer attributes.",null,null],[4,"SignFlag","","The signedness of an attribute.",null,null],[13,"Signed","","",31,null],[13,"Unsigned","","",31,null],[4,"IntSubType","","Describes how an integer value is interpreted by the shader.",null,null],[13,"Raw","","",32,null],[13,"Normalized","","",32,null],[13,"AsFloat","","",32,null],[4,"IntSize","","The size of an integer attribute, in bits.",null,null],[13,"U8","","",33,null],[13,"U16","","",33,null],[13,"U32","","",33,null],[4,"FloatSubType","","Type of a floating point attribute on the shader side.",null,null],[13,"Default","","",34,null],[13,"Precision","","",34,null],[4,"FloatSize","","The size of a floating point attribute, in bits.",null,null],[13,"F16","","",35,null],[13,"F32","","",35,null],[13,"F64","","",35,null],[4,"Type","","The type of an attribute.",null,null],[13,"Int","","",36,null],[13,"Float","","",36,null],[13,"Special","","",36,null],[0,"format","","A service module for deriving `ToFormat` for primitive types.",null,null],[8,"ToFormat","gfx::device::attrib::format","A trait for getting the format out of vertex element types.\nNeeded to implement `VertexFormat` with a macro.",null,null],[10,"describe","","",37,null],[8,"ToType","","A helper trait for implementing ToFormat.",null,null],[10,"describe","","",38,{"inputs":[{"name":"totype"}],"output":{"name":"type"}}],[11,"describe","gfx::device::attrib","",39,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",39,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",39,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",39,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",39,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",39,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"type"}}],[11,"describe","","",40,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",40,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",40,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",40,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",40,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[11,"describe","","",40,{"inputs":[{"name":"floater"}],"output":{"name":"type"}}],[6,"Count","","Number of elements per attribute, only 1 to 4 are supported",null,null],[6,"Offset","","Offset of an attribute from the start of the buffer, in bytes",null,null],[6,"Stride","","Offset between attribute values, in bytes",null,null],[6,"InstanceRate","","The number of instances between each subsequent attribute value",null,null],[11,"fmt","","",31,{"inputs":[{"name":"signflag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"signflag"}],"output":{"name":"signflag"}}],[11,"hash","","",31,null],[11,"partial_cmp","","",31,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"option"}}],[11,"lt","","",31,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"eq","","",31,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"bool"}}],[11,"cmp","","",31,{"inputs":[{"name":"signflag"},{"name":"signflag"}],"output":{"name":"ordering"}}],[11,"fmt","","",32,{"inputs":[{"name":"intsubtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"intsubtype"}],"output":{"name":"intsubtype"}}],[11,"hash","","",32,null],[11,"partial_cmp","","",32,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"eq","","",32,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"bool"}}],[11,"cmp","","",32,{"inputs":[{"name":"intsubtype"},{"name":"intsubtype"}],"output":{"name":"ordering"}}],[11,"fmt","","",33,{"inputs":[{"name":"intsize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"intsize"}],"output":{"name":"intsize"}}],[11,"hash","","",33,null],[11,"partial_cmp","","",33,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"eq","","",33,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"bool"}}],[11,"cmp","","",33,{"inputs":[{"name":"intsize"},{"name":"intsize"}],"output":{"name":"ordering"}}],[11,"fmt","","",34,{"inputs":[{"name":"floatsubtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"floatsubtype"}],"output":{"name":"floatsubtype"}}],[11,"hash","","",34,null],[11,"partial_cmp","","",34,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"option"}}],[11,"lt","","",34,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"le","","",34,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"gt","","",34,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"ge","","",34,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"eq","","",34,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"bool"}}],[11,"cmp","","",34,{"inputs":[{"name":"floatsubtype"},{"name":"floatsubtype"}],"output":{"name":"ordering"}}],[11,"fmt","","",35,{"inputs":[{"name":"floatsize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"floatsize"}],"output":{"name":"floatsize"}}],[11,"hash","","",35,null],[11,"partial_cmp","","",35,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"option"}}],[11,"lt","","",35,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"le","","",35,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"gt","","",35,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"ge","","",35,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"eq","","",35,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"bool"}}],[11,"cmp","","",35,{"inputs":[{"name":"floatsize"},{"name":"floatsize"}],"output":{"name":"ordering"}}],[11,"fmt","","",36,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"hash","","",36,null],[11,"partial_cmp","","",36,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"option"}}],[11,"lt","","",36,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"le","","",36,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"gt","","",36,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ge","","",36,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"eq","","",36,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"cmp","","",36,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"ordering"}}],[11,"is_compatible","","Check if the attribute is compatible with a particular shader type.",36,{"inputs":[{"name":"type"},{"name":"basetype"}],"output":{"name":"result"}}],[11,"get_size","","Return the size of the type in bytes.",36,{"inputs":[{"name":"type"}],"output":{"name":"u8"}}],[11,"fmt","","",30,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"hash","","",30,null],[11,"partial_cmp","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"option"}}],[11,"lt","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"eq","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"cmp","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"ordering"}}],[11,"hash","","",39,null],[11,"eq","","",39,{"inputs":[{"name":"fixedpoint"},{"name":"fixedpoint"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"fixedpoint"},{"name":"fixedpoint"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"fixedpoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"fixedpoint"}],"output":{"name":"fixedpoint"}}],[11,"cast2","","Cast a fixed-size2 array to fixed-point.",39,null],[11,"cast3","","Cast a fixed-size3 array to fixed-point.",39,null],[11,"cast4","","Cast a fixed-size4 array to fixed-point.",39,null],[11,"hash","","",40,null],[11,"eq","","",40,{"inputs":[{"name":"floater"},{"name":"floater"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"floater"},{"name":"floater"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"floater"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"floater"}],"output":{"name":"floater"}}],[11,"cast2","","Cast a fixed-size2 array to floating-point.",40,null],[11,"cast3","","Cast a fixed-size3 array to floating-point.",40,null],[11,"cast4","","Cast a fixed-size4 array to floating-point.",40,null],[0,"command","gfx::device","",null,null],[3,"CommandBuffer","gfx::device::command","Generic command buffer to be used by multiple backends",null,null],[4,"Command","","Serialized device command.",null,null],[13,"BindProgram","","",41,null],[13,"BindArrayBuffer","","",41,null],[13,"BindAttribute","","",41,null],[13,"BindIndex","","",41,null],[13,"BindFrameBuffer","","",41,null],[13,"UnbindTarget","","",41,null],[13,"BindTargetSurface","","",41,null],[13,"BindTargetTexture","","",41,null],[13,"BindUniformBlock","","",41,null],[13,"BindUniform","","",41,null],[13,"BindTexture","","",41,null],[13,"SetDrawColorBuffers","","",41,null],[13,"SetPrimitiveState","","",41,null],[13,"SetViewport","","",41,null],[13,"SetMultiSampleState","","",41,null],[13,"SetScissor","","",41,null],[13,"SetDepthStencilState","","",41,null],[13,"SetBlendState","","",41,null],[13,"SetColorMask","","",41,null],[13,"UpdateBuffer","","",41,null],[13,"UpdateTexture","","",41,null],[13,"Clear","","",41,null],[13,"Draw","","",41,null],[13,"DrawIndexed","","",41,null],[13,"Blit","","",41,null],[11,"fmt","","",41,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"iter","","",42,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"iter"}}],[11,"new","","",42,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"commandbuffer"}}],[11,"clear","","",42,{"inputs":[{"name":"commandbuffer"}],"output":null}],[11,"bind_program","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"program"}],"output":null}],[11,"bind_array_buffer","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"arraybuffer"}],"output":null}],[11,"bind_attribute","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"attributeslot"},{"name":"buffer"},{"name":"format"}],"output":null}],[11,"bind_index","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"buffer"}],"output":null}],[11,"bind_frame_buffer","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"access"},{"name":"framebuffer"},{"name":"gamma"}],"output":null}],[11,"unbind_target","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"access"},{"name":"target"}],"output":null}],[11,"bind_target_surface","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"access"},{"name":"target"},{"name":"surface"}],"output":null}],[11,"bind_target_texture","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"access"},{"name":"target"},{"name":"texture"},{"name":"level"},{"name":"option"}],"output":null}],[11,"bind_uniform_block","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"program"},{"name":"uniformbufferslot"},{"name":"uniformblockindex"},{"name":"buffer"}],"output":null}],[11,"bind_uniform","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"location"},{"name":"uniformvalue"}],"output":null}],[11,"bind_texture","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"textureslot"},{"name":"kind"},{"name":"texture"},{"name":"option"}],"output":null}],[11,"set_draw_color_buffers","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"usize"}],"output":null}],[11,"set_primitive","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"primitive"}],"output":null}],[11,"set_viewport","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"rect"}],"output":null}],[11,"set_multi_sample","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"option"}],"output":null}],[11,"set_scissor","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"option"}],"output":null}],[11,"set_depth_stencil","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"option"},{"name":"option"},{"name":"cullface"}],"output":null}],[11,"set_blend","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"option"}],"output":null}],[11,"set_color_mask","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"colormask"}],"output":null}],[11,"update_buffer","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"buffer"},{"name":"datapointer"},{"name":"usize"}],"output":null}],[11,"update_texture","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"kind"},{"name":"texture"},{"name":"imageinfo"},{"name":"datapointer"}],"output":null}],[11,"call_clear","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"cleardata"},{"name":"mask"}],"output":null}],[11,"call_draw","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"primitivetype"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[11,"call_draw_indexed","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"primitivetype"},{"name":"indextype"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[11,"call_blit","","",42,{"inputs":[{"name":"commandbuffer"},{"name":"rect"},{"name":"rect"},{"name":"mirror"},{"name":"mask"}],"output":null}],[0,"draw","gfx::device","Command Buffer device interface",null,null],[3,"DataPointer","gfx::device::draw","The place of some data in the data buffer.",null,null],[3,"DataBuffer","","A buffer of data accompanying the commands. It can be vertex data, texture\nupdates, uniform blocks, or even some draw states.",null,null],[4,"Access","","Type of the frame buffer access.",null,null],[13,"Draw","","Draw access",43,null],[13,"Read","","Read access",43,null],[4,"Gamma","","Type of the gamma transformation for framebuffer writes.",null,null],[13,"Original","","Process in linear color space.",44,null],[13,"Convert","","Convert to sRGB color space.",44,null],[4,"Target","","When rendering, each \"output\" of the fragment shader goes to a specific target. A `Plane` can\nbe bound to a target, causing writes to that target to affect the `Plane`.",null,null],[13,"Color","","Color data.",45,null],[13,"Depth","","Depth data.",45,null],[13,"Stencil","","Stencil data.",45,null],[13,"DepthStencil","","A target for both depth and stencil data at once.",45,null],[6,"InstanceOption","","Optional instance parameters",null,null],[8,"CommandBuffer","","An interface of the abstract command buffer. It collects commands in an\nefficient API-specific manner, to be ready for execution on the device.",null,null],[10,"new","","An empty constructor",46,{"inputs":[{"name":"commandbuffer"}],"output":{"name":"self"}}],[10,"clear","","Clear the command buffer contents, retain the allocated storage",46,{"inputs":[{"name":"commandbuffer"}],"output":null}],[10,"bind_program","","Bind a shader program",46,{"inputs":[{"name":"commandbuffer"},{"name":"program"}],"output":null}],[10,"bind_array_buffer","","Bind an array buffer object",46,{"inputs":[{"name":"commandbuffer"},{"name":"arraybuffer"}],"output":null}],[10,"bind_attribute","","Bind a vertex attribute",46,{"inputs":[{"name":"commandbuffer"},{"name":"attributeslot"},{"name":"buffer"},{"name":"format"}],"output":null}],[10,"bind_index","","Bind an index buffer",46,{"inputs":[{"name":"commandbuffer"},{"name":"buffer"}],"output":null}],[10,"bind_frame_buffer","","Bind a frame buffer object",46,{"inputs":[{"name":"commandbuffer"},{"name":"access"},{"name":"framebuffer"},{"name":"gamma"}],"output":null}],[10,"unbind_target","","Unbind any surface from the specified target slot",46,{"inputs":[{"name":"commandbuffer"},{"name":"access"},{"name":"target"}],"output":null}],[10,"bind_target_surface","","Bind a surface to the specified target slot",46,{"inputs":[{"name":"commandbuffer"},{"name":"access"},{"name":"target"},{"name":"surface"}],"output":null}],[10,"bind_target_texture","","Bind a level of the texture to the specified target slot",46,{"inputs":[{"name":"commandbuffer"},{"name":"access"},{"name":"target"},{"name":"texture"},{"name":"level"},{"name":"option"}],"output":null}],[10,"bind_uniform_block","","Bind a uniform block",46,{"inputs":[{"name":"commandbuffer"},{"name":"program"},{"name":"uniformbufferslot"},{"name":"uniformblockindex"},{"name":"buffer"}],"output":null}],[10,"bind_uniform","","Bind a single uniform in the default block",46,{"inputs":[{"name":"commandbuffer"},{"name":"location"},{"name":"uniformvalue"}],"output":null}],[10,"bind_texture","","Bind a texture",46,{"inputs":[{"name":"commandbuffer"},{"name":"textureslot"},{"name":"kind"},{"name":"texture"},{"name":"option"}],"output":null}],[10,"set_draw_color_buffers","","Select, which color buffers are going to be targetted by the shader",46,{"inputs":[{"name":"commandbuffer"},{"name":"usize"}],"output":null}],[10,"set_primitive","","Set primitive topology",46,{"inputs":[{"name":"commandbuffer"},{"name":"primitive"}],"output":null}],[10,"set_viewport","","Set viewport rectangle",46,{"inputs":[{"name":"commandbuffer"},{"name":"rect"}],"output":null}],[10,"set_multi_sample","","Set multi-sampling state",46,{"inputs":[{"name":"commandbuffer"},{"name":"option"}],"output":null}],[10,"set_scissor","","Set scissor test",46,{"inputs":[{"name":"commandbuffer"},{"name":"option"}],"output":null}],[10,"set_depth_stencil","","Set depth and stencil states",46,{"inputs":[{"name":"commandbuffer"},{"name":"option"},{"name":"option"},{"name":"cullface"}],"output":null}],[10,"set_blend","","Set blend state",46,{"inputs":[{"name":"commandbuffer"},{"name":"option"}],"output":null}],[10,"set_color_mask","","Set output color mask for all targets",46,{"inputs":[{"name":"commandbuffer"},{"name":"colormask"}],"output":null}],[10,"update_buffer","","Update a vertex/index/uniform buffer",46,{"inputs":[{"name":"commandbuffer"},{"name":"buffer"},{"name":"datapointer"},{"name":"usize"}],"output":null}],[10,"update_texture","","Update a texture region",46,{"inputs":[{"name":"commandbuffer"},{"name":"kind"},{"name":"texture"},{"name":"imageinfo"},{"name":"datapointer"}],"output":null}],[10,"call_clear","","Clear target surfaces",46,{"inputs":[{"name":"commandbuffer"},{"name":"cleardata"},{"name":"mask"}],"output":null}],[10,"call_draw","","Draw a primitive",46,{"inputs":[{"name":"commandbuffer"},{"name":"primitivetype"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[10,"call_draw_indexed","","Draw a primitive with index buffer",46,{"inputs":[{"name":"commandbuffer"},{"name":"primitivetype"},{"name":"indextype"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"vertexcount"},{"name":"instanceoption"}],"output":null}],[10,"call_blit","","Blit from one target to another",46,{"inputs":[{"name":"commandbuffer"},{"name":"rect"},{"name":"rect"},{"name":"mirror"},{"name":"mask"}],"output":null}],[11,"fmt","","",47,{"inputs":[{"name":"datapointer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"datapointer"},{"name":"datapointer"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"datapointer"},{"name":"datapointer"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"datapointer"}],"output":{"name":"datapointer"}}],[11,"new","","Create a fresh new data buffer.",48,{"inputs":[{"name":"databuffer"}],"output":{"name":"databuffer"}}],[11,"clear","","Clear all the data but retain the allocated storage.",48,{"inputs":[{"name":"databuffer"}],"output":null}],[11,"add_struct","","Copy a given structure into the buffer, return the offset and the size.",48,{"inputs":[{"name":"databuffer"},{"name":"t"}],"output":{"name":"datapointer"}}],[11,"add_vec","","Copy a given vector slice into the buffer",48,null],[11,"get_ref","","Return a reference to a stored data object.",48,null],[11,"fmt","","",43,{"inputs":[{"name":"access"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"access"},{"name":"access"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"access"}],"output":{"name":"access"}}],[11,"fmt","","",44,{"inputs":[{"name":"gamma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"gamma"},{"name":"gamma"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"gamma"},{"name":"gamma"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"fmt","","",45,{"inputs":[{"name":"target"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"target"},{"name":"target"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"target"},{"name":"target"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"target"}],"output":{"name":"target"}}],[0,"dummy","gfx::device","",null,null],[3,"DummyDevice","gfx::device::dummy","Dummy device which does minimal work, just to allow testing gfx-rs apps for\ncompilation.",null,null],[4,"DummyResources","","",null,null],[11,"eq","","",49,{"inputs":[{"name":"dummyresources"},{"name":"dummyresources"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"dummyresources"},{"name":"dummyresources"}],"output":{"name":"bool"}}],[11,"hash","","",49,null],[11,"fmt","","",49,{"inputs":[{"name":"dummyresources"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"dummyresources"}],"output":{"name":"dummyresources"}}],[11,"get_capabilities","","",50,{"inputs":[{"name":"dummydevice"}],"output":{"name":"capabilities"}}],[11,"reset_state","","",50,{"inputs":[{"name":"dummydevice"}],"output":null}],[11,"submit","","",50,{"inputs":[{"name":"dummydevice"},{"name":"submitinfo"}],"output":null}],[11,"cleanup","","",50,{"inputs":[{"name":"dummydevice"}],"output":null}],[0,"handle","gfx::device","Device resource handles",null,null],[3,"RawBuffer","gfx::device::handle","Raw (untyped) Buffer Handle",null,null],[3,"Buffer","","Type-safe buffer handle",null,null],[3,"ArrayBuffer","","Array Buffer Handle",null,null],[3,"Shader","","Shader Handle",null,null],[3,"Program","","Program Handle",null,null],[3,"FrameBuffer","","Frame Buffer Handle",null,null],[3,"Surface","","Surface Handle",null,null],[3,"Texture","","Texture Handle",null,null],[3,"Sampler","","Sampler Handle",null,null],[3,"Fence","","Fence Handle",null,null],[3,"Manager","","Stores reference-counted resources used in a command buffer.\nSeals actual resource names behind the interface, automatically\nreferencing them both by the Factory on resource creation\nand the Renderer during CommandBuffer population.",null,null],[8,"Producer","","A service trait to be used by the device implementation",null,null],[10,"make_buffer","","",51,{"inputs":[{"name":"producer"},{"name":"buffer"},{"name":"bufferinfo"}],"output":{"name":"rawbuffer"}}],[10,"make_array_buffer","","",51,{"inputs":[{"name":"producer"},{"name":"arraybuffer"}],"output":{"name":"arraybuffer"}}],[10,"make_shader","","",51,{"inputs":[{"name":"producer"},{"name":"shader"},{"name":"stage"}],"output":{"name":"shader"}}],[10,"make_program","","",51,{"inputs":[{"name":"producer"},{"name":"program"},{"name":"programinfo"}],"output":{"name":"program"}}],[10,"make_frame_buffer","","",51,{"inputs":[{"name":"producer"},{"name":"framebuffer"}],"output":{"name":"framebuffer"}}],[10,"make_surface","","",51,{"inputs":[{"name":"producer"},{"name":"surface"},{"name":"surfaceinfo"}],"output":{"name":"surface"}}],[10,"make_texture","","",51,{"inputs":[{"name":"producer"},{"name":"texture"},{"name":"textureinfo"}],"output":{"name":"texture"}}],[10,"make_sampler","","",51,{"inputs":[{"name":"producer"},{"name":"sampler"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"make_fence","","",51,{"inputs":[{"name":"producer"},{"name":"fence"}],"output":{"name":"fence"}}],[10,"clean_with","","Walk through all the handles, keep ones that are reference elsewhere\nand call the provided delete function (resource-specific) for others",51,{"inputs":[{"name":"producer"},{"name":"t"},{"name":"f1"},{"name":"f2"},{"name":"f3"},{"name":"f4"},{"name":"f5"},{"name":"f6"},{"name":"f7"},{"name":"f8"},{"name":"f9"}],"output":null}],[11,"eq","","",52,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"bool"}}],[11,"hash","","",52,null],[11,"fmt","","",52,{"inputs":[{"name":"rawbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"rawbuffer"}}],[11,"get_info","","Get raw buffer info",52,{"inputs":[{"name":"rawbuffer"}],"output":{"name":"bufferinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",52,{"inputs":[{"name":"rawbuffer"},{"name":"rawbuffer"}],"output":{"name":"ordering"}}],[11,"eq","","",53,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"buffer"},{"name":"buffer"}],"output":{"name":"bool"}}],[11,"hash","","",53,null],[11,"fmt","","",53,{"inputs":[{"name":"buffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"buffer"}],"output":{"name":"buffer"}}],[11,"from_raw","","Create a type-safe Buffer from a RawBuffer",53,{"inputs":[{"name":"buffer"},{"name":"rawbuffer"}],"output":{"name":"buffer"}}],[11,"cast","","Cast the type this Buffer references",53,{"inputs":[{"name":"buffer"}],"output":{"name":"buffer"}}],[11,"raw","","Get the underlying raw Handle",53,{"inputs":[{"name":"buffer"}],"output":{"name":"rawbuffer"}}],[11,"get_info","","Get the associated information about the buffer",53,{"inputs":[{"name":"buffer"}],"output":{"name":"bufferinfo"}}],[11,"len","","Get the number of elements in the buffer.",53,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[11,"eq","","",54,{"inputs":[{"name":"arraybuffer"},{"name":"arraybuffer"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"arraybuffer"},{"name":"arraybuffer"}],"output":{"name":"bool"}}],[11,"hash","","",54,null],[11,"fmt","","",54,{"inputs":[{"name":"arraybuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"arraybuffer"}],"output":{"name":"arraybuffer"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",54,{"inputs":[{"name":"arraybuffer"},{"name":"arraybuffer"}],"output":{"name":"ordering"}}],[11,"eq","","",55,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"bool"}}],[11,"hash","","",55,null],[11,"fmt","","",55,{"inputs":[{"name":"shader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"shader"}],"output":{"name":"shader"}}],[11,"get_stage","","Get shader stage",55,{"inputs":[{"name":"shader"}],"output":{"name":"stage"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",55,{"inputs":[{"name":"shader"},{"name":"shader"}],"output":{"name":"ordering"}}],[11,"eq","","",56,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"program"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"program"}],"output":{"name":"program"}}],[11,"get_info","","Get program info",56,{"inputs":[{"name":"program"}],"output":{"name":"programinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",56,{"inputs":[{"name":"program"},{"name":"program"}],"output":{"name":"ordering"}}],[11,"eq","","",57,{"inputs":[{"name":"framebuffer"},{"name":"framebuffer"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"framebuffer"},{"name":"framebuffer"}],"output":{"name":"bool"}}],[11,"hash","","",57,null],[11,"fmt","","",57,{"inputs":[{"name":"framebuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"framebuffer"}],"output":{"name":"framebuffer"}}],[11,"eq","","",58,{"inputs":[{"name":"surface"},{"name":"surface"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"surface"},{"name":"surface"}],"output":{"name":"bool"}}],[11,"hash","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"surface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"surface"}],"output":{"name":"surface"}}],[11,"get_info","","Get surface info",58,{"inputs":[{"name":"surface"}],"output":{"name":"surfaceinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",58,{"inputs":[{"name":"surface"},{"name":"surface"}],"output":{"name":"ordering"}}],[11,"eq","","",59,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"hash","","",59,null],[11,"fmt","","",59,{"inputs":[{"name":"texture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"texture"}],"output":{"name":"texture"}}],[11,"get_info","","Get texture info",59,{"inputs":[{"name":"texture"}],"output":{"name":"textureinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",59,{"inputs":[{"name":"texture"},{"name":"texture"}],"output":{"name":"ordering"}}],[11,"eq","","",60,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"sampler"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"sampler"}],"output":{"name":"sampler"}}],[11,"get_info","","Get sampler info",60,{"inputs":[{"name":"sampler"}],"output":{"name":"samplerinfo"}}],[11,"cmp_ref","","Compare ethe handle by the reference (not data)",60,{"inputs":[{"name":"sampler"},{"name":"sampler"}],"output":{"name":"ordering"}}],[11,"eq","","",61,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"fence"},{"name":"fence"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"fence"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"fence"}],"output":{"name":"fence"}}],[11,"make_buffer","","",62,{"inputs":[{"name":"manager"},{"name":"buffer"},{"name":"bufferinfo"}],"output":{"name":"rawbuffer"}}],[11,"make_array_buffer","","",62,{"inputs":[{"name":"manager"},{"name":"arraybuffer"}],"output":{"name":"arraybuffer"}}],[11,"make_shader","","",62,{"inputs":[{"name":"manager"},{"name":"shader"},{"name":"stage"}],"output":{"name":"shader"}}],[11,"make_program","","",62,{"inputs":[{"name":"manager"},{"name":"program"},{"name":"programinfo"}],"output":{"name":"program"}}],[11,"make_frame_buffer","","",62,{"inputs":[{"name":"manager"},{"name":"framebuffer"}],"output":{"name":"framebuffer"}}],[11,"make_surface","","",62,{"inputs":[{"name":"manager"},{"name":"surface"},{"name":"surfaceinfo"}],"output":{"name":"surface"}}],[11,"make_texture","","",62,{"inputs":[{"name":"manager"},{"name":"texture"},{"name":"textureinfo"}],"output":{"name":"texture"}}],[11,"make_sampler","","",62,{"inputs":[{"name":"manager"},{"name":"sampler"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[11,"make_fence","","",62,{"inputs":[{"name":"manager"},{"name":"fence"}],"output":{"name":"fence"}}],[11,"clean_with","","",62,{"inputs":[{"name":"manager"},{"name":"t"},{"name":"f1"},{"name":"f2"},{"name":"f3"},{"name":"f4"},{"name":"f5"},{"name":"f6"},{"name":"f7"},{"name":"f8"},{"name":"f9"}],"output":null}],[11,"new","","Create a new handle manager",62,{"inputs":[{"name":"manager"}],"output":{"name":"manager"}}],[11,"clear","","Clear all references",62,{"inputs":[{"name":"manager"}],"output":null}],[11,"extend","","Extend with all references of another handle manager",62,{"inputs":[{"name":"manager"},{"name":"manager"}],"output":null}],[11,"count","","Count the total number of referenced resources",62,{"inputs":[{"name":"manager"}],"output":{"name":"usize"}}],[11,"ref_buffer","","Reference a buffer",62,{"inputs":[{"name":"manager"},{"name":"rawbuffer"}],"output":{"name":"buffer"}}],[11,"ref_array_buffer","","Reference am array buffer",62,{"inputs":[{"name":"manager"},{"name":"arraybuffer"}],"output":{"name":"arraybuffer"}}],[11,"ref_shader","","Reference a shader",62,{"inputs":[{"name":"manager"},{"name":"shader"}],"output":{"name":"shader"}}],[11,"ref_program","","Reference a program",62,{"inputs":[{"name":"manager"},{"name":"program"}],"output":{"name":"program"}}],[11,"ref_frame_buffer","","Reference a frame buffer",62,{"inputs":[{"name":"manager"},{"name":"framebuffer"}],"output":{"name":"framebuffer"}}],[11,"ref_surface","","Reference a surface",62,{"inputs":[{"name":"manager"},{"name":"surface"}],"output":{"name":"surface"}}],[11,"ref_texture","","Reference a texture",62,{"inputs":[{"name":"manager"},{"name":"texture"}],"output":{"name":"texture"}}],[11,"ref_sampler","","Reference a sampler",62,{"inputs":[{"name":"manager"},{"name":"sampler"}],"output":{"name":"sampler"}}],[11,"ref_fence","","Reference a fence",62,{"inputs":[{"name":"manager"},{"name":"fence"}],"output":{"name":"fence"}}],[0,"mapping","gfx::device","Memory mapping",null,null],[3,"Readable","gfx::device::mapping","A handle to a readable map, which can be sliced.",null,null],[3,"Writable","","A handle to a writable map, which only allows setting elements.",null,null],[3,"RW","","A handle to a complete readable/writable map, which can be sliced both ways.",null,null],[8,"Raw","","Unsafe operations for a buffer mapping",null,null],[10,"set","","Set the element at `index` to `val`. Not bounds-checked.",63,{"inputs":[{"name":"raw"},{"name":"usize"},{"name":"t"}],"output":null}],[10,"to_slice","","Returns a slice of the specified length.",63,null],[10,"to_mut_slice","","Returns a mutable slice of the specified length.",63,null],[8,"Builder","","A service trait with methods for mapping already implemented.\nTo be used by device back ends.",null,null],[16,"RawMapping","","",64,null],[10,"map_readable","","",64,{"inputs":[{"name":"builder"},{"name":"rawmapping"},{"name":"usize"}],"output":{"name":"readable"}}],[10,"map_writable","","",64,{"inputs":[{"name":"builder"},{"name":"rawmapping"},{"name":"usize"}],"output":{"name":"writable"}}],[10,"map_read_write","","",64,{"inputs":[{"name":"builder"},{"name":"rawmapping"},{"name":"usize"}],"output":{"name":"rw"}}],[11,"deref","","",65,null],[11,"drop","","",65,{"inputs":[{"name":"readable"}],"output":null}],[11,"set","","Set a value in the buffer",66,{"inputs":[{"name":"writable"},{"name":"usize"},{"name":"t"}],"output":null}],[11,"drop","","",66,{"inputs":[{"name":"writable"}],"output":null}],[11,"deref","","",67,null],[11,"deref_mut","","",67,null],[11,"drop","","",67,{"inputs":[{"name":"rw"}],"output":null}],[0,"shade","gfx::device","Shader handling.",null,null],[3,"Attribute","gfx::device::shade","Vertex information that a shader takes as input.",null,null],[12,"name","","Name of this attribute.",68,null],[12,"location","","Vertex attribute binding.",68,null],[12,"count","","Number of elements this attribute represents.",68,null],[12,"base_type","","Type that this attribute is composed of.",68,null],[12,"container","","\"Scalarness\" of this attribute.",68,null],[3,"UniformVar","","Uniform, a type of shader parameter representing data passed to the program.",null,null],[12,"name","","Name of this uniform.",69,null],[12,"location","","Location of this uniform in the program.",69,null],[12,"count","","Number of elements this uniform represents.",69,null],[12,"base_type","","Type that this uniform is composed of",69,null],[12,"container","","\"Scalarness\" of this uniform.",69,null],[3,"BlockVar","","A uniform block.",null,null],[12,"name","","Name of this uniform block.",70,null],[12,"size","","Size (in bytes) of this uniform block's data.",70,null],[12,"usage","","What program stage this uniform block can be used in, as a bitflag.",70,null],[3,"SamplerVar","","Sampler, a type of shader parameter representing a texture that can be sampled.",null,null],[12,"name","","Name of this sampler variable.",71,null],[12,"location","","Location of this sampler in the program.",71,null],[12,"base_type","","Base type for the sampler.",71,null],[12,"sampler_type","","Type of this sampler.",71,null],[3,"ProgramInfo","","Metadata about a program.",null,null],[12,"attributes","","Attributes in the program.",72,null],[12,"uniforms","","Uniforms in the program",72,null],[12,"blocks","","Uniform blocks in the program",72,null],[12,"textures","","Samplers in the program",72,null],[4,"IsArray","","Whether the sampler samples an array texture.",null,null],[13,"Array","","",73,null],[13,"NoArray","","",73,null],[4,"IsShadow","","Whether the sampler samples a shadow texture (texture with a depth comparison)",null,null],[13,"Shadow","","",74,null],[13,"NoShadow","","",74,null],[4,"IsMultiSample","","Whether the sampler samples a multisample texture.",null,null],[13,"MultiSample","","",75,null],[13,"NoMultiSample","","",75,null],[4,"IsRect","","Whether the sampler samples a rectangle texture.",null,null],[13,"Rect","","",76,null],[13,"NoRect","","",76,null],[4,"MatrixFormat","","Whether the matrix is column or row major.",null,null],[13,"ColumnMajor","","",77,null],[13,"RowMajor","","",77,null],[4,"SamplerType","","What texture type this sampler samples from.",null,null],[13,"SamplerBuffer","","Sample from a buffer.",78,null],[13,"Sampler1D","","Sample from a 1D texture",78,null],[13,"Sampler2D","","Sample from a 2D texture",78,null],[13,"Sampler3D","","Sample from a 3D texture",78,null],[13,"SamplerCube","","Sample from a cubemap.",78,null],[4,"BaseType","","Base type of this shader parameter.",null,null],[13,"F32","","",79,null],[13,"F64","","",79,null],[13,"I32","","",79,null],[13,"U32","","",79,null],[13,"Bool","","",79,null],[4,"ContainerType","","Number of components this parameter represents.",null,null],[13,"Single","","Scalar value",80,null],[13,"Vector","","A vector with `Dimension` components.",80,null],[13,"Matrix","","A matrix.",80,null],[4,"Stage","","Which program stage this shader represents.",null,null],[13,"Vertex","","",81,null],[13,"Geometry","","",81,null],[13,"Fragment","","",81,null],[4,"UniformValue","","A value that can be uploaded to the device as a uniform.",null,null],[13,"I32","","",82,null],[13,"F32","","",82,null],[13,"I32Vector2","","",82,null],[13,"I32Vector3","","",82,null],[13,"I32Vector4","","",82,null],[13,"F32Vector2","","",82,null],[13,"F32Vector3","","",82,null],[13,"F32Vector4","","",82,null],[13,"F32Matrix2","","",82,null],[13,"F32Matrix3","","",82,null],[13,"F32Matrix4","","",82,null],[4,"CompatibilityError","","Error type for trying to store a UniformValue in a UniformVar.",null,null],[13,"ErrorArraySize","","Array sizes differ between the value and the var (trying to upload a vec2 as a vec4, etc)",83,null],[13,"ErrorBaseType","","Base types differ between the value and the var (trying to upload a f32 as a u16, etc)",83,null],[13,"ErrorContainer","","Container-ness differs between the value and the var (trying to upload a scalar as a vec4,\netc)",83,null],[4,"CreateShaderError","","An error type for creating shaders.",null,null],[13,"ModelNotSupported","","The device does not support the requested shader model.",84,null],[13,"ShaderCompilationFailed","","The shader failed to compile.",84,null],[4,"CreateProgramError","","An error type for creating programs.",null,null],[13,"LinkFail","","",85,null],[13,"TargetMismatch","","",85,null],[4,"ShaderModel","","Shader model supported by the device, corresponds to the HLSL shader models.",null,null],[13,"Unsupported","","",86,null],[13,"Version30","","",86,null],[13,"Version40","","",86,null],[13,"Version41","","",86,null],[13,"Version50","","",86,null],[6,"Dimension","","Number of components in a container type (vectors/matrices)",null,null],[6,"Location","","Location of a parameter in the program.",null,null],[11,"fmt","","",73,{"inputs":[{"name":"isarray"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"isarray"},{"name":"isarray"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"isarray"},{"name":"isarray"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"isarray"}],"output":{"name":"isarray"}}],[11,"fmt","","",74,{"inputs":[{"name":"isshadow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"isshadow"},{"name":"isshadow"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"isshadow"},{"name":"isshadow"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"isshadow"}],"output":{"name":"isshadow"}}],[11,"fmt","","",75,{"inputs":[{"name":"ismultisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"ismultisample"},{"name":"ismultisample"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"ismultisample"},{"name":"ismultisample"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"ismultisample"}],"output":{"name":"ismultisample"}}],[11,"fmt","","",76,{"inputs":[{"name":"isrect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"isrect"},{"name":"isrect"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"isrect"},{"name":"isrect"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"isrect"}],"output":{"name":"isrect"}}],[11,"fmt","","",77,{"inputs":[{"name":"matrixformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"matrixformat"},{"name":"matrixformat"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"matrixformat"},{"name":"matrixformat"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"matrixformat"}],"output":{"name":"matrixformat"}}],[11,"fmt","","",78,{"inputs":[{"name":"samplertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"samplertype"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"samplertype"},{"name":"samplertype"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"samplertype"}],"output":{"name":"samplertype"}}],[11,"fmt","","",79,{"inputs":[{"name":"basetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"basetype"},{"name":"basetype"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"basetype"},{"name":"basetype"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"basetype"}],"output":{"name":"basetype"}}],[11,"fmt","","",80,{"inputs":[{"name":"containertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"containertype"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"containertype"},{"name":"containertype"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"containertype"}],"output":{"name":"containertype"}}],[11,"eq","","",81,{"inputs":[{"name":"stage"},{"name":"stage"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"stage"},{"name":"stage"}],"output":{"name":"bool"}}],[11,"hash","","",81,null],[11,"fmt","","",81,{"inputs":[{"name":"stage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"stage"}],"output":{"name":"stage"}}],[11,"is_same_type","","Whether two `UniformValue`s have the same type.",82,{"inputs":[{"name":"uniformvalue"},{"name":"uniformvalue"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"uniformvalue"}],"output":{"name":"uniformvalue"}}],[11,"fmt","","",82,{"inputs":[{"name":"uniformvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"fmt","","",69,{"inputs":[{"name":"uniformvar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"uniformvar"},{"name":"uniformvar"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"uniformvar"},{"name":"uniformvar"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"uniformvar"}],"output":{"name":"uniformvar"}}],[11,"fmt","","",70,{"inputs":[{"name":"blockvar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"blockvar"},{"name":"blockvar"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"blockvar"},{"name":"blockvar"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"blockvar"}],"output":{"name":"blockvar"}}],[11,"fmt","","",71,{"inputs":[{"name":"samplervar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"samplervar"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"samplervar"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"samplervar"}],"output":{"name":"samplervar"}}],[11,"fmt","","",72,{"inputs":[{"name":"programinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"programinfo"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"programinfo"},{"name":"programinfo"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"programinfo"}],"output":{"name":"programinfo"}}],[11,"fmt","","",83,{"inputs":[{"name":"compatibilityerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"compatibilityerror"}],"output":{"name":"compatibilityerror"}}],[11,"is_compatible","","Whether a value is compatible with this variable. That is, whether the value can be stored\nin this variable.",69,{"inputs":[{"name":"uniformvar"},{"name":"uniformvalue"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"createshadererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"createshadererror"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"createshadererror"},{"name":"createshadererror"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"createshadererror"}],"output":{"name":"createshadererror"}}],[11,"fmt","","",85,{"inputs":[{"name":"createprogramerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",85,{"inputs":[{"name":"createprogramerror"},{"name":"createprogramerror"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"createprogramerror"},{"name":"createprogramerror"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"createprogramerror"}],"output":{"name":"createprogramerror"}}],[11,"fmt","","",86,{"inputs":[{"name":"shadermodel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",86,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"option"}}],[11,"lt","","",86,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"le","","",86,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"gt","","",86,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"ge","","",86,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"eq","","",86,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"shadermodel"},{"name":"shadermodel"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"shadermodel"}],"output":{"name":"shadermodel"}}],[11,"to_number","","Return the shader model as a numeric value.",86,{"inputs":[{"name":"shadermodel"}],"output":{"name":"u8"}}],[0,"tex","gfx::device","Texture creation and modification.",null,null],[3,"SurfaceInfo","gfx::device::tex","Describes the storage of a surface.",null,null],[12,"width","","",87,null],[12,"height","","",87,null],[12,"format","","",87,null],[12,"aa_mode","","",87,null],[3,"TextureInfo","","Describes the storage of a texture.",null,null],[12,"width","","",88,null],[12,"height","","",88,null],[12,"depth","","",88,null],[12,"levels","","Number of mipmap levels. Defaults to -1, which stands for unlimited.\nMipmap levels at equal or above `levels` can not be loaded or sampled\nby the shader. width and height of each consecutive mipmap level is\nhalved, starting from level 0.",88,null],[12,"kind","","",88,null],[12,"format","","",88,null],[3,"ImageInfo","","Describes a subvolume of a texture, which image data can be uploaded into.",null,null],[12,"xoffset","","",89,null],[12,"yoffset","","",89,null],[12,"zoffset","","",89,null],[12,"width","","",89,null],[12,"height","","",89,null],[12,"depth","","",89,null],[12,"format","","Format of each texel.",89,null],[12,"mipmap","","Which mipmap to select.",89,null],[3,"SamplerInfo","","Specifies how to sample from a texture.",null,null],[12,"filtering","","Filter method to use.",90,null],[12,"wrap_mode","","Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL\nspeak)",90,null],[12,"lod_bias","","This bias is added to every computed mipmap level (N + lod_bias). For\nexample, if it would select mipmap level 2 and lod_bias is 1, it will\nuse mipmap level 3.",90,null],[12,"lod_range","","This range is used to clamp LOD level used for sampling",90,null],[12,"comparison","","comparison mode, used primary for a shadow map",90,null],[4,"SurfaceError","","Surface creation/update error.",null,null],[13,"UnsupportedFormat","","Failed to map a given format to the device.",91,null],[13,"UnsupportedGamma","","Failed to provide sRGB formats.",91,null],[4,"TextureError","","Texture creation/update error.",null,null],[13,"UnsupportedFormat","","Failed to map a given format to the device.",92,null],[13,"UnsupportedGamma","","Failed to provide sRGB formats.",92,null],[13,"UnsupportedSampling","","Failed to map a given multisampled kind to the device.",92,null],[13,"InvalidInfo","","The given TextureInfo contains invalid values.",92,null],[13,"IncorrectSize","","The given data has a different size than the target texture slice.",92,null],[4,"AaMode","","Describes the configuration of samples inside each texel.",null,null],[13,"Msaa","","MultiSampled Anti-Aliasing",93,null],[13,"Eqaa","","Enhanced Quality Anti-Aliasing",93,null],[4,"Components","","Describes the color components of each texel.",null,null],[13,"R","","Red only",94,null],[13,"RG","","Red and green",94,null],[13,"RGB","","Red, green, blue",94,null],[13,"RGBA","","Red, green, blue, alpha",94,null],[4,"Compression","","Codec used to compress image data.",null,null],[13,"ETC2_RGB","","Use the EXT2 algorithm on 3 components.",95,null],[13,"ETC2_SRGB","","Use the EXT2 algorithm on 4 components (RGBA) in the sRGB color space.",95,null],[13,"ETC2_EAC_RGBA8","","Use the EXT2 EAC algorithm on 4 components.",95,null],[4,"Format","","Describes the layout of each texel within a surface/texture.",null,null],[13,"Float","","Floating point.",96,null],[13,"Integer","","Signed integer.",96,null],[13,"Unsigned","","Unsigned integer.",96,null],[13,"Compressed","","Compressed data.",96,null],[13,"R3_G3_B2","","3 bits for RG, 2 for B.",96,null],[13,"R5_G6_B5","","5 bits for RB, 6 for G",96,null],[13,"RGB5_A1","","5 bits each for RGB, 1 for Alpha.",96,null],[13,"RGB10_A2","","10 bits each for RGB, 2 for Alpha.",96,null],[13,"RGB10_A2UI","","10 bits each for RGB, 2 for Alpha, as unsigned integers.",96,null],[13,"R11F_G11F_B10F","","This uses special 11 and 10-bit floating-point values without sign bits.",96,null],[13,"RGB9_E5","","This s an RGB format of type floating-point. The 3 color values have\n9 bits of precision, and they share a single exponent.",96,null],[13,"BGRA8","","Swizzled RGBA color format, used for interaction with Windows DIBs",96,null],[13,"SRGB8","","Gamma-encoded RGB8",96,null],[13,"SRGB8_A8","","Gamma-encoded RGB8, unchanged alpha",96,null],[13,"DEPTH16","","16-bit bits depth",96,null],[13,"DEPTH24","","24 bits depth",96,null],[13,"DEPTH32F","","32 floating-point bits depth",96,null],[13,"DEPTH24_STENCIL8","","24 bits for depth, 8 for stencil",96,null],[13,"DEPTH32F_STENCIL8","","32 floating point bits for depth, 8 for stencil",96,null],[4,"FilterMethod","","How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the\ntexture when sampling. They correspond to increasing levels of quality,\nbut also cost. They \"layer\" on top of each other: it is not possible to\nhave bilinear filtering without mipmapping, for example.",null,null],[13,"Scale","","The dumbest filtering possible, nearest-neighbor interpolation.",97,null],[13,"Mipmap","","Add simple mipmapping.",97,null],[13,"Bilinear","","Sample multiple texels within a single mipmap level to increase\nquality.",97,null],[13,"Trilinear","","Sample multiple texels across two mipmap levels to increase quality.",97,null],[13,"Anisotropic","","Anisotropic filtering with a given \"max\", must be between 1 and 16,\ninclusive.",97,null],[4,"CubeFace","","The face of a cube texture to do an operation on.",null,null],[13,"PosZ","","",98,null],[13,"NegZ","","",98,null],[13,"PosX","","",98,null],[13,"NegX","","",98,null],[13,"PosY","","",98,null],[13,"NegY","","",98,null],[4,"Kind","","Specifies how a given texture may be used. The available texture types are\nrestricted by what Metal exposes, though this could conceivably be\nextended in the future. Note that a single texture can *only* ever be of\none kind. A texture created as `Texture2D` will forever be `Texture2D`.",null,null],[13,"D1","","A single row of texels.",99,null],[13,"D1Array","","An array of rows of texels. Equivalent to Texture2D except that texels\nin a different row are not sampled.",99,null],[13,"D2","","A traditional 2D texture, with rows arranged contiguously.",99,null],[13,"D2Array","","An array of 2D textures. Equivalent to Texture3D except that texels in\na different depth level are not sampled.",99,null],[13,"D2MultiSample","","A multi-sampled 2D texture. Each pixel may have more than one data value\n(sample) associated with it.",99,null],[13,"D2MultiSampleArray","","A array of multi-sampled 2D textures.",99,null],[13,"Cube","","A set of 6 2D textures, one for each face of a cube.",99,null],[13,"D3","","A volume texture, with each 2D layer arranged contiguously.",99,null],[4,"WrapMode","","Specifies how texture coordinates outside the range `[0, 1]` are handled.",null,null],[13,"Tile","","Tile the texture. That is, sample the coordinate modulo `1.0`. This is\nthe default.",100,null],[13,"Mirror","","Mirror the texture. Like tile, but uses abs(coord) before the modulo.",100,null],[13,"Clamp","","Clamp the texture to the value at `0.0` or `1.0` respectively.",100,null],[6,"Size","","Dimension size",null,null],[6,"Bits","","Number of bits per component",null,null],[6,"NumSamples","","Number of MSAA samples",null,null],[6,"NumFragments","","Number of EQAA fragments",null,null],[7,"R8","","A single R-component 8-bit normalized format.",null,null],[7,"RGBA8","","A standard RGBA 8-bit normalized format.",null,null],[7,"RGBA16F","","A standard RGBA 16-bit floating-point format.",null,null],[7,"RGBA32F","","A standard RGBA 32-bit floating-point format.",null,null],[11,"fmt","","",91,{"inputs":[{"name":"surfaceerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"surfaceerror"},{"name":"surfaceerror"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"surfaceerror"},{"name":"surfaceerror"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"surfaceerror"}],"output":{"name":"surfaceerror"}}],[11,"eq","","",92,{"inputs":[{"name":"textureerror"},{"name":"textureerror"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"textureerror"},{"name":"textureerror"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"textureerror"}],"output":{"name":"textureerror"}}],[11,"fmt","","",92,{"inputs":[{"name":"textureerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",93,{"inputs":[{"name":"aamode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"aamode"}],"output":{"name":"aamode"}}],[11,"hash","","",93,null],[11,"partial_cmp","","",93,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"option"}}],[11,"lt","","",93,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"le","","",93,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"gt","","",93,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ge","","",93,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"eq","","",93,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"bool"}}],[11,"cmp","","",93,{"inputs":[{"name":"aamode"},{"name":"aamode"}],"output":{"name":"ordering"}}],[11,"fmt","","",94,{"inputs":[{"name":"components"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"hash","","",94,null],[11,"partial_cmp","","",94,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"lt","","",94,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"le","","",94,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"gt","","",94,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"ge","","",94,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"eq","","",94,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"cmp","","",94,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"get_count","","Get the number of components.",94,{"inputs":[{"name":"components"}],"output":{"name":"u8"}}],[11,"fmt","","",95,{"inputs":[{"name":"compression"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"compression"}],"output":{"name":"compression"}}],[11,"hash","","",95,null],[11,"partial_cmp","","",95,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"option"}}],[11,"lt","","",95,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"le","","",95,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"gt","","",95,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"ge","","",95,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"eq","","",95,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"bool"}}],[11,"cmp","","",95,{"inputs":[{"name":"compression"},{"name":"compression"}],"output":{"name":"ordering"}}],[11,"fmt","","",96,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"hash","","",96,null],[11,"partial_cmp","","",96,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"option"}}],[11,"lt","","",96,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"le","","",96,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"gt","","",96,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ge","","",96,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"eq","","",96,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"cmp","","",96,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"ordering"}}],[11,"get_components","","Extract the components format",96,{"inputs":[{"name":"format"}],"output":{"name":"option"}}],[11,"is_color","","Check if it's a color format.",96,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"has_depth","","Check if it has a depth component.",96,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"has_stencil","","Check if it has a stencil component.",96,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"is_compressed","","Check if it's a compressed format.",96,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"does_convert_gamma","","Check if it's a sRGB color space.",96,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"get_size","","Get size of the texel in bytes.",96,{"inputs":[{"name":"format"}],"output":{"name":"option"}}],[11,"fmt","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"surfaceinfo"}],"output":{"name":"surfaceinfo"}}],[11,"hash","","",87,null],[11,"partial_cmp","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"option"}}],[11,"lt","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"le","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"gt","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"ge","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"eq","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"bool"}}],[11,"cmp","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"surfaceinfo"}],"output":{"name":"ordering"}}],[11,"fmt","","",97,{"inputs":[{"name":"filtermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"filtermethod"}],"output":{"name":"filtermethod"}}],[11,"hash","","",97,null],[11,"partial_cmp","","",97,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"option"}}],[11,"lt","","",97,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"le","","",97,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"gt","","",97,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ge","","",97,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"eq","","",97,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"bool"}}],[11,"cmp","","",97,{"inputs":[{"name":"filtermethod"},{"name":"filtermethod"}],"output":{"name":"ordering"}}],[11,"fmt","","",98,{"inputs":[{"name":"cubeface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"cubeface"}],"output":{"name":"cubeface"}}],[11,"hash","","",98,null],[11,"partial_cmp","","",98,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"option"}}],[11,"lt","","",98,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"le","","",98,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"gt","","",98,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"ge","","",98,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"eq","","",98,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"bool"}}],[11,"cmp","","",98,{"inputs":[{"name":"cubeface"},{"name":"cubeface"}],"output":{"name":"ordering"}}],[11,"fmt","","",99,{"inputs":[{"name":"kind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"kind"}],"output":{"name":"kind"}}],[11,"hash","","",99,null],[11,"partial_cmp","","",99,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"option"}}],[11,"lt","","",99,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"le","","",99,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"gt","","",99,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ge","","",99,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"eq","","",99,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"bool"}}],[11,"cmp","","",99,{"inputs":[{"name":"kind"},{"name":"kind"}],"output":{"name":"ordering"}}],[11,"get_aa_mode","","Return the anti-aliasing mode of the texture",99,{"inputs":[{"name":"kind"}],"output":{"name":"option"}}],[11,"fmt","","",88,{"inputs":[{"name":"textureinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"textureinfo"}],"output":{"name":"textureinfo"}}],[11,"hash","","",88,null],[11,"partial_cmp","","",88,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"eq","","",88,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"bool"}}],[11,"cmp","","",88,{"inputs":[{"name":"textureinfo"},{"name":"textureinfo"}],"output":{"name":"ordering"}}],[11,"fmt","","",89,{"inputs":[{"name":"imageinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"imageinfo"}],"output":{"name":"imageinfo"}}],[11,"hash","","",89,null],[11,"partial_cmp","","",89,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"eq","","",89,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"cmp","","",89,{"inputs":[{"name":"imageinfo"},{"name":"imageinfo"}],"output":{"name":"ordering"}}],[11,"default","","",89,{"inputs":[{"name":"imageinfo"}],"output":{"name":"imageinfo"}}],[11,"default","","",88,{"inputs":[{"name":"textureinfo"}],"output":{"name":"textureinfo"}}],[11,"new","","Create a new empty texture info.",88,{"inputs":[{"name":"textureinfo"}],"output":{"name":"textureinfo"}}],[11,"contains","","Check if given ImageInfo is a part of the texture.",88,{"inputs":[{"name":"textureinfo"},{"name":"imageinfo"}],"output":{"name":"bool"}}],[11,"from","","",89,{"inputs":[{"name":"imageinfo"},{"name":"textureinfo"}],"output":{"name":"imageinfo"}}],[11,"from","","",87,{"inputs":[{"name":"surfaceinfo"},{"name":"textureinfo"}],"output":{"name":"surfaceinfo"}}],[11,"new","","Create a new `ImageInfo`, using default values.",89,{"inputs":[{"name":"imageinfo"}],"output":{"name":"imageinfo"}}],[11,"get_texel_count","","Get the total number of texels.",89,{"inputs":[{"name":"imageinfo"}],"output":{"name":"usize"}}],[11,"fmt","","",100,{"inputs":[{"name":"wrapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"wrapmode"}],"output":{"name":"wrapmode"}}],[11,"hash","","",100,null],[11,"partial_cmp","","",100,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"option"}}],[11,"lt","","",100,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"le","","",100,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"gt","","",100,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"ge","","",100,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"eq","","",100,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"cmp","","",100,{"inputs":[{"name":"wrapmode"},{"name":"wrapmode"}],"output":{"name":"ordering"}}],[11,"fmt","","",90,{"inputs":[{"name":"samplerinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"samplerinfo"}],"output":{"name":"samplerinfo"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"option"}}],[11,"lt","","",90,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"le","","",90,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"gt","","",90,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ge","","",90,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"eq","","",90,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"samplerinfo"},{"name":"samplerinfo"}],"output":{"name":"bool"}}],[11,"new","","Create a new sampler description with a given filter method and wrapping mode, using no LOD\nmodifications.",90,{"inputs":[{"name":"samplerinfo"},{"name":"filtermethod"},{"name":"wrapmode"}],"output":{"name":"samplerinfo"}}],[6,"VertexCount","gfx::device","Draw vertex count.",null,null],[6,"InstanceCount","","Draw number of instances",null,null],[6,"UniformBlockIndex","","Index of a uniform block.",null,null],[6,"AttributeSlot","","Slot for an attribute.",null,null],[6,"UniformBufferSlot","","Slot for a uniform buffer object.",null,null],[6,"TextureSlot","","Slot a texture can be bound to.",null,null],[6,"IndexType","","A type of each index value in the mesh's index buffer",null,null],[6,"SubmitInfo","","All the data needed simultaneously for submitting a command buffer for\nexecution on a device.",null,null],[8,"Resources","","Resources pertaining to a specific API.",null,null],[16,"Buffer","","",101,null],[16,"ArrayBuffer","","",101,null],[16,"Shader","","",101,null],[16,"Program","","",101,null],[16,"FrameBuffer","","",101,null],[16,"Surface","","",101,null],[16,"Texture","","",101,null],[16,"Sampler","","",101,null],[16,"Fence","","",101,null],[8,"Factory","","",null,null],[16,"Mapper","","Associated mapper type",102,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation",102,{"inputs":[{"name":"factory"}],"output":{"name":"capabilities"}}],[10,"create_buffer_raw","","",102,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"},{"name":"bufferusage"}],"output":{"name":"rawbuffer"}}],[10,"create_buffer_static_raw","","",102,null],[11,"create_buffer_static","","",102,null],[11,"create_buffer_dynamic","","",102,{"inputs":[{"name":"factory"},{"name":"usize"},{"name":"bufferrole"}],"output":{"name":"buffer"}}],[10,"create_array_buffer","","",102,{"inputs":[{"name":"factory"}],"output":{"name":"result"}}],[10,"create_shader","","",102,null],[10,"create_program","","",102,null],[10,"create_frame_buffer","","",102,{"inputs":[{"name":"factory"}],"output":{"name":"result"}}],[10,"create_surface","","",102,{"inputs":[{"name":"factory"},{"name":"surfaceinfo"}],"output":{"name":"result"}}],[10,"create_texture","","",102,{"inputs":[{"name":"factory"},{"name":"textureinfo"}],"output":{"name":"result"}}],[10,"create_sampler","","",102,{"inputs":[{"name":"factory"},{"name":"samplerinfo"}],"output":{"name":"sampler"}}],[10,"update_buffer_raw","","Update the information stored in a specific buffer",102,null],[11,"update_buffer","","",102,null],[10,"map_buffer_raw","","",102,{"inputs":[{"name":"factory"},{"name":"rawbuffer"},{"name":"mapaccess"}],"output":{"name":"mapper"}}],[10,"unmap_buffer_raw","","",102,{"inputs":[{"name":"factory"},{"name":"mapper"}],"output":null}],[10,"map_buffer_readable","","",102,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"readable"}}],[10,"map_buffer_writable","","",102,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"writable"}}],[10,"map_buffer_rw","","",102,{"inputs":[{"name":"factory"},{"name":"buffer"}],"output":{"name":"rw"}}],[10,"update_texture_raw","","Update the information stored in a texture",102,null],[11,"update_texture","","",102,null],[10,"generate_mipmap","","",102,{"inputs":[{"name":"factory"},{"name":"texture"}],"output":null}],[11,"create_texture_static","","Create a new texture with given data",102,null],[8,"Device","","An interface for performing draw calls using a specific graphics API",null,null],[16,"Resources","","Associated resources type.",103,null],[16,"CommandBuffer","","Associated command buffer type.",103,null],[10,"get_capabilities","","Returns the capabilities available to the specific API implementation.",103,{"inputs":[{"name":"device"}],"output":{"name":"capabilities"}}],[10,"reset_state","","Reset all the states to disabled/default.",103,{"inputs":[{"name":"device"}],"output":null}],[10,"submit","","Submit a command buffer for execution.",103,{"inputs":[{"name":"device"},{"name":"submitinfo"}],"output":null}],[10,"cleanup","","Cleanup unused resources, to be called between frames.",103,{"inputs":[{"name":"device"}],"output":null}],[8,"DeviceFence","","Extension to the Device that allows for submitting of commands\naround a fence",null,null],[10,"fenced_submit","","Submit a command buffer to the stream creating a fence\nthe fence is signaled after the GPU has executed all commands\nin the buffer",104,{"inputs":[{"name":"devicefence"},{"name":"submitinfo"},{"name":"option"}],"output":{"name":"fence"}}],[10,"fence_wait","","Wait on the supplied fence stalling the current thread until\nthe fence is satisfied",104,{"inputs":[{"name":"devicefence"},{"name":"fence"}],"output":null}],[11,"fmt","","",105,{"inputs":[{"name":"notsupported"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",105,{"inputs":[{"name":"notsupported"},{"name":"notsupported"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"notsupported"},{"name":"notsupported"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"notsupported"}],"output":{"name":"notsupported"}}],[11,"fmt","","",23,{"inputs":[{"name":"capabilities"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"capabilities"}],"output":{"name":"capabilities"}}],[11,"clone","","",25,{"inputs":[{"name":"mapaccess"}],"output":{"name":"mapaccess"}}],[11,"fmt","","",26,{"inputs":[{"name":"primitivetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"primitivetype"},{"name":"primitivetype"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"primitivetype"},{"name":"primitivetype"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"primitivetype"}],"output":{"name":"primitivetype"}}],[11,"eq","","",27,{"inputs":[{"name":"bufferrole"},{"name":"bufferrole"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"bufferrole"},{"name":"bufferrole"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"fmt","","",27,{"inputs":[{"name":"bufferrole"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"bufferrole"}],"output":{"name":"bufferrole"}}],[11,"eq","","",28,{"inputs":[{"name":"bufferusage"},{"name":"bufferusage"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"bufferusage"},{"name":"bufferusage"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"fmt","","",28,{"inputs":[{"name":"bufferusage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"bufferusage"}],"output":{"name":"bufferusage"}}],[11,"eq","","",24,{"inputs":[{"name":"bufferinfo"},{"name":"bufferinfo"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"bufferinfo"},{"name":"bufferinfo"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"fmt","","",24,{"inputs":[{"name":"bufferinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"bufferinfo"}],"output":{"name":"bufferinfo"}}],[11,"fmt","","",29,{"inputs":[{"name":"bufferupdateerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"bufferupdateerror"},{"name":"bufferupdateerror"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"bufferupdateerror"},{"name":"bufferupdateerror"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"bufferupdateerror"}],"output":{"name":"bufferupdateerror"}}],[0,"extra","gfx","Renderer extensions.",null,null],[0,"factory","gfx::extra","Factory extensions\nFactory extension. Provides resource construction shortcuts.",null,null],[8,"FactoryExt","gfx::extra::factory","Factory extension trait",null,null],[11,"create_mesh","","Create a new mesh from the given vertex data.",106,null],[11,"link_program","","Create a simple program given a vertex shader with a fragment one.",106,null],[11,"compile_shader_source","","Compile a single shader of a given stage, automatically picking the right\nshader variant.",106,{"inputs":[{"name":"factoryext"},{"name":"stage"},{"name":"shadersource"}],"output":{"name":"result"}}],[11,"link_program_source","","Create a simple program given `ShaderSource` versions of vertex and\nfragment shaders, automatically picking available shader variant.",106,{"inputs":[{"name":"factoryext"},{"name":"shadersource"},{"name":"shadersource"}],"output":{"name":"result"}}],[11,"create_texture_rgba8","","Create a simple RGBA8 2D texture.",106,{"inputs":[{"name":"factoryext"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_texture_rgba8_static","","Create RGBA8 2D texture with given contents and mipmap chain.",106,null],[11,"create_texture_depth_stencil","","Create a simple depth+stencil 2D texture.",106,{"inputs":[{"name":"factoryext"},{"name":"u16"},{"name":"u16"}],"output":{"name":"result"}}],[11,"create_sampler_linear","","Create a linear sampler with clamping to border.",106,{"inputs":[{"name":"factoryext"}],"output":{"name":"sampler"}}],[0,"shade","gfx::extra","Shader extensions\nShader source extension",null,null],[3,"ShaderSource","gfx::extra::shade","A type storing shader source for different graphics APIs and versions.",null,null],[12,"glsl_120","","",107,null],[12,"glsl_130","","",107,null],[12,"glsl_140","","",107,null],[12,"glsl_150","","",107,null],[12,"glsl_430","","",107,null],[12,"targets","","",107,null],[4,"ProgramError","","Program linking error",null,null],[13,"Vertex","","Unable to compile the vertex shader",108,null],[13,"Fragment","","Unable to compile the fragment shader",108,null],[13,"Link","","Unable to link",108,null],[11,"fmt","","",108,{"inputs":[{"name":"programerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"programerror"},{"name":"programerror"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"programerror"},{"name":"programerror"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"programerror"}],"output":{"name":"programerror"}}],[11,"fmt","","",107,{"inputs":[{"name":"shadersource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",107,{"inputs":[{"name":"shadersource"},{"name":"shadersource"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"shadersource"},{"name":"shadersource"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"shadersource"}],"output":{"name":"shadersource"}}],[11,"empty","","Create an empty shader source. Useful for specifying the remaining\nstructure members upon construction.",107,{"inputs":[{"name":"shadersource"}],"output":{"name":"shadersource"}}],[11,"choose","","Pick one of the stored versions that is the highest supported by the device.",107,{"inputs":[{"name":"shadersource"},{"name":"shadermodel"}],"output":{"name":"result"}}],[0,"stream","gfx::extra","Render stream\nRender stream extension. Stream is something you can send batches to.\nIt includes a renderer and an output, stored by constrained types.",null,null],[3,"OwnedStream","gfx::extra::stream","A stream that owns its components.",null,null],[12,"ren","","Renderer",109,null],[12,"out","","Output",109,null],[8,"Window","","Generic output window.",null,null],[10,"swap_buffers","","Swap front and back buffers.",110,{"inputs":[{"name":"window"}],"output":null}],[8,"Stream","","Render stream abstraction.",null,null],[16,"CommandBuffer","","Command buffer type to constraint the `Renderer`.",111,null],[16,"Output","","Constrained `Output` type.",111,null],[10,"get_output","","Get the output only.",111,{"inputs":[{"name":"stream"}],"output":{"name":"output"}}],[10,"access","","Access both of the stream components.",111,null],[11,"get_aspect_ratio","","Get width/height aspect, needed for projections.",111,{"inputs":[{"name":"stream"}],"output":{"name":"f32"}}],[11,"clear","","Clear the canvas.",111,{"inputs":[{"name":"stream"},{"name":"cleardata"}],"output":null}],[11,"blit_on","","Blit on this stream from another `Output`.",111,{"inputs":[{"name":"stream"},{"name":"i"},{"name":"rect"},{"name":"rect"},{"name":"mirror"},{"name":"mask"}],"output":{"name":"result"}}],[11,"blit_to","","Blit this stream to another `Output`.",111,{"inputs":[{"name":"stream"},{"name":"o"},{"name":"rect"},{"name":"rect"},{"name":"mirror"},{"name":"mask"}],"output":{"name":"result"}}],[11,"draw","","Draw a simple `Batch`.",111,{"inputs":[{"name":"stream"},{"name":"b"}],"output":{"name":"result"}}],[11,"draw_instanced","","Draw an instanced `Batch`.",111,{"inputs":[{"name":"stream"},{"name":"b"},{"name":"instancecount"},{"name":"vertexcount"}],"output":{"name":"result"}}],[11,"flush","","Execute everything and clear the command buffer.",111,{"inputs":[{"name":"stream"},{"name":"d"}],"output":null}],[8,"StreamFactory","","A render factory extension that allows creating streams with new renderers.",null,null],[11,"create_stream","","Create a new stream from a given output.",112,{"inputs":[{"name":"streamfactory"},{"name":"o"}],"output":{"name":"ownedstream"}}],[11,"get_output","","",109,{"inputs":[{"name":"ownedstream"}],"output":{"name":"o"}}],[11,"access","","",109,null],[11,"present","","Show what we've been drawing all this time.",109,{"inputs":[{"name":"ownedstream"},{"name":"d"}],"output":null}],[0,"macros","gfx","Macros for deriving `VertexFormat` and `ShaderParam`.",null,null],[0,"render","","High-level, platform independent, bindless rendering API.",null,null],[3,"ParamStorage","gfx::render","Temporary parameter storage, used for shader activation.",null,null],[12,"uniforms","","uniform values to be provided",113,null],[12,"blocks","","uniform buffers to be provided",113,null],[12,"textures","","textures to be provided",113,null],[3,"Renderer","","Renderer front-end",null,null],[4,"BlitError","","An error occuring in surface blits.",null,null],[13,"SourcePlanesMissing","","The source doesn't have some of the requested planes.",114,null],[13,"DestinationPlanesMissing","","The destination doesn't have some of the requested planes.",114,null],[4,"UpdateError","","An error occuring in buffer/texture updates.",null,null],[13,"OutOfBounds","","",115,null],[12,"target","gfx::render::UpdateError","",115,null],[12,"source","","",115,null],[13,"UnitSizeMismatch","gfx::render","",115,null],[12,"target","gfx::render::UpdateError","",115,null],[12,"source","","",115,null],[13,"UnitCountMismatch","gfx::render","",115,null],[12,"target","gfx::render::UpdateError","",115,null],[12,"slice","","",115,null],[4,"DrawError","gfx::render","Draw-time error, showing inconsistencies in draw parameters and data",null,null],[13,"InvalidBatch","","Tha batch is not valid",116,null],[13,"MissingTarget","","The `DrawState` interacts with a target that does not present in the\nframe. For example, the depth test is enabled while there is no depth.",116,null],[13,"BadViewport","","The viewport either covers zero space or exceeds HW limitations.",116,null],[13,"BadVertexCount","","Vertex count exceeds HW limitations.",116,null],[13,"BadIndexCount","","Index count exceeds HW limitations.",116,null],[0,"batch","","Batches\nBatches are structures containing all the data required for the draw call,\nexcept for the target frame. Here we define the `Batch` trait as well as\n`RefBatch` and `OwnedBatch` implementations.",null,null],[3,"Full","gfx::render::batch","Full batch - contains everything needed for rendering.",null,null],[12,"slice","","Mesh slice",117,null],[12,"params","","Parameter data.",117,null],[12,"state","","Draw state",117,null],[3,"Core","","Core batch - a minimal sealed batch.",null,null],[4,"Error","","An error occurring at batch creation",null,null],[13,"Mesh","","Error connecting mesh attributes",118,null],[13,"Parameters","","Error connecting shader parameters",118,null],[13,"Other","","Another kind of error",118,null],[5,"bind","","Create an implicit batch",null,{"inputs":[{"name":"drawstate"},{"name":"mesh"},{"name":"slice"},{"name":"programhandle"},{"name":"t"}],"output":{"name":"implicit"}}],[6,"BatchData","","Return type for `Batch::get_data()``",null,null],[6,"Implicit","","A batch that is constructed on the fly when rendering.\nMeant to be a struct, blocked by #614",null,null],[6,"Complete","","A `Core` completed by a mesh slice, shader parameters, and a state.\nImplements `Batch` thus can be drawn.\nIt is meant to be a struct, but we have lots of lifetime issues\nwith associated resources, binding which looks nasty (#614)",null,null],[8,"Batch","","Abstract batch trait",null,null],[10,"get_data","","Obtain information about the mesh, program, and state",119,{"inputs":[{"name":"batch"}],"output":{"name":"result"}}],[10,"fill_params","","Fill shader parameter values",119,{"inputs":[{"name":"batch"},{"name":"paramstorage"}],"output":{"name":"result"}}],[11,"eq","","",118,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",118,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"get_data","","",120,{"inputs":[{"name":"implicit"}],"output":{"name":"result"}}],[11,"fill_params","","",120,{"inputs":[{"name":"implicit"},{"name":"paramstorage"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"full"}],"output":{"name":"full"}}],[11,"new","","Create a new full batch",117,{"inputs":[{"name":"full"},{"name":"mesh"},{"name":"programhandle"},{"name":"t"}],"output":{"name":"result"}}],[11,"get_data","","",117,{"inputs":[{"name":"full"}],"output":{"name":"result"}}],[11,"fill_params","","",117,{"inputs":[{"name":"full"},{"name":"paramstorage"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"core"}],"output":{"name":"core"}}],[11,"new","","Create a new core batch.",121,{"inputs":[{"name":"core"},{"name":"mesh"},{"name":"programhandle"}],"output":{"name":"result"}}],[11,"with","","Add missing components to complete the batch for rendering.",121,{"inputs":[{"name":"core"},{"name":"slice"},{"name":"t"},{"name":"drawstate"}],"output":{"name":"complete"}}],[11,"program","","Read the ProgramHandle",121,{"inputs":[{"name":"core"}],"output":{"name":"programhandle"}}],[11,"mesh","","Read the Mesh",121,{"inputs":[{"name":"core"}],"output":{"name":"mesh"}}],[11,"get_data","","",122,{"inputs":[{"name":"complete"}],"output":{"name":"result"}}],[11,"fill_params","","",122,{"inputs":[{"name":"complete"},{"name":"paramstorage"}],"output":{"name":"result"}}],[0,"mesh","gfx::render","Meshes\nMesh loading.",null,null],[3,"Attribute","gfx::render::mesh","Describes a single attribute of a vertex buffer, including its type, name, etc.",null,null],[12,"name","","A name to match the shader input",123,null],[12,"buffer","","Vertex buffer to contain the data",123,null],[12,"format","","Format of the attribute",123,null],[3,"Mesh","","Describes geometry to render.",null,null],[12,"num_vertices","","Number of vertices in the mesh.",124,null],[12,"attributes","","Vertex attributes to use.",124,null],[3,"Slice","","Description of a subset of `Mesh` data to render.",null,null],[12,"start","","Start index of vertices to draw.",125,null],[12,"end","","End index of vertices to draw.",125,null],[12,"prim_type","","Primitive type to render collections of vertices as.",125,null],[12,"kind","","Source of the vertex ordering when drawing.",125,null],[3,"AttributeIter","","An iterator over mesh attributes.",null,null],[3,"Link","","Holds a remapping table from shader inputs to mesh attributes.",null,null],[4,"SliceKind","","Source of vertex ordering for a slice",null,null],[13,"Vertex","","Render vertex data directly from the `Mesh`'s buffer.",126,null],[13,"Index8","","The `Index*` buffer contains a list of indices into the `Mesh`\ndata, so every vertex attribute does not need to be duplicated, only\nits position in the `Mesh`. The base index is added to this index\nbefore fetching the vertex from the buffer.  For example, when drawing\na square, two triangles are needed.  Using only `Vertex`, one\nwould need 6 separate vertices, 3 for each triangle. However, two of\nthe vertices will be identical, wasting space for the duplicated\nattributes.  Instead, the `Mesh` can store 4 vertices and an\n`Index8` can be used instead.",126,null],[13,"Index16","","As `Index8` but with `u16` indices",126,null],[13,"Index32","","As `Index8` but with `u32` indices",126,null],[4,"Error","","Describes kinds of errors that may occur in the mesh linking",null,null],[13,"AttributeMissing","","A required attribute was missing.",127,null],[13,"AttributeType","","An attribute's type from the vertex format differed from the type used in the shader.",127,null],[13,"AttributeIndex","","An attribute index is out of supported bounds",127,null],[13,"ShaderInputIndex","","An input index is out of supported bounds",127,null],[6,"AttributeIndex","","Index of a vertex attribute inside the mesh",null,null],[8,"VertexFormat","","A trait implemented automatically for user vertex structure by\n`#[vertex_format] attribute",null,null],[10,"generate","","Create the attributes for this type, using the given buffer.",128,{"inputs":[{"name":"vertexformat"},{"name":"buffer"}],"output":{"name":"vec"}}],[8,"ToSlice","","A helper trait for cleanly getting the slice of a type.",null,null],[10,"to_slice","","Get the slice of a type.",129,{"inputs":[{"name":"toslice"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[8,"ToIndexSlice","","A helper trait to build index slices from data.",null,null],[10,"to_slice","","Make an index slice.",130,{"inputs":[{"name":"toindexslice"},{"name":"f"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[11,"eq","","",123,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"hash","","",123,null],[11,"fmt","","",123,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"eq","","",124,{"inputs":[{"name":"mesh"},{"name":"mesh"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"mesh"},{"name":"mesh"}],"output":{"name":"bool"}}],[11,"hash","","",124,null],[11,"fmt","","",124,{"inputs":[{"name":"mesh"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"mesh"}],"output":{"name":"mesh"}}],[11,"new","","Create a new mesh, which is a `TriangleList` with no attributes and `nv` vertices.",124,{"inputs":[{"name":"mesh"},{"name":"vertexcount"}],"output":{"name":"mesh"}}],[11,"from_format","","Create a new `Mesh` from a struct that implements `VertexFormat` and a buffer.",124,{"inputs":[{"name":"mesh"},{"name":"buffer"},{"name":"vertexcount"}],"output":{"name":"mesh"}}],[11,"from_format_instanced","","Create a new intanced `Mesh` given a vertex buffer and an instance buffer.",124,{"inputs":[{"name":"mesh"},{"name":"buffer"},{"name":"vertexcount"},{"name":"buffer"}],"output":{"name":"mesh"}}],[11,"eq","","",125,{"inputs":[{"name":"slice"},{"name":"slice"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"slice"},{"name":"slice"}],"output":{"name":"bool"}}],[11,"fmt","","",125,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"get_prim_count","","Get the number of primitives in this slice.",125,{"inputs":[{"name":"slice"}],"output":{"name":"u32"}}],[11,"eq","","",126,{"inputs":[{"name":"slicekind"},{"name":"slicekind"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"slicekind"},{"name":"slicekind"}],"output":{"name":"bool"}}],[11,"fmt","","",126,{"inputs":[{"name":"slicekind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"slicekind"}],"output":{"name":"slicekind"}}],[11,"to_slice","","Return a vertex slice of the whole mesh.",124,{"inputs":[{"name":"mesh"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[11,"to_slice","gfx::device::handle","",53,{"inputs":[{"name":"buffer"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[11,"to_slice","","",53,{"inputs":[{"name":"buffer"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[11,"to_slice","","",53,{"inputs":[{"name":"buffer"},{"name":"primitivetype"}],"output":{"name":"slice"}}],[11,"eq","gfx::render::mesh","",127,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",127,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",131,{"inputs":[{"name":"attributeiter"}],"output":{"name":"attributeiter"}}],[11,"next","","",131,{"inputs":[{"name":"attributeiter"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"link"}],"output":{"name":"link"}}],[11,"new","","Match mesh attributes against shader inputs, produce a mesh link.\nExposed to public to allow external `Batch` implementations to use it.",132,{"inputs":[{"name":"link"},{"name":"mesh"},{"name":"programinfo"}],"output":{"name":"result"}}],[11,"from_iter","","Construct a new link from an iterator over attribute indices.",132,{"inputs":[{"name":"link"},{"name":"i"}],"output":{"name":"result"}}],[11,"to_iter","","Convert to an iterator returning attribute indices",132,{"inputs":[{"name":"link"}],"output":{"name":"attributeiter"}}],[0,"shade","gfx::render","Shaders\nShader parameter handling.",null,null],[3,"NamedCell","gfx::render::shade","A named cell containing arbitrary value",null,null],[12,"name","","Name",133,null],[12,"value","","Value",133,null],[3,"ParamDictionary","","A dictionary of parameters, meant to be shared between different programs",null,null],[12,"uniforms","","Uniform dictionary",134,null],[12,"blocks","","Block dictionary",134,null],[12,"textures","","Texture dictionary",134,null],[3,"ParamDictionaryLink","","Redirects program input to the relevant ParamDictionary cell",null,null],[4,"ParameterError","","An error type on either the parameter storage or the program side",null,null],[13,"MissingSelf","","The parameter requires 'self' to be assigned, but none was provided.",135,null],[13,"MissingUniform","","Shader requested a uniform that the parameters do not have.",135,null],[13,"BadUniform","","Shader requested a uniform that the parameters do not match.",135,null],[13,"MissingBlock","","Shader requested a block that the parameters do not have.",135,null],[13,"BadBlock","","Shader requested a block that the parameters do not match.",135,null],[13,"MissingTexture","","Shader requested a texture that the parameters do not have.",135,null],[13,"BadTexture","","Shader requested a texture that the parameters do not match.",135,null],[6,"TextureParam","","A texture parameter: consists of a texture handle with an optional sampler.\nNot all textures need a sampler (i.e. MSAA ones do not). Optimally, we'd want to\nencode this logic into the type system (TODO).",null,null],[6,"ParameterId","","Parameter index.",null,null],[8,"Parameter","","General shader parameter.",null,null],[11,"check_uniform","","Check if this parameter is good for a given uniform.",136,{"inputs":[{"name":"parameter"},{"name":"uniformvar"}],"output":{"name":"bool"}}],[11,"check_block","","Check if this parameter is good for a given block.",136,{"inputs":[{"name":"parameter"},{"name":"blockvar"}],"output":{"name":"bool"}}],[11,"check_texture","","Check if this parameter is good for a given texture.",136,{"inputs":[{"name":"parameter"},{"name":"samplervar"}],"output":{"name":"bool"}}],[10,"put","","Write into the parameter storage for rendering.",136,{"inputs":[{"name":"parameter"},{"name":"parameterid"},{"name":"paramstorage"}],"output":null}],[8,"ShaderParam","","Abstracts the shader parameter structure, generated by the `shader_param` attribute",null,null],[16,"Resources","","",137,null],[16,"Link","","A helper structure to contain variable indices inside the shader",137,null],[10,"create_link","","Create a new link to be used with a given program",137,{"inputs":[{"name":"shaderparam"},{"name":"option"},{"name":"programinfo"}],"output":{"name":"result"}}],[10,"fill_params","","Get all the contained parameter values, using a given link",137,{"inputs":[{"name":"shaderparam"},{"name":"link"},{"name":"paramstorage"}],"output":null}],[11,"fmt","","",135,{"inputs":[{"name":"parametererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",135,{"inputs":[{"name":"parametererror"},{"name":"parametererror"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"parametererror"},{"name":"parametererror"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"parametererror"}],"output":{"name":"parametererror"}}],[11,"check_block","gfx::device::handle","",52,{"inputs":[{"name":"rawbuffer"},{"name":"blockvar"}],"output":{"name":"bool"}}],[11,"put","","",52,{"inputs":[{"name":"rawbuffer"},{"name":"parameterid"},{"name":"paramstorage"}],"output":null}],[11,"check_block","","",53,{"inputs":[{"name":"buffer"},{"name":"blockvar"}],"output":{"name":"bool"}}],[11,"put","","",53,{"inputs":[{"name":"buffer"},{"name":"parameterid"},{"name":"paramstorage"}],"output":null}],[11,"check_texture","gfx::render::shade","",138,{"inputs":[{"name":"textureparam"},{"name":"samplervar"}],"output":{"name":"bool"}}],[11,"put","","",138,{"inputs":[{"name":"textureparam"},{"name":"parameterid"},{"name":"paramstorage"}],"output":null}],[11,"create_link","core::option","",139,{"inputs":[{"name":"option"},{"name":"option"},{"name":"programinfo"}],"output":{"name":"result"}}],[11,"fill_params","","",139,null],[11,"clone","gfx::render::shade","",140,{"inputs":[{"name":"paramdictionarylink"}],"output":{"name":"paramdictionarylink"}}],[11,"create_link","","",134,{"inputs":[{"name":"paramdictionary"},{"name":"option"},{"name":"programinfo"}],"output":{"name":"result"}}],[11,"fill_params","","",134,{"inputs":[{"name":"paramdictionary"},{"name":"paramdictionarylink"},{"name":"paramstorage"}],"output":null}],[0,"target","gfx::render","Render targets\nRender target specification.",null,null],[3,"Frame","gfx::render::target","A complete `Frame`, which is the result of rendering.",null,null],[12,"width","","The width of the viewport.",141,null],[12,"height","","The height of the viewport.",141,null],[12,"colors","","Each color component has its own buffer.",141,null],[12,"depth","","The depth buffer for this frame.",141,null],[12,"stencil","","The stencil buffer for this frame.",141,null],[12,"gamma","","Color space.",141,null],[4,"Plane","","A single buffer that can be bound to a render target.",null,null],[13,"Surface","","Render to a `Surface` (corresponds to a renderbuffer in GL).",142,null],[13,"Texture","","Render to a texture at a specific mipmap level\nIf `Layer` is set, it is selecting a single 2D slice of a given 3D texture",142,null],[8,"Output","","A generic rendering output, consisting of multiple planes.",null,null],[11,"get_handle","","Get an associated device handle, if any.",143,{"inputs":[{"name":"output"}],"output":{"name":"option"}}],[10,"get_size","","Get canvas dimensions.",143,null],[11,"get_colors","","Get array of color planes.",143,null],[11,"get_depth","","Get depth plane, if any.",143,{"inputs":[{"name":"output"}],"output":{"name":"option"}}],[11,"get_stencil","","Get stencil plane, if any.",143,{"inputs":[{"name":"output"}],"output":{"name":"option"}}],[11,"get_gamma","","Check if it converts gamma of the output colors.",143,{"inputs":[{"name":"output"}],"output":{"name":"gamma"}}],[11,"get_mask","","Get the output surface mask.",143,{"inputs":[{"name":"output"}],"output":{"name":"mask"}}],[11,"fmt","","",142,{"inputs":[{"name":"plane"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",142,{"inputs":[{"name":"plane"},{"name":"plane"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"plane"},{"name":"plane"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"plane"}],"output":{"name":"plane"}}],[11,"get_surface_info","","Get the surface info.",142,{"inputs":[{"name":"plane"}],"output":{"name":"surfaceinfo"}}],[11,"get_format","","Get surface/texture format.",142,{"inputs":[{"name":"plane"}],"output":{"name":"format"}}],[11,"get_size","","",142,null],[11,"get_colors","","",142,null],[11,"get_depth","","",142,{"inputs":[{"name":"plane"}],"output":{"name":"option"}}],[11,"get_stencil","","",142,{"inputs":[{"name":"plane"}],"output":{"name":"option"}}],[11,"fmt","","",141,{"inputs":[{"name":"frame"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",141,{"inputs":[{"name":"frame"},{"name":"frame"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"frame"},{"name":"frame"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"empty","","Create an empty `Frame`.",141,{"inputs":[{"name":"frame"},{"name":"size"},{"name":"size"}],"output":{"name":"frame"}}],[11,"get_size","","",141,null],[11,"get_colors","","",141,null],[11,"get_depth","","",141,{"inputs":[{"name":"frame"}],"output":{"name":"option"}}],[11,"get_stencil","","",141,{"inputs":[{"name":"frame"}],"output":{"name":"option"}}],[11,"get_gamma","","",141,{"inputs":[{"name":"frame"}],"output":{"name":"gamma"}}],[8,"RenderFactory","gfx::render","Factory extension that allows creating new renderers.",null,null],[10,"create_renderer","","Create a new renderer",144,{"inputs":[{"name":"renderfactory"}],"output":{"name":"renderer"}}],[11,"eq","","",114,{"inputs":[{"name":"bliterror"},{"name":"bliterror"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"bliterror"},{"name":"bliterror"}],"output":{"name":"bool"}}],[11,"fmt","","",114,{"inputs":[{"name":"bliterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"bliterror"}],"output":{"name":"bliterror"}}],[11,"eq","","",115,{"inputs":[{"name":"updateerror"},{"name":"updateerror"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"updateerror"},{"name":"updateerror"}],"output":{"name":"bool"}}],[11,"fmt","","",115,{"inputs":[{"name":"updateerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"updateerror"}],"output":{"name":"updateerror"}}],[11,"eq","","",116,{"inputs":[{"name":"drawerror"},{"name":"drawerror"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"drawerror"},{"name":"drawerror"}],"output":{"name":"bool"}}],[11,"fmt","","",116,{"inputs":[{"name":"drawerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"drawerror"}],"output":{"name":"drawerror"}}],[11,"reset","","Reset all commands for the command buffer re-usal.",145,{"inputs":[{"name":"renderer"}],"output":null}],[11,"as_buffer","","Get command and data buffers to be submitted to the device.",145,null],[11,"clone_empty","","Clone the renderer shared data but ignore the commands.",145,{"inputs":[{"name":"renderer"}],"output":{"name":"renderer"}}],[11,"clear","","Clear the output with given `ClearData`.",145,{"inputs":[{"name":"renderer"},{"name":"cleardata"},{"name":"mask"},{"name":"o"}],"output":null}],[11,"draw","","Draw a 'batch' with all known parameters specified, internal use only.",145,{"inputs":[{"name":"renderer"},{"name":"b"},{"name":"instanceoption"},{"name":"o"}],"output":{"name":"result"}}],[11,"blit","","Blit one frame onto another.",145,{"inputs":[{"name":"renderer"},{"name":"i"},{"name":"rect"},{"name":"o"},{"name":"rect"},{"name":"mirror"},{"name":"mask"}],"output":{"name":"result"}}],[11,"update_buffer","","Update a buffer with a slice of data.",145,null],[11,"update_block","","Update a buffer with a data struct.",145,{"inputs":[{"name":"renderer"},{"name":"buffer"},{"name":"t"}],"output":{"name":"result"}}],[11,"update_texture","","Update the contents of a texture.",145,null],[14,"gfx_vertex!","gfx","",null,null],[14,"gfx_parameters!","","",null,null]],"paths":[[3,"DrawState"],[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Primitive"],[3,"MultiSample"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Rect"],[3,"Mask"],[3,"Mirror"],[3,"ClearData"],[4,"BlendPreset"],[3,"Capabilities"],[3,"BufferInfo"],[4,"MapAccess"],[4,"PrimitiveType"],[4,"BufferRole"],[4,"BufferUsage"],[4,"BufferUpdateError"],[3,"Format"],[4,"SignFlag"],[4,"IntSubType"],[4,"IntSize"],[4,"FloatSubType"],[4,"FloatSize"],[4,"Type"],[8,"ToFormat"],[8,"ToType"],[3,"FixedPoint"],[3,"Floater"],[4,"Command"],[3,"CommandBuffer"],[4,"Access"],[4,"Gamma"],[4,"Target"],[8,"CommandBuffer"],[3,"DataPointer"],[3,"DataBuffer"],[4,"DummyResources"],[3,"DummyDevice"],[8,"Producer"],[3,"RawBuffer"],[3,"Buffer"],[3,"ArrayBuffer"],[3,"Shader"],[3,"Program"],[3,"FrameBuffer"],[3,"Surface"],[3,"Texture"],[3,"Sampler"],[3,"Fence"],[3,"Manager"],[8,"Raw"],[8,"Builder"],[3,"Readable"],[3,"Writable"],[3,"RW"],[3,"Attribute"],[3,"UniformVar"],[3,"BlockVar"],[3,"SamplerVar"],[3,"ProgramInfo"],[4,"IsArray"],[4,"IsShadow"],[4,"IsMultiSample"],[4,"IsRect"],[4,"MatrixFormat"],[4,"SamplerType"],[4,"BaseType"],[4,"ContainerType"],[4,"Stage"],[4,"UniformValue"],[4,"CompatibilityError"],[4,"CreateShaderError"],[4,"CreateProgramError"],[4,"ShaderModel"],[3,"SurfaceInfo"],[3,"TextureInfo"],[3,"ImageInfo"],[3,"SamplerInfo"],[4,"SurfaceError"],[4,"TextureError"],[4,"AaMode"],[4,"Components"],[4,"Compression"],[4,"Format"],[4,"FilterMethod"],[4,"CubeFace"],[4,"Kind"],[4,"WrapMode"],[8,"Resources"],[8,"Factory"],[8,"Device"],[8,"DeviceFence"],[3,"NotSupported"],[8,"FactoryExt"],[3,"ShaderSource"],[4,"ProgramError"],[3,"OwnedStream"],[8,"Window"],[8,"Stream"],[8,"StreamFactory"],[3,"ParamStorage"],[4,"BlitError"],[4,"UpdateError"],[4,"DrawError"],[3,"Full"],[4,"Error"],[8,"Batch"],[6,"Implicit"],[3,"Core"],[6,"Complete"],[3,"Attribute"],[3,"Mesh"],[3,"Slice"],[4,"SliceKind"],[4,"Error"],[8,"VertexFormat"],[8,"ToSlice"],[8,"ToIndexSlice"],[3,"AttributeIter"],[3,"Link"],[3,"NamedCell"],[3,"ParamDictionary"],[4,"ParameterError"],[8,"Parameter"],[8,"ShaderParam"],[6,"TextureParam"],[4,"Option"],[3,"ParamDictionaryLink"],[3,"Frame"],[4,"Plane"],[8,"Output"],[8,"RenderFactory"],[3,"Renderer"]]};
searchIndex['gl'] = {"items":[[0,"","gl","# Usage",null,null],[3,"FnPtr","","",null,null],[5,"ActiveShaderProgram","","",null,null],[5,"ActiveTexture","","Fallbacks: ActiveTextureARB",null,null],[5,"AttachShader","","Fallbacks: AttachObjectARB",null,null],[5,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",null,null],[5,"BeginQuery","","Fallbacks: BeginQueryARB",null,null],[5,"BeginQueryIndexed","","",null,null],[5,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV",null,null],[5,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",null,null],[5,"BindBuffer","","Fallbacks: BindBufferARB",null,null],[5,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",null,null],[5,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",null,null],[5,"BindBuffersBase","","",null,null],[5,"BindBuffersRange","","",null,null],[5,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",null,null],[5,"BindFragDataLocationIndexed","","",null,null],[5,"BindFramebuffer","","",null,null],[5,"BindImageTexture","","",null,null],[5,"BindImageTextures","","",null,null],[5,"BindProgramPipeline","","",null,null],[5,"BindRenderbuffer","","",null,null],[5,"BindSampler","","",null,null],[5,"BindSamplers","","",null,null],[5,"BindTexture","","Fallbacks: BindTextureEXT",null,null],[5,"BindTextureUnit","","",null,null],[5,"BindTextures","","",null,null],[5,"BindTransformFeedback","","",null,null],[5,"BindVertexArray","","Fallbacks: BindVertexArrayOES",null,null],[5,"BindVertexBuffer","","",null,null],[5,"BindVertexBuffers","","",null,null],[5,"BlendColor","","Fallbacks: BlendColorEXT",null,null],[5,"BlendEquation","","Fallbacks: BlendEquationEXT",null,null],[5,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",null,null],[5,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, BlendEquationSeparateiARB, BlendEquationSeparateiEXT",null,null],[5,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, BlendEquationiEXT",null,null],[5,"BlendFunc","","",null,null],[5,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",null,null],[5,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, BlendFuncSeparateiARB, BlendFuncSeparateiEXT",null,null],[5,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, BlendFunciEXT",null,null],[5,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",null,null],[5,"BlitNamedFramebuffer","","",null,null],[5,"BufferData","","Fallbacks: BufferDataARB",null,null],[5,"BufferStorage","","",null,null],[5,"BufferSubData","","Fallbacks: BufferSubDataARB",null,null],[5,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",null,{"inputs":[{"name":"glenum"}],"output":{"name":"glenum"}}],[5,"CheckNamedFramebufferStatus","","",null,{"inputs":[{"name":"gluint"},{"name":"glenum"}],"output":{"name":"glenum"}}],[5,"ClampColor","","Fallbacks: ClampColorARB",null,null],[5,"Clear","","",null,null],[5,"ClearBufferData","","",null,null],[5,"ClearBufferSubData","","",null,null],[5,"ClearBufferfi","","",null,null],[5,"ClearBufferfv","","",null,null],[5,"ClearBufferiv","","",null,null],[5,"ClearBufferuiv","","",null,null],[5,"ClearColor","","",null,null],[5,"ClearDepth","","",null,null],[5,"ClearDepthf","","Fallbacks: ClearDepthfOES",null,null],[5,"ClearNamedBufferData","","",null,null],[5,"ClearNamedBufferSubData","","",null,null],[5,"ClearNamedFramebufferfi","","",null,null],[5,"ClearNamedFramebufferfv","","",null,null],[5,"ClearNamedFramebufferiv","","",null,null],[5,"ClearNamedFramebufferuiv","","",null,null],[5,"ClearStencil","","",null,null],[5,"ClearTexImage","","",null,null],[5,"ClearTexSubImage","","",null,null],[5,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",null,{"inputs":[{"name":"glsync"},{"name":"glbitfield"},{"name":"gluint64"}],"output":{"name":"glenum"}}],[5,"ClipControl","","",null,null],[5,"ColorMask","","",null,null],[5,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT",null,null],[5,"ColorP3ui","","",null,null],[5,"ColorP3uiv","","",null,null],[5,"ColorP4ui","","",null,null],[5,"ColorP4uiv","","",null,null],[5,"CompileShader","","Fallbacks: CompileShaderARB",null,null],[5,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",null,null],[5,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",null,null],[5,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB, CompressedTexImage3DOES",null,null],[5,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",null,null],[5,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",null,null],[5,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB, CompressedTexSubImage3DOES",null,null],[5,"CompressedTextureSubImage1D","","",null,null],[5,"CompressedTextureSubImage2D","","",null,null],[5,"CompressedTextureSubImage3D","","",null,null],[5,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",null,null],[5,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT",null,null],[5,"CopyNamedBufferSubData","","",null,null],[5,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",null,null],[5,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",null,null],[5,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",null,null],[5,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",null,null],[5,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT, CopyTexSubImage3DOES",null,null],[5,"CopyTextureSubImage1D","","",null,null],[5,"CopyTextureSubImage2D","","",null,null],[5,"CopyTextureSubImage3D","","",null,null],[5,"CreateBuffers","","",null,null],[5,"CreateFramebuffers","","",null,null],[5,"CreateProgram","","Fallbacks: CreateProgramObjectARB",null,{"inputs":[],"output":{"name":"gluint"}}],[5,"CreateProgramPipelines","","",null,null],[5,"CreateQueries","","",null,null],[5,"CreateRenderbuffers","","",null,null],[5,"CreateSamplers","","",null,null],[5,"CreateShader","","Fallbacks: CreateShaderObjectARB",null,{"inputs":[{"name":"glenum"}],"output":{"name":"gluint"}}],[5,"CreateShaderProgramv","","",null,null],[5,"CreateTextures","","",null,null],[5,"CreateTransformFeedbacks","","",null,null],[5,"CreateVertexArrays","","",null,null],[5,"CullFace","","",null,null],[5,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",null,null],[5,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",null,null],[5,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",null,null],[5,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",null,null],[5,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",null,null],[5,"DeleteProgram","","",null,null],[5,"DeleteProgramPipelines","","",null,null],[5,"DeleteQueries","","Fallbacks: DeleteQueriesARB",null,null],[5,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",null,null],[5,"DeleteSamplers","","",null,null],[5,"DeleteShader","","",null,null],[5,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",null,null],[5,"DeleteTextures","","",null,null],[5,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",null,null],[5,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",null,null],[5,"DepthFunc","","",null,null],[5,"DepthMask","","",null,null],[5,"DepthRange","","",null,null],[5,"DepthRangeArrayv","","",null,null],[5,"DepthRangeIndexed","","",null,null],[5,"DepthRangef","","Fallbacks: DepthRangefOES",null,null],[5,"DetachShader","","Fallbacks: DetachObjectARB",null,null],[5,"Disable","","",null,null],[5,"DisableVertexArrayAttrib","","",null,null],[5,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",null,null],[5,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV",null,null],[5,"DispatchCompute","","",null,null],[5,"DispatchComputeIndirect","","",null,null],[5,"DrawArrays","","Fallbacks: DrawArraysEXT",null,null],[5,"DrawArraysIndirect","","",null,null],[5,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV",null,null],[5,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",null,null],[5,"DrawBuffer","","",null,null],[5,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",null,null],[5,"DrawElements","","",null,null],[5,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT",null,null],[5,"DrawElementsIndirect","","",null,null],[5,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV",null,null],[5,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",null,null],[5,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT",null,null],[5,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",null,null],[5,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",null,null],[5,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT",null,null],[5,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackNV",null,null],[5,"DrawTransformFeedbackInstanced","","",null,null],[5,"DrawTransformFeedbackStream","","",null,null],[5,"DrawTransformFeedbackStreamInstanced","","",null,null],[5,"Enable","","",null,null],[5,"EnableVertexArrayAttrib","","",null,null],[5,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",null,null],[5,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiNV, EnableiEXT",null,null],[5,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",null,null],[5,"EndQuery","","Fallbacks: EndQueryARB",null,null],[5,"EndQueryIndexed","","",null,null],[5,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",null,null],[5,"FenceSync","","Fallbacks: FenceSyncAPPLE",null,{"inputs":[{"name":"glenum"},{"name":"glbitfield"}],"output":{"name":"glsync"}}],[5,"Finish","","",null,null],[5,"Flush","","",null,null],[5,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT",null,null],[5,"FlushMappedNamedBufferRange","","",null,null],[5,"FramebufferParameteri","","",null,null],[5,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",null,null],[5,"FramebufferTexture","","Fallbacks: FramebufferTextureARB",null,null],[5,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",null,null],[5,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",null,null],[5,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT, FramebufferTexture3DOES",null,null],[5,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT",null,null],[5,"FrontFace","","",null,null],[5,"GenBuffers","","Fallbacks: GenBuffersARB",null,null],[5,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",null,null],[5,"GenProgramPipelines","","",null,null],[5,"GenQueries","","Fallbacks: GenQueriesARB",null,null],[5,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",null,null],[5,"GenSamplers","","",null,null],[5,"GenTextures","","",null,null],[5,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",null,null],[5,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",null,null],[5,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",null,null],[5,"GenerateTextureMipmap","","",null,null],[5,"GetActiveAtomicCounterBufferiv","","",null,null],[5,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",null,null],[5,"GetActiveSubroutineName","","",null,null],[5,"GetActiveSubroutineUniformName","","",null,null],[5,"GetActiveSubroutineUniformiv","","",null,null],[5,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",null,null],[5,"GetActiveUniformBlockName","","",null,null],[5,"GetActiveUniformBlockiv","","",null,null],[5,"GetActiveUniformName","","",null,null],[5,"GetActiveUniformsiv","","",null,null],[5,"GetAttachedShaders","","",null,null],[5,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",null,null],[5,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",null,null],[5,"GetBooleanv","","",null,null],[5,"GetBufferParameteri64v","","",null,null],[5,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",null,null],[5,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",null,null],[5,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",null,null],[5,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",null,null],[5,"GetCompressedTextureImage","","",null,null],[5,"GetCompressedTextureSubImage","","",null,null],[5,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",null,null],[5,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",null,null],[5,"GetDoublev","","",null,null],[5,"GetError","","",null,{"inputs":[],"output":{"name":"glenum"}}],[5,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vNV, GetFloati_vEXT",null,null],[5,"GetFloatv","","",null,null],[5,"GetFragDataIndex","","",null,null],[5,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",null,null],[5,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",null,null],[5,"GetFramebufferParameteriv","","",null,null],[5,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusKHR",null,{"inputs":[],"output":{"name":"glenum"}}],[5,"GetInteger64i_v","","",null,null],[5,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",null,null],[5,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",null,null],[5,"GetIntegerv","","",null,null],[5,"GetInternalformati64v","","",null,null],[5,"GetInternalformativ","","",null,null],[5,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",null,null],[5,"GetNamedBufferParameteri64v","","",null,null],[5,"GetNamedBufferParameteriv","","",null,null],[5,"GetNamedBufferPointerv","","",null,null],[5,"GetNamedBufferSubData","","",null,null],[5,"GetNamedFramebufferAttachmentParameteriv","","",null,null],[5,"GetNamedFramebufferParameteriv","","",null,null],[5,"GetNamedRenderbufferParameteriv","","",null,null],[5,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",null,null],[5,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",null,null],[5,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",null,null],[5,"GetProgramInfoLog","","",null,null],[5,"GetProgramInterfaceiv","","",null,null],[5,"GetProgramPipelineInfoLog","","",null,null],[5,"GetProgramPipelineiv","","",null,null],[5,"GetProgramResourceIndex","","",null,null],[5,"GetProgramResourceLocation","","",null,null],[5,"GetProgramResourceLocationIndex","","",null,null],[5,"GetProgramResourceName","","",null,null],[5,"GetProgramResourceiv","","",null,null],[5,"GetProgramStageiv","","",null,null],[5,"GetProgramiv","","",null,null],[5,"GetQueryBufferObjecti64v","","",null,null],[5,"GetQueryBufferObjectiv","","",null,null],[5,"GetQueryBufferObjectui64v","","",null,null],[5,"GetQueryBufferObjectuiv","","",null,null],[5,"GetQueryIndexediv","","",null,null],[5,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",null,null],[5,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",null,null],[5,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",null,null],[5,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",null,null],[5,"GetQueryiv","","Fallbacks: GetQueryivARB",null,null],[5,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",null,null],[5,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT",null,null],[5,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT",null,null],[5,"GetSamplerParameterfv","","",null,null],[5,"GetSamplerParameteriv","","",null,null],[5,"GetShaderInfoLog","","",null,null],[5,"GetShaderPrecisionFormat","","",null,null],[5,"GetShaderSource","","Fallbacks: GetShaderSourceARB",null,null],[5,"GetShaderiv","","",null,null],[5,"GetString","","",null,null],[5,"GetStringi","","",null,null],[5,"GetSubroutineIndex","","",null,null],[5,"GetSubroutineUniformLocation","","",null,null],[5,"GetSynciv","","Fallbacks: GetSyncivAPPLE",null,null],[5,"GetTexImage","","",null,null],[5,"GetTexLevelParameterfv","","",null,null],[5,"GetTexLevelParameteriv","","",null,null],[5,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT",null,null],[5,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT",null,null],[5,"GetTexParameterfv","","",null,null],[5,"GetTexParameteriv","","",null,null],[5,"GetTextureImage","","",null,null],[5,"GetTextureLevelParameterfv","","",null,null],[5,"GetTextureLevelParameteriv","","",null,null],[5,"GetTextureParameterIiv","","",null,null],[5,"GetTextureParameterIuiv","","",null,null],[5,"GetTextureParameterfv","","",null,null],[5,"GetTextureParameteriv","","",null,null],[5,"GetTextureSubImage","","",null,null],[5,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",null,null],[5,"GetTransformFeedbacki64_v","","",null,null],[5,"GetTransformFeedbacki_v","","",null,null],[5,"GetTransformFeedbackiv","","",null,null],[5,"GetUniformBlockIndex","","",null,null],[5,"GetUniformIndices","","",null,null],[5,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",null,null],[5,"GetUniformSubroutineuiv","","",null,null],[5,"GetUniformdv","","",null,null],[5,"GetUniformfv","","Fallbacks: GetUniformfvARB",null,null],[5,"GetUniformiv","","Fallbacks: GetUniformivARB",null,null],[5,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",null,null],[5,"GetVertexArrayIndexed64iv","","",null,null],[5,"GetVertexArrayIndexediv","","",null,null],[5,"GetVertexArrayiv","","",null,null],[5,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",null,null],[5,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",null,null],[5,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",null,null],[5,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV",null,null],[5,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",null,null],[5,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",null,null],[5,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",null,null],[5,"GetnColorTable","","",null,null],[5,"GetnCompressedTexImage","","",null,null],[5,"GetnConvolutionFilter","","",null,null],[5,"GetnHistogram","","",null,null],[5,"GetnMapdv","","",null,null],[5,"GetnMapfv","","",null,null],[5,"GetnMapiv","","",null,null],[5,"GetnMinmax","","",null,null],[5,"GetnPixelMapfv","","",null,null],[5,"GetnPixelMapuiv","","",null,null],[5,"GetnPixelMapusv","","",null,null],[5,"GetnPolygonStipple","","",null,null],[5,"GetnSeparableFilter","","",null,null],[5,"GetnTexImage","","",null,null],[5,"GetnUniformdv","","",null,null],[5,"GetnUniformfv","","Fallbacks: GetnUniformfvKHR",null,null],[5,"GetnUniformiv","","Fallbacks: GetnUniformivKHR",null,null],[5,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",null,null],[5,"Hint","","",null,null],[5,"InvalidateBufferData","","",null,null],[5,"InvalidateBufferSubData","","",null,null],[5,"InvalidateFramebuffer","","",null,null],[5,"InvalidateNamedFramebufferData","","",null,null],[5,"InvalidateNamedFramebufferSubData","","",null,null],[5,"InvalidateSubFramebuffer","","",null,null],[5,"InvalidateTexImage","","",null,null],[5,"InvalidateTexSubImage","","",null,null],[5,"IsBuffer","","Fallbacks: IsBufferARB",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsEnabled","","",null,{"inputs":[{"name":"glenum"}],"output":{"name":"glboolean"}}],[5,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV",null,{"inputs":[{"name":"glenum"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsProgram","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsProgramPipeline","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsQuery","","Fallbacks: IsQueryARB",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsSampler","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsShader","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsSync","","Fallbacks: IsSyncAPPLE",null,{"inputs":[{"name":"glsync"}],"output":{"name":"glboolean"}}],[5,"IsTexture","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"LineWidth","","",null,null],[5,"LinkProgram","","Fallbacks: LinkProgramARB",null,null],[5,"LogicOp","","",null,null],[5,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",null,null],[5,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",null,null],[5,"MapNamedBuffer","","",null,null],[5,"MapNamedBufferRange","","",null,null],[5,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",null,null],[5,"MemoryBarrierByRegion","","",null,null],[5,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",null,null],[5,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",null,null],[5,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, MultiDrawArraysIndirectEXT",null,null],[5,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",null,null],[5,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT",null,null],[5,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectEXT, MultiDrawElementsIndirectAMD",null,null],[5,"MultiTexCoordP1ui","","",null,null],[5,"MultiTexCoordP1uiv","","",null,null],[5,"MultiTexCoordP2ui","","",null,null],[5,"MultiTexCoordP2uiv","","",null,null],[5,"MultiTexCoordP3ui","","",null,null],[5,"MultiTexCoordP3uiv","","",null,null],[5,"MultiTexCoordP4ui","","",null,null],[5,"MultiTexCoordP4uiv","","",null,null],[5,"NamedBufferData","","",null,null],[5,"NamedBufferStorage","","",null,null],[5,"NamedBufferSubData","","",null,null],[5,"NamedFramebufferDrawBuffer","","",null,null],[5,"NamedFramebufferDrawBuffers","","",null,null],[5,"NamedFramebufferParameteri","","",null,null],[5,"NamedFramebufferReadBuffer","","",null,null],[5,"NamedFramebufferRenderbuffer","","",null,null],[5,"NamedFramebufferTexture","","",null,null],[5,"NamedFramebufferTextureLayer","","",null,null],[5,"NamedRenderbufferStorage","","",null,null],[5,"NamedRenderbufferStorageMultisample","","",null,null],[5,"NormalP3ui","","",null,null],[5,"NormalP3uiv","","",null,null],[5,"ObjectLabel","","Fallbacks: ObjectLabelKHR",null,null],[5,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",null,null],[5,"PatchParameterfv","","",null,null],[5,"PatchParameteri","","Fallbacks: PatchParameteriEXT",null,null],[5,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",null,null],[5,"PixelStoref","","",null,null],[5,"PixelStorei","","",null,null],[5,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS",null,null],[5,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS",null,null],[5,"PointParameteri","","Fallbacks: PointParameteriNV",null,null],[5,"PointParameteriv","","Fallbacks: PointParameterivNV",null,null],[5,"PointSize","","",null,null],[5,"PolygonMode","","",null,null],[5,"PolygonOffset","","",null,null],[5,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",null,null],[5,"PrimitiveRestartIndex","","",null,null],[5,"ProgramBinary","","Fallbacks: ProgramBinaryOES",null,null],[5,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",null,null],[5,"ProgramUniform1d","","",null,null],[5,"ProgramUniform1dv","","",null,null],[5,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",null,null],[5,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",null,null],[5,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",null,null],[5,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",null,null],[5,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",null,null],[5,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",null,null],[5,"ProgramUniform2d","","",null,null],[5,"ProgramUniform2dv","","",null,null],[5,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",null,null],[5,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",null,null],[5,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",null,null],[5,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",null,null],[5,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",null,null],[5,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",null,null],[5,"ProgramUniform3d","","",null,null],[5,"ProgramUniform3dv","","",null,null],[5,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",null,null],[5,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",null,null],[5,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",null,null],[5,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",null,null],[5,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",null,null],[5,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",null,null],[5,"ProgramUniform4d","","",null,null],[5,"ProgramUniform4dv","","",null,null],[5,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",null,null],[5,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",null,null],[5,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",null,null],[5,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",null,null],[5,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",null,null],[5,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",null,null],[5,"ProgramUniformMatrix2dv","","",null,null],[5,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",null,null],[5,"ProgramUniformMatrix2x3dv","","",null,null],[5,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",null,null],[5,"ProgramUniformMatrix2x4dv","","",null,null],[5,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",null,null],[5,"ProgramUniformMatrix3dv","","",null,null],[5,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",null,null],[5,"ProgramUniformMatrix3x2dv","","",null,null],[5,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",null,null],[5,"ProgramUniformMatrix3x4dv","","",null,null],[5,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",null,null],[5,"ProgramUniformMatrix4dv","","",null,null],[5,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",null,null],[5,"ProgramUniformMatrix4x2dv","","",null,null],[5,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",null,null],[5,"ProgramUniformMatrix4x3dv","","",null,null],[5,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",null,null],[5,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",null,null],[5,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",null,null],[5,"QueryCounter","","Fallbacks: QueryCounterEXT",null,null],[5,"ReadBuffer","","",null,null],[5,"ReadPixels","","",null,null],[5,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",null,null],[5,"ReleaseShaderCompiler","","",null,null],[5,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",null,null],[5,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV",null,null],[5,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",null,null],[5,"SampleCoverage","","Fallbacks: SampleCoverageARB",null,null],[5,"SampleMaski","","",null,null],[5,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT",null,null],[5,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT",null,null],[5,"SamplerParameterf","","",null,null],[5,"SamplerParameterfv","","",null,null],[5,"SamplerParameteri","","",null,null],[5,"SamplerParameteriv","","",null,null],[5,"Scissor","","",null,null],[5,"ScissorArrayv","","Fallbacks: ScissorArrayvNV",null,null],[5,"ScissorIndexed","","Fallbacks: ScissorIndexedNV",null,null],[5,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV",null,null],[5,"SecondaryColorP3ui","","",null,null],[5,"SecondaryColorP3uiv","","",null,null],[5,"ShaderBinary","","",null,null],[5,"ShaderSource","","Fallbacks: ShaderSourceARB",null,null],[5,"ShaderStorageBlockBinding","","",null,null],[5,"StencilFunc","","",null,null],[5,"StencilFuncSeparate","","",null,null],[5,"StencilMask","","",null,null],[5,"StencilMaskSeparate","","",null,null],[5,"StencilOp","","",null,null],[5,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",null,null],[5,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT",null,null],[5,"TexBufferRange","","Fallbacks: TexBufferRangeEXT",null,null],[5,"TexCoordP1ui","","",null,null],[5,"TexCoordP1uiv","","",null,null],[5,"TexCoordP2ui","","",null,null],[5,"TexCoordP2uiv","","",null,null],[5,"TexCoordP3ui","","",null,null],[5,"TexCoordP3uiv","","",null,null],[5,"TexCoordP4ui","","",null,null],[5,"TexCoordP4uiv","","",null,null],[5,"TexImage1D","","",null,null],[5,"TexImage2D","","",null,null],[5,"TexImage2DMultisample","","",null,null],[5,"TexImage3D","","Fallbacks: TexImage3DEXT, TexImage3DOES",null,null],[5,"TexImage3DMultisample","","",null,null],[5,"TexParameterIiv","","Fallbacks: TexParameterIivEXT",null,null],[5,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT",null,null],[5,"TexParameterf","","",null,null],[5,"TexParameterfv","","",null,null],[5,"TexParameteri","","",null,null],[5,"TexParameteriv","","",null,null],[5,"TexStorage1D","","Fallbacks: TexStorage1DEXT",null,null],[5,"TexStorage2D","","Fallbacks: TexStorage2DEXT",null,null],[5,"TexStorage2DMultisample","","",null,null],[5,"TexStorage3D","","Fallbacks: TexStorage3DEXT",null,null],[5,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",null,null],[5,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",null,null],[5,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",null,null],[5,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT, TexSubImage3DOES",null,null],[5,"TextureBarrier","","",null,null],[5,"TextureBuffer","","",null,null],[5,"TextureBufferRange","","",null,null],[5,"TextureParameterIiv","","",null,null],[5,"TextureParameterIuiv","","",null,null],[5,"TextureParameterf","","",null,null],[5,"TextureParameterfv","","",null,null],[5,"TextureParameteri","","",null,null],[5,"TextureParameteriv","","",null,null],[5,"TextureStorage1D","","",null,null],[5,"TextureStorage2D","","",null,null],[5,"TextureStorage2DMultisample","","",null,null],[5,"TextureStorage3D","","",null,null],[5,"TextureStorage3DMultisample","","",null,null],[5,"TextureSubImage1D","","",null,null],[5,"TextureSubImage2D","","",null,null],[5,"TextureSubImage3D","","",null,null],[5,"TextureView","","Fallbacks: TextureViewEXT",null,null],[5,"TransformFeedbackBufferBase","","",null,null],[5,"TransformFeedbackBufferRange","","",null,null],[5,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",null,null],[5,"Uniform1d","","",null,null],[5,"Uniform1dv","","",null,null],[5,"Uniform1f","","Fallbacks: Uniform1fARB",null,null],[5,"Uniform1fv","","Fallbacks: Uniform1fvARB",null,null],[5,"Uniform1i","","Fallbacks: Uniform1iARB",null,null],[5,"Uniform1iv","","Fallbacks: Uniform1ivARB",null,null],[5,"Uniform1ui","","Fallbacks: Uniform1uiEXT",null,null],[5,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",null,null],[5,"Uniform2d","","",null,null],[5,"Uniform2dv","","",null,null],[5,"Uniform2f","","Fallbacks: Uniform2fARB",null,null],[5,"Uniform2fv","","Fallbacks: Uniform2fvARB",null,null],[5,"Uniform2i","","Fallbacks: Uniform2iARB",null,null],[5,"Uniform2iv","","Fallbacks: Uniform2ivARB",null,null],[5,"Uniform2ui","","Fallbacks: Uniform2uiEXT",null,null],[5,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",null,null],[5,"Uniform3d","","",null,null],[5,"Uniform3dv","","",null,null],[5,"Uniform3f","","Fallbacks: Uniform3fARB",null,null],[5,"Uniform3fv","","Fallbacks: Uniform3fvARB",null,null],[5,"Uniform3i","","Fallbacks: Uniform3iARB",null,null],[5,"Uniform3iv","","Fallbacks: Uniform3ivARB",null,null],[5,"Uniform3ui","","Fallbacks: Uniform3uiEXT",null,null],[5,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",null,null],[5,"Uniform4d","","",null,null],[5,"Uniform4dv","","",null,null],[5,"Uniform4f","","Fallbacks: Uniform4fARB",null,null],[5,"Uniform4fv","","Fallbacks: Uniform4fvARB",null,null],[5,"Uniform4i","","Fallbacks: Uniform4iARB",null,null],[5,"Uniform4iv","","Fallbacks: Uniform4ivARB",null,null],[5,"Uniform4ui","","Fallbacks: Uniform4uiEXT",null,null],[5,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",null,null],[5,"UniformBlockBinding","","",null,null],[5,"UniformMatrix2dv","","",null,null],[5,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",null,null],[5,"UniformMatrix2x3dv","","",null,null],[5,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",null,null],[5,"UniformMatrix2x4dv","","",null,null],[5,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",null,null],[5,"UniformMatrix3dv","","",null,null],[5,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",null,null],[5,"UniformMatrix3x2dv","","",null,null],[5,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",null,null],[5,"UniformMatrix3x4dv","","",null,null],[5,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",null,null],[5,"UniformMatrix4dv","","",null,null],[5,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",null,null],[5,"UniformMatrix4x2dv","","",null,null],[5,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",null,null],[5,"UniformMatrix4x3dv","","",null,null],[5,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",null,null],[5,"UniformSubroutinesuiv","","",null,null],[5,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",null,{"inputs":[{"name":"glenum"}],"output":{"name":"glboolean"}}],[5,"UnmapNamedBuffer","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"UseProgram","","Fallbacks: UseProgramObjectARB",null,null],[5,"UseProgramStages","","",null,null],[5,"ValidateProgram","","Fallbacks: ValidateProgramARB",null,null],[5,"ValidateProgramPipeline","","",null,null],[5,"VertexArrayAttribBinding","","",null,null],[5,"VertexArrayAttribFormat","","",null,null],[5,"VertexArrayAttribIFormat","","",null,null],[5,"VertexArrayAttribLFormat","","",null,null],[5,"VertexArrayBindingDivisor","","",null,null],[5,"VertexArrayElementBuffer","","",null,null],[5,"VertexArrayVertexBuffer","","",null,null],[5,"VertexArrayVertexBuffers","","",null,null],[5,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",null,null],[5,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",null,null],[5,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",null,null],[5,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",null,null],[5,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",null,null],[5,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",null,null],[5,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",null,null],[5,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",null,null],[5,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",null,null],[5,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",null,null],[5,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",null,null],[5,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",null,null],[5,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",null,null],[5,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",null,null],[5,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",null,null],[5,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",null,null],[5,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",null,null],[5,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",null,null],[5,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",null,null],[5,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",null,null],[5,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",null,null],[5,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",null,null],[5,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",null,null],[5,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",null,null],[5,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",null,null],[5,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",null,null],[5,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",null,null],[5,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",null,null],[5,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",null,null],[5,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",null,null],[5,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",null,null],[5,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",null,null],[5,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",null,null],[5,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",null,null],[5,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",null,null],[5,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",null,null],[5,"VertexAttribBinding","","",null,null],[5,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV",null,null],[5,"VertexAttribFormat","","",null,null],[5,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",null,null],[5,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",null,null],[5,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",null,null],[5,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",null,null],[5,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",null,null],[5,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",null,null],[5,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",null,null],[5,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",null,null],[5,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",null,null],[5,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",null,null],[5,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",null,null],[5,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",null,null],[5,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",null,null],[5,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",null,null],[5,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",null,null],[5,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",null,null],[5,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",null,null],[5,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",null,null],[5,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",null,null],[5,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",null,null],[5,"VertexAttribIFormat","","",null,null],[5,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",null,null],[5,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",null,null],[5,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",null,null],[5,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",null,null],[5,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",null,null],[5,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",null,null],[5,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",null,null],[5,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",null,null],[5,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",null,null],[5,"VertexAttribLFormat","","",null,null],[5,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",null,null],[5,"VertexAttribP1ui","","",null,null],[5,"VertexAttribP1uiv","","",null,null],[5,"VertexAttribP2ui","","",null,null],[5,"VertexAttribP2uiv","","",null,null],[5,"VertexAttribP3ui","","",null,null],[5,"VertexAttribP3uiv","","",null,null],[5,"VertexAttribP4ui","","",null,null],[5,"VertexAttribP4uiv","","",null,null],[5,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",null,null],[5,"VertexBindingDivisor","","",null,null],[5,"VertexP2ui","","",null,null],[5,"VertexP2uiv","","",null,null],[5,"VertexP3ui","","",null,null],[5,"VertexP3uiv","","",null,null],[5,"VertexP4ui","","",null,null],[5,"VertexP4uiv","","",null,null],[5,"Viewport","","",null,null],[5,"ViewportArrayv","","Fallbacks: ViewportArrayvNV",null,null],[5,"ViewportIndexedf","","Fallbacks: ViewportIndexedfNV",null,null],[5,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvNV",null,null],[5,"WaitSync","","Fallbacks: WaitSyncAPPLE",null,null],[5,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.\n~~~ignore\ngl::load_with(|s| glfw.get_proc_address(s));\n~~~",null,{"inputs":[{"name":"f"}],"output":null}],[5,"load","","Load each OpenGL symbol using a custom load function.",null,{"inputs":[{"name":"t"}],"output":null}],[0,"types","","",null,null],[3,"__GLsync","gl::types","",null,null],[3,"_cl_context","","",null,null],[3,"_cl_event","","",null,null],[6,"GLenum","","",null,null],[6,"GLboolean","","",null,null],[6,"GLbitfield","","",null,null],[6,"GLvoid","","",null,null],[6,"GLbyte","","",null,null],[6,"GLshort","","",null,null],[6,"GLint","","",null,null],[6,"GLclampx","","",null,null],[6,"GLubyte","","",null,null],[6,"GLushort","","",null,null],[6,"GLuint","","",null,null],[6,"GLsizei","","",null,null],[6,"GLfloat","","",null,null],[6,"GLclampf","","",null,null],[6,"GLdouble","","",null,null],[6,"GLclampd","","",null,null],[6,"GLeglImageOES","","",null,null],[6,"GLchar","","",null,null],[6,"GLcharARB","","",null,null],[6,"GLhandleARB","","",null,null],[6,"GLhalfARB","","",null,null],[6,"GLhalf","","",null,null],[6,"GLfixed","","",null,null],[6,"GLintptr","","",null,null],[6,"GLsizeiptr","","",null,null],[6,"GLint64","","",null,null],[6,"GLuint64","","",null,null],[6,"GLintptrARB","","",null,null],[6,"GLsizeiptrARB","","",null,null],[6,"GLint64EXT","","",null,null],[6,"GLuint64EXT","","",null,null],[6,"GLsync","","",null,null],[6,"GLDEBUGPROC","","",null,null],[6,"GLDEBUGPROCARB","","",null,null],[6,"GLDEBUGPROCKHR","","",null,null],[6,"GLDEBUGPROCAMD","","",null,null],[6,"GLhalfNV","","",null,null],[6,"GLvdpauSurfaceNV","","",null,null],[0,"ActiveShaderProgram","gl","",null,null],[5,"is_loaded","gl::ActiveShaderProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ActiveTexture","gl","",null,null],[5,"is_loaded","gl::ActiveTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"AttachShader","gl","",null,null],[5,"is_loaded","gl::AttachShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BeginConditionalRender","gl","",null,null],[5,"is_loaded","gl::BeginConditionalRender","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BeginQuery","gl","",null,null],[5,"is_loaded","gl::BeginQuery","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BeginQueryIndexed","gl","",null,null],[5,"is_loaded","gl::BeginQueryIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BeginTransformFeedback","gl","",null,null],[5,"is_loaded","gl::BeginTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindAttribLocation","gl","",null,null],[5,"is_loaded","gl::BindAttribLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBuffer","gl","",null,null],[5,"is_loaded","gl::BindBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBufferBase","gl","",null,null],[5,"is_loaded","gl::BindBufferBase","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBufferRange","gl","",null,null],[5,"is_loaded","gl::BindBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBuffersBase","gl","",null,null],[5,"is_loaded","gl::BindBuffersBase","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBuffersRange","gl","",null,null],[5,"is_loaded","gl::BindBuffersRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindFragDataLocation","gl","",null,null],[5,"is_loaded","gl::BindFragDataLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindFragDataLocationIndexed","gl","",null,null],[5,"is_loaded","gl::BindFragDataLocationIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindFramebuffer","gl","",null,null],[5,"is_loaded","gl::BindFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindImageTexture","gl","",null,null],[5,"is_loaded","gl::BindImageTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindImageTextures","gl","",null,null],[5,"is_loaded","gl::BindImageTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindProgramPipeline","gl","",null,null],[5,"is_loaded","gl::BindProgramPipeline","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindRenderbuffer","gl","",null,null],[5,"is_loaded","gl::BindRenderbuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindSampler","gl","",null,null],[5,"is_loaded","gl::BindSampler","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindSamplers","gl","",null,null],[5,"is_loaded","gl::BindSamplers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindTexture","gl","",null,null],[5,"is_loaded","gl::BindTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindTextureUnit","gl","",null,null],[5,"is_loaded","gl::BindTextureUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindTextures","gl","",null,null],[5,"is_loaded","gl::BindTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindTransformFeedback","gl","",null,null],[5,"is_loaded","gl::BindTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindVertexArray","gl","",null,null],[5,"is_loaded","gl::BindVertexArray","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindVertexBuffer","gl","",null,null],[5,"is_loaded","gl::BindVertexBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindVertexBuffers","gl","",null,null],[5,"is_loaded","gl::BindVertexBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendColor","gl","",null,null],[5,"is_loaded","gl::BlendColor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendEquation","gl","",null,null],[5,"is_loaded","gl::BlendEquation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendEquationSeparate","gl","",null,null],[5,"is_loaded","gl::BlendEquationSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendEquationSeparatei","gl","",null,null],[5,"is_loaded","gl::BlendEquationSeparatei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendEquationi","gl","",null,null],[5,"is_loaded","gl::BlendEquationi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendFunc","gl","",null,null],[5,"is_loaded","gl::BlendFunc","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendFuncSeparate","gl","",null,null],[5,"is_loaded","gl::BlendFuncSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendFuncSeparatei","gl","",null,null],[5,"is_loaded","gl::BlendFuncSeparatei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendFunci","gl","",null,null],[5,"is_loaded","gl::BlendFunci","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlitFramebuffer","gl","",null,null],[5,"is_loaded","gl::BlitFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlitNamedFramebuffer","gl","",null,null],[5,"is_loaded","gl::BlitNamedFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BufferData","gl","",null,null],[5,"is_loaded","gl::BufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BufferStorage","gl","",null,null],[5,"is_loaded","gl::BufferStorage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BufferSubData","gl","",null,null],[5,"is_loaded","gl::BufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CheckFramebufferStatus","gl","",null,null],[5,"is_loaded","gl::CheckFramebufferStatus","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CheckNamedFramebufferStatus","gl","",null,null],[5,"is_loaded","gl::CheckNamedFramebufferStatus","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClampColor","gl","",null,null],[5,"is_loaded","gl::ClampColor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Clear","gl","",null,null],[5,"is_loaded","gl::Clear","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferData","gl","",null,null],[5,"is_loaded","gl::ClearBufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferSubData","gl","",null,null],[5,"is_loaded","gl::ClearBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferfi","gl","",null,null],[5,"is_loaded","gl::ClearBufferfi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferfv","gl","",null,null],[5,"is_loaded","gl::ClearBufferfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferiv","gl","",null,null],[5,"is_loaded","gl::ClearBufferiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferuiv","gl","",null,null],[5,"is_loaded","gl::ClearBufferuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearColor","gl","",null,null],[5,"is_loaded","gl::ClearColor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearDepth","gl","",null,null],[5,"is_loaded","gl::ClearDepth","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearDepthf","gl","",null,null],[5,"is_loaded","gl::ClearDepthf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedBufferData","gl","",null,null],[5,"is_loaded","gl::ClearNamedBufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::ClearNamedBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedFramebufferfi","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferfi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedFramebufferfv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedFramebufferiv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedFramebufferuiv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearStencil","gl","",null,null],[5,"is_loaded","gl::ClearStencil","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearTexImage","gl","",null,null],[5,"is_loaded","gl::ClearTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearTexSubImage","gl","",null,null],[5,"is_loaded","gl::ClearTexSubImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClientWaitSync","gl","",null,null],[5,"is_loaded","gl::ClientWaitSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClipControl","gl","",null,null],[5,"is_loaded","gl::ClipControl","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorMask","gl","",null,null],[5,"is_loaded","gl::ColorMask","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorMaski","gl","",null,null],[5,"is_loaded","gl::ColorMaski","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorP3ui","gl","",null,null],[5,"is_loaded","gl::ColorP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorP3uiv","gl","",null,null],[5,"is_loaded","gl::ColorP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorP4ui","gl","",null,null],[5,"is_loaded","gl::ColorP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorP4uiv","gl","",null,null],[5,"is_loaded","gl::ColorP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompileShader","gl","",null,null],[5,"is_loaded","gl::CompileShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexSubImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexSubImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexSubImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyBufferSubData","gl","",null,null],[5,"is_loaded","gl::CopyBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyImageSubData","gl","",null,null],[5,"is_loaded","gl::CopyImageSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::CopyNamedBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTexImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTexImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexSubImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexSubImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexSubImage3D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateBuffers","gl","",null,null],[5,"is_loaded","gl::CreateBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateFramebuffers","gl","",null,null],[5,"is_loaded","gl::CreateFramebuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateProgram","gl","",null,null],[5,"is_loaded","gl::CreateProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateProgramPipelines","gl","",null,null],[5,"is_loaded","gl::CreateProgramPipelines","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateQueries","gl","",null,null],[5,"is_loaded","gl::CreateQueries","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateRenderbuffers","gl","",null,null],[5,"is_loaded","gl::CreateRenderbuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateSamplers","gl","",null,null],[5,"is_loaded","gl::CreateSamplers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateShader","gl","",null,null],[5,"is_loaded","gl::CreateShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateShaderProgramv","gl","",null,null],[5,"is_loaded","gl::CreateShaderProgramv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateTextures","gl","",null,null],[5,"is_loaded","gl::CreateTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::CreateTransformFeedbacks","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateVertexArrays","gl","",null,null],[5,"is_loaded","gl::CreateVertexArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CullFace","gl","",null,null],[5,"is_loaded","gl::CullFace","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DebugMessageCallback","gl","",null,null],[5,"is_loaded","gl::DebugMessageCallback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DebugMessageControl","gl","",null,null],[5,"is_loaded","gl::DebugMessageControl","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DebugMessageInsert","gl","",null,null],[5,"is_loaded","gl::DebugMessageInsert","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteBuffers","gl","",null,null],[5,"is_loaded","gl::DeleteBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteFramebuffers","gl","",null,null],[5,"is_loaded","gl::DeleteFramebuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteProgram","gl","",null,null],[5,"is_loaded","gl::DeleteProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteProgramPipelines","gl","",null,null],[5,"is_loaded","gl::DeleteProgramPipelines","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteQueries","gl","",null,null],[5,"is_loaded","gl::DeleteQueries","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteRenderbuffers","gl","",null,null],[5,"is_loaded","gl::DeleteRenderbuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteSamplers","gl","",null,null],[5,"is_loaded","gl::DeleteSamplers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteShader","gl","",null,null],[5,"is_loaded","gl::DeleteShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteSync","gl","",null,null],[5,"is_loaded","gl::DeleteSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteTextures","gl","",null,null],[5,"is_loaded","gl::DeleteTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::DeleteTransformFeedbacks","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteVertexArrays","gl","",null,null],[5,"is_loaded","gl::DeleteVertexArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthFunc","gl","",null,null],[5,"is_loaded","gl::DepthFunc","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthMask","gl","",null,null],[5,"is_loaded","gl::DepthMask","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthRange","gl","",null,null],[5,"is_loaded","gl::DepthRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthRangeArrayv","gl","",null,null],[5,"is_loaded","gl::DepthRangeArrayv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthRangeIndexed","gl","",null,null],[5,"is_loaded","gl::DepthRangeIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthRangef","gl","",null,null],[5,"is_loaded","gl::DepthRangef","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DetachShader","gl","",null,null],[5,"is_loaded","gl::DetachShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Disable","gl","",null,null],[5,"is_loaded","gl::Disable","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DisableVertexArrayAttrib","gl","",null,null],[5,"is_loaded","gl::DisableVertexArrayAttrib","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DisableVertexAttribArray","gl","",null,null],[5,"is_loaded","gl::DisableVertexAttribArray","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Disablei","gl","",null,null],[5,"is_loaded","gl::Disablei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DispatchCompute","gl","",null,null],[5,"is_loaded","gl::DispatchCompute","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DispatchComputeIndirect","gl","",null,null],[5,"is_loaded","gl::DispatchComputeIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawArrays","gl","",null,null],[5,"is_loaded","gl::DrawArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawArraysIndirect","gl","",null,null],[5,"is_loaded","gl::DrawArraysIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawArraysInstanced","gl","",null,null],[5,"is_loaded","gl::DrawArraysInstanced","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawArraysInstancedBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawArraysInstancedBaseInstance","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawBuffer","gl","",null,null],[5,"is_loaded","gl::DrawBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawBuffers","gl","",null,null],[5,"is_loaded","gl::DrawBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElements","gl","",null,null],[5,"is_loaded","gl::DrawElements","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawElementsBaseVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsIndirect","gl","",null,null],[5,"is_loaded","gl::DrawElementsIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsInstanced","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstanced","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsInstancedBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseInstance","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsInstancedBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsInstancedBaseVertexBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseVertexBaseInstance","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawRangeElements","gl","",null,null],[5,"is_loaded","gl::DrawRangeElements","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawRangeElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawRangeElementsBaseVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawTransformFeedback","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawTransformFeedbackInstanced","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackInstanced","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawTransformFeedbackStream","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackStream","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawTransformFeedbackStreamInstanced","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackStreamInstanced","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Enable","gl","",null,null],[5,"is_loaded","gl::Enable","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EnableVertexArrayAttrib","gl","",null,null],[5,"is_loaded","gl::EnableVertexArrayAttrib","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EnableVertexAttribArray","gl","",null,null],[5,"is_loaded","gl::EnableVertexAttribArray","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Enablei","gl","",null,null],[5,"is_loaded","gl::Enablei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EndConditionalRender","gl","",null,null],[5,"is_loaded","gl::EndConditionalRender","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EndQuery","gl","",null,null],[5,"is_loaded","gl::EndQuery","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EndQueryIndexed","gl","",null,null],[5,"is_loaded","gl::EndQueryIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EndTransformFeedback","gl","",null,null],[5,"is_loaded","gl::EndTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FenceSync","gl","",null,null],[5,"is_loaded","gl::FenceSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Finish","gl","",null,null],[5,"is_loaded","gl::Finish","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Flush","gl","",null,null],[5,"is_loaded","gl::Flush","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FlushMappedBufferRange","gl","",null,null],[5,"is_loaded","gl::FlushMappedBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FlushMappedNamedBufferRange","gl","",null,null],[5,"is_loaded","gl::FlushMappedNamedBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferParameteri","gl","",null,null],[5,"is_loaded","gl::FramebufferParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferRenderbuffer","gl","",null,null],[5,"is_loaded","gl::FramebufferRenderbuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTexture","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTexture1D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTexture2D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTexture3D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTextureLayer","gl","",null,null],[5,"is_loaded","gl::FramebufferTextureLayer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FrontFace","gl","",null,null],[5,"is_loaded","gl::FrontFace","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenBuffers","gl","",null,null],[5,"is_loaded","gl::GenBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenFramebuffers","gl","",null,null],[5,"is_loaded","gl::GenFramebuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenProgramPipelines","gl","",null,null],[5,"is_loaded","gl::GenProgramPipelines","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenQueries","gl","",null,null],[5,"is_loaded","gl::GenQueries","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenRenderbuffers","gl","",null,null],[5,"is_loaded","gl::GenRenderbuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenSamplers","gl","",null,null],[5,"is_loaded","gl::GenSamplers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenTextures","gl","",null,null],[5,"is_loaded","gl::GenTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::GenTransformFeedbacks","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenVertexArrays","gl","",null,null],[5,"is_loaded","gl::GenVertexArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenerateMipmap","gl","",null,null],[5,"is_loaded","gl::GenerateMipmap","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenerateTextureMipmap","gl","",null,null],[5,"is_loaded","gl::GenerateTextureMipmap","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveAtomicCounterBufferiv","gl","",null,null],[5,"is_loaded","gl::GetActiveAtomicCounterBufferiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveAttrib","gl","",null,null],[5,"is_loaded","gl::GetActiveAttrib","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveSubroutineName","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveSubroutineUniformName","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineUniformName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveSubroutineUniformiv","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineUniformiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniform","gl","",null,null],[5,"is_loaded","gl::GetActiveUniform","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniformBlockName","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformBlockName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniformBlockiv","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformBlockiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniformName","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniformsiv","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformsiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetAttachedShaders","gl","",null,null],[5,"is_loaded","gl::GetAttachedShaders","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetAttribLocation","gl","",null,null],[5,"is_loaded","gl::GetAttribLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBooleani_v","gl","",null,null],[5,"is_loaded","gl::GetBooleani_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBooleanv","gl","",null,null],[5,"is_loaded","gl::GetBooleanv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBufferParameteri64v","gl","",null,null],[5,"is_loaded","gl::GetBufferParameteri64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetBufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBufferPointerv","gl","",null,null],[5,"is_loaded","gl::GetBufferPointerv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBufferSubData","gl","",null,null],[5,"is_loaded","gl::GetBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetCompressedTexImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetCompressedTextureImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTextureImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetCompressedTextureSubImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTextureSubImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetDebugMessageLog","gl","",null,null],[5,"is_loaded","gl::GetDebugMessageLog","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetDoublei_v","gl","",null,null],[5,"is_loaded","gl::GetDoublei_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetDoublev","gl","",null,null],[5,"is_loaded","gl::GetDoublev","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetError","gl","",null,null],[5,"is_loaded","gl::GetError","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFloati_v","gl","",null,null],[5,"is_loaded","gl::GetFloati_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFloatv","gl","",null,null],[5,"is_loaded","gl::GetFloatv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFragDataIndex","gl","",null,null],[5,"is_loaded","gl::GetFragDataIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFragDataLocation","gl","",null,null],[5,"is_loaded","gl::GetFragDataLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFramebufferAttachmentParameteriv","gl","",null,null],[5,"is_loaded","gl::GetFramebufferAttachmentParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFramebufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetFramebufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetGraphicsResetStatus","gl","",null,null],[5,"is_loaded","gl::GetGraphicsResetStatus","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetInteger64i_v","gl","",null,null],[5,"is_loaded","gl::GetInteger64i_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetInteger64v","gl","",null,null],[5,"is_loaded","gl::GetInteger64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetIntegeri_v","gl","",null,null],[5,"is_loaded","gl::GetIntegeri_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetIntegerv","gl","",null,null],[5,"is_loaded","gl::GetIntegerv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetInternalformati64v","gl","",null,null],[5,"is_loaded","gl::GetInternalformati64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetInternalformativ","gl","",null,null],[5,"is_loaded","gl::GetInternalformativ","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetMultisamplefv","gl","",null,null],[5,"is_loaded","gl::GetMultisamplefv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedBufferParameteri64v","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferParameteri64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedBufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedBufferPointerv","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferPointerv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedFramebufferAttachmentParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedFramebufferAttachmentParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedFramebufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedFramebufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedRenderbufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedRenderbufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetObjectLabel","gl","",null,null],[5,"is_loaded","gl::GetObjectLabel","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetObjectPtrLabel","gl","",null,null],[5,"is_loaded","gl::GetObjectPtrLabel","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramBinary","gl","",null,null],[5,"is_loaded","gl::GetProgramBinary","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramInfoLog","gl","",null,null],[5,"is_loaded","gl::GetProgramInfoLog","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramInterfaceiv","gl","",null,null],[5,"is_loaded","gl::GetProgramInterfaceiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramPipelineInfoLog","gl","",null,null],[5,"is_loaded","gl::GetProgramPipelineInfoLog","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramPipelineiv","gl","",null,null],[5,"is_loaded","gl::GetProgramPipelineiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceIndex","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceLocation","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceLocationIndex","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceLocationIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceName","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceiv","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramStageiv","gl","",null,null],[5,"is_loaded","gl::GetProgramStageiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramiv","gl","",null,null],[5,"is_loaded","gl::GetProgramiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryBufferObjecti64v","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjecti64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryBufferObjectiv","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryBufferObjectui64v","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectui64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryBufferObjectuiv","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryIndexediv","gl","",null,null],[5,"is_loaded","gl::GetQueryIndexediv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryObjecti64v","gl","",null,null],[5,"is_loaded","gl::GetQueryObjecti64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryObjectiv","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryObjectui64v","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectui64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryObjectuiv","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryiv","gl","",null,null],[5,"is_loaded","gl::GetQueryiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetRenderbufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetRenderbufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSamplerParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSamplerParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSamplerParameterfv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSamplerParameteriv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetShaderInfoLog","gl","",null,null],[5,"is_loaded","gl::GetShaderInfoLog","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetShaderPrecisionFormat","gl","",null,null],[5,"is_loaded","gl::GetShaderPrecisionFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetShaderSource","gl","",null,null],[5,"is_loaded","gl::GetShaderSource","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetShaderiv","gl","",null,null],[5,"is_loaded","gl::GetShaderiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetString","gl","",null,null],[5,"is_loaded","gl::GetString","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetStringi","gl","",null,null],[5,"is_loaded","gl::GetStringi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSubroutineIndex","gl","",null,null],[5,"is_loaded","gl::GetSubroutineIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSubroutineUniformLocation","gl","",null,null],[5,"is_loaded","gl::GetSubroutineUniformLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSynciv","gl","",null,null],[5,"is_loaded","gl::GetSynciv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexImage","gl","",null,null],[5,"is_loaded","gl::GetTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexLevelParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTexLevelParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexLevelParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTexLevelParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTexParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureImage","gl","",null,null],[5,"is_loaded","gl::GetTextureImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureLevelParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTextureLevelParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureLevelParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTextureLevelParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureSubImage","gl","",null,null],[5,"is_loaded","gl::GetTextureSubImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTransformFeedbackVarying","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbackVarying","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTransformFeedbacki64_v","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbacki64_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTransformFeedbacki_v","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbacki_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTransformFeedbackiv","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbackiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformBlockIndex","gl","",null,null],[5,"is_loaded","gl::GetUniformBlockIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformIndices","gl","",null,null],[5,"is_loaded","gl::GetUniformIndices","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformLocation","gl","",null,null],[5,"is_loaded","gl::GetUniformLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformSubroutineuiv","gl","",null,null],[5,"is_loaded","gl::GetUniformSubroutineuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformdv","gl","",null,null],[5,"is_loaded","gl::GetUniformdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformfv","gl","",null,null],[5,"is_loaded","gl::GetUniformfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformiv","gl","",null,null],[5,"is_loaded","gl::GetUniformiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformuiv","gl","",null,null],[5,"is_loaded","gl::GetUniformuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexArrayIndexed64iv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayIndexed64iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexArrayIndexediv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayIndexediv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexArrayiv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribIiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribIuiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribLdv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribLdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribPointerv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribPointerv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribdv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribfv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnColorTable","gl","",null,null],[5,"is_loaded","gl::GetnColorTable","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnCompressedTexImage","gl","",null,null],[5,"is_loaded","gl::GetnCompressedTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnConvolutionFilter","gl","",null,null],[5,"is_loaded","gl::GetnConvolutionFilter","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnHistogram","gl","",null,null],[5,"is_loaded","gl::GetnHistogram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnMapdv","gl","",null,null],[5,"is_loaded","gl::GetnMapdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnMapfv","gl","",null,null],[5,"is_loaded","gl::GetnMapfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnMapiv","gl","",null,null],[5,"is_loaded","gl::GetnMapiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnMinmax","gl","",null,null],[5,"is_loaded","gl::GetnMinmax","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnPixelMapfv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnPixelMapuiv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnPixelMapusv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapusv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnPolygonStipple","gl","",null,null],[5,"is_loaded","gl::GetnPolygonStipple","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnSeparableFilter","gl","",null,null],[5,"is_loaded","gl::GetnSeparableFilter","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnTexImage","gl","",null,null],[5,"is_loaded","gl::GetnTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnUniformdv","gl","",null,null],[5,"is_loaded","gl::GetnUniformdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnUniformfv","gl","",null,null],[5,"is_loaded","gl::GetnUniformfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnUniformiv","gl","",null,null],[5,"is_loaded","gl::GetnUniformiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnUniformuiv","gl","",null,null],[5,"is_loaded","gl::GetnUniformuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Hint","gl","",null,null],[5,"is_loaded","gl::Hint","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateBufferData","gl","",null,null],[5,"is_loaded","gl::InvalidateBufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateBufferSubData","gl","",null,null],[5,"is_loaded","gl::InvalidateBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateFramebuffer","gl","",null,null],[5,"is_loaded","gl::InvalidateFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateNamedFramebufferData","gl","",null,null],[5,"is_loaded","gl::InvalidateNamedFramebufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateNamedFramebufferSubData","gl","",null,null],[5,"is_loaded","gl::InvalidateNamedFramebufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateSubFramebuffer","gl","",null,null],[5,"is_loaded","gl::InvalidateSubFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateTexImage","gl","",null,null],[5,"is_loaded","gl::InvalidateTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateTexSubImage","gl","",null,null],[5,"is_loaded","gl::InvalidateTexSubImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsBuffer","gl","",null,null],[5,"is_loaded","gl::IsBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsEnabled","gl","",null,null],[5,"is_loaded","gl::IsEnabled","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsEnabledi","gl","",null,null],[5,"is_loaded","gl::IsEnabledi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsFramebuffer","gl","",null,null],[5,"is_loaded","gl::IsFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsProgram","gl","",null,null],[5,"is_loaded","gl::IsProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsProgramPipeline","gl","",null,null],[5,"is_loaded","gl::IsProgramPipeline","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsQuery","gl","",null,null],[5,"is_loaded","gl::IsQuery","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsRenderbuffer","gl","",null,null],[5,"is_loaded","gl::IsRenderbuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsSampler","gl","",null,null],[5,"is_loaded","gl::IsSampler","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsShader","gl","",null,null],[5,"is_loaded","gl::IsShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsSync","gl","",null,null],[5,"is_loaded","gl::IsSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsTexture","gl","",null,null],[5,"is_loaded","gl::IsTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsTransformFeedback","gl","",null,null],[5,"is_loaded","gl::IsTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsVertexArray","gl","",null,null],[5,"is_loaded","gl::IsVertexArray","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"LineWidth","gl","",null,null],[5,"is_loaded","gl::LineWidth","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"LinkProgram","gl","",null,null],[5,"is_loaded","gl::LinkProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"LogicOp","gl","",null,null],[5,"is_loaded","gl::LogicOp","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MapBuffer","gl","",null,null],[5,"is_loaded","gl::MapBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MapBufferRange","gl","",null,null],[5,"is_loaded","gl::MapBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MapNamedBuffer","gl","",null,null],[5,"is_loaded","gl::MapNamedBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MapNamedBufferRange","gl","",null,null],[5,"is_loaded","gl::MapNamedBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MemoryBarrier","gl","",null,null],[5,"is_loaded","gl::MemoryBarrier","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MemoryBarrierByRegion","gl","",null,null],[5,"is_loaded","gl::MemoryBarrierByRegion","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MinSampleShading","gl","",null,null],[5,"is_loaded","gl::MinSampleShading","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawArrays","gl","",null,null],[5,"is_loaded","gl::MultiDrawArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawArraysIndirect","gl","",null,null],[5,"is_loaded","gl::MultiDrawArraysIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawElements","gl","",null,null],[5,"is_loaded","gl::MultiDrawElements","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::MultiDrawElementsBaseVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawElementsIndirect","gl","",null,null],[5,"is_loaded","gl::MultiDrawElementsIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP1ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP1uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP2ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP2uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP3ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP3uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP4ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP4uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedBufferData","gl","",null,null],[5,"is_loaded","gl::NamedBufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedBufferStorage","gl","",null,null],[5,"is_loaded","gl::NamedBufferStorage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::NamedBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferDrawBuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferDrawBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferDrawBuffers","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferDrawBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferParameteri","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferReadBuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferReadBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferRenderbuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferRenderbuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferTexture","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferTextureLayer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferTextureLayer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedRenderbufferStorage","gl","",null,null],[5,"is_loaded","gl::NamedRenderbufferStorage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedRenderbufferStorageMultisample","gl","",null,null],[5,"is_loaded","gl::NamedRenderbufferStorageMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NormalP3ui","gl","",null,null],[5,"is_loaded","gl::NormalP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NormalP3uiv","gl","",null,null],[5,"is_loaded","gl::NormalP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ObjectLabel","gl","",null,null],[5,"is_loaded","gl::ObjectLabel","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ObjectPtrLabel","gl","",null,null],[5,"is_loaded","gl::ObjectPtrLabel","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PatchParameterfv","gl","",null,null],[5,"is_loaded","gl::PatchParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PatchParameteri","gl","",null,null],[5,"is_loaded","gl::PatchParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PauseTransformFeedback","gl","",null,null],[5,"is_loaded","gl::PauseTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PixelStoref","gl","",null,null],[5,"is_loaded","gl::PixelStoref","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PixelStorei","gl","",null,null],[5,"is_loaded","gl::PixelStorei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointParameterf","gl","",null,null],[5,"is_loaded","gl::PointParameterf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointParameterfv","gl","",null,null],[5,"is_loaded","gl::PointParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointParameteri","gl","",null,null],[5,"is_loaded","gl::PointParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointParameteriv","gl","",null,null],[5,"is_loaded","gl::PointParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointSize","gl","",null,null],[5,"is_loaded","gl::PointSize","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PolygonMode","gl","",null,null],[5,"is_loaded","gl::PolygonMode","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PolygonOffset","gl","",null,null],[5,"is_loaded","gl::PolygonOffset","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PopDebugGroup","gl","",null,null],[5,"is_loaded","gl::PopDebugGroup","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PrimitiveRestartIndex","gl","",null,null],[5,"is_loaded","gl::PrimitiveRestartIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramBinary","gl","",null,null],[5,"is_loaded","gl::ProgramBinary","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramParameteri","gl","",null,null],[5,"is_loaded","gl::ProgramParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2x3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2x3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2x4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2x4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3x2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3x2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3x4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3x4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4x2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4x2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4x3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4x3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProvokingVertex","gl","",null,null],[5,"is_loaded","gl::ProvokingVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PushDebugGroup","gl","",null,null],[5,"is_loaded","gl::PushDebugGroup","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"QueryCounter","gl","",null,null],[5,"is_loaded","gl::QueryCounter","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ReadBuffer","gl","",null,null],[5,"is_loaded","gl::ReadBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ReadPixels","gl","",null,null],[5,"is_loaded","gl::ReadPixels","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ReadnPixels","gl","",null,null],[5,"is_loaded","gl::ReadnPixels","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ReleaseShaderCompiler","gl","",null,null],[5,"is_loaded","gl::ReleaseShaderCompiler","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"RenderbufferStorage","gl","",null,null],[5,"is_loaded","gl::RenderbufferStorage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"RenderbufferStorageMultisample","gl","",null,null],[5,"is_loaded","gl::RenderbufferStorageMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ResumeTransformFeedback","gl","",null,null],[5,"is_loaded","gl::ResumeTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SampleCoverage","gl","",null,null],[5,"is_loaded","gl::SampleCoverage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SampleMaski","gl","",null,null],[5,"is_loaded","gl::SampleMaski","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameterIiv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameterIuiv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameterf","gl","",null,null],[5,"is_loaded","gl::SamplerParameterf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameterfv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameteri","gl","",null,null],[5,"is_loaded","gl::SamplerParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameteriv","gl","",null,null],[5,"is_loaded","gl::SamplerParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Scissor","gl","",null,null],[5,"is_loaded","gl::Scissor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ScissorArrayv","gl","",null,null],[5,"is_loaded","gl::ScissorArrayv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ScissorIndexed","gl","",null,null],[5,"is_loaded","gl::ScissorIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ScissorIndexedv","gl","",null,null],[5,"is_loaded","gl::ScissorIndexedv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SecondaryColorP3ui","gl","",null,null],[5,"is_loaded","gl::SecondaryColorP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SecondaryColorP3uiv","gl","",null,null],[5,"is_loaded","gl::SecondaryColorP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ShaderBinary","gl","",null,null],[5,"is_loaded","gl::ShaderBinary","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ShaderSource","gl","",null,null],[5,"is_loaded","gl::ShaderSource","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ShaderStorageBlockBinding","gl","",null,null],[5,"is_loaded","gl::ShaderStorageBlockBinding","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilFunc","gl","",null,null],[5,"is_loaded","gl::StencilFunc","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilFuncSeparate","gl","",null,null],[5,"is_loaded","gl::StencilFuncSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilMask","gl","",null,null],[5,"is_loaded","gl::StencilMask","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilMaskSeparate","gl","",null,null],[5,"is_loaded","gl::StencilMaskSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilOp","gl","",null,null],[5,"is_loaded","gl::StencilOp","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilOpSeparate","gl","",null,null],[5,"is_loaded","gl::StencilOpSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexBuffer","gl","",null,null],[5,"is_loaded","gl::TexBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexBufferRange","gl","",null,null],[5,"is_loaded","gl::TexBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP1ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP1uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP2ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP2uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP3ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP3uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP4ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP4uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage1D","gl","",null,null],[5,"is_loaded","gl::TexImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage2D","gl","",null,null],[5,"is_loaded","gl::TexImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TexImage2DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage3D","gl","",null,null],[5,"is_loaded","gl::TexImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TexImage3DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameterIiv","gl","",null,null],[5,"is_loaded","gl::TexParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameterIuiv","gl","",null,null],[5,"is_loaded","gl::TexParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameterf","gl","",null,null],[5,"is_loaded","gl::TexParameterf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameterfv","gl","",null,null],[5,"is_loaded","gl::TexParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameteri","gl","",null,null],[5,"is_loaded","gl::TexParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameteriv","gl","",null,null],[5,"is_loaded","gl::TexParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage1D","gl","",null,null],[5,"is_loaded","gl::TexStorage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage2D","gl","",null,null],[5,"is_loaded","gl::TexStorage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TexStorage2DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage3D","gl","",null,null],[5,"is_loaded","gl::TexStorage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TexStorage3DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexSubImage1D","gl","",null,null],[5,"is_loaded","gl::TexSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexSubImage2D","gl","",null,null],[5,"is_loaded","gl::TexSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexSubImage3D","gl","",null,null],[5,"is_loaded","gl::TexSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureBarrier","gl","",null,null],[5,"is_loaded","gl::TextureBarrier","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureBuffer","gl","",null,null],[5,"is_loaded","gl::TextureBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureBufferRange","gl","",null,null],[5,"is_loaded","gl::TextureBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameterIiv","gl","",null,null],[5,"is_loaded","gl::TextureParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameterIuiv","gl","",null,null],[5,"is_loaded","gl::TextureParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameterf","gl","",null,null],[5,"is_loaded","gl::TextureParameterf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameterfv","gl","",null,null],[5,"is_loaded","gl::TextureParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameteri","gl","",null,null],[5,"is_loaded","gl::TextureParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameteriv","gl","",null,null],[5,"is_loaded","gl::TextureParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage1D","gl","",null,null],[5,"is_loaded","gl::TextureStorage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage2D","gl","",null,null],[5,"is_loaded","gl::TextureStorage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TextureStorage2DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage3D","gl","",null,null],[5,"is_loaded","gl::TextureStorage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TextureStorage3DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureView","gl","",null,null],[5,"is_loaded","gl::TextureView","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TransformFeedbackBufferBase","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackBufferBase","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TransformFeedbackBufferRange","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TransformFeedbackVaryings","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackVaryings","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1d","gl","",null,null],[5,"is_loaded","gl::Uniform1d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1dv","gl","",null,null],[5,"is_loaded","gl::Uniform1dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1f","gl","",null,null],[5,"is_loaded","gl::Uniform1f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1fv","gl","",null,null],[5,"is_loaded","gl::Uniform1fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1i","gl","",null,null],[5,"is_loaded","gl::Uniform1i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1iv","gl","",null,null],[5,"is_loaded","gl::Uniform1iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1ui","gl","",null,null],[5,"is_loaded","gl::Uniform1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1uiv","gl","",null,null],[5,"is_loaded","gl::Uniform1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2d","gl","",null,null],[5,"is_loaded","gl::Uniform2d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2dv","gl","",null,null],[5,"is_loaded","gl::Uniform2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2f","gl","",null,null],[5,"is_loaded","gl::Uniform2f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2fv","gl","",null,null],[5,"is_loaded","gl::Uniform2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2i","gl","",null,null],[5,"is_loaded","gl::Uniform2i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2iv","gl","",null,null],[5,"is_loaded","gl::Uniform2iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2ui","gl","",null,null],[5,"is_loaded","gl::Uniform2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2uiv","gl","",null,null],[5,"is_loaded","gl::Uniform2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3d","gl","",null,null],[5,"is_loaded","gl::Uniform3d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3dv","gl","",null,null],[5,"is_loaded","gl::Uniform3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3f","gl","",null,null],[5,"is_loaded","gl::Uniform3f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3fv","gl","",null,null],[5,"is_loaded","gl::Uniform3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3i","gl","",null,null],[5,"is_loaded","gl::Uniform3i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3iv","gl","",null,null],[5,"is_loaded","gl::Uniform3iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3ui","gl","",null,null],[5,"is_loaded","gl::Uniform3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3uiv","gl","",null,null],[5,"is_loaded","gl::Uniform3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4d","gl","",null,null],[5,"is_loaded","gl::Uniform4d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4dv","gl","",null,null],[5,"is_loaded","gl::Uniform4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4f","gl","",null,null],[5,"is_loaded","gl::Uniform4f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4fv","gl","",null,null],[5,"is_loaded","gl::Uniform4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4i","gl","",null,null],[5,"is_loaded","gl::Uniform4i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4iv","gl","",null,null],[5,"is_loaded","gl::Uniform4iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4ui","gl","",null,null],[5,"is_loaded","gl::Uniform4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4uiv","gl","",null,null],[5,"is_loaded","gl::Uniform4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformBlockBinding","gl","",null,null],[5,"is_loaded","gl::UniformBlockBinding","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2x3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2x3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2x4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2x4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3x2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3x2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3x4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3x4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4x2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4x2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4x3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4x3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformSubroutinesuiv","gl","",null,null],[5,"is_loaded","gl::UniformSubroutinesuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UnmapBuffer","gl","",null,null],[5,"is_loaded","gl::UnmapBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UnmapNamedBuffer","gl","",null,null],[5,"is_loaded","gl::UnmapNamedBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UseProgram","gl","",null,null],[5,"is_loaded","gl::UseProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UseProgramStages","gl","",null,null],[5,"is_loaded","gl::UseProgramStages","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ValidateProgram","gl","",null,null],[5,"is_loaded","gl::ValidateProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ValidateProgramPipeline","gl","",null,null],[5,"is_loaded","gl::ValidateProgramPipeline","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayAttribBinding","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribBinding","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayAttribFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayAttribIFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribIFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayAttribLFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribLFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayBindingDivisor","gl","",null,null],[5,"is_loaded","gl::VertexArrayBindingDivisor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayElementBuffer","gl","",null,null],[5,"is_loaded","gl::VertexArrayElementBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayVertexBuffer","gl","",null,null],[5,"is_loaded","gl::VertexArrayVertexBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayVertexBuffers","gl","",null,null],[5,"is_loaded","gl::VertexArrayVertexBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1s","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2s","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3s","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nbv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nbv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Niv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Niv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nsv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nsv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nub","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nub","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nubv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nubv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nuiv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nusv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nusv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4bv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4bv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4iv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4s","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4ubv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4ubv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4usv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4usv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribBinding","gl","",null,null],[5,"is_loaded","gl::VertexAttribBinding","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribDivisor","gl","",null,null],[5,"is_loaded","gl::VertexAttribDivisor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI1i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI1iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI1ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI1uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI2i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI2iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI2ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI2uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI3i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI3iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI3ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI3uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4bv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4bv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4sv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4ubv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4ubv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4usv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4usv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribIFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribIFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribIPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribIPointer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL1d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL1d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL1dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL1dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL2d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL2d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL2dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL3d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL3d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL3dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL4d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL4d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL4dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribLFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribLFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribLPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribLPointer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP1ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP1uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP2ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP2uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP3ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP3uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP4ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribPointer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexBindingDivisor","gl","",null,null],[5,"is_loaded","gl::VertexBindingDivisor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP2ui","gl","",null,null],[5,"is_loaded","gl::VertexP2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP2uiv","gl","",null,null],[5,"is_loaded","gl::VertexP2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP3ui","gl","",null,null],[5,"is_loaded","gl::VertexP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP3uiv","gl","",null,null],[5,"is_loaded","gl::VertexP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP4ui","gl","",null,null],[5,"is_loaded","gl::VertexP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP4uiv","gl","",null,null],[5,"is_loaded","gl::VertexP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Viewport","gl","",null,null],[5,"is_loaded","gl::Viewport","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ViewportArrayv","gl","",null,null],[5,"is_loaded","gl::ViewportArrayv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ViewportIndexedf","gl","",null,null],[5,"is_loaded","gl::ViewportIndexedf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ViewportIndexedfv","gl","",null,null],[5,"is_loaded","gl::ViewportIndexedfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"WaitSync","gl","",null,null],[5,"is_loaded","gl::WaitSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[17,"DEPTH_BUFFER_BIT","gl","",null,null],[17,"STENCIL_BUFFER_BIT","","",null,null],[17,"COLOR_BUFFER_BIT","","",null,null],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",null,null],[17,"CONTEXT_FLAG_DEBUG_BIT","","",null,null],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",null,null],[17,"CONTEXT_CORE_PROFILE_BIT","","",null,null],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",null,null],[17,"MAP_READ_BIT","","",null,null],[17,"MAP_WRITE_BIT","","",null,null],[17,"MAP_INVALIDATE_RANGE_BIT","","",null,null],[17,"MAP_INVALIDATE_BUFFER_BIT","","",null,null],[17,"MAP_FLUSH_EXPLICIT_BIT","","",null,null],[17,"MAP_UNSYNCHRONIZED_BIT","","",null,null],[17,"MAP_PERSISTENT_BIT","","",null,null],[17,"MAP_COHERENT_BIT","","",null,null],[17,"DYNAMIC_STORAGE_BIT","","",null,null],[17,"CLIENT_STORAGE_BIT","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",null,null],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",null,null],[17,"UNIFORM_BARRIER_BIT","","",null,null],[17,"TEXTURE_FETCH_BARRIER_BIT","","",null,null],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",null,null],[17,"COMMAND_BARRIER_BIT","","",null,null],[17,"PIXEL_BUFFER_BARRIER_BIT","","",null,null],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",null,null],[17,"BUFFER_UPDATE_BARRIER_BIT","","",null,null],[17,"FRAMEBUFFER_BARRIER_BIT","","",null,null],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",null,null],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",null,null],[17,"SHADER_STORAGE_BARRIER_BIT","","",null,null],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",null,null],[17,"QUERY_BUFFER_BARRIER_BIT","","",null,null],[17,"ALL_BARRIER_BITS","","",null,null],[17,"SYNC_FLUSH_COMMANDS_BIT","","",null,null],[17,"VERTEX_SHADER_BIT","","",null,null],[17,"FRAGMENT_SHADER_BIT","","",null,null],[17,"GEOMETRY_SHADER_BIT","","",null,null],[17,"TESS_CONTROL_SHADER_BIT","","",null,null],[17,"TESS_EVALUATION_SHADER_BIT","","",null,null],[17,"COMPUTE_SHADER_BIT","","",null,null],[17,"ALL_SHADER_BITS","","",null,null],[17,"FALSE","","",null,null],[17,"NO_ERROR","","",null,null],[17,"ZERO","","",null,null],[17,"NONE","","",null,null],[17,"TRUE","","",null,null],[17,"ONE","","",null,null],[17,"INVALID_INDEX","","",null,null],[17,"TIMEOUT_IGNORED","","",null,null],[17,"POINTS","","",null,null],[17,"LINES","","",null,null],[17,"LINE_LOOP","","",null,null],[17,"LINE_STRIP","","",null,null],[17,"TRIANGLES","","",null,null],[17,"TRIANGLE_STRIP","","",null,null],[17,"TRIANGLE_FAN","","",null,null],[17,"LINES_ADJACENCY","","",null,null],[17,"LINE_STRIP_ADJACENCY","","",null,null],[17,"TRIANGLES_ADJACENCY","","",null,null],[17,"TRIANGLE_STRIP_ADJACENCY","","",null,null],[17,"PATCHES","","",null,null],[17,"NEVER","","",null,null],[17,"LESS","","",null,null],[17,"EQUAL","","",null,null],[17,"LEQUAL","","",null,null],[17,"GREATER","","",null,null],[17,"NOTEQUAL","","",null,null],[17,"GEQUAL","","",null,null],[17,"ALWAYS","","",null,null],[17,"SRC_COLOR","","",null,null],[17,"ONE_MINUS_SRC_COLOR","","",null,null],[17,"SRC_ALPHA","","",null,null],[17,"ONE_MINUS_SRC_ALPHA","","",null,null],[17,"DST_ALPHA","","",null,null],[17,"ONE_MINUS_DST_ALPHA","","",null,null],[17,"DST_COLOR","","",null,null],[17,"ONE_MINUS_DST_COLOR","","",null,null],[17,"SRC_ALPHA_SATURATE","","",null,null],[17,"FRONT_LEFT","","",null,null],[17,"FRONT_RIGHT","","",null,null],[17,"BACK_LEFT","","",null,null],[17,"BACK_RIGHT","","",null,null],[17,"FRONT","","",null,null],[17,"BACK","","",null,null],[17,"LEFT","","",null,null],[17,"RIGHT","","",null,null],[17,"FRONT_AND_BACK","","",null,null],[17,"INVALID_ENUM","","",null,null],[17,"INVALID_VALUE","","",null,null],[17,"INVALID_OPERATION","","",null,null],[17,"OUT_OF_MEMORY","","",null,null],[17,"INVALID_FRAMEBUFFER_OPERATION","","",null,null],[17,"CONTEXT_LOST","","",null,null],[17,"CW","","",null,null],[17,"CCW","","",null,null],[17,"POINT_SIZE","","",null,null],[17,"POINT_SIZE_RANGE","","",null,null],[17,"SMOOTH_POINT_SIZE_RANGE","","",null,null],[17,"POINT_SIZE_GRANULARITY","","",null,null],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",null,null],[17,"LINE_SMOOTH","","",null,null],[17,"LINE_WIDTH","","",null,null],[17,"LINE_WIDTH_RANGE","","",null,null],[17,"SMOOTH_LINE_WIDTH_RANGE","","",null,null],[17,"LINE_WIDTH_GRANULARITY","","",null,null],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",null,null],[17,"POLYGON_MODE","","",null,null],[17,"POLYGON_SMOOTH","","",null,null],[17,"CULL_FACE","","",null,null],[17,"CULL_FACE_MODE","","",null,null],[17,"FRONT_FACE","","",null,null],[17,"DEPTH_RANGE","","",null,null],[17,"DEPTH_TEST","","",null,null],[17,"DEPTH_WRITEMASK","","",null,null],[17,"DEPTH_CLEAR_VALUE","","",null,null],[17,"DEPTH_FUNC","","",null,null],[17,"STENCIL_TEST","","",null,null],[17,"STENCIL_CLEAR_VALUE","","",null,null],[17,"STENCIL_FUNC","","",null,null],[17,"STENCIL_VALUE_MASK","","",null,null],[17,"STENCIL_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_REF","","",null,null],[17,"STENCIL_WRITEMASK","","",null,null],[17,"VIEWPORT","","",null,null],[17,"DITHER","","",null,null],[17,"BLEND_DST","","",null,null],[17,"BLEND_SRC","","",null,null],[17,"BLEND","","",null,null],[17,"LOGIC_OP_MODE","","",null,null],[17,"COLOR_LOGIC_OP","","",null,null],[17,"DRAW_BUFFER","","",null,null],[17,"READ_BUFFER","","",null,null],[17,"SCISSOR_BOX","","",null,null],[17,"SCISSOR_TEST","","",null,null],[17,"COLOR_CLEAR_VALUE","","",null,null],[17,"COLOR_WRITEMASK","","",null,null],[17,"DOUBLEBUFFER","","",null,null],[17,"STEREO","","",null,null],[17,"LINE_SMOOTH_HINT","","",null,null],[17,"POLYGON_SMOOTH_HINT","","",null,null],[17,"UNPACK_SWAP_BYTES","","",null,null],[17,"UNPACK_LSB_FIRST","","",null,null],[17,"UNPACK_ROW_LENGTH","","",null,null],[17,"UNPACK_SKIP_ROWS","","",null,null],[17,"UNPACK_SKIP_PIXELS","","",null,null],[17,"UNPACK_ALIGNMENT","","",null,null],[17,"PACK_SWAP_BYTES","","",null,null],[17,"PACK_LSB_FIRST","","",null,null],[17,"PACK_ROW_LENGTH","","",null,null],[17,"PACK_SKIP_ROWS","","",null,null],[17,"PACK_SKIP_PIXELS","","",null,null],[17,"PACK_ALIGNMENT","","",null,null],[17,"MAX_CLIP_DISTANCES","","",null,null],[17,"MAX_TEXTURE_SIZE","","",null,null],[17,"MAX_VIEWPORT_DIMS","","",null,null],[17,"SUBPIXEL_BITS","","",null,null],[17,"TEXTURE_1D","","",null,null],[17,"TEXTURE_2D","","",null,null],[17,"TEXTURE_WIDTH","","",null,null],[17,"TEXTURE_HEIGHT","","",null,null],[17,"TEXTURE_INTERNAL_FORMAT","","",null,null],[17,"TEXTURE_BORDER_COLOR","","",null,null],[17,"TEXTURE_TARGET","","",null,null],[17,"DONT_CARE","","",null,null],[17,"FASTEST","","",null,null],[17,"NICEST","","",null,null],[17,"BYTE","","",null,null],[17,"UNSIGNED_BYTE","","",null,null],[17,"SHORT","","",null,null],[17,"UNSIGNED_SHORT","","",null,null],[17,"INT","","",null,null],[17,"UNSIGNED_INT","","",null,null],[17,"FLOAT","","",null,null],[17,"DOUBLE","","",null,null],[17,"HALF_FLOAT","","",null,null],[17,"FIXED","","",null,null],[17,"CLEAR","","",null,null],[17,"AND","","",null,null],[17,"AND_REVERSE","","",null,null],[17,"COPY","","",null,null],[17,"AND_INVERTED","","",null,null],[17,"NOOP","","",null,null],[17,"XOR","","",null,null],[17,"OR","","",null,null],[17,"NOR","","",null,null],[17,"EQUIV","","",null,null],[17,"INVERT","","",null,null],[17,"OR_REVERSE","","",null,null],[17,"COPY_INVERTED","","",null,null],[17,"OR_INVERTED","","",null,null],[17,"NAND","","",null,null],[17,"SET","","",null,null],[17,"TEXTURE","","",null,null],[17,"COLOR","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[17,"STENCIL_INDEX","","",null,null],[17,"DEPTH_COMPONENT","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"RGB","","",null,null],[17,"RGBA","","",null,null],[17,"POINT","","",null,null],[17,"LINE","","",null,null],[17,"FILL","","",null,null],[17,"KEEP","","",null,null],[17,"REPLACE","","",null,null],[17,"INCR","","",null,null],[17,"DECR","","",null,null],[17,"VENDOR","","",null,null],[17,"RENDERER","","",null,null],[17,"VERSION","","",null,null],[17,"EXTENSIONS","","",null,null],[17,"NEAREST","","",null,null],[17,"LINEAR","","",null,null],[17,"NEAREST_MIPMAP_NEAREST","","",null,null],[17,"LINEAR_MIPMAP_NEAREST","","",null,null],[17,"NEAREST_MIPMAP_LINEAR","","",null,null],[17,"LINEAR_MIPMAP_LINEAR","","",null,null],[17,"TEXTURE_MAG_FILTER","","",null,null],[17,"TEXTURE_MIN_FILTER","","",null,null],[17,"TEXTURE_WRAP_S","","",null,null],[17,"TEXTURE_WRAP_T","","",null,null],[17,"REPEAT","","",null,null],[17,"POLYGON_OFFSET_UNITS","","",null,null],[17,"POLYGON_OFFSET_POINT","","",null,null],[17,"POLYGON_OFFSET_LINE","","",null,null],[17,"R3_G3_B2","","",null,null],[17,"CLIP_DISTANCE0","","",null,null],[17,"CLIP_DISTANCE1","","",null,null],[17,"CLIP_DISTANCE2","","",null,null],[17,"CLIP_DISTANCE3","","",null,null],[17,"CLIP_DISTANCE4","","",null,null],[17,"CLIP_DISTANCE5","","",null,null],[17,"CLIP_DISTANCE6","","",null,null],[17,"CLIP_DISTANCE7","","",null,null],[17,"CONSTANT_COLOR","","",null,null],[17,"ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"CONSTANT_ALPHA","","",null,null],[17,"ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"FUNC_ADD","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[17,"BLEND_EQUATION_RGB","","",null,null],[17,"FUNC_SUBTRACT","","",null,null],[17,"FUNC_REVERSE_SUBTRACT","","",null,null],[17,"UNSIGNED_BYTE_3_3_2","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4","","",null,null],[17,"UNSIGNED_SHORT_5_5_5_1","","",null,null],[17,"UNSIGNED_INT_8_8_8_8","","",null,null],[17,"UNSIGNED_INT_10_10_10_2","","",null,null],[17,"POLYGON_OFFSET_FILL","","",null,null],[17,"POLYGON_OFFSET_FACTOR","","",null,null],[17,"RGB4","","",null,null],[17,"RGB5","","",null,null],[17,"RGB8","","",null,null],[17,"RGB10","","",null,null],[17,"RGB12","","",null,null],[17,"RGB16","","",null,null],[17,"RGBA2","","",null,null],[17,"RGBA4","","",null,null],[17,"RGB5_A1","","",null,null],[17,"RGBA8","","",null,null],[17,"RGB10_A2","","",null,null],[17,"RGBA12","","",null,null],[17,"RGBA16","","",null,null],[17,"TEXTURE_RED_SIZE","","",null,null],[17,"TEXTURE_GREEN_SIZE","","",null,null],[17,"TEXTURE_BLUE_SIZE","","",null,null],[17,"TEXTURE_ALPHA_SIZE","","",null,null],[17,"PROXY_TEXTURE_1D","","",null,null],[17,"PROXY_TEXTURE_2D","","",null,null],[17,"TEXTURE_BINDING_1D","","",null,null],[17,"TEXTURE_BINDING_2D","","",null,null],[17,"TEXTURE_BINDING_3D","","",null,null],[17,"PACK_SKIP_IMAGES","","",null,null],[17,"PACK_IMAGE_HEIGHT","","",null,null],[17,"UNPACK_SKIP_IMAGES","","",null,null],[17,"UNPACK_IMAGE_HEIGHT","","",null,null],[17,"TEXTURE_3D","","",null,null],[17,"PROXY_TEXTURE_3D","","",null,null],[17,"TEXTURE_DEPTH","","",null,null],[17,"TEXTURE_WRAP_R","","",null,null],[17,"MAX_3D_TEXTURE_SIZE","","",null,null],[17,"MULTISAMPLE","","",null,null],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",null,null],[17,"SAMPLE_ALPHA_TO_ONE","","",null,null],[17,"SAMPLE_COVERAGE","","",null,null],[17,"SAMPLE_BUFFERS","","",null,null],[17,"SAMPLES","","",null,null],[17,"SAMPLE_COVERAGE_VALUE","","",null,null],[17,"SAMPLE_COVERAGE_INVERT","","",null,null],[17,"BLEND_DST_RGB","","",null,null],[17,"BLEND_SRC_RGB","","",null,null],[17,"BLEND_DST_ALPHA","","",null,null],[17,"BLEND_SRC_ALPHA","","",null,null],[17,"BGR","","",null,null],[17,"BGRA","","",null,null],[17,"MAX_ELEMENTS_VERTICES","","",null,null],[17,"MAX_ELEMENTS_INDICES","","",null,null],[17,"POINT_FADE_THRESHOLD_SIZE","","",null,null],[17,"CLAMP_TO_BORDER","","",null,null],[17,"CLAMP_TO_EDGE","","",null,null],[17,"TEXTURE_MIN_LOD","","",null,null],[17,"TEXTURE_MAX_LOD","","",null,null],[17,"TEXTURE_BASE_LEVEL","","",null,null],[17,"TEXTURE_MAX_LEVEL","","",null,null],[17,"DEPTH_COMPONENT16","","",null,null],[17,"DEPTH_COMPONENT24","","",null,null],[17,"DEPTH_COMPONENT32","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_DEFAULT","","",null,null],[17,"FRAMEBUFFER_UNDEFINED","","",null,null],[17,"DEPTH_STENCIL_ATTACHMENT","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"NUM_EXTENSIONS","","",null,null],[17,"CONTEXT_FLAGS","","",null,null],[17,"BUFFER_IMMUTABLE_STORAGE","","",null,null],[17,"BUFFER_STORAGE_FLAGS","","",null,null],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",null,null],[17,"INDEX","","",null,null],[17,"COMPRESSED_RED","","",null,null],[17,"COMPRESSED_RG","","",null,null],[17,"RG","","",null,null],[17,"RG_INTEGER","","",null,null],[17,"R8","","",null,null],[17,"R16","","",null,null],[17,"RG8","","",null,null],[17,"RG16","","",null,null],[17,"R16F","","",null,null],[17,"R32F","","",null,null],[17,"RG16F","","",null,null],[17,"RG32F","","",null,null],[17,"R8I","","",null,null],[17,"R8UI","","",null,null],[17,"R16I","","",null,null],[17,"R16UI","","",null,null],[17,"R32I","","",null,null],[17,"R32UI","","",null,null],[17,"RG8I","","",null,null],[17,"RG8UI","","",null,null],[17,"RG16I","","",null,null],[17,"RG16UI","","",null,null],[17,"RG32I","","",null,null],[17,"RG32UI","","",null,null],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",null,null],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",null,null],[17,"DEBUG_CALLBACK_FUNCTION","","",null,null],[17,"DEBUG_CALLBACK_USER_PARAM","","",null,null],[17,"DEBUG_SOURCE_API","","",null,null],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",null,null],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",null,null],[17,"DEBUG_SOURCE_THIRD_PARTY","","",null,null],[17,"DEBUG_SOURCE_APPLICATION","","",null,null],[17,"DEBUG_SOURCE_OTHER","","",null,null],[17,"DEBUG_TYPE_ERROR","","",null,null],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_PORTABILITY","","",null,null],[17,"DEBUG_TYPE_PERFORMANCE","","",null,null],[17,"DEBUG_TYPE_OTHER","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"GUILTY_CONTEXT_RESET","","",null,null],[17,"INNOCENT_CONTEXT_RESET","","",null,null],[17,"UNKNOWN_CONTEXT_RESET","","",null,null],[17,"RESET_NOTIFICATION_STRATEGY","","",null,null],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",null,null],[17,"PROGRAM_SEPARABLE","","",null,null],[17,"ACTIVE_PROGRAM","","",null,null],[17,"PROGRAM_PIPELINE_BINDING","","",null,null],[17,"MAX_VIEWPORTS","","",null,null],[17,"VIEWPORT_SUBPIXEL_BITS","","",null,null],[17,"VIEWPORT_BOUNDS_RANGE","","",null,null],[17,"LAYER_PROVOKING_VERTEX","","",null,null],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",null,null],[17,"UNDEFINED_VERTEX","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",null,null],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"DEBUG_TYPE_MARKER","","",null,null],[17,"DEBUG_TYPE_PUSH_GROUP","","",null,null],[17,"DEBUG_TYPE_POP_GROUP","","",null,null],[17,"DEBUG_SEVERITY_NOTIFICATION","","",null,null],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"MAX_UNIFORM_LOCATIONS","","",null,null],[17,"INTERNALFORMAT_SUPPORTED","","",null,null],[17,"INTERNALFORMAT_PREFERRED","","",null,null],[17,"INTERNALFORMAT_RED_SIZE","","",null,null],[17,"INTERNALFORMAT_GREEN_SIZE","","",null,null],[17,"INTERNALFORMAT_BLUE_SIZE","","",null,null],[17,"INTERNALFORMAT_ALPHA_SIZE","","",null,null],[17,"INTERNALFORMAT_DEPTH_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_SIZE","","",null,null],[17,"INTERNALFORMAT_SHARED_SIZE","","",null,null],[17,"INTERNALFORMAT_RED_TYPE","","",null,null],[17,"INTERNALFORMAT_GREEN_TYPE","","",null,null],[17,"INTERNALFORMAT_BLUE_TYPE","","",null,null],[17,"INTERNALFORMAT_ALPHA_TYPE","","",null,null],[17,"INTERNALFORMAT_DEPTH_TYPE","","",null,null],[17,"INTERNALFORMAT_STENCIL_TYPE","","",null,null],[17,"MAX_WIDTH","","",null,null],[17,"MAX_HEIGHT","","",null,null],[17,"MAX_DEPTH","","",null,null],[17,"MAX_LAYERS","","",null,null],[17,"MAX_COMBINED_DIMENSIONS","","",null,null],[17,"COLOR_COMPONENTS","","",null,null],[17,"DEPTH_COMPONENTS","","",null,null],[17,"STENCIL_COMPONENTS","","",null,null],[17,"COLOR_RENDERABLE","","",null,null],[17,"DEPTH_RENDERABLE","","",null,null],[17,"STENCIL_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",null,null],[17,"FRAMEBUFFER_BLEND","","",null,null],[17,"READ_PIXELS","","",null,null],[17,"READ_PIXELS_FORMAT","","",null,null],[17,"READ_PIXELS_TYPE","","",null,null],[17,"TEXTURE_IMAGE_FORMAT","","",null,null],[17,"TEXTURE_IMAGE_TYPE","","",null,null],[17,"GET_TEXTURE_IMAGE_FORMAT","","",null,null],[17,"GET_TEXTURE_IMAGE_TYPE","","",null,null],[17,"MIPMAP","","",null,null],[17,"MANUAL_GENERATE_MIPMAP","","",null,null],[17,"AUTO_GENERATE_MIPMAP","","",null,null],[17,"COLOR_ENCODING","","",null,null],[17,"SRGB_READ","","",null,null],[17,"SRGB_WRITE","","",null,null],[17,"FILTER","","",null,null],[17,"VERTEX_TEXTURE","","",null,null],[17,"TESS_CONTROL_TEXTURE","","",null,null],[17,"TESS_EVALUATION_TEXTURE","","",null,null],[17,"GEOMETRY_TEXTURE","","",null,null],[17,"FRAGMENT_TEXTURE","","",null,null],[17,"COMPUTE_TEXTURE","","",null,null],[17,"TEXTURE_SHADOW","","",null,null],[17,"TEXTURE_GATHER","","",null,null],[17,"TEXTURE_GATHER_SHADOW","","",null,null],[17,"SHADER_IMAGE_LOAD","","",null,null],[17,"SHADER_IMAGE_STORE","","",null,null],[17,"SHADER_IMAGE_ATOMIC","","",null,null],[17,"IMAGE_TEXEL_SIZE","","",null,null],[17,"IMAGE_COMPATIBILITY_CLASS","","",null,null],[17,"IMAGE_PIXEL_FORMAT","","",null,null],[17,"IMAGE_PIXEL_TYPE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"CLEAR_BUFFER","","",null,null],[17,"TEXTURE_VIEW","","",null,null],[17,"VIEW_COMPATIBILITY_CLASS","","",null,null],[17,"FULL_SUPPORT","","",null,null],[17,"CAVEAT_SUPPORT","","",null,null],[17,"IMAGE_CLASS_4_X_32","","",null,null],[17,"IMAGE_CLASS_2_X_32","","",null,null],[17,"IMAGE_CLASS_1_X_32","","",null,null],[17,"IMAGE_CLASS_4_X_16","","",null,null],[17,"IMAGE_CLASS_2_X_16","","",null,null],[17,"IMAGE_CLASS_1_X_16","","",null,null],[17,"IMAGE_CLASS_4_X_8","","",null,null],[17,"IMAGE_CLASS_2_X_8","","",null,null],[17,"IMAGE_CLASS_1_X_8","","",null,null],[17,"IMAGE_CLASS_11_11_10","","",null,null],[17,"IMAGE_CLASS_10_10_10_2","","",null,null],[17,"VIEW_CLASS_128_BITS","","",null,null],[17,"VIEW_CLASS_96_BITS","","",null,null],[17,"VIEW_CLASS_64_BITS","","",null,null],[17,"VIEW_CLASS_48_BITS","","",null,null],[17,"VIEW_CLASS_32_BITS","","",null,null],[17,"VIEW_CLASS_24_BITS","","",null,null],[17,"VIEW_CLASS_16_BITS","","",null,null],[17,"VIEW_CLASS_8_BITS","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",null,null],[17,"VIEW_CLASS_RGTC1_RED","","",null,null],[17,"VIEW_CLASS_RGTC2_RG","","",null,null],[17,"VIEW_CLASS_BPTC_UNORM","","",null,null],[17,"VIEW_CLASS_BPTC_FLOAT","","",null,null],[17,"VERTEX_ATTRIB_BINDING","","",null,null],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"VERTEX_BINDING_DIVISOR","","",null,null],[17,"VERTEX_BINDING_OFFSET","","",null,null],[17,"VERTEX_BINDING_STRIDE","","",null,null],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",null,null],[17,"TEXTURE_VIEW_MIN_LEVEL","","",null,null],[17,"TEXTURE_VIEW_NUM_LEVELS","","",null,null],[17,"TEXTURE_VIEW_MIN_LAYER","","",null,null],[17,"TEXTURE_VIEW_NUM_LAYERS","","",null,null],[17,"TEXTURE_IMMUTABLE_LEVELS","","",null,null],[17,"BUFFER","","",null,null],[17,"SHADER","","",null,null],[17,"PROGRAM","","",null,null],[17,"QUERY","","",null,null],[17,"PROGRAM_PIPELINE","","",null,null],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",null,null],[17,"SAMPLER","","",null,null],[17,"DISPLAY_LIST","","",null,null],[17,"MAX_LABEL_LENGTH","","",null,null],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",null,null],[17,"QUERY_TARGET","","",null,null],[17,"TEXTURE_BINDING","","",null,null],[17,"MAX_CULL_DISTANCES","","",null,null],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",null,null],[17,"UNSIGNED_BYTE_2_3_3_REV","","",null,null],[17,"UNSIGNED_SHORT_5_6_5","","",null,null],[17,"UNSIGNED_SHORT_5_6_5_REV","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",null,null],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",null,null],[17,"UNSIGNED_INT_8_8_8_8_REV","","",null,null],[17,"UNSIGNED_INT_2_10_10_10_REV","","",null,null],[17,"MIRRORED_REPEAT","","",null,null],[17,"ALIASED_LINE_WIDTH_RANGE","","",null,null],[17,"TEXTURE0","","",null,null],[17,"TEXTURE1","","",null,null],[17,"TEXTURE2","","",null,null],[17,"TEXTURE3","","",null,null],[17,"TEXTURE4","","",null,null],[17,"TEXTURE5","","",null,null],[17,"TEXTURE6","","",null,null],[17,"TEXTURE7","","",null,null],[17,"TEXTURE8","","",null,null],[17,"TEXTURE9","","",null,null],[17,"TEXTURE10","","",null,null],[17,"TEXTURE11","","",null,null],[17,"TEXTURE12","","",null,null],[17,"TEXTURE13","","",null,null],[17,"TEXTURE14","","",null,null],[17,"TEXTURE15","","",null,null],[17,"TEXTURE16","","",null,null],[17,"TEXTURE17","","",null,null],[17,"TEXTURE18","","",null,null],[17,"TEXTURE19","","",null,null],[17,"TEXTURE20","","",null,null],[17,"TEXTURE21","","",null,null],[17,"TEXTURE22","","",null,null],[17,"TEXTURE23","","",null,null],[17,"TEXTURE24","","",null,null],[17,"TEXTURE25","","",null,null],[17,"TEXTURE26","","",null,null],[17,"TEXTURE27","","",null,null],[17,"TEXTURE28","","",null,null],[17,"TEXTURE29","","",null,null],[17,"TEXTURE30","","",null,null],[17,"TEXTURE31","","",null,null],[17,"ACTIVE_TEXTURE","","",null,null],[17,"MAX_RENDERBUFFER_SIZE","","",null,null],[17,"COMPRESSED_RGB","","",null,null],[17,"COMPRESSED_RGBA","","",null,null],[17,"TEXTURE_COMPRESSION_HINT","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"TEXTURE_RECTANGLE","","",null,null],[17,"TEXTURE_BINDING_RECTANGLE","","",null,null],[17,"PROXY_TEXTURE_RECTANGLE","","",null,null],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",null,null],[17,"DEPTH_STENCIL","","",null,null],[17,"UNSIGNED_INT_24_8","","",null,null],[17,"MAX_TEXTURE_LOD_BIAS","","",null,null],[17,"TEXTURE_LOD_BIAS","","",null,null],[17,"INCR_WRAP","","",null,null],[17,"DECR_WRAP","","",null,null],[17,"TEXTURE_CUBE_MAP","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP","","",null,null],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",null,null],[17,"SRC1_ALPHA","","",null,null],[17,"VERTEX_ARRAY_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",null,null],[17,"CURRENT_VERTEX_ATTRIB","","",null,null],[17,"VERTEX_PROGRAM_POINT_SIZE","","",null,null],[17,"PROGRAM_POINT_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",null,null],[17,"DEPTH_CLAMP","","",null,null],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",null,null],[17,"TEXTURE_COMPRESSED","","",null,null],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"PROGRAM_BINARY_LENGTH","","",null,null],[17,"MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"BUFFER_USAGE","","",null,null],[17,"NUM_PROGRAM_BINARY_FORMATS","","",null,null],[17,"PROGRAM_BINARY_FORMATS","","",null,null],[17,"STENCIL_BACK_FUNC","","",null,null],[17,"STENCIL_BACK_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",null,null],[17,"RGBA32F","","",null,null],[17,"RGB32F","","",null,null],[17,"RGBA16F","","",null,null],[17,"RGB16F","","",null,null],[17,"MAX_DRAW_BUFFERS","","",null,null],[17,"DRAW_BUFFER0","","",null,null],[17,"DRAW_BUFFER1","","",null,null],[17,"DRAW_BUFFER2","","",null,null],[17,"DRAW_BUFFER3","","",null,null],[17,"DRAW_BUFFER4","","",null,null],[17,"DRAW_BUFFER5","","",null,null],[17,"DRAW_BUFFER6","","",null,null],[17,"DRAW_BUFFER7","","",null,null],[17,"DRAW_BUFFER8","","",null,null],[17,"DRAW_BUFFER9","","",null,null],[17,"DRAW_BUFFER10","","",null,null],[17,"DRAW_BUFFER11","","",null,null],[17,"DRAW_BUFFER12","","",null,null],[17,"DRAW_BUFFER13","","",null,null],[17,"DRAW_BUFFER14","","",null,null],[17,"DRAW_BUFFER15","","",null,null],[17,"BLEND_EQUATION_ALPHA","","",null,null],[17,"TEXTURE_DEPTH_SIZE","","",null,null],[17,"TEXTURE_COMPARE_MODE","","",null,null],[17,"TEXTURE_COMPARE_FUNC","","",null,null],[17,"COMPARE_REF_TO_TEXTURE","","",null,null],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",null,null],[17,"QUERY_COUNTER_BITS","","",null,null],[17,"CURRENT_QUERY","","",null,null],[17,"QUERY_RESULT","","",null,null],[17,"QUERY_RESULT_AVAILABLE","","",null,null],[17,"MAX_VERTEX_ATTRIBS","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",null,null],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",null,null],[17,"MAX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"ARRAY_BUFFER","","",null,null],[17,"ELEMENT_ARRAY_BUFFER","","",null,null],[17,"ARRAY_BUFFER_BINDING","","",null,null],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",null,null],[17,"READ_ONLY","","",null,null],[17,"WRITE_ONLY","","",null,null],[17,"READ_WRITE","","",null,null],[17,"BUFFER_ACCESS","","",null,null],[17,"BUFFER_MAPPED","","",null,null],[17,"BUFFER_MAP_POINTER","","",null,null],[17,"TIME_ELAPSED","","",null,null],[17,"STREAM_DRAW","","",null,null],[17,"STREAM_READ","","",null,null],[17,"STREAM_COPY","","",null,null],[17,"STATIC_DRAW","","",null,null],[17,"STATIC_READ","","",null,null],[17,"STATIC_COPY","","",null,null],[17,"DYNAMIC_DRAW","","",null,null],[17,"DYNAMIC_READ","","",null,null],[17,"DYNAMIC_COPY","","",null,null],[17,"PIXEL_PACK_BUFFER","","",null,null],[17,"PIXEL_UNPACK_BUFFER","","",null,null],[17,"PIXEL_PACK_BUFFER_BINDING","","",null,null],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",null,null],[17,"DEPTH24_STENCIL8","","",null,null],[17,"TEXTURE_STENCIL_SIZE","","",null,null],[17,"SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",null,null],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",null,null],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"SAMPLES_PASSED","","",null,null],[17,"GEOMETRY_VERTICES_OUT","","",null,null],[17,"GEOMETRY_INPUT_TYPE","","",null,null],[17,"GEOMETRY_OUTPUT_TYPE","","",null,null],[17,"SAMPLER_BINDING","","",null,null],[17,"CLAMP_READ_COLOR","","",null,null],[17,"FIXED_ONLY","","",null,null],[17,"UNIFORM_BUFFER","","",null,null],[17,"UNIFORM_BUFFER_BINDING","","",null,null],[17,"UNIFORM_BUFFER_START","","",null,null],[17,"UNIFORM_BUFFER_SIZE","","",null,null],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",null,null],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",null,null],[17,"MAX_UNIFORM_BLOCK_SIZE","","",null,null],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",null,null],[17,"ACTIVE_UNIFORM_BLOCKS","","",null,null],[17,"UNIFORM_TYPE","","",null,null],[17,"UNIFORM_SIZE","","",null,null],[17,"UNIFORM_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_INDEX","","",null,null],[17,"UNIFORM_OFFSET","","",null,null],[17,"UNIFORM_ARRAY_STRIDE","","",null,null],[17,"UNIFORM_MATRIX_STRIDE","","",null,null],[17,"UNIFORM_IS_ROW_MAJOR","","",null,null],[17,"UNIFORM_BLOCK_BINDING","","",null,null],[17,"UNIFORM_BLOCK_DATA_SIZE","","",null,null],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"FRAGMENT_SHADER","","",null,null],[17,"VERTEX_SHADER","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VARYING_FLOATS","","",null,null],[17,"MAX_VARYING_COMPONENTS","","",null,null],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",null,null],[17,"SHADER_TYPE","","",null,null],[17,"FLOAT_VEC2","","",null,null],[17,"FLOAT_VEC3","","",null,null],[17,"FLOAT_VEC4","","",null,null],[17,"INT_VEC2","","",null,null],[17,"INT_VEC3","","",null,null],[17,"INT_VEC4","","",null,null],[17,"BOOL","","",null,null],[17,"BOOL_VEC2","","",null,null],[17,"BOOL_VEC3","","",null,null],[17,"BOOL_VEC4","","",null,null],[17,"FLOAT_MAT2","","",null,null],[17,"FLOAT_MAT3","","",null,null],[17,"FLOAT_MAT4","","",null,null],[17,"SAMPLER_1D","","",null,null],[17,"SAMPLER_2D","","",null,null],[17,"SAMPLER_3D","","",null,null],[17,"SAMPLER_CUBE","","",null,null],[17,"SAMPLER_1D_SHADOW","","",null,null],[17,"SAMPLER_2D_SHADOW","","",null,null],[17,"SAMPLER_2D_RECT","","",null,null],[17,"SAMPLER_2D_RECT_SHADOW","","",null,null],[17,"FLOAT_MAT2x3","","",null,null],[17,"FLOAT_MAT2x4","","",null,null],[17,"FLOAT_MAT3x2","","",null,null],[17,"FLOAT_MAT3x4","","",null,null],[17,"FLOAT_MAT4x2","","",null,null],[17,"FLOAT_MAT4x3","","",null,null],[17,"DELETE_STATUS","","",null,null],[17,"COMPILE_STATUS","","",null,null],[17,"LINK_STATUS","","",null,null],[17,"VALIDATE_STATUS","","",null,null],[17,"INFO_LOG_LENGTH","","",null,null],[17,"ATTACHED_SHADERS","","",null,null],[17,"ACTIVE_UNIFORMS","","",null,null],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",null,null],[17,"SHADER_SOURCE_LENGTH","","",null,null],[17,"ACTIVE_ATTRIBUTES","","",null,null],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",null,null],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",null,null],[17,"SHADING_LANGUAGE_VERSION","","",null,null],[17,"CURRENT_PROGRAM","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",null,null],[17,"TEXTURE_RED_TYPE","","",null,null],[17,"TEXTURE_GREEN_TYPE","","",null,null],[17,"TEXTURE_BLUE_TYPE","","",null,null],[17,"TEXTURE_ALPHA_TYPE","","",null,null],[17,"TEXTURE_DEPTH_TYPE","","",null,null],[17,"UNSIGNED_NORMALIZED","","",null,null],[17,"TEXTURE_1D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_1D_ARRAY","","",null,null],[17,"TEXTURE_2D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_1D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_ARRAY","","",null,null],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",null,null],[17,"TEXTURE_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_BINDING","","",null,null],[17,"MAX_TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_BINDING_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",null,null],[17,"ANY_SAMPLES_PASSED","","",null,null],[17,"SAMPLE_SHADING","","",null,null],[17,"MIN_SAMPLE_SHADING_VALUE","","",null,null],[17,"R11F_G11F_B10F","","",null,null],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",null,null],[17,"RGB9_E5","","",null,null],[17,"UNSIGNED_INT_5_9_9_9_REV","","",null,null],[17,"TEXTURE_SHARED_SIZE","","",null,null],[17,"SRGB","","",null,null],[17,"SRGB8","","",null,null],[17,"SRGB_ALPHA","","",null,null],[17,"SRGB8_ALPHA8","","",null,null],[17,"COMPRESSED_SRGB","","",null,null],[17,"COMPRESSED_SRGB_ALPHA","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",null,null],[17,"PRIMITIVES_GENERATED","","",null,null],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",null,null],[17,"RASTERIZER_DISCARD","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",null,null],[17,"INTERLEAVED_ATTRIBS","","",null,null],[17,"SEPARATE_ATTRIBS","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",null,null],[17,"POINT_SPRITE_COORD_ORIGIN","","",null,null],[17,"LOWER_LEFT","","",null,null],[17,"UPPER_LEFT","","",null,null],[17,"STENCIL_BACK_REF","","",null,null],[17,"STENCIL_BACK_VALUE_MASK","","",null,null],[17,"STENCIL_BACK_WRITEMASK","","",null,null],[17,"DRAW_FRAMEBUFFER_BINDING","","",null,null],[17,"FRAMEBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_BINDING","","",null,null],[17,"READ_FRAMEBUFFER","","",null,null],[17,"DRAW_FRAMEBUFFER","","",null,null],[17,"READ_FRAMEBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_SAMPLES","","",null,null],[17,"DEPTH_COMPONENT32F","","",null,null],[17,"DEPTH32F_STENCIL8","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",null,null],[17,"FRAMEBUFFER_COMPLETE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",null,null],[17,"FRAMEBUFFER_UNSUPPORTED","","",null,null],[17,"MAX_COLOR_ATTACHMENTS","","",null,null],[17,"COLOR_ATTACHMENT0","","",null,null],[17,"COLOR_ATTACHMENT1","","",null,null],[17,"COLOR_ATTACHMENT2","","",null,null],[17,"COLOR_ATTACHMENT3","","",null,null],[17,"COLOR_ATTACHMENT4","","",null,null],[17,"COLOR_ATTACHMENT5","","",null,null],[17,"COLOR_ATTACHMENT6","","",null,null],[17,"COLOR_ATTACHMENT7","","",null,null],[17,"COLOR_ATTACHMENT8","","",null,null],[17,"COLOR_ATTACHMENT9","","",null,null],[17,"COLOR_ATTACHMENT10","","",null,null],[17,"COLOR_ATTACHMENT11","","",null,null],[17,"COLOR_ATTACHMENT12","","",null,null],[17,"COLOR_ATTACHMENT13","","",null,null],[17,"COLOR_ATTACHMENT14","","",null,null],[17,"COLOR_ATTACHMENT15","","",null,null],[17,"DEPTH_ATTACHMENT","","",null,null],[17,"STENCIL_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER","","",null,null],[17,"RENDERBUFFER","","",null,null],[17,"RENDERBUFFER_WIDTH","","",null,null],[17,"RENDERBUFFER_HEIGHT","","",null,null],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",null,null],[17,"STENCIL_INDEX1","","",null,null],[17,"STENCIL_INDEX4","","",null,null],[17,"STENCIL_INDEX8","","",null,null],[17,"STENCIL_INDEX16","","",null,null],[17,"RENDERBUFFER_RED_SIZE","","",null,null],[17,"RENDERBUFFER_GREEN_SIZE","","",null,null],[17,"RENDERBUFFER_BLUE_SIZE","","",null,null],[17,"RENDERBUFFER_ALPHA_SIZE","","",null,null],[17,"RENDERBUFFER_DEPTH_SIZE","","",null,null],[17,"RENDERBUFFER_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",null,null],[17,"MAX_SAMPLES","","",null,null],[17,"RGB565","","",null,null],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",null,null],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",null,null],[17,"MAX_ELEMENT_INDEX","","",null,null],[17,"RGBA32UI","","",null,null],[17,"RGB32UI","","",null,null],[17,"RGBA16UI","","",null,null],[17,"RGB16UI","","",null,null],[17,"RGBA8UI","","",null,null],[17,"RGB8UI","","",null,null],[17,"RGBA32I","","",null,null],[17,"RGB32I","","",null,null],[17,"RGBA16I","","",null,null],[17,"RGB16I","","",null,null],[17,"RGBA8I","","",null,null],[17,"RGB8I","","",null,null],[17,"RED_INTEGER","","",null,null],[17,"GREEN_INTEGER","","",null,null],[17,"BLUE_INTEGER","","",null,null],[17,"RGB_INTEGER","","",null,null],[17,"RGBA_INTEGER","","",null,null],[17,"BGR_INTEGER","","",null,null],[17,"BGRA_INTEGER","","",null,null],[17,"INT_2_10_10_10_REV","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",null,null],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",null,null],[17,"FRAMEBUFFER_SRGB","","",null,null],[17,"COMPRESSED_RED_RGTC1","","",null,null],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",null,null],[17,"COMPRESSED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",null,null],[17,"SAMPLER_1D_ARRAY","","",null,null],[17,"SAMPLER_2D_ARRAY","","",null,null],[17,"SAMPLER_BUFFER","","",null,null],[17,"SAMPLER_1D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_2D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_CUBE_SHADOW","","",null,null],[17,"UNSIGNED_INT_VEC2","","",null,null],[17,"UNSIGNED_INT_VEC3","","",null,null],[17,"UNSIGNED_INT_VEC4","","",null,null],[17,"INT_SAMPLER_1D","","",null,null],[17,"INT_SAMPLER_2D","","",null,null],[17,"INT_SAMPLER_3D","","",null,null],[17,"INT_SAMPLER_CUBE","","",null,null],[17,"INT_SAMPLER_2D_RECT","","",null,null],[17,"INT_SAMPLER_1D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_ARRAY","","",null,null],[17,"INT_SAMPLER_BUFFER","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_3D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",null,null],[17,"GEOMETRY_SHADER","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",null,null],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"ACTIVE_SUBROUTINES","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",null,null],[17,"MAX_SUBROUTINES","","",null,null],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"LOW_FLOAT","","",null,null],[17,"MEDIUM_FLOAT","","",null,null],[17,"HIGH_FLOAT","","",null,null],[17,"LOW_INT","","",null,null],[17,"MEDIUM_INT","","",null,null],[17,"HIGH_INT","","",null,null],[17,"SHADER_BINARY_FORMATS","","",null,null],[17,"NUM_SHADER_BINARY_FORMATS","","",null,null],[17,"SHADER_COMPILER","","",null,null],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",null,null],[17,"MAX_VARYING_VECTORS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",null,null],[17,"QUERY_WAIT","","",null,null],[17,"QUERY_NO_WAIT","","",null,null],[17,"QUERY_BY_REGION_WAIT","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT","","",null,null],[17,"QUERY_WAIT_INVERTED","","",null,null],[17,"QUERY_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",null,null],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"TRANSFORM_FEEDBACK","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BINDING","","",null,null],[17,"TIMESTAMP","","",null,null],[17,"TEXTURE_SWIZZLE_R","","",null,null],[17,"TEXTURE_SWIZZLE_G","","",null,null],[17,"TEXTURE_SWIZZLE_B","","",null,null],[17,"TEXTURE_SWIZZLE_A","","",null,null],[17,"TEXTURE_SWIZZLE_RGBA","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",null,null],[17,"NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"COMPATIBLE_SUBROUTINES","","",null,null],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",null,null],[17,"FIRST_VERTEX_CONVENTION","","",null,null],[17,"LAST_VERTEX_CONVENTION","","",null,null],[17,"PROVOKING_VERTEX","","",null,null],[17,"SAMPLE_POSITION","","",null,null],[17,"SAMPLE_MASK","","",null,null],[17,"SAMPLE_MASK_VALUE","","",null,null],[17,"MAX_SAMPLE_MASK_WORDS","","",null,null],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",null,null],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",null,null],[17,"MAX_VERTEX_STREAMS","","",null,null],[17,"PATCH_VERTICES","","",null,null],[17,"PATCH_DEFAULT_INNER_LEVEL","","",null,null],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",null,null],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",null,null],[17,"TESS_GEN_MODE","","",null,null],[17,"TESS_GEN_SPACING","","",null,null],[17,"TESS_GEN_VERTEX_ORDER","","",null,null],[17,"TESS_GEN_POINT_MODE","","",null,null],[17,"ISOLINES","","",null,null],[17,"FRACTIONAL_ODD","","",null,null],[17,"FRACTIONAL_EVEN","","",null,null],[17,"MAX_PATCH_VERTICES","","",null,null],[17,"MAX_TESS_GEN_LEVEL","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_PATCH_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",null,null],[17,"TESS_EVALUATION_SHADER","","",null,null],[17,"TESS_CONTROL_SHADER","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",null,null],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",null,null],[17,"COPY_READ_BUFFER","","",null,null],[17,"COPY_READ_BUFFER_BINDING","","",null,null],[17,"COPY_WRITE_BUFFER","","",null,null],[17,"COPY_WRITE_BUFFER_BINDING","","",null,null],[17,"MAX_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",null,null],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",null,null],[17,"IMAGE_BINDING_NAME","","",null,null],[17,"IMAGE_BINDING_LEVEL","","",null,null],[17,"IMAGE_BINDING_LAYERED","","",null,null],[17,"IMAGE_BINDING_LAYER","","",null,null],[17,"IMAGE_BINDING_ACCESS","","",null,null],[17,"DRAW_INDIRECT_BUFFER","","",null,null],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DOUBLE_MAT2","","",null,null],[17,"DOUBLE_MAT3","","",null,null],[17,"DOUBLE_MAT4","","",null,null],[17,"DOUBLE_MAT2x3","","",null,null],[17,"DOUBLE_MAT2x4","","",null,null],[17,"DOUBLE_MAT3x2","","",null,null],[17,"DOUBLE_MAT3x4","","",null,null],[17,"DOUBLE_MAT4x2","","",null,null],[17,"DOUBLE_MAT4x3","","",null,null],[17,"VERTEX_BINDING_BUFFER","","",null,null],[17,"R8_SNORM","","",null,null],[17,"RG8_SNORM","","",null,null],[17,"RGB8_SNORM","","",null,null],[17,"RGBA8_SNORM","","",null,null],[17,"R16_SNORM","","",null,null],[17,"RG16_SNORM","","",null,null],[17,"RGB16_SNORM","","",null,null],[17,"RGBA16_SNORM","","",null,null],[17,"SIGNED_NORMALIZED","","",null,null],[17,"PRIMITIVE_RESTART","","",null,null],[17,"PRIMITIVE_RESTART_INDEX","","",null,null],[17,"DOUBLE_VEC2","","",null,null],[17,"DOUBLE_VEC3","","",null,null],[17,"DOUBLE_VEC4","","",null,null],[17,"TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",null,null],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_1D","","",null,null],[17,"IMAGE_2D","","",null,null],[17,"IMAGE_3D","","",null,null],[17,"IMAGE_2D_RECT","","",null,null],[17,"IMAGE_CUBE","","",null,null],[17,"IMAGE_BUFFER","","",null,null],[17,"IMAGE_1D_ARRAY","","",null,null],[17,"IMAGE_2D_ARRAY","","",null,null],[17,"IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_2D_MULTISAMPLE","","",null,null],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_IMAGE_1D","","",null,null],[17,"INT_IMAGE_2D","","",null,null],[17,"INT_IMAGE_3D","","",null,null],[17,"INT_IMAGE_2D_RECT","","",null,null],[17,"INT_IMAGE_CUBE","","",null,null],[17,"INT_IMAGE_BUFFER","","",null,null],[17,"INT_IMAGE_1D_ARRAY","","",null,null],[17,"INT_IMAGE_2D_ARRAY","","",null,null],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D","","",null,null],[17,"UNSIGNED_INT_IMAGE_3D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE","","",null,null],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_IMAGE_SAMPLES","","",null,null],[17,"IMAGE_BINDING_FORMAT","","",null,null],[17,"RGB10_A2UI","","",null,null],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",null,null],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",null,null],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",null,null],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",null,null],[17,"SHADER_STORAGE_BUFFER","","",null,null],[17,"SHADER_STORAGE_BUFFER_BINDING","","",null,null],[17,"SHADER_STORAGE_BUFFER_START","","",null,null],[17,"SHADER_STORAGE_BUFFER_SIZE","","",null,null],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",null,null],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",null,null],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_SAMPLES","","",null,null],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",null,null],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",null,null],[17,"MAX_INTEGER_SAMPLES","","",null,null],[17,"MAX_SERVER_WAIT_TIMEOUT","","",null,null],[17,"OBJECT_TYPE","","",null,null],[17,"SYNC_CONDITION","","",null,null],[17,"SYNC_STATUS","","",null,null],[17,"SYNC_FLAGS","","",null,null],[17,"SYNC_FENCE","","",null,null],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",null,null],[17,"UNSIGNALED","","",null,null],[17,"SIGNALED","","",null,null],[17,"ALREADY_SIGNALED","","",null,null],[17,"TIMEOUT_EXPIRED","","",null,null],[17,"CONDITION_SATISFIED","","",null,null],[17,"WAIT_FAILED","","",null,null],[17,"BUFFER_ACCESS_FLAGS","","",null,null],[17,"BUFFER_MAP_LENGTH","","",null,null],[17,"BUFFER_MAP_OFFSET","","",null,null],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",null,null],[17,"CONTEXT_PROFILE_MASK","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"TEXTURE_IMMUTABLE_FORMAT","","",null,null],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",null,null],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_SEVERITY_HIGH","","",null,null],[17,"DEBUG_SEVERITY_MEDIUM","","",null,null],[17,"DEBUG_SEVERITY_LOW","","",null,null],[17,"QUERY_BUFFER","","",null,null],[17,"QUERY_BUFFER_BINDING","","",null,null],[17,"QUERY_RESULT_NO_WAIT","","",null,null],[17,"TEXTURE_BUFFER_OFFSET","","",null,null],[17,"TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"COMPUTE_SHADER","","",null,null],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"COMPRESSED_R11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_R11_EAC","","",null,null],[17,"COMPRESSED_RG11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RG11_EAC","","",null,null],[17,"COMPRESSED_RGB8_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_ETC2","","",null,null],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",null,null],[17,"ATOMIC_COUNTER_BUFFER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_START","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",null,null],[17,"DEBUG_OUTPUT","","",null,null],[17,"UNIFORM","","",null,null],[17,"UNIFORM_BLOCK","","",null,null],[17,"PROGRAM_INPUT","","",null,null],[17,"PROGRAM_OUTPUT","","",null,null],[17,"BUFFER_VARIABLE","","",null,null],[17,"SHADER_STORAGE_BLOCK","","",null,null],[17,"IS_PER_PATCH","","",null,null],[17,"VERTEX_SUBROUTINE","","",null,null],[17,"TESS_CONTROL_SUBROUTINE","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE","","",null,null],[17,"GEOMETRY_SUBROUTINE","","",null,null],[17,"FRAGMENT_SUBROUTINE","","",null,null],[17,"COMPUTE_SUBROUTINE","","",null,null],[17,"VERTEX_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",null,null],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",null,null],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",null,null],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING","","",null,null],[17,"ACTIVE_RESOURCES","","",null,null],[17,"MAX_NAME_LENGTH","","",null,null],[17,"MAX_NUM_ACTIVE_VARIABLES","","",null,null],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"NAME_LENGTH","","",null,null],[17,"TYPE","","",null,null],[17,"ARRAY_SIZE","","",null,null],[17,"OFFSET","","",null,null],[17,"BLOCK_INDEX","","",null,null],[17,"ARRAY_STRIDE","","",null,null],[17,"MATRIX_STRIDE","","",null,null],[17,"IS_ROW_MAJOR","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"BUFFER_BINDING","","",null,null],[17,"BUFFER_DATA_SIZE","","",null,null],[17,"NUM_ACTIVE_VARIABLES","","",null,null],[17,"ACTIVE_VARIABLES","","",null,null],[17,"REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"TOP_LEVEL_ARRAY_SIZE","","",null,null],[17,"TOP_LEVEL_ARRAY_STRIDE","","",null,null],[17,"LOCATION","","",null,null],[17,"LOCATION_INDEX","","",null,null],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",null,null],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",null,null],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"MAX_FRAMEBUFFER_WIDTH","","",null,null],[17,"MAX_FRAMEBUFFER_HEIGHT","","",null,null],[17,"MAX_FRAMEBUFFER_LAYERS","","",null,null],[17,"MAX_FRAMEBUFFER_SAMPLES","","",null,null],[17,"LOCATION_COMPONENT","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",null,null],[17,"CLIP_ORIGIN","","",null,null],[17,"CLIP_DEPTH_MODE","","",null,null],[17,"NEGATIVE_ONE_TO_ONE","","",null,null],[17,"ZERO_TO_ONE","","",null,null],[17,"CLEAR_TEXTURE","","",null,null],[17,"NUM_SAMPLE_COUNTS","","",null,null],[11,"new","","Creates a `FnPtr` from a load attempt.",0,null]],"paths":[[3,"FnPtr"]]};
searchIndex['gfx_gl'] = {"items":[[0,"","gfx_gl","An OpenGL loader generated by [gl-rs](https://github.com/bjz/gl-rs).",null,null],[3,"FnPtr","","",null,null],[3,"Gl","","",null,null],[12,"ActiveShaderProgram","","",0,null],[12,"ActiveTexture","","Fallbacks: ActiveTextureARB",0,null],[12,"AttachShader","","Fallbacks: AttachObjectARB",0,null],[12,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",0,null],[12,"BeginQuery","","Fallbacks: BeginQueryARB",0,null],[12,"BeginQueryIndexed","","",0,null],[12,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV",0,null],[12,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",0,null],[12,"BindBuffer","","Fallbacks: BindBufferARB",0,null],[12,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",0,null],[12,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",0,null],[12,"BindBuffersBase","","",0,null],[12,"BindBuffersRange","","",0,null],[12,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",0,null],[12,"BindFragDataLocationIndexed","","",0,null],[12,"BindFramebuffer","","",0,null],[12,"BindImageTexture","","",0,null],[12,"BindImageTextures","","",0,null],[12,"BindProgramPipeline","","",0,null],[12,"BindRenderbuffer","","",0,null],[12,"BindSampler","","",0,null],[12,"BindSamplers","","",0,null],[12,"BindTexture","","Fallbacks: BindTextureEXT",0,null],[12,"BindTextureUnit","","",0,null],[12,"BindTextures","","",0,null],[12,"BindTransformFeedback","","",0,null],[12,"BindVertexArray","","Fallbacks: BindVertexArrayOES",0,null],[12,"BindVertexBuffer","","",0,null],[12,"BindVertexBuffers","","",0,null],[12,"BlendColor","","Fallbacks: BlendColorEXT",0,null],[12,"BlendEquation","","Fallbacks: BlendEquationEXT",0,null],[12,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",0,null],[12,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, BlendEquationSeparateiARB, BlendEquationSeparateiEXT, BlendEquationSeparateiOES",0,null],[12,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, BlendEquationiEXT, BlendEquationiOES",0,null],[12,"BlendFunc","","",0,null],[12,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",0,null],[12,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, BlendFuncSeparateiARB, BlendFuncSeparateiEXT, BlendFuncSeparateiOES",0,null],[12,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, BlendFunciEXT, BlendFunciOES",0,null],[12,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",0,null],[12,"BlitNamedFramebuffer","","",0,null],[12,"BufferData","","Fallbacks: BufferDataARB",0,null],[12,"BufferStorage","","Fallbacks: BufferStorageEXT",0,null],[12,"BufferSubData","","Fallbacks: BufferSubDataARB",0,null],[12,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",0,null],[12,"CheckNamedFramebufferStatus","","",0,null],[12,"ClampColor","","Fallbacks: ClampColorARB",0,null],[12,"Clear","","",0,null],[12,"ClearBufferData","","",0,null],[12,"ClearBufferSubData","","",0,null],[12,"ClearBufferfi","","",0,null],[12,"ClearBufferfv","","",0,null],[12,"ClearBufferiv","","",0,null],[12,"ClearBufferuiv","","",0,null],[12,"ClearColor","","",0,null],[12,"ClearDepth","","",0,null],[12,"ClearDepthf","","Fallbacks: ClearDepthfOES",0,null],[12,"ClearNamedBufferData","","",0,null],[12,"ClearNamedBufferSubData","","",0,null],[12,"ClearNamedFramebufferfi","","",0,null],[12,"ClearNamedFramebufferfv","","",0,null],[12,"ClearNamedFramebufferiv","","",0,null],[12,"ClearNamedFramebufferuiv","","",0,null],[12,"ClearStencil","","",0,null],[12,"ClearTexImage","","",0,null],[12,"ClearTexSubImage","","",0,null],[12,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",0,null],[12,"ClipControl","","",0,null],[12,"ColorMask","","",0,null],[12,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, ColorMaskiOES",0,null],[12,"ColorP3ui","","",0,null],[12,"ColorP3uiv","","",0,null],[12,"ColorP4ui","","",0,null],[12,"ColorP4uiv","","",0,null],[12,"CompileShader","","Fallbacks: CompileShaderARB",0,null],[12,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",0,null],[12,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",0,null],[12,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB, CompressedTexImage3DOES",0,null],[12,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",0,null],[12,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",0,null],[12,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB, CompressedTexSubImage3DOES",0,null],[12,"CompressedTextureSubImage1D","","",0,null],[12,"CompressedTextureSubImage2D","","",0,null],[12,"CompressedTextureSubImage3D","","",0,null],[12,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",0,null],[12,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES",0,null],[12,"CopyNamedBufferSubData","","",0,null],[12,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",0,null],[12,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",0,null],[12,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",0,null],[12,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",0,null],[12,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT, CopyTexSubImage3DOES",0,null],[12,"CopyTextureSubImage1D","","",0,null],[12,"CopyTextureSubImage2D","","",0,null],[12,"CopyTextureSubImage3D","","",0,null],[12,"CreateBuffers","","",0,null],[12,"CreateFramebuffers","","",0,null],[12,"CreateProgram","","Fallbacks: CreateProgramObjectARB",0,null],[12,"CreateProgramPipelines","","",0,null],[12,"CreateQueries","","",0,null],[12,"CreateRenderbuffers","","",0,null],[12,"CreateSamplers","","",0,null],[12,"CreateShader","","Fallbacks: CreateShaderObjectARB",0,null],[12,"CreateShaderProgramv","","",0,null],[12,"CreateTextures","","",0,null],[12,"CreateTransformFeedbacks","","",0,null],[12,"CreateVertexArrays","","",0,null],[12,"CullFace","","",0,null],[12,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",0,null],[12,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",0,null],[12,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",0,null],[12,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",0,null],[12,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",0,null],[12,"DeleteProgram","","",0,null],[12,"DeleteProgramPipelines","","",0,null],[12,"DeleteQueries","","Fallbacks: DeleteQueriesARB",0,null],[12,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",0,null],[12,"DeleteSamplers","","",0,null],[12,"DeleteShader","","",0,null],[12,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",0,null],[12,"DeleteTextures","","",0,null],[12,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",0,null],[12,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",0,null],[12,"DepthFunc","","",0,null],[12,"DepthMask","","",0,null],[12,"DepthRange","","",0,null],[12,"DepthRangeArrayv","","",0,null],[12,"DepthRangeIndexed","","",0,null],[12,"DepthRangef","","Fallbacks: DepthRangefOES",0,null],[12,"DetachShader","","Fallbacks: DetachObjectARB",0,null],[12,"Disable","","",0,null],[12,"DisableVertexArrayAttrib","","",0,null],[12,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",0,null],[12,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, DisableiOES",0,null],[12,"DispatchCompute","","",0,null],[12,"DispatchComputeIndirect","","",0,null],[12,"DrawArrays","","Fallbacks: DrawArraysEXT",0,null],[12,"DrawArraysIndirect","","",0,null],[12,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV",0,null],[12,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",0,null],[12,"DrawBuffer","","",0,null],[12,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",0,null],[12,"DrawElements","","",0,null],[12,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT, DrawElementsBaseVertexOES",0,null],[12,"DrawElementsIndirect","","",0,null],[12,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV",0,null],[12,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",0,null],[12,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT, DrawElementsInstancedBaseVertexOES",0,null],[12,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",0,null],[12,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",0,null],[12,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT, DrawRangeElementsBaseVertexOES",0,null],[12,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackNV",0,null],[12,"DrawTransformFeedbackInstanced","","",0,null],[12,"DrawTransformFeedbackStream","","",0,null],[12,"DrawTransformFeedbackStreamInstanced","","",0,null],[12,"Enable","","",0,null],[12,"EnableVertexArrayAttrib","","",0,null],[12,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",0,null],[12,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, EnableiOES",0,null],[12,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",0,null],[12,"EndQuery","","Fallbacks: EndQueryARB",0,null],[12,"EndQueryIndexed","","",0,null],[12,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",0,null],[12,"FenceSync","","Fallbacks: FenceSyncAPPLE",0,null],[12,"Finish","","",0,null],[12,"Flush","","",0,null],[12,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT",0,null],[12,"FlushMappedNamedBufferRange","","",0,null],[12,"FramebufferParameteri","","",0,null],[12,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",0,null],[12,"FramebufferTexture","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, FramebufferTextureOES",0,null],[12,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",0,null],[12,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",0,null],[12,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT, FramebufferTexture3DOES",0,null],[12,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT",0,null],[12,"FrontFace","","",0,null],[12,"GenBuffers","","Fallbacks: GenBuffersARB",0,null],[12,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",0,null],[12,"GenProgramPipelines","","",0,null],[12,"GenQueries","","Fallbacks: GenQueriesARB",0,null],[12,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",0,null],[12,"GenSamplers","","",0,null],[12,"GenTextures","","",0,null],[12,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",0,null],[12,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",0,null],[12,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",0,null],[12,"GenerateTextureMipmap","","",0,null],[12,"GetActiveAtomicCounterBufferiv","","",0,null],[12,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",0,null],[12,"GetActiveSubroutineName","","",0,null],[12,"GetActiveSubroutineUniformName","","",0,null],[12,"GetActiveSubroutineUniformiv","","",0,null],[12,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",0,null],[12,"GetActiveUniformBlockName","","",0,null],[12,"GetActiveUniformBlockiv","","",0,null],[12,"GetActiveUniformName","","",0,null],[12,"GetActiveUniformsiv","","",0,null],[12,"GetAttachedShaders","","",0,null],[12,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",0,null],[12,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",0,null],[12,"GetBooleanv","","",0,null],[12,"GetBufferParameteri64v","","",0,null],[12,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",0,null],[12,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",0,null],[12,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",0,null],[12,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",0,null],[12,"GetCompressedTextureImage","","",0,null],[12,"GetCompressedTextureSubImage","","",0,null],[12,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",0,null],[12,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",0,null],[12,"GetDoublev","","",0,null],[12,"GetError","","",0,null],[12,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, GetFloati_vNV",0,null],[12,"GetFloatv","","",0,null],[12,"GetFragDataIndex","","",0,null],[12,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",0,null],[12,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",0,null],[12,"GetFramebufferParameteriv","","",0,null],[12,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusKHR",0,null],[12,"GetInteger64i_v","","",0,null],[12,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",0,null],[12,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",0,null],[12,"GetIntegerv","","",0,null],[12,"GetInternalformati64v","","",0,null],[12,"GetInternalformativ","","",0,null],[12,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",0,null],[12,"GetNamedBufferParameteri64v","","",0,null],[12,"GetNamedBufferParameteriv","","",0,null],[12,"GetNamedBufferPointerv","","",0,null],[12,"GetNamedBufferSubData","","",0,null],[12,"GetNamedFramebufferAttachmentParameteriv","","",0,null],[12,"GetNamedFramebufferParameteriv","","",0,null],[12,"GetNamedRenderbufferParameteriv","","",0,null],[12,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",0,null],[12,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",0,null],[12,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",0,null],[12,"GetProgramInfoLog","","",0,null],[12,"GetProgramInterfaceiv","","",0,null],[12,"GetProgramPipelineInfoLog","","",0,null],[12,"GetProgramPipelineiv","","",0,null],[12,"GetProgramResourceIndex","","",0,null],[12,"GetProgramResourceLocation","","",0,null],[12,"GetProgramResourceLocationIndex","","",0,null],[12,"GetProgramResourceName","","",0,null],[12,"GetProgramResourceiv","","",0,null],[12,"GetProgramStageiv","","",0,null],[12,"GetProgramiv","","",0,null],[12,"GetQueryBufferObjecti64v","","",0,null],[12,"GetQueryBufferObjectiv","","",0,null],[12,"GetQueryBufferObjectui64v","","",0,null],[12,"GetQueryBufferObjectuiv","","",0,null],[12,"GetQueryIndexediv","","",0,null],[12,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",0,null],[12,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",0,null],[12,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",0,null],[12,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",0,null],[12,"GetQueryiv","","Fallbacks: GetQueryivARB",0,null],[12,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",0,null],[12,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT, GetSamplerParameterIivOES",0,null],[12,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT, GetSamplerParameterIuivOES",0,null],[12,"GetSamplerParameterfv","","",0,null],[12,"GetSamplerParameteriv","","",0,null],[12,"GetShaderInfoLog","","",0,null],[12,"GetShaderPrecisionFormat","","",0,null],[12,"GetShaderSource","","Fallbacks: GetShaderSourceARB",0,null],[12,"GetShaderiv","","",0,null],[12,"GetString","","",0,null],[12,"GetStringi","","",0,null],[12,"GetSubroutineIndex","","",0,null],[12,"GetSubroutineUniformLocation","","",0,null],[12,"GetSynciv","","Fallbacks: GetSyncivAPPLE",0,null],[12,"GetTexImage","","",0,null],[12,"GetTexLevelParameterfv","","",0,null],[12,"GetTexLevelParameteriv","","",0,null],[12,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES",0,null],[12,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES",0,null],[12,"GetTexParameterfv","","",0,null],[12,"GetTexParameteriv","","",0,null],[12,"GetTextureImage","","",0,null],[12,"GetTextureLevelParameterfv","","",0,null],[12,"GetTextureLevelParameteriv","","",0,null],[12,"GetTextureParameterIiv","","",0,null],[12,"GetTextureParameterIuiv","","",0,null],[12,"GetTextureParameterfv","","",0,null],[12,"GetTextureParameteriv","","",0,null],[12,"GetTextureSubImage","","",0,null],[12,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",0,null],[12,"GetTransformFeedbacki64_v","","",0,null],[12,"GetTransformFeedbacki_v","","",0,null],[12,"GetTransformFeedbackiv","","",0,null],[12,"GetUniformBlockIndex","","",0,null],[12,"GetUniformIndices","","",0,null],[12,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",0,null],[12,"GetUniformSubroutineuiv","","",0,null],[12,"GetUniformdv","","",0,null],[12,"GetUniformfv","","Fallbacks: GetUniformfvARB",0,null],[12,"GetUniformiv","","Fallbacks: GetUniformivARB",0,null],[12,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",0,null],[12,"GetVertexArrayIndexed64iv","","",0,null],[12,"GetVertexArrayIndexediv","","",0,null],[12,"GetVertexArrayiv","","",0,null],[12,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",0,null],[12,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",0,null],[12,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",0,null],[12,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV",0,null],[12,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",0,null],[12,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",0,null],[12,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",0,null],[12,"GetnColorTable","","",0,null],[12,"GetnCompressedTexImage","","",0,null],[12,"GetnConvolutionFilter","","",0,null],[12,"GetnHistogram","","",0,null],[12,"GetnMapdv","","",0,null],[12,"GetnMapfv","","",0,null],[12,"GetnMapiv","","",0,null],[12,"GetnMinmax","","",0,null],[12,"GetnPixelMapfv","","",0,null],[12,"GetnPixelMapuiv","","",0,null],[12,"GetnPixelMapusv","","",0,null],[12,"GetnPolygonStipple","","",0,null],[12,"GetnSeparableFilter","","",0,null],[12,"GetnTexImage","","",0,null],[12,"GetnUniformdv","","",0,null],[12,"GetnUniformfv","","Fallbacks: GetnUniformfvKHR",0,null],[12,"GetnUniformiv","","Fallbacks: GetnUniformivKHR",0,null],[12,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",0,null],[12,"Hint","","",0,null],[12,"InvalidateBufferData","","",0,null],[12,"InvalidateBufferSubData","","",0,null],[12,"InvalidateFramebuffer","","",0,null],[12,"InvalidateNamedFramebufferData","","",0,null],[12,"InvalidateNamedFramebufferSubData","","",0,null],[12,"InvalidateSubFramebuffer","","",0,null],[12,"InvalidateTexImage","","",0,null],[12,"InvalidateTexSubImage","","",0,null],[12,"IsBuffer","","Fallbacks: IsBufferARB",0,null],[12,"IsEnabled","","",0,null],[12,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV, IsEnablediOES",0,null],[12,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",0,null],[12,"IsProgram","","",0,null],[12,"IsProgramPipeline","","",0,null],[12,"IsQuery","","Fallbacks: IsQueryARB",0,null],[12,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",0,null],[12,"IsSampler","","",0,null],[12,"IsShader","","",0,null],[12,"IsSync","","Fallbacks: IsSyncAPPLE",0,null],[12,"IsTexture","","",0,null],[12,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",0,null],[12,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",0,null],[12,"LineWidth","","",0,null],[12,"LinkProgram","","Fallbacks: LinkProgramARB",0,null],[12,"LogicOp","","",0,null],[12,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",0,null],[12,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",0,null],[12,"MapNamedBuffer","","",0,null],[12,"MapNamedBufferRange","","",0,null],[12,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",0,null],[12,"MemoryBarrierByRegion","","",0,null],[12,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",0,null],[12,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",0,null],[12,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, MultiDrawArraysIndirectEXT",0,null],[12,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",0,null],[12,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT, MultiDrawElementsBaseVertexOES",0,null],[12,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectAMD, MultiDrawElementsIndirectEXT",0,null],[12,"MultiTexCoordP1ui","","",0,null],[12,"MultiTexCoordP1uiv","","",0,null],[12,"MultiTexCoordP2ui","","",0,null],[12,"MultiTexCoordP2uiv","","",0,null],[12,"MultiTexCoordP3ui","","",0,null],[12,"MultiTexCoordP3uiv","","",0,null],[12,"MultiTexCoordP4ui","","",0,null],[12,"MultiTexCoordP4uiv","","",0,null],[12,"NamedBufferData","","",0,null],[12,"NamedBufferStorage","","Fallbacks: NamedBufferStorageEXT",0,null],[12,"NamedBufferSubData","","Fallbacks: NamedBufferSubDataEXT",0,null],[12,"NamedFramebufferDrawBuffer","","",0,null],[12,"NamedFramebufferDrawBuffers","","",0,null],[12,"NamedFramebufferParameteri","","",0,null],[12,"NamedFramebufferReadBuffer","","",0,null],[12,"NamedFramebufferRenderbuffer","","",0,null],[12,"NamedFramebufferTexture","","",0,null],[12,"NamedFramebufferTextureLayer","","",0,null],[12,"NamedRenderbufferStorage","","",0,null],[12,"NamedRenderbufferStorageMultisample","","",0,null],[12,"NormalP3ui","","",0,null],[12,"NormalP3uiv","","",0,null],[12,"ObjectLabel","","Fallbacks: ObjectLabelKHR",0,null],[12,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",0,null],[12,"PatchParameterfv","","",0,null],[12,"PatchParameteri","","Fallbacks: PatchParameteriEXT, PatchParameteriOES",0,null],[12,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",0,null],[12,"PixelStoref","","",0,null],[12,"PixelStorei","","",0,null],[12,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS",0,null],[12,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS",0,null],[12,"PointParameteri","","Fallbacks: PointParameteriNV",0,null],[12,"PointParameteriv","","Fallbacks: PointParameterivNV",0,null],[12,"PointSize","","",0,null],[12,"PolygonMode","","Fallbacks: PolygonModeNV",0,null],[12,"PolygonOffset","","",0,null],[12,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",0,null],[12,"PrimitiveRestartIndex","","",0,null],[12,"ProgramBinary","","Fallbacks: ProgramBinaryOES",0,null],[12,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",0,null],[12,"ProgramUniform1d","","",0,null],[12,"ProgramUniform1dv","","",0,null],[12,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",0,null],[12,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",0,null],[12,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",0,null],[12,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",0,null],[12,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",0,null],[12,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",0,null],[12,"ProgramUniform2d","","",0,null],[12,"ProgramUniform2dv","","",0,null],[12,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",0,null],[12,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",0,null],[12,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",0,null],[12,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",0,null],[12,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",0,null],[12,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",0,null],[12,"ProgramUniform3d","","",0,null],[12,"ProgramUniform3dv","","",0,null],[12,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",0,null],[12,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",0,null],[12,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",0,null],[12,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",0,null],[12,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",0,null],[12,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",0,null],[12,"ProgramUniform4d","","",0,null],[12,"ProgramUniform4dv","","",0,null],[12,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",0,null],[12,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",0,null],[12,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",0,null],[12,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",0,null],[12,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",0,null],[12,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",0,null],[12,"ProgramUniformMatrix2dv","","",0,null],[12,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",0,null],[12,"ProgramUniformMatrix2x3dv","","",0,null],[12,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",0,null],[12,"ProgramUniformMatrix2x4dv","","",0,null],[12,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",0,null],[12,"ProgramUniformMatrix3dv","","",0,null],[12,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",0,null],[12,"ProgramUniformMatrix3x2dv","","",0,null],[12,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",0,null],[12,"ProgramUniformMatrix3x4dv","","",0,null],[12,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",0,null],[12,"ProgramUniformMatrix4dv","","",0,null],[12,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",0,null],[12,"ProgramUniformMatrix4x2dv","","",0,null],[12,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",0,null],[12,"ProgramUniformMatrix4x3dv","","",0,null],[12,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",0,null],[12,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",0,null],[12,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",0,null],[12,"QueryCounter","","Fallbacks: QueryCounterEXT",0,null],[12,"ReadBuffer","","",0,null],[12,"ReadPixels","","",0,null],[12,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",0,null],[12,"ReleaseShaderCompiler","","",0,null],[12,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",0,null],[12,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV",0,null],[12,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",0,null],[12,"SampleCoverage","","Fallbacks: SampleCoverageARB",0,null],[12,"SampleMaski","","",0,null],[12,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES",0,null],[12,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES",0,null],[12,"SamplerParameterf","","",0,null],[12,"SamplerParameterfv","","",0,null],[12,"SamplerParameteri","","",0,null],[12,"SamplerParameteriv","","",0,null],[12,"Scissor","","",0,null],[12,"ScissorArrayv","","Fallbacks: ScissorArrayvNV",0,null],[12,"ScissorIndexed","","Fallbacks: ScissorIndexedNV",0,null],[12,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV",0,null],[12,"SecondaryColorP3ui","","",0,null],[12,"SecondaryColorP3uiv","","",0,null],[12,"ShaderBinary","","",0,null],[12,"ShaderSource","","Fallbacks: ShaderSourceARB",0,null],[12,"ShaderStorageBlockBinding","","",0,null],[12,"StencilFunc","","",0,null],[12,"StencilFuncSeparate","","",0,null],[12,"StencilMask","","",0,null],[12,"StencilMaskSeparate","","",0,null],[12,"StencilOp","","",0,null],[12,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",0,null],[12,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES",0,null],[12,"TexBufferRange","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES",0,null],[12,"TexCoordP1ui","","",0,null],[12,"TexCoordP1uiv","","",0,null],[12,"TexCoordP2ui","","",0,null],[12,"TexCoordP2uiv","","",0,null],[12,"TexCoordP3ui","","",0,null],[12,"TexCoordP3uiv","","",0,null],[12,"TexCoordP4ui","","",0,null],[12,"TexCoordP4uiv","","",0,null],[12,"TexImage1D","","",0,null],[12,"TexImage2D","","",0,null],[12,"TexImage2DMultisample","","",0,null],[12,"TexImage3D","","Fallbacks: TexImage3DEXT, TexImage3DOES",0,null],[12,"TexImage3DMultisample","","",0,null],[12,"TexParameterIiv","","Fallbacks: TexParameterIivEXT, TexParameterIivOES",0,null],[12,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES",0,null],[12,"TexParameterf","","",0,null],[12,"TexParameterfv","","",0,null],[12,"TexParameteri","","",0,null],[12,"TexParameteriv","","",0,null],[12,"TexStorage1D","","Fallbacks: TexStorage1DEXT",0,null],[12,"TexStorage2D","","Fallbacks: TexStorage2DEXT",0,null],[12,"TexStorage2DMultisample","","",0,null],[12,"TexStorage3D","","Fallbacks: TexStorage3DEXT",0,null],[12,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",0,null],[12,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",0,null],[12,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",0,null],[12,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT, TexSubImage3DOES",0,null],[12,"TextureBarrier","","",0,null],[12,"TextureBuffer","","",0,null],[12,"TextureBufferRange","","",0,null],[12,"TextureParameterIiv","","",0,null],[12,"TextureParameterIuiv","","",0,null],[12,"TextureParameterf","","",0,null],[12,"TextureParameterfv","","",0,null],[12,"TextureParameteri","","",0,null],[12,"TextureParameteriv","","",0,null],[12,"TextureStorage1D","","",0,null],[12,"TextureStorage2D","","",0,null],[12,"TextureStorage2DMultisample","","",0,null],[12,"TextureStorage3D","","",0,null],[12,"TextureStorage3DMultisample","","",0,null],[12,"TextureSubImage1D","","",0,null],[12,"TextureSubImage2D","","",0,null],[12,"TextureSubImage3D","","",0,null],[12,"TextureView","","Fallbacks: TextureViewEXT, TextureViewOES",0,null],[12,"TransformFeedbackBufferBase","","",0,null],[12,"TransformFeedbackBufferRange","","",0,null],[12,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",0,null],[12,"Uniform1d","","",0,null],[12,"Uniform1dv","","",0,null],[12,"Uniform1f","","Fallbacks: Uniform1fARB",0,null],[12,"Uniform1fv","","Fallbacks: Uniform1fvARB",0,null],[12,"Uniform1i","","Fallbacks: Uniform1iARB",0,null],[12,"Uniform1iv","","Fallbacks: Uniform1ivARB",0,null],[12,"Uniform1ui","","Fallbacks: Uniform1uiEXT",0,null],[12,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",0,null],[12,"Uniform2d","","",0,null],[12,"Uniform2dv","","",0,null],[12,"Uniform2f","","Fallbacks: Uniform2fARB",0,null],[12,"Uniform2fv","","Fallbacks: Uniform2fvARB",0,null],[12,"Uniform2i","","Fallbacks: Uniform2iARB",0,null],[12,"Uniform2iv","","Fallbacks: Uniform2ivARB",0,null],[12,"Uniform2ui","","Fallbacks: Uniform2uiEXT",0,null],[12,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",0,null],[12,"Uniform3d","","",0,null],[12,"Uniform3dv","","",0,null],[12,"Uniform3f","","Fallbacks: Uniform3fARB",0,null],[12,"Uniform3fv","","Fallbacks: Uniform3fvARB",0,null],[12,"Uniform3i","","Fallbacks: Uniform3iARB",0,null],[12,"Uniform3iv","","Fallbacks: Uniform3ivARB",0,null],[12,"Uniform3ui","","Fallbacks: Uniform3uiEXT",0,null],[12,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",0,null],[12,"Uniform4d","","",0,null],[12,"Uniform4dv","","",0,null],[12,"Uniform4f","","Fallbacks: Uniform4fARB",0,null],[12,"Uniform4fv","","Fallbacks: Uniform4fvARB",0,null],[12,"Uniform4i","","Fallbacks: Uniform4iARB",0,null],[12,"Uniform4iv","","Fallbacks: Uniform4ivARB",0,null],[12,"Uniform4ui","","Fallbacks: Uniform4uiEXT",0,null],[12,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",0,null],[12,"UniformBlockBinding","","",0,null],[12,"UniformMatrix2dv","","",0,null],[12,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",0,null],[12,"UniformMatrix2x3dv","","",0,null],[12,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",0,null],[12,"UniformMatrix2x4dv","","",0,null],[12,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",0,null],[12,"UniformMatrix3dv","","",0,null],[12,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",0,null],[12,"UniformMatrix3x2dv","","",0,null],[12,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",0,null],[12,"UniformMatrix3x4dv","","",0,null],[12,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",0,null],[12,"UniformMatrix4dv","","",0,null],[12,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",0,null],[12,"UniformMatrix4x2dv","","",0,null],[12,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",0,null],[12,"UniformMatrix4x3dv","","",0,null],[12,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",0,null],[12,"UniformSubroutinesuiv","","",0,null],[12,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",0,null],[12,"UnmapNamedBuffer","","",0,null],[12,"UseProgram","","Fallbacks: UseProgramObjectARB",0,null],[12,"UseProgramStages","","",0,null],[12,"ValidateProgram","","Fallbacks: ValidateProgramARB",0,null],[12,"ValidateProgramPipeline","","",0,null],[12,"VertexArrayAttribBinding","","",0,null],[12,"VertexArrayAttribFormat","","",0,null],[12,"VertexArrayAttribIFormat","","",0,null],[12,"VertexArrayAttribLFormat","","",0,null],[12,"VertexArrayBindingDivisor","","",0,null],[12,"VertexArrayElementBuffer","","",0,null],[12,"VertexArrayVertexBuffer","","",0,null],[12,"VertexArrayVertexBuffers","","",0,null],[12,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",0,null],[12,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",0,null],[12,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",0,null],[12,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",0,null],[12,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",0,null],[12,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",0,null],[12,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",0,null],[12,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",0,null],[12,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",0,null],[12,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",0,null],[12,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",0,null],[12,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",0,null],[12,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",0,null],[12,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",0,null],[12,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",0,null],[12,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",0,null],[12,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",0,null],[12,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",0,null],[12,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",0,null],[12,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",0,null],[12,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",0,null],[12,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",0,null],[12,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",0,null],[12,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",0,null],[12,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",0,null],[12,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",0,null],[12,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",0,null],[12,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",0,null],[12,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",0,null],[12,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",0,null],[12,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",0,null],[12,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",0,null],[12,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",0,null],[12,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",0,null],[12,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",0,null],[12,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",0,null],[12,"VertexAttribBinding","","",0,null],[12,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV",0,null],[12,"VertexAttribFormat","","",0,null],[12,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",0,null],[12,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",0,null],[12,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",0,null],[12,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",0,null],[12,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",0,null],[12,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",0,null],[12,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",0,null],[12,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",0,null],[12,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",0,null],[12,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",0,null],[12,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",0,null],[12,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",0,null],[12,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",0,null],[12,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",0,null],[12,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",0,null],[12,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",0,null],[12,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",0,null],[12,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",0,null],[12,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",0,null],[12,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",0,null],[12,"VertexAttribIFormat","","",0,null],[12,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",0,null],[12,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",0,null],[12,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",0,null],[12,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",0,null],[12,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",0,null],[12,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",0,null],[12,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",0,null],[12,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",0,null],[12,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",0,null],[12,"VertexAttribLFormat","","",0,null],[12,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",0,null],[12,"VertexAttribP1ui","","",0,null],[12,"VertexAttribP1uiv","","",0,null],[12,"VertexAttribP2ui","","",0,null],[12,"VertexAttribP2uiv","","",0,null],[12,"VertexAttribP3ui","","",0,null],[12,"VertexAttribP3uiv","","",0,null],[12,"VertexAttribP4ui","","",0,null],[12,"VertexAttribP4uiv","","",0,null],[12,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",0,null],[12,"VertexBindingDivisor","","",0,null],[12,"VertexP2ui","","",0,null],[12,"VertexP2uiv","","",0,null],[12,"VertexP3ui","","",0,null],[12,"VertexP3uiv","","",0,null],[12,"VertexP4ui","","",0,null],[12,"VertexP4uiv","","",0,null],[12,"Viewport","","",0,null],[12,"ViewportArrayv","","Fallbacks: ViewportArrayvNV",0,null],[12,"ViewportIndexedf","","Fallbacks: ViewportIndexedfNV",0,null],[12,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvNV",0,null],[12,"WaitSync","","Fallbacks: WaitSyncAPPLE",0,null],[0,"types","","",null,null],[3,"__GLsync","gfx_gl::types","",null,null],[3,"_cl_context","","",null,null],[3,"_cl_event","","",null,null],[6,"GLenum","","",null,null],[6,"GLboolean","","",null,null],[6,"GLbitfield","","",null,null],[6,"GLvoid","","",null,null],[6,"GLbyte","","",null,null],[6,"GLshort","","",null,null],[6,"GLint","","",null,null],[6,"GLclampx","","",null,null],[6,"GLubyte","","",null,null],[6,"GLushort","","",null,null],[6,"GLuint","","",null,null],[6,"GLsizei","","",null,null],[6,"GLfloat","","",null,null],[6,"GLclampf","","",null,null],[6,"GLdouble","","",null,null],[6,"GLclampd","","",null,null],[6,"GLeglImageOES","","",null,null],[6,"GLchar","","",null,null],[6,"GLcharARB","","",null,null],[6,"GLhandleARB","","",null,null],[6,"GLhalfARB","","",null,null],[6,"GLhalf","","",null,null],[6,"GLfixed","","",null,null],[6,"GLintptr","","",null,null],[6,"GLsizeiptr","","",null,null],[6,"GLint64","","",null,null],[6,"GLuint64","","",null,null],[6,"GLintptrARB","","",null,null],[6,"GLsizeiptrARB","","",null,null],[6,"GLint64EXT","","",null,null],[6,"GLuint64EXT","","",null,null],[6,"GLsync","","",null,null],[6,"GLDEBUGPROC","","",null,null],[6,"GLDEBUGPROCARB","","",null,null],[6,"GLDEBUGPROCKHR","","",null,null],[6,"GLDEBUGPROCAMD","","",null,null],[6,"GLhalfNV","","",null,null],[6,"GLvdpauSurfaceNV","","",null,null],[17,"DEPTH_BUFFER_BIT","gfx_gl","",null,null],[17,"STENCIL_BUFFER_BIT","","",null,null],[17,"COLOR_BUFFER_BIT","","",null,null],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",null,null],[17,"CONTEXT_FLAG_DEBUG_BIT","","",null,null],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",null,null],[17,"CONTEXT_CORE_PROFILE_BIT","","",null,null],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",null,null],[17,"MAP_READ_BIT","","",null,null],[17,"MAP_WRITE_BIT","","",null,null],[17,"MAP_INVALIDATE_RANGE_BIT","","",null,null],[17,"MAP_INVALIDATE_BUFFER_BIT","","",null,null],[17,"MAP_FLUSH_EXPLICIT_BIT","","",null,null],[17,"MAP_UNSYNCHRONIZED_BIT","","",null,null],[17,"MAP_PERSISTENT_BIT","","",null,null],[17,"MAP_COHERENT_BIT","","",null,null],[17,"DYNAMIC_STORAGE_BIT","","",null,null],[17,"CLIENT_STORAGE_BIT","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",null,null],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",null,null],[17,"UNIFORM_BARRIER_BIT","","",null,null],[17,"TEXTURE_FETCH_BARRIER_BIT","","",null,null],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",null,null],[17,"COMMAND_BARRIER_BIT","","",null,null],[17,"PIXEL_BUFFER_BARRIER_BIT","","",null,null],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",null,null],[17,"BUFFER_UPDATE_BARRIER_BIT","","",null,null],[17,"FRAMEBUFFER_BARRIER_BIT","","",null,null],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",null,null],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",null,null],[17,"SHADER_STORAGE_BARRIER_BIT","","",null,null],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",null,null],[17,"QUERY_BUFFER_BARRIER_BIT","","",null,null],[17,"ALL_BARRIER_BITS","","",null,null],[17,"SYNC_FLUSH_COMMANDS_BIT","","",null,null],[17,"VERTEX_SHADER_BIT","","",null,null],[17,"FRAGMENT_SHADER_BIT","","",null,null],[17,"GEOMETRY_SHADER_BIT","","",null,null],[17,"TESS_CONTROL_SHADER_BIT","","",null,null],[17,"TESS_EVALUATION_SHADER_BIT","","",null,null],[17,"COMPUTE_SHADER_BIT","","",null,null],[17,"ALL_SHADER_BITS","","",null,null],[17,"FALSE","","",null,null],[17,"NO_ERROR","","",null,null],[17,"ZERO","","",null,null],[17,"NONE","","",null,null],[17,"TRUE","","",null,null],[17,"ONE","","",null,null],[17,"INVALID_INDEX","","",null,null],[17,"TIMEOUT_IGNORED","","",null,null],[17,"POINTS","","",null,null],[17,"LINES","","",null,null],[17,"LINE_LOOP","","",null,null],[17,"LINE_STRIP","","",null,null],[17,"TRIANGLES","","",null,null],[17,"TRIANGLE_STRIP","","",null,null],[17,"TRIANGLE_FAN","","",null,null],[17,"LINES_ADJACENCY","","",null,null],[17,"LINE_STRIP_ADJACENCY","","",null,null],[17,"TRIANGLES_ADJACENCY","","",null,null],[17,"TRIANGLE_STRIP_ADJACENCY","","",null,null],[17,"PATCHES","","",null,null],[17,"NEVER","","",null,null],[17,"LESS","","",null,null],[17,"EQUAL","","",null,null],[17,"LEQUAL","","",null,null],[17,"GREATER","","",null,null],[17,"NOTEQUAL","","",null,null],[17,"GEQUAL","","",null,null],[17,"ALWAYS","","",null,null],[17,"SRC_COLOR","","",null,null],[17,"ONE_MINUS_SRC_COLOR","","",null,null],[17,"SRC_ALPHA","","",null,null],[17,"ONE_MINUS_SRC_ALPHA","","",null,null],[17,"DST_ALPHA","","",null,null],[17,"ONE_MINUS_DST_ALPHA","","",null,null],[17,"DST_COLOR","","",null,null],[17,"ONE_MINUS_DST_COLOR","","",null,null],[17,"SRC_ALPHA_SATURATE","","",null,null],[17,"FRONT_LEFT","","",null,null],[17,"FRONT_RIGHT","","",null,null],[17,"BACK_LEFT","","",null,null],[17,"BACK_RIGHT","","",null,null],[17,"FRONT","","",null,null],[17,"BACK","","",null,null],[17,"LEFT","","",null,null],[17,"RIGHT","","",null,null],[17,"FRONT_AND_BACK","","",null,null],[17,"INVALID_ENUM","","",null,null],[17,"INVALID_VALUE","","",null,null],[17,"INVALID_OPERATION","","",null,null],[17,"OUT_OF_MEMORY","","",null,null],[17,"INVALID_FRAMEBUFFER_OPERATION","","",null,null],[17,"CONTEXT_LOST","","",null,null],[17,"CW","","",null,null],[17,"CCW","","",null,null],[17,"POINT_SIZE","","",null,null],[17,"POINT_SIZE_RANGE","","",null,null],[17,"SMOOTH_POINT_SIZE_RANGE","","",null,null],[17,"POINT_SIZE_GRANULARITY","","",null,null],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",null,null],[17,"LINE_SMOOTH","","",null,null],[17,"LINE_WIDTH","","",null,null],[17,"LINE_WIDTH_RANGE","","",null,null],[17,"SMOOTH_LINE_WIDTH_RANGE","","",null,null],[17,"LINE_WIDTH_GRANULARITY","","",null,null],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",null,null],[17,"POLYGON_MODE","","",null,null],[17,"POLYGON_SMOOTH","","",null,null],[17,"CULL_FACE","","",null,null],[17,"CULL_FACE_MODE","","",null,null],[17,"FRONT_FACE","","",null,null],[17,"DEPTH_RANGE","","",null,null],[17,"DEPTH_TEST","","",null,null],[17,"DEPTH_WRITEMASK","","",null,null],[17,"DEPTH_CLEAR_VALUE","","",null,null],[17,"DEPTH_FUNC","","",null,null],[17,"STENCIL_TEST","","",null,null],[17,"STENCIL_CLEAR_VALUE","","",null,null],[17,"STENCIL_FUNC","","",null,null],[17,"STENCIL_VALUE_MASK","","",null,null],[17,"STENCIL_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_REF","","",null,null],[17,"STENCIL_WRITEMASK","","",null,null],[17,"VIEWPORT","","",null,null],[17,"DITHER","","",null,null],[17,"BLEND_DST","","",null,null],[17,"BLEND_SRC","","",null,null],[17,"BLEND","","",null,null],[17,"LOGIC_OP_MODE","","",null,null],[17,"COLOR_LOGIC_OP","","",null,null],[17,"DRAW_BUFFER","","",null,null],[17,"READ_BUFFER","","",null,null],[17,"SCISSOR_BOX","","",null,null],[17,"SCISSOR_TEST","","",null,null],[17,"COLOR_CLEAR_VALUE","","",null,null],[17,"COLOR_WRITEMASK","","",null,null],[17,"DOUBLEBUFFER","","",null,null],[17,"STEREO","","",null,null],[17,"LINE_SMOOTH_HINT","","",null,null],[17,"POLYGON_SMOOTH_HINT","","",null,null],[17,"UNPACK_SWAP_BYTES","","",null,null],[17,"UNPACK_LSB_FIRST","","",null,null],[17,"UNPACK_ROW_LENGTH","","",null,null],[17,"UNPACK_SKIP_ROWS","","",null,null],[17,"UNPACK_SKIP_PIXELS","","",null,null],[17,"UNPACK_ALIGNMENT","","",null,null],[17,"PACK_SWAP_BYTES","","",null,null],[17,"PACK_LSB_FIRST","","",null,null],[17,"PACK_ROW_LENGTH","","",null,null],[17,"PACK_SKIP_ROWS","","",null,null],[17,"PACK_SKIP_PIXELS","","",null,null],[17,"PACK_ALIGNMENT","","",null,null],[17,"MAX_CLIP_DISTANCES","","",null,null],[17,"MAX_TEXTURE_SIZE","","",null,null],[17,"MAX_VIEWPORT_DIMS","","",null,null],[17,"SUBPIXEL_BITS","","",null,null],[17,"TEXTURE_1D","","",null,null],[17,"TEXTURE_2D","","",null,null],[17,"TEXTURE_WIDTH","","",null,null],[17,"TEXTURE_HEIGHT","","",null,null],[17,"TEXTURE_INTERNAL_FORMAT","","",null,null],[17,"TEXTURE_BORDER_COLOR","","",null,null],[17,"TEXTURE_TARGET","","",null,null],[17,"DONT_CARE","","",null,null],[17,"FASTEST","","",null,null],[17,"NICEST","","",null,null],[17,"BYTE","","",null,null],[17,"UNSIGNED_BYTE","","",null,null],[17,"SHORT","","",null,null],[17,"UNSIGNED_SHORT","","",null,null],[17,"INT","","",null,null],[17,"UNSIGNED_INT","","",null,null],[17,"FLOAT","","",null,null],[17,"DOUBLE","","",null,null],[17,"HALF_FLOAT","","",null,null],[17,"FIXED","","",null,null],[17,"CLEAR","","",null,null],[17,"AND","","",null,null],[17,"AND_REVERSE","","",null,null],[17,"COPY","","",null,null],[17,"AND_INVERTED","","",null,null],[17,"NOOP","","",null,null],[17,"XOR","","",null,null],[17,"OR","","",null,null],[17,"NOR","","",null,null],[17,"EQUIV","","",null,null],[17,"INVERT","","",null,null],[17,"OR_REVERSE","","",null,null],[17,"COPY_INVERTED","","",null,null],[17,"OR_INVERTED","","",null,null],[17,"NAND","","",null,null],[17,"SET","","",null,null],[17,"TEXTURE","","",null,null],[17,"COLOR","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[17,"STENCIL_INDEX","","",null,null],[17,"DEPTH_COMPONENT","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"RGB","","",null,null],[17,"RGBA","","",null,null],[17,"POINT","","",null,null],[17,"LINE","","",null,null],[17,"FILL","","",null,null],[17,"KEEP","","",null,null],[17,"REPLACE","","",null,null],[17,"INCR","","",null,null],[17,"DECR","","",null,null],[17,"VENDOR","","",null,null],[17,"RENDERER","","",null,null],[17,"VERSION","","",null,null],[17,"EXTENSIONS","","",null,null],[17,"NEAREST","","",null,null],[17,"LINEAR","","",null,null],[17,"NEAREST_MIPMAP_NEAREST","","",null,null],[17,"LINEAR_MIPMAP_NEAREST","","",null,null],[17,"NEAREST_MIPMAP_LINEAR","","",null,null],[17,"LINEAR_MIPMAP_LINEAR","","",null,null],[17,"TEXTURE_MAG_FILTER","","",null,null],[17,"TEXTURE_MIN_FILTER","","",null,null],[17,"TEXTURE_WRAP_S","","",null,null],[17,"TEXTURE_WRAP_T","","",null,null],[17,"REPEAT","","",null,null],[17,"POLYGON_OFFSET_UNITS","","",null,null],[17,"POLYGON_OFFSET_POINT","","",null,null],[17,"POLYGON_OFFSET_LINE","","",null,null],[17,"R3_G3_B2","","",null,null],[17,"CLIP_DISTANCE0","","",null,null],[17,"CLIP_DISTANCE1","","",null,null],[17,"CLIP_DISTANCE2","","",null,null],[17,"CLIP_DISTANCE3","","",null,null],[17,"CLIP_DISTANCE4","","",null,null],[17,"CLIP_DISTANCE5","","",null,null],[17,"CLIP_DISTANCE6","","",null,null],[17,"CLIP_DISTANCE7","","",null,null],[17,"CONSTANT_COLOR","","",null,null],[17,"ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"CONSTANT_ALPHA","","",null,null],[17,"ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"FUNC_ADD","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[17,"BLEND_EQUATION_RGB","","",null,null],[17,"FUNC_SUBTRACT","","",null,null],[17,"FUNC_REVERSE_SUBTRACT","","",null,null],[17,"UNSIGNED_BYTE_3_3_2","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4","","",null,null],[17,"UNSIGNED_SHORT_5_5_5_1","","",null,null],[17,"UNSIGNED_INT_8_8_8_8","","",null,null],[17,"UNSIGNED_INT_10_10_10_2","","",null,null],[17,"POLYGON_OFFSET_FILL","","",null,null],[17,"POLYGON_OFFSET_FACTOR","","",null,null],[17,"RGB4","","",null,null],[17,"RGB5","","",null,null],[17,"RGB8","","",null,null],[17,"RGB10","","",null,null],[17,"RGB12","","",null,null],[17,"RGB16","","",null,null],[17,"RGBA2","","",null,null],[17,"RGBA4","","",null,null],[17,"RGB5_A1","","",null,null],[17,"RGBA8","","",null,null],[17,"RGB10_A2","","",null,null],[17,"RGBA12","","",null,null],[17,"RGBA16","","",null,null],[17,"TEXTURE_RED_SIZE","","",null,null],[17,"TEXTURE_GREEN_SIZE","","",null,null],[17,"TEXTURE_BLUE_SIZE","","",null,null],[17,"TEXTURE_ALPHA_SIZE","","",null,null],[17,"PROXY_TEXTURE_1D","","",null,null],[17,"PROXY_TEXTURE_2D","","",null,null],[17,"TEXTURE_BINDING_1D","","",null,null],[17,"TEXTURE_BINDING_2D","","",null,null],[17,"TEXTURE_BINDING_3D","","",null,null],[17,"PACK_SKIP_IMAGES","","",null,null],[17,"PACK_IMAGE_HEIGHT","","",null,null],[17,"UNPACK_SKIP_IMAGES","","",null,null],[17,"UNPACK_IMAGE_HEIGHT","","",null,null],[17,"TEXTURE_3D","","",null,null],[17,"PROXY_TEXTURE_3D","","",null,null],[17,"TEXTURE_DEPTH","","",null,null],[17,"TEXTURE_WRAP_R","","",null,null],[17,"MAX_3D_TEXTURE_SIZE","","",null,null],[17,"MULTISAMPLE","","",null,null],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",null,null],[17,"SAMPLE_ALPHA_TO_ONE","","",null,null],[17,"SAMPLE_COVERAGE","","",null,null],[17,"SAMPLE_BUFFERS","","",null,null],[17,"SAMPLES","","",null,null],[17,"SAMPLE_COVERAGE_VALUE","","",null,null],[17,"SAMPLE_COVERAGE_INVERT","","",null,null],[17,"BLEND_DST_RGB","","",null,null],[17,"BLEND_SRC_RGB","","",null,null],[17,"BLEND_DST_ALPHA","","",null,null],[17,"BLEND_SRC_ALPHA","","",null,null],[17,"BGR","","",null,null],[17,"BGRA","","",null,null],[17,"MAX_ELEMENTS_VERTICES","","",null,null],[17,"MAX_ELEMENTS_INDICES","","",null,null],[17,"POINT_FADE_THRESHOLD_SIZE","","",null,null],[17,"CLAMP_TO_BORDER","","",null,null],[17,"CLAMP_TO_EDGE","","",null,null],[17,"TEXTURE_MIN_LOD","","",null,null],[17,"TEXTURE_MAX_LOD","","",null,null],[17,"TEXTURE_BASE_LEVEL","","",null,null],[17,"TEXTURE_MAX_LEVEL","","",null,null],[17,"DEPTH_COMPONENT16","","",null,null],[17,"DEPTH_COMPONENT24","","",null,null],[17,"DEPTH_COMPONENT32","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_DEFAULT","","",null,null],[17,"FRAMEBUFFER_UNDEFINED","","",null,null],[17,"DEPTH_STENCIL_ATTACHMENT","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"NUM_EXTENSIONS","","",null,null],[17,"CONTEXT_FLAGS","","",null,null],[17,"BUFFER_IMMUTABLE_STORAGE","","",null,null],[17,"BUFFER_STORAGE_FLAGS","","",null,null],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",null,null],[17,"INDEX","","",null,null],[17,"COMPRESSED_RED","","",null,null],[17,"COMPRESSED_RG","","",null,null],[17,"RG","","",null,null],[17,"RG_INTEGER","","",null,null],[17,"R8","","",null,null],[17,"R16","","",null,null],[17,"RG8","","",null,null],[17,"RG16","","",null,null],[17,"R16F","","",null,null],[17,"R32F","","",null,null],[17,"RG16F","","",null,null],[17,"RG32F","","",null,null],[17,"R8I","","",null,null],[17,"R8UI","","",null,null],[17,"R16I","","",null,null],[17,"R16UI","","",null,null],[17,"R32I","","",null,null],[17,"R32UI","","",null,null],[17,"RG8I","","",null,null],[17,"RG8UI","","",null,null],[17,"RG16I","","",null,null],[17,"RG16UI","","",null,null],[17,"RG32I","","",null,null],[17,"RG32UI","","",null,null],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",null,null],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",null,null],[17,"DEBUG_CALLBACK_FUNCTION","","",null,null],[17,"DEBUG_CALLBACK_USER_PARAM","","",null,null],[17,"DEBUG_SOURCE_API","","",null,null],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",null,null],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",null,null],[17,"DEBUG_SOURCE_THIRD_PARTY","","",null,null],[17,"DEBUG_SOURCE_APPLICATION","","",null,null],[17,"DEBUG_SOURCE_OTHER","","",null,null],[17,"DEBUG_TYPE_ERROR","","",null,null],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_PORTABILITY","","",null,null],[17,"DEBUG_TYPE_PERFORMANCE","","",null,null],[17,"DEBUG_TYPE_OTHER","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"GUILTY_CONTEXT_RESET","","",null,null],[17,"INNOCENT_CONTEXT_RESET","","",null,null],[17,"UNKNOWN_CONTEXT_RESET","","",null,null],[17,"RESET_NOTIFICATION_STRATEGY","","",null,null],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",null,null],[17,"PROGRAM_SEPARABLE","","",null,null],[17,"ACTIVE_PROGRAM","","",null,null],[17,"PROGRAM_PIPELINE_BINDING","","",null,null],[17,"MAX_VIEWPORTS","","",null,null],[17,"VIEWPORT_SUBPIXEL_BITS","","",null,null],[17,"VIEWPORT_BOUNDS_RANGE","","",null,null],[17,"LAYER_PROVOKING_VERTEX","","",null,null],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",null,null],[17,"UNDEFINED_VERTEX","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",null,null],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"DEBUG_TYPE_MARKER","","",null,null],[17,"DEBUG_TYPE_PUSH_GROUP","","",null,null],[17,"DEBUG_TYPE_POP_GROUP","","",null,null],[17,"DEBUG_SEVERITY_NOTIFICATION","","",null,null],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"MAX_UNIFORM_LOCATIONS","","",null,null],[17,"INTERNALFORMAT_SUPPORTED","","",null,null],[17,"INTERNALFORMAT_PREFERRED","","",null,null],[17,"INTERNALFORMAT_RED_SIZE","","",null,null],[17,"INTERNALFORMAT_GREEN_SIZE","","",null,null],[17,"INTERNALFORMAT_BLUE_SIZE","","",null,null],[17,"INTERNALFORMAT_ALPHA_SIZE","","",null,null],[17,"INTERNALFORMAT_DEPTH_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_SIZE","","",null,null],[17,"INTERNALFORMAT_SHARED_SIZE","","",null,null],[17,"INTERNALFORMAT_RED_TYPE","","",null,null],[17,"INTERNALFORMAT_GREEN_TYPE","","",null,null],[17,"INTERNALFORMAT_BLUE_TYPE","","",null,null],[17,"INTERNALFORMAT_ALPHA_TYPE","","",null,null],[17,"INTERNALFORMAT_DEPTH_TYPE","","",null,null],[17,"INTERNALFORMAT_STENCIL_TYPE","","",null,null],[17,"MAX_WIDTH","","",null,null],[17,"MAX_HEIGHT","","",null,null],[17,"MAX_DEPTH","","",null,null],[17,"MAX_LAYERS","","",null,null],[17,"MAX_COMBINED_DIMENSIONS","","",null,null],[17,"COLOR_COMPONENTS","","",null,null],[17,"DEPTH_COMPONENTS","","",null,null],[17,"STENCIL_COMPONENTS","","",null,null],[17,"COLOR_RENDERABLE","","",null,null],[17,"DEPTH_RENDERABLE","","",null,null],[17,"STENCIL_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",null,null],[17,"FRAMEBUFFER_BLEND","","",null,null],[17,"READ_PIXELS","","",null,null],[17,"READ_PIXELS_FORMAT","","",null,null],[17,"READ_PIXELS_TYPE","","",null,null],[17,"TEXTURE_IMAGE_FORMAT","","",null,null],[17,"TEXTURE_IMAGE_TYPE","","",null,null],[17,"GET_TEXTURE_IMAGE_FORMAT","","",null,null],[17,"GET_TEXTURE_IMAGE_TYPE","","",null,null],[17,"MIPMAP","","",null,null],[17,"MANUAL_GENERATE_MIPMAP","","",null,null],[17,"AUTO_GENERATE_MIPMAP","","",null,null],[17,"COLOR_ENCODING","","",null,null],[17,"SRGB_READ","","",null,null],[17,"SRGB_WRITE","","",null,null],[17,"FILTER","","",null,null],[17,"VERTEX_TEXTURE","","",null,null],[17,"TESS_CONTROL_TEXTURE","","",null,null],[17,"TESS_EVALUATION_TEXTURE","","",null,null],[17,"GEOMETRY_TEXTURE","","",null,null],[17,"FRAGMENT_TEXTURE","","",null,null],[17,"COMPUTE_TEXTURE","","",null,null],[17,"TEXTURE_SHADOW","","",null,null],[17,"TEXTURE_GATHER","","",null,null],[17,"TEXTURE_GATHER_SHADOW","","",null,null],[17,"SHADER_IMAGE_LOAD","","",null,null],[17,"SHADER_IMAGE_STORE","","",null,null],[17,"SHADER_IMAGE_ATOMIC","","",null,null],[17,"IMAGE_TEXEL_SIZE","","",null,null],[17,"IMAGE_COMPATIBILITY_CLASS","","",null,null],[17,"IMAGE_PIXEL_FORMAT","","",null,null],[17,"IMAGE_PIXEL_TYPE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"CLEAR_BUFFER","","",null,null],[17,"TEXTURE_VIEW","","",null,null],[17,"VIEW_COMPATIBILITY_CLASS","","",null,null],[17,"FULL_SUPPORT","","",null,null],[17,"CAVEAT_SUPPORT","","",null,null],[17,"IMAGE_CLASS_4_X_32","","",null,null],[17,"IMAGE_CLASS_2_X_32","","",null,null],[17,"IMAGE_CLASS_1_X_32","","",null,null],[17,"IMAGE_CLASS_4_X_16","","",null,null],[17,"IMAGE_CLASS_2_X_16","","",null,null],[17,"IMAGE_CLASS_1_X_16","","",null,null],[17,"IMAGE_CLASS_4_X_8","","",null,null],[17,"IMAGE_CLASS_2_X_8","","",null,null],[17,"IMAGE_CLASS_1_X_8","","",null,null],[17,"IMAGE_CLASS_11_11_10","","",null,null],[17,"IMAGE_CLASS_10_10_10_2","","",null,null],[17,"VIEW_CLASS_128_BITS","","",null,null],[17,"VIEW_CLASS_96_BITS","","",null,null],[17,"VIEW_CLASS_64_BITS","","",null,null],[17,"VIEW_CLASS_48_BITS","","",null,null],[17,"VIEW_CLASS_32_BITS","","",null,null],[17,"VIEW_CLASS_24_BITS","","",null,null],[17,"VIEW_CLASS_16_BITS","","",null,null],[17,"VIEW_CLASS_8_BITS","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",null,null],[17,"VIEW_CLASS_RGTC1_RED","","",null,null],[17,"VIEW_CLASS_RGTC2_RG","","",null,null],[17,"VIEW_CLASS_BPTC_UNORM","","",null,null],[17,"VIEW_CLASS_BPTC_FLOAT","","",null,null],[17,"VERTEX_ATTRIB_BINDING","","",null,null],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"VERTEX_BINDING_DIVISOR","","",null,null],[17,"VERTEX_BINDING_OFFSET","","",null,null],[17,"VERTEX_BINDING_STRIDE","","",null,null],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",null,null],[17,"TEXTURE_VIEW_MIN_LEVEL","","",null,null],[17,"TEXTURE_VIEW_NUM_LEVELS","","",null,null],[17,"TEXTURE_VIEW_MIN_LAYER","","",null,null],[17,"TEXTURE_VIEW_NUM_LAYERS","","",null,null],[17,"TEXTURE_IMMUTABLE_LEVELS","","",null,null],[17,"BUFFER","","",null,null],[17,"SHADER","","",null,null],[17,"PROGRAM","","",null,null],[17,"QUERY","","",null,null],[17,"PROGRAM_PIPELINE","","",null,null],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",null,null],[17,"SAMPLER","","",null,null],[17,"DISPLAY_LIST","","",null,null],[17,"MAX_LABEL_LENGTH","","",null,null],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",null,null],[17,"QUERY_TARGET","","",null,null],[17,"MAX_CULL_DISTANCES","","",null,null],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",null,null],[17,"UNSIGNED_BYTE_2_3_3_REV","","",null,null],[17,"UNSIGNED_SHORT_5_6_5","","",null,null],[17,"UNSIGNED_SHORT_5_6_5_REV","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",null,null],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",null,null],[17,"UNSIGNED_INT_8_8_8_8_REV","","",null,null],[17,"UNSIGNED_INT_2_10_10_10_REV","","",null,null],[17,"MIRRORED_REPEAT","","",null,null],[17,"ALIASED_LINE_WIDTH_RANGE","","",null,null],[17,"TEXTURE0","","",null,null],[17,"TEXTURE1","","",null,null],[17,"TEXTURE2","","",null,null],[17,"TEXTURE3","","",null,null],[17,"TEXTURE4","","",null,null],[17,"TEXTURE5","","",null,null],[17,"TEXTURE6","","",null,null],[17,"TEXTURE7","","",null,null],[17,"TEXTURE8","","",null,null],[17,"TEXTURE9","","",null,null],[17,"TEXTURE10","","",null,null],[17,"TEXTURE11","","",null,null],[17,"TEXTURE12","","",null,null],[17,"TEXTURE13","","",null,null],[17,"TEXTURE14","","",null,null],[17,"TEXTURE15","","",null,null],[17,"TEXTURE16","","",null,null],[17,"TEXTURE17","","",null,null],[17,"TEXTURE18","","",null,null],[17,"TEXTURE19","","",null,null],[17,"TEXTURE20","","",null,null],[17,"TEXTURE21","","",null,null],[17,"TEXTURE22","","",null,null],[17,"TEXTURE23","","",null,null],[17,"TEXTURE24","","",null,null],[17,"TEXTURE25","","",null,null],[17,"TEXTURE26","","",null,null],[17,"TEXTURE27","","",null,null],[17,"TEXTURE28","","",null,null],[17,"TEXTURE29","","",null,null],[17,"TEXTURE30","","",null,null],[17,"TEXTURE31","","",null,null],[17,"ACTIVE_TEXTURE","","",null,null],[17,"MAX_RENDERBUFFER_SIZE","","",null,null],[17,"COMPRESSED_RGB","","",null,null],[17,"COMPRESSED_RGBA","","",null,null],[17,"TEXTURE_COMPRESSION_HINT","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"TEXTURE_RECTANGLE","","",null,null],[17,"TEXTURE_BINDING_RECTANGLE","","",null,null],[17,"PROXY_TEXTURE_RECTANGLE","","",null,null],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",null,null],[17,"DEPTH_STENCIL","","",null,null],[17,"UNSIGNED_INT_24_8","","",null,null],[17,"MAX_TEXTURE_LOD_BIAS","","",null,null],[17,"TEXTURE_MAX_ANISOTROPY_EXT","","",null,null],[17,"MAX_TEXTURE_MAX_ANISOTROPY_EXT","","",null,null],[17,"TEXTURE_LOD_BIAS","","",null,null],[17,"INCR_WRAP","","",null,null],[17,"DECR_WRAP","","",null,null],[17,"TEXTURE_CUBE_MAP","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP","","",null,null],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",null,null],[17,"SRC1_ALPHA","","",null,null],[17,"VERTEX_ARRAY_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",null,null],[17,"CURRENT_VERTEX_ATTRIB","","",null,null],[17,"VERTEX_PROGRAM_POINT_SIZE","","",null,null],[17,"PROGRAM_POINT_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",null,null],[17,"DEPTH_CLAMP","","",null,null],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",null,null],[17,"TEXTURE_COMPRESSED","","",null,null],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"PROGRAM_BINARY_LENGTH","","",null,null],[17,"MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"BUFFER_USAGE","","",null,null],[17,"NUM_PROGRAM_BINARY_FORMATS","","",null,null],[17,"PROGRAM_BINARY_FORMATS","","",null,null],[17,"STENCIL_BACK_FUNC","","",null,null],[17,"STENCIL_BACK_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",null,null],[17,"RGBA32F","","",null,null],[17,"RGB32F","","",null,null],[17,"RGBA16F","","",null,null],[17,"RGB16F","","",null,null],[17,"MAX_DRAW_BUFFERS","","",null,null],[17,"DRAW_BUFFER0","","",null,null],[17,"DRAW_BUFFER1","","",null,null],[17,"DRAW_BUFFER2","","",null,null],[17,"DRAW_BUFFER3","","",null,null],[17,"DRAW_BUFFER4","","",null,null],[17,"DRAW_BUFFER5","","",null,null],[17,"DRAW_BUFFER6","","",null,null],[17,"DRAW_BUFFER7","","",null,null],[17,"DRAW_BUFFER8","","",null,null],[17,"DRAW_BUFFER9","","",null,null],[17,"DRAW_BUFFER10","","",null,null],[17,"DRAW_BUFFER11","","",null,null],[17,"DRAW_BUFFER12","","",null,null],[17,"DRAW_BUFFER13","","",null,null],[17,"DRAW_BUFFER14","","",null,null],[17,"DRAW_BUFFER15","","",null,null],[17,"BLEND_EQUATION_ALPHA","","",null,null],[17,"TEXTURE_DEPTH_SIZE","","",null,null],[17,"TEXTURE_COMPARE_MODE","","",null,null],[17,"TEXTURE_COMPARE_FUNC","","",null,null],[17,"COMPARE_REF_TO_TEXTURE","","",null,null],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",null,null],[17,"QUERY_COUNTER_BITS","","",null,null],[17,"CURRENT_QUERY","","",null,null],[17,"QUERY_RESULT","","",null,null],[17,"QUERY_RESULT_AVAILABLE","","",null,null],[17,"MAX_VERTEX_ATTRIBS","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",null,null],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",null,null],[17,"MAX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"ARRAY_BUFFER","","",null,null],[17,"ELEMENT_ARRAY_BUFFER","","",null,null],[17,"ARRAY_BUFFER_BINDING","","",null,null],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",null,null],[17,"READ_ONLY","","",null,null],[17,"WRITE_ONLY","","",null,null],[17,"READ_WRITE","","",null,null],[17,"BUFFER_ACCESS","","",null,null],[17,"BUFFER_MAPPED","","",null,null],[17,"BUFFER_MAP_POINTER","","",null,null],[17,"TIME_ELAPSED","","",null,null],[17,"STREAM_DRAW","","",null,null],[17,"STREAM_READ","","",null,null],[17,"STREAM_COPY","","",null,null],[17,"STATIC_DRAW","","",null,null],[17,"STATIC_READ","","",null,null],[17,"STATIC_COPY","","",null,null],[17,"DYNAMIC_DRAW","","",null,null],[17,"DYNAMIC_READ","","",null,null],[17,"DYNAMIC_COPY","","",null,null],[17,"PIXEL_PACK_BUFFER","","",null,null],[17,"PIXEL_UNPACK_BUFFER","","",null,null],[17,"PIXEL_PACK_BUFFER_BINDING","","",null,null],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",null,null],[17,"DEPTH24_STENCIL8","","",null,null],[17,"TEXTURE_STENCIL_SIZE","","",null,null],[17,"SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",null,null],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",null,null],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"SAMPLES_PASSED","","",null,null],[17,"GEOMETRY_VERTICES_OUT","","",null,null],[17,"GEOMETRY_INPUT_TYPE","","",null,null],[17,"GEOMETRY_OUTPUT_TYPE","","",null,null],[17,"SAMPLER_BINDING","","",null,null],[17,"CLAMP_READ_COLOR","","",null,null],[17,"FIXED_ONLY","","",null,null],[17,"UNIFORM_BUFFER","","",null,null],[17,"UNIFORM_BUFFER_BINDING","","",null,null],[17,"UNIFORM_BUFFER_START","","",null,null],[17,"UNIFORM_BUFFER_SIZE","","",null,null],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",null,null],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",null,null],[17,"MAX_UNIFORM_BLOCK_SIZE","","",null,null],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",null,null],[17,"ACTIVE_UNIFORM_BLOCKS","","",null,null],[17,"UNIFORM_TYPE","","",null,null],[17,"UNIFORM_SIZE","","",null,null],[17,"UNIFORM_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_INDEX","","",null,null],[17,"UNIFORM_OFFSET","","",null,null],[17,"UNIFORM_ARRAY_STRIDE","","",null,null],[17,"UNIFORM_MATRIX_STRIDE","","",null,null],[17,"UNIFORM_IS_ROW_MAJOR","","",null,null],[17,"UNIFORM_BLOCK_BINDING","","",null,null],[17,"UNIFORM_BLOCK_DATA_SIZE","","",null,null],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"FRAGMENT_SHADER","","",null,null],[17,"VERTEX_SHADER","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VARYING_FLOATS","","",null,null],[17,"MAX_VARYING_COMPONENTS","","",null,null],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",null,null],[17,"SHADER_TYPE","","",null,null],[17,"FLOAT_VEC2","","",null,null],[17,"FLOAT_VEC3","","",null,null],[17,"FLOAT_VEC4","","",null,null],[17,"INT_VEC2","","",null,null],[17,"INT_VEC3","","",null,null],[17,"INT_VEC4","","",null,null],[17,"BOOL","","",null,null],[17,"BOOL_VEC2","","",null,null],[17,"BOOL_VEC3","","",null,null],[17,"BOOL_VEC4","","",null,null],[17,"FLOAT_MAT2","","",null,null],[17,"FLOAT_MAT3","","",null,null],[17,"FLOAT_MAT4","","",null,null],[17,"SAMPLER_1D","","",null,null],[17,"SAMPLER_2D","","",null,null],[17,"SAMPLER_3D","","",null,null],[17,"SAMPLER_CUBE","","",null,null],[17,"SAMPLER_1D_SHADOW","","",null,null],[17,"SAMPLER_2D_SHADOW","","",null,null],[17,"SAMPLER_2D_RECT","","",null,null],[17,"SAMPLER_2D_RECT_SHADOW","","",null,null],[17,"FLOAT_MAT2x3","","",null,null],[17,"FLOAT_MAT2x4","","",null,null],[17,"FLOAT_MAT3x2","","",null,null],[17,"FLOAT_MAT3x4","","",null,null],[17,"FLOAT_MAT4x2","","",null,null],[17,"FLOAT_MAT4x3","","",null,null],[17,"DELETE_STATUS","","",null,null],[17,"COMPILE_STATUS","","",null,null],[17,"LINK_STATUS","","",null,null],[17,"VALIDATE_STATUS","","",null,null],[17,"INFO_LOG_LENGTH","","",null,null],[17,"ATTACHED_SHADERS","","",null,null],[17,"ACTIVE_UNIFORMS","","",null,null],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",null,null],[17,"SHADER_SOURCE_LENGTH","","",null,null],[17,"ACTIVE_ATTRIBUTES","","",null,null],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",null,null],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",null,null],[17,"SHADING_LANGUAGE_VERSION","","",null,null],[17,"CURRENT_PROGRAM","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",null,null],[17,"TEXTURE_RED_TYPE","","",null,null],[17,"TEXTURE_GREEN_TYPE","","",null,null],[17,"TEXTURE_BLUE_TYPE","","",null,null],[17,"TEXTURE_ALPHA_TYPE","","",null,null],[17,"TEXTURE_DEPTH_TYPE","","",null,null],[17,"UNSIGNED_NORMALIZED","","",null,null],[17,"TEXTURE_1D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_1D_ARRAY","","",null,null],[17,"TEXTURE_2D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_1D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_ARRAY","","",null,null],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",null,null],[17,"TEXTURE_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_BINDING","","",null,null],[17,"MAX_TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_BINDING_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",null,null],[17,"ANY_SAMPLES_PASSED","","",null,null],[17,"SAMPLE_SHADING","","",null,null],[17,"MIN_SAMPLE_SHADING_VALUE","","",null,null],[17,"R11F_G11F_B10F","","",null,null],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",null,null],[17,"RGB9_E5","","",null,null],[17,"UNSIGNED_INT_5_9_9_9_REV","","",null,null],[17,"TEXTURE_SHARED_SIZE","","",null,null],[17,"SRGB","","",null,null],[17,"SRGB8","","",null,null],[17,"SRGB_ALPHA","","",null,null],[17,"SRGB8_ALPHA8","","",null,null],[17,"COMPRESSED_SRGB","","",null,null],[17,"COMPRESSED_SRGB_ALPHA","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",null,null],[17,"PRIMITIVES_GENERATED","","",null,null],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",null,null],[17,"RASTERIZER_DISCARD","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",null,null],[17,"INTERLEAVED_ATTRIBS","","",null,null],[17,"SEPARATE_ATTRIBS","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",null,null],[17,"POINT_SPRITE_COORD_ORIGIN","","",null,null],[17,"LOWER_LEFT","","",null,null],[17,"UPPER_LEFT","","",null,null],[17,"STENCIL_BACK_REF","","",null,null],[17,"STENCIL_BACK_VALUE_MASK","","",null,null],[17,"STENCIL_BACK_WRITEMASK","","",null,null],[17,"DRAW_FRAMEBUFFER_BINDING","","",null,null],[17,"FRAMEBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_BINDING","","",null,null],[17,"READ_FRAMEBUFFER","","",null,null],[17,"DRAW_FRAMEBUFFER","","",null,null],[17,"READ_FRAMEBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_SAMPLES","","",null,null],[17,"DEPTH_COMPONENT32F","","",null,null],[17,"DEPTH32F_STENCIL8","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",null,null],[17,"FRAMEBUFFER_COMPLETE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",null,null],[17,"FRAMEBUFFER_UNSUPPORTED","","",null,null],[17,"MAX_COLOR_ATTACHMENTS","","",null,null],[17,"COLOR_ATTACHMENT0","","",null,null],[17,"COLOR_ATTACHMENT1","","",null,null],[17,"COLOR_ATTACHMENT2","","",null,null],[17,"COLOR_ATTACHMENT3","","",null,null],[17,"COLOR_ATTACHMENT4","","",null,null],[17,"COLOR_ATTACHMENT5","","",null,null],[17,"COLOR_ATTACHMENT6","","",null,null],[17,"COLOR_ATTACHMENT7","","",null,null],[17,"COLOR_ATTACHMENT8","","",null,null],[17,"COLOR_ATTACHMENT9","","",null,null],[17,"COLOR_ATTACHMENT10","","",null,null],[17,"COLOR_ATTACHMENT11","","",null,null],[17,"COLOR_ATTACHMENT12","","",null,null],[17,"COLOR_ATTACHMENT13","","",null,null],[17,"COLOR_ATTACHMENT14","","",null,null],[17,"COLOR_ATTACHMENT15","","",null,null],[17,"COLOR_ATTACHMENT16","","",null,null],[17,"COLOR_ATTACHMENT17","","",null,null],[17,"COLOR_ATTACHMENT18","","",null,null],[17,"COLOR_ATTACHMENT19","","",null,null],[17,"COLOR_ATTACHMENT20","","",null,null],[17,"COLOR_ATTACHMENT21","","",null,null],[17,"COLOR_ATTACHMENT22","","",null,null],[17,"COLOR_ATTACHMENT23","","",null,null],[17,"COLOR_ATTACHMENT24","","",null,null],[17,"COLOR_ATTACHMENT25","","",null,null],[17,"COLOR_ATTACHMENT26","","",null,null],[17,"COLOR_ATTACHMENT27","","",null,null],[17,"COLOR_ATTACHMENT28","","",null,null],[17,"COLOR_ATTACHMENT29","","",null,null],[17,"COLOR_ATTACHMENT30","","",null,null],[17,"COLOR_ATTACHMENT31","","",null,null],[17,"DEPTH_ATTACHMENT","","",null,null],[17,"STENCIL_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER","","",null,null],[17,"RENDERBUFFER","","",null,null],[17,"RENDERBUFFER_WIDTH","","",null,null],[17,"RENDERBUFFER_HEIGHT","","",null,null],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",null,null],[17,"STENCIL_INDEX1","","",null,null],[17,"STENCIL_INDEX4","","",null,null],[17,"STENCIL_INDEX8","","",null,null],[17,"STENCIL_INDEX16","","",null,null],[17,"RENDERBUFFER_RED_SIZE","","",null,null],[17,"RENDERBUFFER_GREEN_SIZE","","",null,null],[17,"RENDERBUFFER_BLUE_SIZE","","",null,null],[17,"RENDERBUFFER_ALPHA_SIZE","","",null,null],[17,"RENDERBUFFER_DEPTH_SIZE","","",null,null],[17,"RENDERBUFFER_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",null,null],[17,"MAX_SAMPLES","","",null,null],[17,"RGB565","","",null,null],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",null,null],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",null,null],[17,"MAX_ELEMENT_INDEX","","",null,null],[17,"RGBA32UI","","",null,null],[17,"RGB32UI","","",null,null],[17,"RGBA16UI","","",null,null],[17,"RGB16UI","","",null,null],[17,"RGBA8UI","","",null,null],[17,"RGB8UI","","",null,null],[17,"RGBA32I","","",null,null],[17,"RGB32I","","",null,null],[17,"RGBA16I","","",null,null],[17,"RGB16I","","",null,null],[17,"RGBA8I","","",null,null],[17,"RGB8I","","",null,null],[17,"RED_INTEGER","","",null,null],[17,"GREEN_INTEGER","","",null,null],[17,"BLUE_INTEGER","","",null,null],[17,"RGB_INTEGER","","",null,null],[17,"RGBA_INTEGER","","",null,null],[17,"BGR_INTEGER","","",null,null],[17,"BGRA_INTEGER","","",null,null],[17,"INT_2_10_10_10_REV","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",null,null],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",null,null],[17,"FRAMEBUFFER_SRGB","","",null,null],[17,"COMPRESSED_RED_RGTC1","","",null,null],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",null,null],[17,"COMPRESSED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",null,null],[17,"SAMPLER_1D_ARRAY","","",null,null],[17,"SAMPLER_2D_ARRAY","","",null,null],[17,"SAMPLER_BUFFER","","",null,null],[17,"SAMPLER_1D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_2D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_CUBE_SHADOW","","",null,null],[17,"UNSIGNED_INT_VEC2","","",null,null],[17,"UNSIGNED_INT_VEC3","","",null,null],[17,"UNSIGNED_INT_VEC4","","",null,null],[17,"INT_SAMPLER_1D","","",null,null],[17,"INT_SAMPLER_2D","","",null,null],[17,"INT_SAMPLER_3D","","",null,null],[17,"INT_SAMPLER_CUBE","","",null,null],[17,"INT_SAMPLER_2D_RECT","","",null,null],[17,"INT_SAMPLER_1D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_ARRAY","","",null,null],[17,"INT_SAMPLER_BUFFER","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_3D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",null,null],[17,"GEOMETRY_SHADER","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",null,null],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"ACTIVE_SUBROUTINES","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",null,null],[17,"MAX_SUBROUTINES","","",null,null],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"LOW_FLOAT","","",null,null],[17,"MEDIUM_FLOAT","","",null,null],[17,"HIGH_FLOAT","","",null,null],[17,"LOW_INT","","",null,null],[17,"MEDIUM_INT","","",null,null],[17,"HIGH_INT","","",null,null],[17,"SHADER_BINARY_FORMATS","","",null,null],[17,"NUM_SHADER_BINARY_FORMATS","","",null,null],[17,"SHADER_COMPILER","","",null,null],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",null,null],[17,"MAX_VARYING_VECTORS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",null,null],[17,"QUERY_WAIT","","",null,null],[17,"QUERY_NO_WAIT","","",null,null],[17,"QUERY_BY_REGION_WAIT","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT","","",null,null],[17,"QUERY_WAIT_INVERTED","","",null,null],[17,"QUERY_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",null,null],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"TRANSFORM_FEEDBACK","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BINDING","","",null,null],[17,"TIMESTAMP","","",null,null],[17,"TEXTURE_SWIZZLE_R","","",null,null],[17,"TEXTURE_SWIZZLE_G","","",null,null],[17,"TEXTURE_SWIZZLE_B","","",null,null],[17,"TEXTURE_SWIZZLE_A","","",null,null],[17,"TEXTURE_SWIZZLE_RGBA","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",null,null],[17,"NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"COMPATIBLE_SUBROUTINES","","",null,null],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",null,null],[17,"FIRST_VERTEX_CONVENTION","","",null,null],[17,"LAST_VERTEX_CONVENTION","","",null,null],[17,"PROVOKING_VERTEX","","",null,null],[17,"SAMPLE_POSITION","","",null,null],[17,"SAMPLE_MASK","","",null,null],[17,"SAMPLE_MASK_VALUE","","",null,null],[17,"MAX_SAMPLE_MASK_WORDS","","",null,null],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",null,null],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",null,null],[17,"MAX_VERTEX_STREAMS","","",null,null],[17,"PATCH_VERTICES","","",null,null],[17,"PATCH_DEFAULT_INNER_LEVEL","","",null,null],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",null,null],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",null,null],[17,"TESS_GEN_MODE","","",null,null],[17,"TESS_GEN_SPACING","","",null,null],[17,"TESS_GEN_VERTEX_ORDER","","",null,null],[17,"TESS_GEN_POINT_MODE","","",null,null],[17,"ISOLINES","","",null,null],[17,"FRACTIONAL_ODD","","",null,null],[17,"FRACTIONAL_EVEN","","",null,null],[17,"MAX_PATCH_VERTICES","","",null,null],[17,"MAX_TESS_GEN_LEVEL","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_PATCH_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",null,null],[17,"TESS_EVALUATION_SHADER","","",null,null],[17,"TESS_CONTROL_SHADER","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",null,null],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",null,null],[17,"COPY_READ_BUFFER","","",null,null],[17,"COPY_READ_BUFFER_BINDING","","",null,null],[17,"COPY_WRITE_BUFFER","","",null,null],[17,"COPY_WRITE_BUFFER_BINDING","","",null,null],[17,"MAX_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",null,null],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",null,null],[17,"IMAGE_BINDING_NAME","","",null,null],[17,"IMAGE_BINDING_LEVEL","","",null,null],[17,"IMAGE_BINDING_LAYERED","","",null,null],[17,"IMAGE_BINDING_LAYER","","",null,null],[17,"IMAGE_BINDING_ACCESS","","",null,null],[17,"DRAW_INDIRECT_BUFFER","","",null,null],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DOUBLE_MAT2","","",null,null],[17,"DOUBLE_MAT3","","",null,null],[17,"DOUBLE_MAT4","","",null,null],[17,"DOUBLE_MAT2x3","","",null,null],[17,"DOUBLE_MAT2x4","","",null,null],[17,"DOUBLE_MAT3x2","","",null,null],[17,"DOUBLE_MAT3x4","","",null,null],[17,"DOUBLE_MAT4x2","","",null,null],[17,"DOUBLE_MAT4x3","","",null,null],[17,"VERTEX_BINDING_BUFFER","","",null,null],[17,"R8_SNORM","","",null,null],[17,"RG8_SNORM","","",null,null],[17,"RGB8_SNORM","","",null,null],[17,"RGBA8_SNORM","","",null,null],[17,"R16_SNORM","","",null,null],[17,"RG16_SNORM","","",null,null],[17,"RGB16_SNORM","","",null,null],[17,"RGBA16_SNORM","","",null,null],[17,"SIGNED_NORMALIZED","","",null,null],[17,"PRIMITIVE_RESTART","","",null,null],[17,"PRIMITIVE_RESTART_INDEX","","",null,null],[17,"DOUBLE_VEC2","","",null,null],[17,"DOUBLE_VEC3","","",null,null],[17,"DOUBLE_VEC4","","",null,null],[17,"TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",null,null],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_1D","","",null,null],[17,"IMAGE_2D","","",null,null],[17,"IMAGE_3D","","",null,null],[17,"IMAGE_2D_RECT","","",null,null],[17,"IMAGE_CUBE","","",null,null],[17,"IMAGE_BUFFER","","",null,null],[17,"IMAGE_1D_ARRAY","","",null,null],[17,"IMAGE_2D_ARRAY","","",null,null],[17,"IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_2D_MULTISAMPLE","","",null,null],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_IMAGE_1D","","",null,null],[17,"INT_IMAGE_2D","","",null,null],[17,"INT_IMAGE_3D","","",null,null],[17,"INT_IMAGE_2D_RECT","","",null,null],[17,"INT_IMAGE_CUBE","","",null,null],[17,"INT_IMAGE_BUFFER","","",null,null],[17,"INT_IMAGE_1D_ARRAY","","",null,null],[17,"INT_IMAGE_2D_ARRAY","","",null,null],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D","","",null,null],[17,"UNSIGNED_INT_IMAGE_3D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE","","",null,null],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_IMAGE_SAMPLES","","",null,null],[17,"IMAGE_BINDING_FORMAT","","",null,null],[17,"RGB10_A2UI","","",null,null],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",null,null],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",null,null],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",null,null],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",null,null],[17,"SHADER_STORAGE_BUFFER","","",null,null],[17,"SHADER_STORAGE_BUFFER_BINDING","","",null,null],[17,"SHADER_STORAGE_BUFFER_START","","",null,null],[17,"SHADER_STORAGE_BUFFER_SIZE","","",null,null],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",null,null],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",null,null],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_SAMPLES","","",null,null],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",null,null],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",null,null],[17,"MAX_INTEGER_SAMPLES","","",null,null],[17,"MAX_SERVER_WAIT_TIMEOUT","","",null,null],[17,"OBJECT_TYPE","","",null,null],[17,"SYNC_CONDITION","","",null,null],[17,"SYNC_STATUS","","",null,null],[17,"SYNC_FLAGS","","",null,null],[17,"SYNC_FENCE","","",null,null],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",null,null],[17,"UNSIGNALED","","",null,null],[17,"SIGNALED","","",null,null],[17,"ALREADY_SIGNALED","","",null,null],[17,"TIMEOUT_EXPIRED","","",null,null],[17,"CONDITION_SATISFIED","","",null,null],[17,"WAIT_FAILED","","",null,null],[17,"BUFFER_ACCESS_FLAGS","","",null,null],[17,"BUFFER_MAP_LENGTH","","",null,null],[17,"BUFFER_MAP_OFFSET","","",null,null],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",null,null],[17,"CONTEXT_PROFILE_MASK","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"TEXTURE_IMMUTABLE_FORMAT","","",null,null],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",null,null],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_SEVERITY_HIGH","","",null,null],[17,"DEBUG_SEVERITY_MEDIUM","","",null,null],[17,"DEBUG_SEVERITY_LOW","","",null,null],[17,"QUERY_BUFFER","","",null,null],[17,"QUERY_BUFFER_BINDING","","",null,null],[17,"QUERY_RESULT_NO_WAIT","","",null,null],[17,"TEXTURE_BUFFER_OFFSET","","",null,null],[17,"TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"COMPUTE_SHADER","","",null,null],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"COMPRESSED_R11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_R11_EAC","","",null,null],[17,"COMPRESSED_RG11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RG11_EAC","","",null,null],[17,"COMPRESSED_RGB8_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_ETC2","","",null,null],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",null,null],[17,"ATOMIC_COUNTER_BUFFER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_START","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",null,null],[17,"DEBUG_OUTPUT","","",null,null],[17,"UNIFORM","","",null,null],[17,"UNIFORM_BLOCK","","",null,null],[17,"PROGRAM_INPUT","","",null,null],[17,"PROGRAM_OUTPUT","","",null,null],[17,"BUFFER_VARIABLE","","",null,null],[17,"SHADER_STORAGE_BLOCK","","",null,null],[17,"IS_PER_PATCH","","",null,null],[17,"VERTEX_SUBROUTINE","","",null,null],[17,"TESS_CONTROL_SUBROUTINE","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE","","",null,null],[17,"GEOMETRY_SUBROUTINE","","",null,null],[17,"FRAGMENT_SUBROUTINE","","",null,null],[17,"COMPUTE_SUBROUTINE","","",null,null],[17,"VERTEX_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",null,null],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",null,null],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",null,null],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING","","",null,null],[17,"ACTIVE_RESOURCES","","",null,null],[17,"MAX_NAME_LENGTH","","",null,null],[17,"MAX_NUM_ACTIVE_VARIABLES","","",null,null],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"NAME_LENGTH","","",null,null],[17,"TYPE","","",null,null],[17,"ARRAY_SIZE","","",null,null],[17,"OFFSET","","",null,null],[17,"BLOCK_INDEX","","",null,null],[17,"ARRAY_STRIDE","","",null,null],[17,"MATRIX_STRIDE","","",null,null],[17,"IS_ROW_MAJOR","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"BUFFER_BINDING","","",null,null],[17,"BUFFER_DATA_SIZE","","",null,null],[17,"NUM_ACTIVE_VARIABLES","","",null,null],[17,"ACTIVE_VARIABLES","","",null,null],[17,"REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"TOP_LEVEL_ARRAY_SIZE","","",null,null],[17,"TOP_LEVEL_ARRAY_STRIDE","","",null,null],[17,"LOCATION","","",null,null],[17,"LOCATION_INDEX","","",null,null],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",null,null],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",null,null],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"MAX_FRAMEBUFFER_WIDTH","","",null,null],[17,"MAX_FRAMEBUFFER_HEIGHT","","",null,null],[17,"MAX_FRAMEBUFFER_LAYERS","","",null,null],[17,"MAX_FRAMEBUFFER_SAMPLES","","",null,null],[17,"LOCATION_COMPONENT","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",null,null],[17,"CLIP_ORIGIN","","",null,null],[17,"CLIP_DEPTH_MODE","","",null,null],[17,"NEGATIVE_ONE_TO_ONE","","",null,null],[17,"ZERO_TO_ONE","","",null,null],[17,"CLEAR_TEXTURE","","",null,null],[17,"NUM_SAMPLE_COUNTS","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"fnptr"}],"output":{"name":"fnptr"}}],[11,"is_loaded","","Returns `true` if the function has been successfully loaded.",1,{"inputs":[{"name":"fnptr"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"gl"}],"output":{"name":"gl"}}],[11,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.",0,{"inputs":[{"name":"gl"},{"name":"f"}],"output":{"name":"gl"}}],[11,"load","","Load each OpenGL symbol using a custom load function.",0,{"inputs":[{"name":"gl"},{"name":"t"}],"output":{"name":"gl"}}],[11,"ActiveShaderProgram","","",0,null],[11,"ActiveTexture","","",0,null],[11,"AttachShader","","",0,null],[11,"BeginConditionalRender","","",0,null],[11,"BeginQuery","","",0,null],[11,"BeginQueryIndexed","","",0,null],[11,"BeginTransformFeedback","","",0,null],[11,"BindAttribLocation","","",0,null],[11,"BindBuffer","","",0,null],[11,"BindBufferBase","","",0,null],[11,"BindBufferRange","","",0,null],[11,"BindBuffersBase","","",0,null],[11,"BindBuffersRange","","",0,null],[11,"BindFragDataLocation","","",0,null],[11,"BindFragDataLocationIndexed","","",0,null],[11,"BindFramebuffer","","",0,null],[11,"BindImageTexture","","",0,null],[11,"BindImageTextures","","",0,null],[11,"BindProgramPipeline","","",0,null],[11,"BindRenderbuffer","","",0,null],[11,"BindSampler","","",0,null],[11,"BindSamplers","","",0,null],[11,"BindTexture","","",0,null],[11,"BindTextureUnit","","",0,null],[11,"BindTextures","","",0,null],[11,"BindTransformFeedback","","",0,null],[11,"BindVertexArray","","",0,null],[11,"BindVertexBuffer","","",0,null],[11,"BindVertexBuffers","","",0,null],[11,"BlendColor","","",0,null],[11,"BlendEquation","","",0,null],[11,"BlendEquationSeparate","","",0,null],[11,"BlendEquationSeparatei","","",0,null],[11,"BlendEquationi","","",0,null],[11,"BlendFunc","","",0,null],[11,"BlendFuncSeparate","","",0,null],[11,"BlendFuncSeparatei","","",0,null],[11,"BlendFunci","","",0,null],[11,"BlitFramebuffer","","",0,null],[11,"BlitNamedFramebuffer","","",0,null],[11,"BufferData","","",0,null],[11,"BufferStorage","","",0,null],[11,"BufferSubData","","",0,null],[11,"CheckFramebufferStatus","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"}],"output":{"name":"glenum"}}],[11,"CheckNamedFramebufferStatus","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"},{"name":"glenum"}],"output":{"name":"glenum"}}],[11,"ClampColor","","",0,null],[11,"Clear","","",0,null],[11,"ClearBufferData","","",0,null],[11,"ClearBufferSubData","","",0,null],[11,"ClearBufferfi","","",0,null],[11,"ClearBufferfv","","",0,null],[11,"ClearBufferiv","","",0,null],[11,"ClearBufferuiv","","",0,null],[11,"ClearColor","","",0,null],[11,"ClearDepth","","",0,null],[11,"ClearDepthf","","",0,null],[11,"ClearNamedBufferData","","",0,null],[11,"ClearNamedBufferSubData","","",0,null],[11,"ClearNamedFramebufferfi","","",0,null],[11,"ClearNamedFramebufferfv","","",0,null],[11,"ClearNamedFramebufferiv","","",0,null],[11,"ClearNamedFramebufferuiv","","",0,null],[11,"ClearStencil","","",0,null],[11,"ClearTexImage","","",0,null],[11,"ClearTexSubImage","","",0,null],[11,"ClientWaitSync","","",0,{"inputs":[{"name":"gl"},{"name":"glsync"},{"name":"glbitfield"},{"name":"gluint64"}],"output":{"name":"glenum"}}],[11,"ClipControl","","",0,null],[11,"ColorMask","","",0,null],[11,"ColorMaski","","",0,null],[11,"ColorP3ui","","",0,null],[11,"ColorP3uiv","","",0,null],[11,"ColorP4ui","","",0,null],[11,"ColorP4uiv","","",0,null],[11,"CompileShader","","",0,null],[11,"CompressedTexImage1D","","",0,null],[11,"CompressedTexImage2D","","",0,null],[11,"CompressedTexImage3D","","",0,null],[11,"CompressedTexSubImage1D","","",0,null],[11,"CompressedTexSubImage2D","","",0,null],[11,"CompressedTexSubImage3D","","",0,null],[11,"CompressedTextureSubImage1D","","",0,null],[11,"CompressedTextureSubImage2D","","",0,null],[11,"CompressedTextureSubImage3D","","",0,null],[11,"CopyBufferSubData","","",0,null],[11,"CopyImageSubData","","",0,null],[11,"CopyNamedBufferSubData","","",0,null],[11,"CopyTexImage1D","","",0,null],[11,"CopyTexImage2D","","",0,null],[11,"CopyTexSubImage1D","","",0,null],[11,"CopyTexSubImage2D","","",0,null],[11,"CopyTexSubImage3D","","",0,null],[11,"CopyTextureSubImage1D","","",0,null],[11,"CopyTextureSubImage2D","","",0,null],[11,"CopyTextureSubImage3D","","",0,null],[11,"CreateBuffers","","",0,null],[11,"CreateFramebuffers","","",0,null],[11,"CreateProgram","","",0,{"inputs":[{"name":"gl"}],"output":{"name":"gluint"}}],[11,"CreateProgramPipelines","","",0,null],[11,"CreateQueries","","",0,null],[11,"CreateRenderbuffers","","",0,null],[11,"CreateSamplers","","",0,null],[11,"CreateShader","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"}],"output":{"name":"gluint"}}],[11,"CreateShaderProgramv","","",0,null],[11,"CreateTextures","","",0,null],[11,"CreateTransformFeedbacks","","",0,null],[11,"CreateVertexArrays","","",0,null],[11,"CullFace","","",0,null],[11,"DebugMessageCallback","","",0,null],[11,"DebugMessageControl","","",0,null],[11,"DebugMessageInsert","","",0,null],[11,"DeleteBuffers","","",0,null],[11,"DeleteFramebuffers","","",0,null],[11,"DeleteProgram","","",0,null],[11,"DeleteProgramPipelines","","",0,null],[11,"DeleteQueries","","",0,null],[11,"DeleteRenderbuffers","","",0,null],[11,"DeleteSamplers","","",0,null],[11,"DeleteShader","","",0,null],[11,"DeleteSync","","",0,null],[11,"DeleteTextures","","",0,null],[11,"DeleteTransformFeedbacks","","",0,null],[11,"DeleteVertexArrays","","",0,null],[11,"DepthFunc","","",0,null],[11,"DepthMask","","",0,null],[11,"DepthRange","","",0,null],[11,"DepthRangeArrayv","","",0,null],[11,"DepthRangeIndexed","","",0,null],[11,"DepthRangef","","",0,null],[11,"DetachShader","","",0,null],[11,"Disable","","",0,null],[11,"DisableVertexArrayAttrib","","",0,null],[11,"DisableVertexAttribArray","","",0,null],[11,"Disablei","","",0,null],[11,"DispatchCompute","","",0,null],[11,"DispatchComputeIndirect","","",0,null],[11,"DrawArrays","","",0,null],[11,"DrawArraysIndirect","","",0,null],[11,"DrawArraysInstanced","","",0,null],[11,"DrawArraysInstancedBaseInstance","","",0,null],[11,"DrawBuffer","","",0,null],[11,"DrawBuffers","","",0,null],[11,"DrawElements","","",0,null],[11,"DrawElementsBaseVertex","","",0,null],[11,"DrawElementsIndirect","","",0,null],[11,"DrawElementsInstanced","","",0,null],[11,"DrawElementsInstancedBaseInstance","","",0,null],[11,"DrawElementsInstancedBaseVertex","","",0,null],[11,"DrawElementsInstancedBaseVertexBaseInstance","","",0,null],[11,"DrawRangeElements","","",0,null],[11,"DrawRangeElementsBaseVertex","","",0,null],[11,"DrawTransformFeedback","","",0,null],[11,"DrawTransformFeedbackInstanced","","",0,null],[11,"DrawTransformFeedbackStream","","",0,null],[11,"DrawTransformFeedbackStreamInstanced","","",0,null],[11,"Enable","","",0,null],[11,"EnableVertexArrayAttrib","","",0,null],[11,"EnableVertexAttribArray","","",0,null],[11,"Enablei","","",0,null],[11,"EndConditionalRender","","",0,null],[11,"EndQuery","","",0,null],[11,"EndQueryIndexed","","",0,null],[11,"EndTransformFeedback","","",0,null],[11,"FenceSync","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"},{"name":"glbitfield"}],"output":{"name":"glsync"}}],[11,"Finish","","",0,null],[11,"Flush","","",0,null],[11,"FlushMappedBufferRange","","",0,null],[11,"FlushMappedNamedBufferRange","","",0,null],[11,"FramebufferParameteri","","",0,null],[11,"FramebufferRenderbuffer","","",0,null],[11,"FramebufferTexture","","",0,null],[11,"FramebufferTexture1D","","",0,null],[11,"FramebufferTexture2D","","",0,null],[11,"FramebufferTexture3D","","",0,null],[11,"FramebufferTextureLayer","","",0,null],[11,"FrontFace","","",0,null],[11,"GenBuffers","","",0,null],[11,"GenFramebuffers","","",0,null],[11,"GenProgramPipelines","","",0,null],[11,"GenQueries","","",0,null],[11,"GenRenderbuffers","","",0,null],[11,"GenSamplers","","",0,null],[11,"GenTextures","","",0,null],[11,"GenTransformFeedbacks","","",0,null],[11,"GenVertexArrays","","",0,null],[11,"GenerateMipmap","","",0,null],[11,"GenerateTextureMipmap","","",0,null],[11,"GetActiveAtomicCounterBufferiv","","",0,null],[11,"GetActiveAttrib","","",0,null],[11,"GetActiveSubroutineName","","",0,null],[11,"GetActiveSubroutineUniformName","","",0,null],[11,"GetActiveSubroutineUniformiv","","",0,null],[11,"GetActiveUniform","","",0,null],[11,"GetActiveUniformBlockName","","",0,null],[11,"GetActiveUniformBlockiv","","",0,null],[11,"GetActiveUniformName","","",0,null],[11,"GetActiveUniformsiv","","",0,null],[11,"GetAttachedShaders","","",0,null],[11,"GetAttribLocation","","",0,null],[11,"GetBooleani_v","","",0,null],[11,"GetBooleanv","","",0,null],[11,"GetBufferParameteri64v","","",0,null],[11,"GetBufferParameteriv","","",0,null],[11,"GetBufferPointerv","","",0,null],[11,"GetBufferSubData","","",0,null],[11,"GetCompressedTexImage","","",0,null],[11,"GetCompressedTextureImage","","",0,null],[11,"GetCompressedTextureSubImage","","",0,null],[11,"GetDebugMessageLog","","",0,null],[11,"GetDoublei_v","","",0,null],[11,"GetDoublev","","",0,null],[11,"GetError","","",0,{"inputs":[{"name":"gl"}],"output":{"name":"glenum"}}],[11,"GetFloati_v","","",0,null],[11,"GetFloatv","","",0,null],[11,"GetFragDataIndex","","",0,null],[11,"GetFragDataLocation","","",0,null],[11,"GetFramebufferAttachmentParameteriv","","",0,null],[11,"GetFramebufferParameteriv","","",0,null],[11,"GetGraphicsResetStatus","","",0,{"inputs":[{"name":"gl"}],"output":{"name":"glenum"}}],[11,"GetInteger64i_v","","",0,null],[11,"GetInteger64v","","",0,null],[11,"GetIntegeri_v","","",0,null],[11,"GetIntegerv","","",0,null],[11,"GetInternalformati64v","","",0,null],[11,"GetInternalformativ","","",0,null],[11,"GetMultisamplefv","","",0,null],[11,"GetNamedBufferParameteri64v","","",0,null],[11,"GetNamedBufferParameteriv","","",0,null],[11,"GetNamedBufferPointerv","","",0,null],[11,"GetNamedBufferSubData","","",0,null],[11,"GetNamedFramebufferAttachmentParameteriv","","",0,null],[11,"GetNamedFramebufferParameteriv","","",0,null],[11,"GetNamedRenderbufferParameteriv","","",0,null],[11,"GetObjectLabel","","",0,null],[11,"GetObjectPtrLabel","","",0,null],[11,"GetProgramBinary","","",0,null],[11,"GetProgramInfoLog","","",0,null],[11,"GetProgramInterfaceiv","","",0,null],[11,"GetProgramPipelineInfoLog","","",0,null],[11,"GetProgramPipelineiv","","",0,null],[11,"GetProgramResourceIndex","","",0,null],[11,"GetProgramResourceLocation","","",0,null],[11,"GetProgramResourceLocationIndex","","",0,null],[11,"GetProgramResourceName","","",0,null],[11,"GetProgramResourceiv","","",0,null],[11,"GetProgramStageiv","","",0,null],[11,"GetProgramiv","","",0,null],[11,"GetQueryBufferObjecti64v","","",0,null],[11,"GetQueryBufferObjectiv","","",0,null],[11,"GetQueryBufferObjectui64v","","",0,null],[11,"GetQueryBufferObjectuiv","","",0,null],[11,"GetQueryIndexediv","","",0,null],[11,"GetQueryObjecti64v","","",0,null],[11,"GetQueryObjectiv","","",0,null],[11,"GetQueryObjectui64v","","",0,null],[11,"GetQueryObjectuiv","","",0,null],[11,"GetQueryiv","","",0,null],[11,"GetRenderbufferParameteriv","","",0,null],[11,"GetSamplerParameterIiv","","",0,null],[11,"GetSamplerParameterIuiv","","",0,null],[11,"GetSamplerParameterfv","","",0,null],[11,"GetSamplerParameteriv","","",0,null],[11,"GetShaderInfoLog","","",0,null],[11,"GetShaderPrecisionFormat","","",0,null],[11,"GetShaderSource","","",0,null],[11,"GetShaderiv","","",0,null],[11,"GetString","","",0,null],[11,"GetStringi","","",0,null],[11,"GetSubroutineIndex","","",0,null],[11,"GetSubroutineUniformLocation","","",0,null],[11,"GetSynciv","","",0,null],[11,"GetTexImage","","",0,null],[11,"GetTexLevelParameterfv","","",0,null],[11,"GetTexLevelParameteriv","","",0,null],[11,"GetTexParameterIiv","","",0,null],[11,"GetTexParameterIuiv","","",0,null],[11,"GetTexParameterfv","","",0,null],[11,"GetTexParameteriv","","",0,null],[11,"GetTextureImage","","",0,null],[11,"GetTextureLevelParameterfv","","",0,null],[11,"GetTextureLevelParameteriv","","",0,null],[11,"GetTextureParameterIiv","","",0,null],[11,"GetTextureParameterIuiv","","",0,null],[11,"GetTextureParameterfv","","",0,null],[11,"GetTextureParameteriv","","",0,null],[11,"GetTextureSubImage","","",0,null],[11,"GetTransformFeedbackVarying","","",0,null],[11,"GetTransformFeedbacki64_v","","",0,null],[11,"GetTransformFeedbacki_v","","",0,null],[11,"GetTransformFeedbackiv","","",0,null],[11,"GetUniformBlockIndex","","",0,null],[11,"GetUniformIndices","","",0,null],[11,"GetUniformLocation","","",0,null],[11,"GetUniformSubroutineuiv","","",0,null],[11,"GetUniformdv","","",0,null],[11,"GetUniformfv","","",0,null],[11,"GetUniformiv","","",0,null],[11,"GetUniformuiv","","",0,null],[11,"GetVertexArrayIndexed64iv","","",0,null],[11,"GetVertexArrayIndexediv","","",0,null],[11,"GetVertexArrayiv","","",0,null],[11,"GetVertexAttribIiv","","",0,null],[11,"GetVertexAttribIuiv","","",0,null],[11,"GetVertexAttribLdv","","",0,null],[11,"GetVertexAttribPointerv","","",0,null],[11,"GetVertexAttribdv","","",0,null],[11,"GetVertexAttribfv","","",0,null],[11,"GetVertexAttribiv","","",0,null],[11,"GetnColorTable","","",0,null],[11,"GetnCompressedTexImage","","",0,null],[11,"GetnConvolutionFilter","","",0,null],[11,"GetnHistogram","","",0,null],[11,"GetnMapdv","","",0,null],[11,"GetnMapfv","","",0,null],[11,"GetnMapiv","","",0,null],[11,"GetnMinmax","","",0,null],[11,"GetnPixelMapfv","","",0,null],[11,"GetnPixelMapuiv","","",0,null],[11,"GetnPixelMapusv","","",0,null],[11,"GetnPolygonStipple","","",0,null],[11,"GetnSeparableFilter","","",0,null],[11,"GetnTexImage","","",0,null],[11,"GetnUniformdv","","",0,null],[11,"GetnUniformfv","","",0,null],[11,"GetnUniformiv","","",0,null],[11,"GetnUniformuiv","","",0,null],[11,"Hint","","",0,null],[11,"InvalidateBufferData","","",0,null],[11,"InvalidateBufferSubData","","",0,null],[11,"InvalidateFramebuffer","","",0,null],[11,"InvalidateNamedFramebufferData","","",0,null],[11,"InvalidateNamedFramebufferSubData","","",0,null],[11,"InvalidateSubFramebuffer","","",0,null],[11,"InvalidateTexImage","","",0,null],[11,"InvalidateTexSubImage","","",0,null],[11,"IsBuffer","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsEnabled","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"}],"output":{"name":"glboolean"}}],[11,"IsEnabledi","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsFramebuffer","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsProgram","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsProgramPipeline","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsQuery","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsRenderbuffer","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsSampler","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsShader","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsSync","","",0,{"inputs":[{"name":"gl"},{"name":"glsync"}],"output":{"name":"glboolean"}}],[11,"IsTexture","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsTransformFeedback","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"IsVertexArray","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"LineWidth","","",0,null],[11,"LinkProgram","","",0,null],[11,"LogicOp","","",0,null],[11,"MapBuffer","","",0,null],[11,"MapBufferRange","","",0,null],[11,"MapNamedBuffer","","",0,null],[11,"MapNamedBufferRange","","",0,null],[11,"MemoryBarrier","","",0,null],[11,"MemoryBarrierByRegion","","",0,null],[11,"MinSampleShading","","",0,null],[11,"MultiDrawArrays","","",0,null],[11,"MultiDrawArraysIndirect","","",0,null],[11,"MultiDrawElements","","",0,null],[11,"MultiDrawElementsBaseVertex","","",0,null],[11,"MultiDrawElementsIndirect","","",0,null],[11,"MultiTexCoordP1ui","","",0,null],[11,"MultiTexCoordP1uiv","","",0,null],[11,"MultiTexCoordP2ui","","",0,null],[11,"MultiTexCoordP2uiv","","",0,null],[11,"MultiTexCoordP3ui","","",0,null],[11,"MultiTexCoordP3uiv","","",0,null],[11,"MultiTexCoordP4ui","","",0,null],[11,"MultiTexCoordP4uiv","","",0,null],[11,"NamedBufferData","","",0,null],[11,"NamedBufferStorage","","",0,null],[11,"NamedBufferSubData","","",0,null],[11,"NamedFramebufferDrawBuffer","","",0,null],[11,"NamedFramebufferDrawBuffers","","",0,null],[11,"NamedFramebufferParameteri","","",0,null],[11,"NamedFramebufferReadBuffer","","",0,null],[11,"NamedFramebufferRenderbuffer","","",0,null],[11,"NamedFramebufferTexture","","",0,null],[11,"NamedFramebufferTextureLayer","","",0,null],[11,"NamedRenderbufferStorage","","",0,null],[11,"NamedRenderbufferStorageMultisample","","",0,null],[11,"NormalP3ui","","",0,null],[11,"NormalP3uiv","","",0,null],[11,"ObjectLabel","","",0,null],[11,"ObjectPtrLabel","","",0,null],[11,"PatchParameterfv","","",0,null],[11,"PatchParameteri","","",0,null],[11,"PauseTransformFeedback","","",0,null],[11,"PixelStoref","","",0,null],[11,"PixelStorei","","",0,null],[11,"PointParameterf","","",0,null],[11,"PointParameterfv","","",0,null],[11,"PointParameteri","","",0,null],[11,"PointParameteriv","","",0,null],[11,"PointSize","","",0,null],[11,"PolygonMode","","",0,null],[11,"PolygonOffset","","",0,null],[11,"PopDebugGroup","","",0,null],[11,"PrimitiveRestartIndex","","",0,null],[11,"ProgramBinary","","",0,null],[11,"ProgramParameteri","","",0,null],[11,"ProgramUniform1d","","",0,null],[11,"ProgramUniform1dv","","",0,null],[11,"ProgramUniform1f","","",0,null],[11,"ProgramUniform1fv","","",0,null],[11,"ProgramUniform1i","","",0,null],[11,"ProgramUniform1iv","","",0,null],[11,"ProgramUniform1ui","","",0,null],[11,"ProgramUniform1uiv","","",0,null],[11,"ProgramUniform2d","","",0,null],[11,"ProgramUniform2dv","","",0,null],[11,"ProgramUniform2f","","",0,null],[11,"ProgramUniform2fv","","",0,null],[11,"ProgramUniform2i","","",0,null],[11,"ProgramUniform2iv","","",0,null],[11,"ProgramUniform2ui","","",0,null],[11,"ProgramUniform2uiv","","",0,null],[11,"ProgramUniform3d","","",0,null],[11,"ProgramUniform3dv","","",0,null],[11,"ProgramUniform3f","","",0,null],[11,"ProgramUniform3fv","","",0,null],[11,"ProgramUniform3i","","",0,null],[11,"ProgramUniform3iv","","",0,null],[11,"ProgramUniform3ui","","",0,null],[11,"ProgramUniform3uiv","","",0,null],[11,"ProgramUniform4d","","",0,null],[11,"ProgramUniform4dv","","",0,null],[11,"ProgramUniform4f","","",0,null],[11,"ProgramUniform4fv","","",0,null],[11,"ProgramUniform4i","","",0,null],[11,"ProgramUniform4iv","","",0,null],[11,"ProgramUniform4ui","","",0,null],[11,"ProgramUniform4uiv","","",0,null],[11,"ProgramUniformMatrix2dv","","",0,null],[11,"ProgramUniformMatrix2fv","","",0,null],[11,"ProgramUniformMatrix2x3dv","","",0,null],[11,"ProgramUniformMatrix2x3fv","","",0,null],[11,"ProgramUniformMatrix2x4dv","","",0,null],[11,"ProgramUniformMatrix2x4fv","","",0,null],[11,"ProgramUniformMatrix3dv","","",0,null],[11,"ProgramUniformMatrix3fv","","",0,null],[11,"ProgramUniformMatrix3x2dv","","",0,null],[11,"ProgramUniformMatrix3x2fv","","",0,null],[11,"ProgramUniformMatrix3x4dv","","",0,null],[11,"ProgramUniformMatrix3x4fv","","",0,null],[11,"ProgramUniformMatrix4dv","","",0,null],[11,"ProgramUniformMatrix4fv","","",0,null],[11,"ProgramUniformMatrix4x2dv","","",0,null],[11,"ProgramUniformMatrix4x2fv","","",0,null],[11,"ProgramUniformMatrix4x3dv","","",0,null],[11,"ProgramUniformMatrix4x3fv","","",0,null],[11,"ProvokingVertex","","",0,null],[11,"PushDebugGroup","","",0,null],[11,"QueryCounter","","",0,null],[11,"ReadBuffer","","",0,null],[11,"ReadPixels","","",0,null],[11,"ReadnPixels","","",0,null],[11,"ReleaseShaderCompiler","","",0,null],[11,"RenderbufferStorage","","",0,null],[11,"RenderbufferStorageMultisample","","",0,null],[11,"ResumeTransformFeedback","","",0,null],[11,"SampleCoverage","","",0,null],[11,"SampleMaski","","",0,null],[11,"SamplerParameterIiv","","",0,null],[11,"SamplerParameterIuiv","","",0,null],[11,"SamplerParameterf","","",0,null],[11,"SamplerParameterfv","","",0,null],[11,"SamplerParameteri","","",0,null],[11,"SamplerParameteriv","","",0,null],[11,"Scissor","","",0,null],[11,"ScissorArrayv","","",0,null],[11,"ScissorIndexed","","",0,null],[11,"ScissorIndexedv","","",0,null],[11,"SecondaryColorP3ui","","",0,null],[11,"SecondaryColorP3uiv","","",0,null],[11,"ShaderBinary","","",0,null],[11,"ShaderSource","","",0,null],[11,"ShaderStorageBlockBinding","","",0,null],[11,"StencilFunc","","",0,null],[11,"StencilFuncSeparate","","",0,null],[11,"StencilMask","","",0,null],[11,"StencilMaskSeparate","","",0,null],[11,"StencilOp","","",0,null],[11,"StencilOpSeparate","","",0,null],[11,"TexBuffer","","",0,null],[11,"TexBufferRange","","",0,null],[11,"TexCoordP1ui","","",0,null],[11,"TexCoordP1uiv","","",0,null],[11,"TexCoordP2ui","","",0,null],[11,"TexCoordP2uiv","","",0,null],[11,"TexCoordP3ui","","",0,null],[11,"TexCoordP3uiv","","",0,null],[11,"TexCoordP4ui","","",0,null],[11,"TexCoordP4uiv","","",0,null],[11,"TexImage1D","","",0,null],[11,"TexImage2D","","",0,null],[11,"TexImage2DMultisample","","",0,null],[11,"TexImage3D","","",0,null],[11,"TexImage3DMultisample","","",0,null],[11,"TexParameterIiv","","",0,null],[11,"TexParameterIuiv","","",0,null],[11,"TexParameterf","","",0,null],[11,"TexParameterfv","","",0,null],[11,"TexParameteri","","",0,null],[11,"TexParameteriv","","",0,null],[11,"TexStorage1D","","",0,null],[11,"TexStorage2D","","",0,null],[11,"TexStorage2DMultisample","","",0,null],[11,"TexStorage3D","","",0,null],[11,"TexStorage3DMultisample","","",0,null],[11,"TexSubImage1D","","",0,null],[11,"TexSubImage2D","","",0,null],[11,"TexSubImage3D","","",0,null],[11,"TextureBarrier","","",0,null],[11,"TextureBuffer","","",0,null],[11,"TextureBufferRange","","",0,null],[11,"TextureParameterIiv","","",0,null],[11,"TextureParameterIuiv","","",0,null],[11,"TextureParameterf","","",0,null],[11,"TextureParameterfv","","",0,null],[11,"TextureParameteri","","",0,null],[11,"TextureParameteriv","","",0,null],[11,"TextureStorage1D","","",0,null],[11,"TextureStorage2D","","",0,null],[11,"TextureStorage2DMultisample","","",0,null],[11,"TextureStorage3D","","",0,null],[11,"TextureStorage3DMultisample","","",0,null],[11,"TextureSubImage1D","","",0,null],[11,"TextureSubImage2D","","",0,null],[11,"TextureSubImage3D","","",0,null],[11,"TextureView","","",0,null],[11,"TransformFeedbackBufferBase","","",0,null],[11,"TransformFeedbackBufferRange","","",0,null],[11,"TransformFeedbackVaryings","","",0,null],[11,"Uniform1d","","",0,null],[11,"Uniform1dv","","",0,null],[11,"Uniform1f","","",0,null],[11,"Uniform1fv","","",0,null],[11,"Uniform1i","","",0,null],[11,"Uniform1iv","","",0,null],[11,"Uniform1ui","","",0,null],[11,"Uniform1uiv","","",0,null],[11,"Uniform2d","","",0,null],[11,"Uniform2dv","","",0,null],[11,"Uniform2f","","",0,null],[11,"Uniform2fv","","",0,null],[11,"Uniform2i","","",0,null],[11,"Uniform2iv","","",0,null],[11,"Uniform2ui","","",0,null],[11,"Uniform2uiv","","",0,null],[11,"Uniform3d","","",0,null],[11,"Uniform3dv","","",0,null],[11,"Uniform3f","","",0,null],[11,"Uniform3fv","","",0,null],[11,"Uniform3i","","",0,null],[11,"Uniform3iv","","",0,null],[11,"Uniform3ui","","",0,null],[11,"Uniform3uiv","","",0,null],[11,"Uniform4d","","",0,null],[11,"Uniform4dv","","",0,null],[11,"Uniform4f","","",0,null],[11,"Uniform4fv","","",0,null],[11,"Uniform4i","","",0,null],[11,"Uniform4iv","","",0,null],[11,"Uniform4ui","","",0,null],[11,"Uniform4uiv","","",0,null],[11,"UniformBlockBinding","","",0,null],[11,"UniformMatrix2dv","","",0,null],[11,"UniformMatrix2fv","","",0,null],[11,"UniformMatrix2x3dv","","",0,null],[11,"UniformMatrix2x3fv","","",0,null],[11,"UniformMatrix2x4dv","","",0,null],[11,"UniformMatrix2x4fv","","",0,null],[11,"UniformMatrix3dv","","",0,null],[11,"UniformMatrix3fv","","",0,null],[11,"UniformMatrix3x2dv","","",0,null],[11,"UniformMatrix3x2fv","","",0,null],[11,"UniformMatrix3x4dv","","",0,null],[11,"UniformMatrix3x4fv","","",0,null],[11,"UniformMatrix4dv","","",0,null],[11,"UniformMatrix4fv","","",0,null],[11,"UniformMatrix4x2dv","","",0,null],[11,"UniformMatrix4x2fv","","",0,null],[11,"UniformMatrix4x3dv","","",0,null],[11,"UniformMatrix4x3fv","","",0,null],[11,"UniformSubroutinesuiv","","",0,null],[11,"UnmapBuffer","","",0,{"inputs":[{"name":"gl"},{"name":"glenum"}],"output":{"name":"glboolean"}}],[11,"UnmapNamedBuffer","","",0,{"inputs":[{"name":"gl"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[11,"UseProgram","","",0,null],[11,"UseProgramStages","","",0,null],[11,"ValidateProgram","","",0,null],[11,"ValidateProgramPipeline","","",0,null],[11,"VertexArrayAttribBinding","","",0,null],[11,"VertexArrayAttribFormat","","",0,null],[11,"VertexArrayAttribIFormat","","",0,null],[11,"VertexArrayAttribLFormat","","",0,null],[11,"VertexArrayBindingDivisor","","",0,null],[11,"VertexArrayElementBuffer","","",0,null],[11,"VertexArrayVertexBuffer","","",0,null],[11,"VertexArrayVertexBuffers","","",0,null],[11,"VertexAttrib1d","","",0,null],[11,"VertexAttrib1dv","","",0,null],[11,"VertexAttrib1f","","",0,null],[11,"VertexAttrib1fv","","",0,null],[11,"VertexAttrib1s","","",0,null],[11,"VertexAttrib1sv","","",0,null],[11,"VertexAttrib2d","","",0,null],[11,"VertexAttrib2dv","","",0,null],[11,"VertexAttrib2f","","",0,null],[11,"VertexAttrib2fv","","",0,null],[11,"VertexAttrib2s","","",0,null],[11,"VertexAttrib2sv","","",0,null],[11,"VertexAttrib3d","","",0,null],[11,"VertexAttrib3dv","","",0,null],[11,"VertexAttrib3f","","",0,null],[11,"VertexAttrib3fv","","",0,null],[11,"VertexAttrib3s","","",0,null],[11,"VertexAttrib3sv","","",0,null],[11,"VertexAttrib4Nbv","","",0,null],[11,"VertexAttrib4Niv","","",0,null],[11,"VertexAttrib4Nsv","","",0,null],[11,"VertexAttrib4Nub","","",0,null],[11,"VertexAttrib4Nubv","","",0,null],[11,"VertexAttrib4Nuiv","","",0,null],[11,"VertexAttrib4Nusv","","",0,null],[11,"VertexAttrib4bv","","",0,null],[11,"VertexAttrib4d","","",0,null],[11,"VertexAttrib4dv","","",0,null],[11,"VertexAttrib4f","","",0,null],[11,"VertexAttrib4fv","","",0,null],[11,"VertexAttrib4iv","","",0,null],[11,"VertexAttrib4s","","",0,null],[11,"VertexAttrib4sv","","",0,null],[11,"VertexAttrib4ubv","","",0,null],[11,"VertexAttrib4uiv","","",0,null],[11,"VertexAttrib4usv","","",0,null],[11,"VertexAttribBinding","","",0,null],[11,"VertexAttribDivisor","","",0,null],[11,"VertexAttribFormat","","",0,null],[11,"VertexAttribI1i","","",0,null],[11,"VertexAttribI1iv","","",0,null],[11,"VertexAttribI1ui","","",0,null],[11,"VertexAttribI1uiv","","",0,null],[11,"VertexAttribI2i","","",0,null],[11,"VertexAttribI2iv","","",0,null],[11,"VertexAttribI2ui","","",0,null],[11,"VertexAttribI2uiv","","",0,null],[11,"VertexAttribI3i","","",0,null],[11,"VertexAttribI3iv","","",0,null],[11,"VertexAttribI3ui","","",0,null],[11,"VertexAttribI3uiv","","",0,null],[11,"VertexAttribI4bv","","",0,null],[11,"VertexAttribI4i","","",0,null],[11,"VertexAttribI4iv","","",0,null],[11,"VertexAttribI4sv","","",0,null],[11,"VertexAttribI4ubv","","",0,null],[11,"VertexAttribI4ui","","",0,null],[11,"VertexAttribI4uiv","","",0,null],[11,"VertexAttribI4usv","","",0,null],[11,"VertexAttribIFormat","","",0,null],[11,"VertexAttribIPointer","","",0,null],[11,"VertexAttribL1d","","",0,null],[11,"VertexAttribL1dv","","",0,null],[11,"VertexAttribL2d","","",0,null],[11,"VertexAttribL2dv","","",0,null],[11,"VertexAttribL3d","","",0,null],[11,"VertexAttribL3dv","","",0,null],[11,"VertexAttribL4d","","",0,null],[11,"VertexAttribL4dv","","",0,null],[11,"VertexAttribLFormat","","",0,null],[11,"VertexAttribLPointer","","",0,null],[11,"VertexAttribP1ui","","",0,null],[11,"VertexAttribP1uiv","","",0,null],[11,"VertexAttribP2ui","","",0,null],[11,"VertexAttribP2uiv","","",0,null],[11,"VertexAttribP3ui","","",0,null],[11,"VertexAttribP3uiv","","",0,null],[11,"VertexAttribP4ui","","",0,null],[11,"VertexAttribP4uiv","","",0,null],[11,"VertexAttribPointer","","",0,null],[11,"VertexBindingDivisor","","",0,null],[11,"VertexP2ui","","",0,null],[11,"VertexP2uiv","","",0,null],[11,"VertexP3ui","","",0,null],[11,"VertexP3uiv","","",0,null],[11,"VertexP4ui","","",0,null],[11,"VertexP4uiv","","",0,null],[11,"Viewport","","",0,null],[11,"ViewportArrayv","","",0,null],[11,"ViewportIndexedf","","",0,null],[11,"ViewportIndexedfv","","",0,null],[11,"WaitSync","","",0,null]],"paths":[[3,"Gl"],[3,"FnPtr"]]};
searchIndex['piston'] = {"items":[[0,"","piston","A user friendly game engine written in Rust.",null,null],[0,"input","","",null,null],[0,"keyboard","piston::input","Back-end agnostic keyboard keys.",null,null],[11,"empty","input_lib::keyboard","Returns an empty set of flags.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"all","","Returns the set containing all flags.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bits","","Returns the raw value of the flags currently stored.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",0,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"modifierkey"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",0,null],[11,"remove","","Removes the specified flags in-place.",0,null],[11,"toggle","","Toggles the specified flags in-place.",0,null],[11,"handle_input","","Change modifier key state depending on input.",0,null],[11,"hash","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"eq","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"encode","","",0,{"inputs":[{"name":"modifierkey"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"modifierkey"},{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"modifierkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bitor","","Returns the union of the two sets of flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"sub","","Returns the set difference of the two sets of flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"not","","Returns the complement of this set of flags.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"from_iter","","",0,{"inputs":[{"name":"modifierkey"},{"name":"t"}],"output":{"name":"modifierkey"}}],[11,"default","","",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",1,{"inputs":[{"name":"key"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"key"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from","","",1,{"inputs":[{"name":"key"},{"name":"u32"}],"output":{"name":"key"}}],[11,"eq","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"ordering"}}],[11,"code","","Returns an id of the key",1,{"inputs":[{"name":"key"}],"output":{"name":"i32"}}],[11,"fmt","input_lib::mouse","",2,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"partial_cmp","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"ordering"}}],[11,"eq","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"encode","","",2,{"inputs":[{"name":"mousebutton"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"mousebutton"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"from","","",2,{"inputs":[{"name":"mousebutton"},{"name":"u32"}],"output":{"name":"mousebutton"}}],[11,"event_id","input_lib","",3,{"inputs":[{"name":"input"}],"output":{"name":"eventid"}}],[11,"with_args","","",3,{"inputs":[{"name":"input"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",3,{"inputs":[{"name":"input"},{"name":"eventid"},{"name":"any"},{"name":"input"}],"output":{"name":"option"}}],[11,"event_id","input_lib::event","",4,{"inputs":[{"name":"event"}],"output":{"name":"eventid"}}],[11,"with_args","","",4,{"inputs":[{"name":"event"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",4,{"inputs":[{"name":"event"},{"name":"eventid"},{"name":"any"},{"name":"event"}],"output":{"name":"option"}}],[11,"fmt","input_lib::update","",5,{"inputs":[{"name":"updateargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"updateargs"}],"output":{"name":"updateargs"}}],[11,"fmt","input_lib::render","",6,{"inputs":[{"name":"renderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"renderargs"}],"output":{"name":"renderargs"}}],[11,"viewport","","Returns viewport information filling entire render area.",6,{"inputs":[{"name":"renderargs"}],"output":{"name":"viewport"}}],[11,"fmt","input_lib::after_render","",7,{"inputs":[{"name":"afterrenderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"afterrenderargs"}],"output":{"name":"afterrenderargs"}}],[11,"fmt","input_lib::idle","",8,{"inputs":[{"name":"idleargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"idleargs"}],"output":{"name":"idleargs"}}],[11,"fmt","input_lib::event","",4,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"eq","input_lib","",9,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"eventid"}],"output":{"name":"eventid"}}],[11,"fmt","","",10,{"inputs":[{"name":"button"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"eq","","",10,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"encode","","",10,{"inputs":[{"name":"button"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"button"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"fmt","","",11,{"inputs":[{"name":"motion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"encode","","",11,{"inputs":[{"name":"motion"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"motion"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"motion"}],"output":{"name":"motion"}}],[11,"fmt","","",3,{"inputs":[{"name":"input"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"encode","","",3,{"inputs":[{"name":"input"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"input"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"input"}],"output":{"name":"input"}}],[3,"ModifierKey","piston::input::keyboard","",null,null],[17,"NO_MODIFIER","","No modifier.",null,null],[17,"CTRL","","Ctrl.",null,null],[17,"SHIFT","","Shift.",null,null],[17,"ALT","","Alt.",null,null],[17,"GUI","","Gui.",null,null],[17,"CTRL_SHIFT","","Ctrl + Shift.",null,null],[17,"CTRL_ALT","","Ctrl + Alt.",null,null],[17,"CTRL_GUI","","Ctrl + Gui.",null,null],[17,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",null,null],[17,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",null,null],[17,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",null,null],[17,"SHIFT_ALT","","Shift + Alt.",null,null],[17,"SHIFT_GUI","","Shift + Gui.",null,null],[17,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",null,null],[17,"ALT_GUI","","Alt + Gui.",null,null],[4,"Key","","Represent a keyboard key.\nKeycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",null,null],[13,"Unknown","","",1,null],[13,"Backspace","","",1,null],[13,"Tab","","",1,null],[13,"Return","","",1,null],[13,"Escape","","",1,null],[13,"Space","","",1,null],[13,"Exclaim","","",1,null],[13,"Quotedbl","","",1,null],[13,"Hash","","",1,null],[13,"Dollar","","",1,null],[13,"Percent","","",1,null],[13,"Ampersand","","",1,null],[13,"Quote","","",1,null],[13,"LeftParen","","",1,null],[13,"RightParen","","",1,null],[13,"Asterisk","","",1,null],[13,"Plus","","",1,null],[13,"Comma","","",1,null],[13,"Minus","","",1,null],[13,"Period","","",1,null],[13,"Slash","","",1,null],[13,"D0","","",1,null],[13,"D1","","",1,null],[13,"D2","","",1,null],[13,"D3","","",1,null],[13,"D4","","",1,null],[13,"D5","","",1,null],[13,"D6","","",1,null],[13,"D7","","",1,null],[13,"D8","","",1,null],[13,"D9","","",1,null],[13,"Colon","","",1,null],[13,"Semicolon","","",1,null],[13,"Less","","",1,null],[13,"Equals","","",1,null],[13,"Greater","","",1,null],[13,"Question","","",1,null],[13,"At","","",1,null],[13,"LeftBracket","","",1,null],[13,"Backslash","","",1,null],[13,"RightBracket","","",1,null],[13,"Caret","","",1,null],[13,"Underscore","","",1,null],[13,"Backquote","","",1,null],[13,"A","","",1,null],[13,"B","","",1,null],[13,"C","","",1,null],[13,"D","","",1,null],[13,"E","","",1,null],[13,"F","","",1,null],[13,"G","","",1,null],[13,"H","","",1,null],[13,"I","","",1,null],[13,"J","","",1,null],[13,"K","","",1,null],[13,"L","","",1,null],[13,"M","","",1,null],[13,"N","","",1,null],[13,"O","","",1,null],[13,"P","","",1,null],[13,"Q","","",1,null],[13,"R","","",1,null],[13,"S","","",1,null],[13,"T","","",1,null],[13,"U","","",1,null],[13,"V","","",1,null],[13,"W","","",1,null],[13,"X","","",1,null],[13,"Y","","",1,null],[13,"Z","","",1,null],[13,"Delete","","",1,null],[13,"CapsLock","","",1,null],[13,"F1","","",1,null],[13,"F2","","",1,null],[13,"F3","","",1,null],[13,"F4","","",1,null],[13,"F5","","",1,null],[13,"F6","","",1,null],[13,"F7","","",1,null],[13,"F8","","",1,null],[13,"F9","","",1,null],[13,"F10","","",1,null],[13,"F11","","",1,null],[13,"F12","","",1,null],[13,"PrintScreen","","",1,null],[13,"ScrollLock","","",1,null],[13,"Pause","","",1,null],[13,"Insert","","",1,null],[13,"Home","","",1,null],[13,"PageUp","","",1,null],[13,"End","","",1,null],[13,"PageDown","","",1,null],[13,"Right","","",1,null],[13,"Left","","",1,null],[13,"Down","","",1,null],[13,"Up","","",1,null],[13,"NumLockClear","","",1,null],[13,"NumPadDivide","","",1,null],[13,"NumPadMultiply","","",1,null],[13,"NumPadMinus","","",1,null],[13,"NumPadPlus","","",1,null],[13,"NumPadEnter","","",1,null],[13,"NumPad1","","",1,null],[13,"NumPad2","","",1,null],[13,"NumPad3","","",1,null],[13,"NumPad4","","",1,null],[13,"NumPad5","","",1,null],[13,"NumPad6","","",1,null],[13,"NumPad7","","",1,null],[13,"NumPad8","","",1,null],[13,"NumPad9","","",1,null],[13,"NumPad0","","",1,null],[13,"NumPadPeriod","","",1,null],[13,"Application","","",1,null],[13,"Power","","",1,null],[13,"NumPadEquals","","",1,null],[13,"F13","","",1,null],[13,"F14","","",1,null],[13,"F15","","",1,null],[13,"F16","","",1,null],[13,"F17","","",1,null],[13,"F18","","",1,null],[13,"F19","","",1,null],[13,"F20","","",1,null],[13,"F21","","",1,null],[13,"F22","","",1,null],[13,"F23","","",1,null],[13,"F24","","",1,null],[13,"Execute","","",1,null],[13,"Help","","",1,null],[13,"Menu","","",1,null],[13,"Select","","",1,null],[13,"Stop","","",1,null],[13,"Again","","",1,null],[13,"Undo","","",1,null],[13,"Cut","","",1,null],[13,"Copy","","",1,null],[13,"Paste","","",1,null],[13,"Find","","",1,null],[13,"Mute","","",1,null],[13,"VolumeUp","","",1,null],[13,"VolumeDown","","",1,null],[13,"NumPadComma","","",1,null],[13,"NumPadEqualsAS400","","",1,null],[13,"AltErase","","",1,null],[13,"Sysreq","","",1,null],[13,"Cancel","","",1,null],[13,"Clear","","",1,null],[13,"Prior","","",1,null],[13,"Return2","","",1,null],[13,"Separator","","",1,null],[13,"Out","","",1,null],[13,"Oper","","",1,null],[13,"ClearAgain","","",1,null],[13,"CrSel","","",1,null],[13,"ExSel","","",1,null],[13,"NumPad00","","",1,null],[13,"NumPad000","","",1,null],[13,"ThousandsSeparator","","",1,null],[13,"DecimalSeparator","","",1,null],[13,"CurrencyUnit","","",1,null],[13,"CurrencySubUnit","","",1,null],[13,"NumPadLeftParen","","",1,null],[13,"NumPadRightParen","","",1,null],[13,"NumPadLeftBrace","","",1,null],[13,"NumPadRightBrace","","",1,null],[13,"NumPadTab","","",1,null],[13,"NumPadBackspace","","",1,null],[13,"NumPadA","","",1,null],[13,"NumPadB","","",1,null],[13,"NumPadC","","",1,null],[13,"NumPadD","","",1,null],[13,"NumPadE","","",1,null],[13,"NumPadF","","",1,null],[13,"NumPadXor","","",1,null],[13,"NumPadPower","","",1,null],[13,"NumPadPercent","","",1,null],[13,"NumPadLess","","",1,null],[13,"NumPadGreater","","",1,null],[13,"NumPadAmpersand","","",1,null],[13,"NumPadDblAmpersand","","",1,null],[13,"NumPadVerticalBar","","",1,null],[13,"NumPadDblVerticalBar","","",1,null],[13,"NumPadColon","","",1,null],[13,"NumPadHash","","",1,null],[13,"NumPadSpace","","",1,null],[13,"NumPadAt","","",1,null],[13,"NumPadExclam","","",1,null],[13,"NumPadMemStore","","",1,null],[13,"NumPadMemRecall","","",1,null],[13,"NumPadMemClear","","",1,null],[13,"NumPadMemAdd","","",1,null],[13,"NumPadMemSubtract","","",1,null],[13,"NumPadMemMultiply","","",1,null],[13,"NumPadMemDivide","","",1,null],[13,"NumPadPlusMinus","","",1,null],[13,"NumPadClear","","",1,null],[13,"NumPadClearEntry","","",1,null],[13,"NumPadBinary","","",1,null],[13,"NumPadOctal","","",1,null],[13,"NumPadDecimal","","",1,null],[13,"NumPadHexadecimal","","",1,null],[13,"LCtrl","","",1,null],[13,"LShift","","",1,null],[13,"LAlt","","",1,null],[13,"LGui","","",1,null],[13,"RCtrl","","",1,null],[13,"RShift","","",1,null],[13,"RAlt","","",1,null],[13,"RGui","","",1,null],[13,"Mode","","",1,null],[13,"AudioNext","","",1,null],[13,"AudioPrev","","",1,null],[13,"AudioStop","","",1,null],[13,"AudioPlay","","",1,null],[13,"AudioMute","","",1,null],[13,"MediaSelect","","",1,null],[13,"Www","","",1,null],[13,"Mail","","",1,null],[13,"Calculator","","",1,null],[13,"Computer","","",1,null],[13,"AcSearch","","",1,null],[13,"AcHome","","",1,null],[13,"AcBack","","",1,null],[13,"AcForward","","",1,null],[13,"AcStop","","",1,null],[13,"AcRefresh","","",1,null],[13,"AcBookmarks","","",1,null],[13,"BrightnessDown","","",1,null],[13,"BrightnessUp","","",1,null],[13,"DisplaySwitch","","",1,null],[13,"KbdIllumToggle","","",1,null],[13,"KbdIllumDown","","",1,null],[13,"KbdIllumUp","","",1,null],[13,"Eject","","",1,null],[13,"Sleep","","",1,null],[0,"mouse","piston::input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","piston::input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",2,null],[13,"Left","","Left mouse button.",2,null],[13,"Right","","Right mouse button.",2,null],[13,"Middle","","Middle mouse button.",2,null],[13,"X1","","Extra mouse button number 1.",2,null],[13,"X2","","Extra mouse button number 2.",2,null],[13,"Button6","","Mouse button number 6.",2,null],[13,"Button7","","Mouse button number 7.",2,null],[13,"Button8","","Mouse button number 8.",2,null],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",12,{"inputs":[{"name":"mousecursorevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",12,{"inputs":[{"name":"mousecursorevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",12,{"inputs":[{"name":"mousecursorevent"}],"output":{"name":"option"}}],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",13,{"inputs":[{"name":"mouserelativeevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",13,{"inputs":[{"name":"mouserelativeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_relative_args","","Returns mouse relative arguments.",13,{"inputs":[{"name":"mouserelativeevent"}],"output":{"name":"option"}}],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",14,{"inputs":[{"name":"mousescrollevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",14,{"inputs":[{"name":"mousescrollevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",14,{"inputs":[{"name":"mousescrollevent"}],"output":{"name":"option"}}],[0,"generic_event","piston::input","Trait for generic events",null,null],[8,"GenericEvent","piston::input::generic_event","Implemented by all events",null,null],[10,"event_id","","The id of this event.",15,{"inputs":[{"name":"genericevent"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with arguments",15,{"inputs":[{"name":"genericevent"},{"name":"f"}],"output":{"name":"u"}}],[10,"from_args","","Converts from arguments to `Self`",15,{"inputs":[{"name":"genericevent"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[3,"EventId","piston::input","Used to identify events arguments provided by traits.",null,null],[4,"Button","","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",10,null],[13,"Mouse","","A mouse button.",10,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",11,null],[13,"MouseRelative","","x and y in relative coordinates.",11,null],[13,"MouseScroll","","x and y in scroll ticks.",11,null],[4,"Input","","Models input events.",null,null],[13,"Press","","Pressed a button.",3,null],[13,"Release","","Released a button.",3,null],[13,"Move","","Moved mouse cursor.",3,null],[13,"Text","","Text (usually from keyboard).",3,null],[13,"Resize","","Window got resized.",3,null],[13,"Focus","","Window gained or lost focus.",3,null],[13,"Cursor","","Window gained or lost cursor.",3,null],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",14,{"inputs":[{"name":"mousescrollevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",14,{"inputs":[{"name":"mousescrollevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",14,{"inputs":[{"name":"mousescrollevent"}],"output":{"name":"option"}}],[4,"MouseButton","","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",2,null],[13,"Left","","Left mouse button.",2,null],[13,"Right","","Right mouse button.",2,null],[13,"Middle","","Middle mouse button.",2,null],[13,"X1","","Extra mouse button number 1.",2,null],[13,"X2","","Extra mouse button number 2.",2,null],[13,"Button6","","Mouse button number 6.",2,null],[13,"Button7","","Mouse button number 7.",2,null],[13,"Button8","","Mouse button number 8.",2,null],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",null,null],[12,"dt","","Delta time in seconds.",5,null],[8,"GenericEvent","","Implemented by all events",null,null],[10,"event_id","","The id of this event.",15,{"inputs":[{"name":"genericevent"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with arguments",15,{"inputs":[{"name":"genericevent"},{"name":"f"}],"output":{"name":"u"}}],[10,"from_args","","Converts from arguments to `Self`",15,{"inputs":[{"name":"genericevent"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[8,"FocusEvent","","When window gets or looses focus",null,null],[10,"from_focused","","Creates a focus event.",16,{"inputs":[{"name":"focusevent"},{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"focus","","Calls closure if this is a focus event.",16,{"inputs":[{"name":"focusevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",16,{"inputs":[{"name":"focusevent"}],"output":{"name":"option"}}],[8,"TextEvent","","When receiving text from user, such as typing a character",null,null],[10,"from_text","","Creates a text event.",17,{"inputs":[{"name":"textevent"},{"name":"str"},{"name":"self"}],"output":{"name":"option"}}],[10,"text","","Calls closure if this is a text event.",17,{"inputs":[{"name":"textevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",17,{"inputs":[{"name":"textevent"}],"output":{"name":"option"}}],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",12,{"inputs":[{"name":"mousecursorevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",12,{"inputs":[{"name":"mousecursorevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",12,{"inputs":[{"name":"mousecursorevent"}],"output":{"name":"option"}}],[4,"Event","","Adds render and update events to input events",null,null],[13,"Render","","Render graphics.",4,null],[13,"AfterRender","","After rendering and swapping buffers.",4,null],[13,"Update","","Update the state of the application.",4,null],[13,"Idle","","Do background tasks that can be done incrementally.",4,null],[13,"Input","","Input event.",4,null],[4,"Key","","Represent a keyboard key.\nKeycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",null,null],[13,"Unknown","","",1,null],[13,"Backspace","","",1,null],[13,"Tab","","",1,null],[13,"Return","","",1,null],[13,"Escape","","",1,null],[13,"Space","","",1,null],[13,"Exclaim","","",1,null],[13,"Quotedbl","","",1,null],[13,"Hash","","",1,null],[13,"Dollar","","",1,null],[13,"Percent","","",1,null],[13,"Ampersand","","",1,null],[13,"Quote","","",1,null],[13,"LeftParen","","",1,null],[13,"RightParen","","",1,null],[13,"Asterisk","","",1,null],[13,"Plus","","",1,null],[13,"Comma","","",1,null],[13,"Minus","","",1,null],[13,"Period","","",1,null],[13,"Slash","","",1,null],[13,"D0","","",1,null],[13,"D1","","",1,null],[13,"D2","","",1,null],[13,"D3","","",1,null],[13,"D4","","",1,null],[13,"D5","","",1,null],[13,"D6","","",1,null],[13,"D7","","",1,null],[13,"D8","","",1,null],[13,"D9","","",1,null],[13,"Colon","","",1,null],[13,"Semicolon","","",1,null],[13,"Less","","",1,null],[13,"Equals","","",1,null],[13,"Greater","","",1,null],[13,"Question","","",1,null],[13,"At","","",1,null],[13,"LeftBracket","","",1,null],[13,"Backslash","","",1,null],[13,"RightBracket","","",1,null],[13,"Caret","","",1,null],[13,"Underscore","","",1,null],[13,"Backquote","","",1,null],[13,"A","","",1,null],[13,"B","","",1,null],[13,"C","","",1,null],[13,"D","","",1,null],[13,"E","","",1,null],[13,"F","","",1,null],[13,"G","","",1,null],[13,"H","","",1,null],[13,"I","","",1,null],[13,"J","","",1,null],[13,"K","","",1,null],[13,"L","","",1,null],[13,"M","","",1,null],[13,"N","","",1,null],[13,"O","","",1,null],[13,"P","","",1,null],[13,"Q","","",1,null],[13,"R","","",1,null],[13,"S","","",1,null],[13,"T","","",1,null],[13,"U","","",1,null],[13,"V","","",1,null],[13,"W","","",1,null],[13,"X","","",1,null],[13,"Y","","",1,null],[13,"Z","","",1,null],[13,"Delete","","",1,null],[13,"CapsLock","","",1,null],[13,"F1","","",1,null],[13,"F2","","",1,null],[13,"F3","","",1,null],[13,"F4","","",1,null],[13,"F5","","",1,null],[13,"F6","","",1,null],[13,"F7","","",1,null],[13,"F8","","",1,null],[13,"F9","","",1,null],[13,"F10","","",1,null],[13,"F11","","",1,null],[13,"F12","","",1,null],[13,"PrintScreen","","",1,null],[13,"ScrollLock","","",1,null],[13,"Pause","","",1,null],[13,"Insert","","",1,null],[13,"Home","","",1,null],[13,"PageUp","","",1,null],[13,"End","","",1,null],[13,"PageDown","","",1,null],[13,"Right","","",1,null],[13,"Left","","",1,null],[13,"Down","","",1,null],[13,"Up","","",1,null],[13,"NumLockClear","","",1,null],[13,"NumPadDivide","","",1,null],[13,"NumPadMultiply","","",1,null],[13,"NumPadMinus","","",1,null],[13,"NumPadPlus","","",1,null],[13,"NumPadEnter","","",1,null],[13,"NumPad1","","",1,null],[13,"NumPad2","","",1,null],[13,"NumPad3","","",1,null],[13,"NumPad4","","",1,null],[13,"NumPad5","","",1,null],[13,"NumPad6","","",1,null],[13,"NumPad7","","",1,null],[13,"NumPad8","","",1,null],[13,"NumPad9","","",1,null],[13,"NumPad0","","",1,null],[13,"NumPadPeriod","","",1,null],[13,"Application","","",1,null],[13,"Power","","",1,null],[13,"NumPadEquals","","",1,null],[13,"F13","","",1,null],[13,"F14","","",1,null],[13,"F15","","",1,null],[13,"F16","","",1,null],[13,"F17","","",1,null],[13,"F18","","",1,null],[13,"F19","","",1,null],[13,"F20","","",1,null],[13,"F21","","",1,null],[13,"F22","","",1,null],[13,"F23","","",1,null],[13,"F24","","",1,null],[13,"Execute","","",1,null],[13,"Help","","",1,null],[13,"Menu","","",1,null],[13,"Select","","",1,null],[13,"Stop","","",1,null],[13,"Again","","",1,null],[13,"Undo","","",1,null],[13,"Cut","","",1,null],[13,"Copy","","",1,null],[13,"Paste","","",1,null],[13,"Find","","",1,null],[13,"Mute","","",1,null],[13,"VolumeUp","","",1,null],[13,"VolumeDown","","",1,null],[13,"NumPadComma","","",1,null],[13,"NumPadEqualsAS400","","",1,null],[13,"AltErase","","",1,null],[13,"Sysreq","","",1,null],[13,"Cancel","","",1,null],[13,"Clear","","",1,null],[13,"Prior","","",1,null],[13,"Return2","","",1,null],[13,"Separator","","",1,null],[13,"Out","","",1,null],[13,"Oper","","",1,null],[13,"ClearAgain","","",1,null],[13,"CrSel","","",1,null],[13,"ExSel","","",1,null],[13,"NumPad00","","",1,null],[13,"NumPad000","","",1,null],[13,"ThousandsSeparator","","",1,null],[13,"DecimalSeparator","","",1,null],[13,"CurrencyUnit","","",1,null],[13,"CurrencySubUnit","","",1,null],[13,"NumPadLeftParen","","",1,null],[13,"NumPadRightParen","","",1,null],[13,"NumPadLeftBrace","","",1,null],[13,"NumPadRightBrace","","",1,null],[13,"NumPadTab","","",1,null],[13,"NumPadBackspace","","",1,null],[13,"NumPadA","","",1,null],[13,"NumPadB","","",1,null],[13,"NumPadC","","",1,null],[13,"NumPadD","","",1,null],[13,"NumPadE","","",1,null],[13,"NumPadF","","",1,null],[13,"NumPadXor","","",1,null],[13,"NumPadPower","","",1,null],[13,"NumPadPercent","","",1,null],[13,"NumPadLess","","",1,null],[13,"NumPadGreater","","",1,null],[13,"NumPadAmpersand","","",1,null],[13,"NumPadDblAmpersand","","",1,null],[13,"NumPadVerticalBar","","",1,null],[13,"NumPadDblVerticalBar","","",1,null],[13,"NumPadColon","","",1,null],[13,"NumPadHash","","",1,null],[13,"NumPadSpace","","",1,null],[13,"NumPadAt","","",1,null],[13,"NumPadExclam","","",1,null],[13,"NumPadMemStore","","",1,null],[13,"NumPadMemRecall","","",1,null],[13,"NumPadMemClear","","",1,null],[13,"NumPadMemAdd","","",1,null],[13,"NumPadMemSubtract","","",1,null],[13,"NumPadMemMultiply","","",1,null],[13,"NumPadMemDivide","","",1,null],[13,"NumPadPlusMinus","","",1,null],[13,"NumPadClear","","",1,null],[13,"NumPadClearEntry","","",1,null],[13,"NumPadBinary","","",1,null],[13,"NumPadOctal","","",1,null],[13,"NumPadDecimal","","",1,null],[13,"NumPadHexadecimal","","",1,null],[13,"LCtrl","","",1,null],[13,"LShift","","",1,null],[13,"LAlt","","",1,null],[13,"LGui","","",1,null],[13,"RCtrl","","",1,null],[13,"RShift","","",1,null],[13,"RAlt","","",1,null],[13,"RGui","","",1,null],[13,"Mode","","",1,null],[13,"AudioNext","","",1,null],[13,"AudioPrev","","",1,null],[13,"AudioStop","","",1,null],[13,"AudioPlay","","",1,null],[13,"AudioMute","","",1,null],[13,"MediaSelect","","",1,null],[13,"Www","","",1,null],[13,"Mail","","",1,null],[13,"Calculator","","",1,null],[13,"Computer","","",1,null],[13,"AcSearch","","",1,null],[13,"AcHome","","",1,null],[13,"AcBack","","",1,null],[13,"AcForward","","",1,null],[13,"AcStop","","",1,null],[13,"AcRefresh","","",1,null],[13,"AcBookmarks","","",1,null],[13,"BrightnessDown","","",1,null],[13,"BrightnessUp","","",1,null],[13,"DisplaySwitch","","",1,null],[13,"KbdIllumToggle","","",1,null],[13,"KbdIllumDown","","",1,null],[13,"KbdIllumUp","","",1,null],[13,"Eject","","",1,null],[13,"Sleep","","",1,null],[8,"CursorEvent","","When window gets or looses cursor",null,null],[10,"from_cursor","","Creates a cursor event.",18,{"inputs":[{"name":"cursorevent"},{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"cursor","","Calls closure if this is a cursor event.",18,{"inputs":[{"name":"cursorevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"cursor_args","","Returns cursor arguments.",18,{"inputs":[{"name":"cursorevent"}],"output":{"name":"option"}}],[8,"ResizeEvent","","When the window is resized",null,null],[10,"from_width_height","","Creates a resize event.",19,{"inputs":[{"name":"resizeevent"},{"name":"u32"},{"name":"u32"},{"name":"self"}],"output":{"name":"option"}}],[10,"resize","","Calls closure if this is a resize event.",19,{"inputs":[{"name":"resizeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",19,{"inputs":[{"name":"resizeevent"}],"output":{"name":"option"}}],[3,"RenderArgs","","Render arguments",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",6,null],[12,"width","","The width of rendered area in points.",6,null],[12,"height","","The height of rendered area in points.",6,null],[12,"draw_width","","The width of rendered area in pixels.",6,null],[12,"draw_height","","The height of rendered area in pixels.",6,null],[8,"PressEvent","","The press of a button",null,null],[10,"from_button","","Creates a press event.",20,{"inputs":[{"name":"pressevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"press","","Calls closure if this is a press event.",20,{"inputs":[{"name":"pressevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",20,{"inputs":[{"name":"pressevent"}],"output":{"name":"option"}}],[8,"UpdateEvent","","When the application state should be updated",null,null],[10,"from_update_args","","Creates an update event.",21,{"inputs":[{"name":"updateevent"},{"name":"updateargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",21,{"inputs":[{"name":"updateevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"update","","Calls closure if this is an update event.",21,{"inputs":[{"name":"updateevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",21,{"inputs":[{"name":"updateevent"}],"output":{"name":"option"}}],[3,"AfterRenderArgs","","After render arguments.",null,null],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",8,null],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",22,{"inputs":[{"name":"afterrenderevent"},{"name":"afterrenderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"after_render","","Calls closure if this is an after render event.",22,{"inputs":[{"name":"afterrenderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"after_render_args","","Returns after render arguments.",22,{"inputs":[{"name":"afterrenderevent"}],"output":{"name":"option"}}],[8,"ReleaseEvent","","The release of a button",null,null],[10,"from_button","","Creates a release event.",23,{"inputs":[{"name":"releaseevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"release","","Calls closure if this is a release event.",23,{"inputs":[{"name":"releaseevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",23,{"inputs":[{"name":"releaseevent"}],"output":{"name":"option"}}],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",13,{"inputs":[{"name":"mouserelativeevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",13,{"inputs":[{"name":"mouserelativeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_relative_args","","Returns mouse relative arguments.",13,{"inputs":[{"name":"mouserelativeevent"}],"output":{"name":"option"}}],[8,"IdleEvent","","When background tasks should be performed",null,null],[10,"from_idle_args","","Creates an idle event.",24,{"inputs":[{"name":"idleevent"},{"name":"idleargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",24,{"inputs":[{"name":"idleevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"idle","","Calls closure if this is an idle event.",24,{"inputs":[{"name":"idleevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",24,{"inputs":[{"name":"idleevent"}],"output":{"name":"option"}}],[8,"RenderEvent","","When the next frame should be rendered",null,null],[10,"from_render_args","","Creates a render event.",25,{"inputs":[{"name":"renderevent"},{"name":"renderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"render","","Calls closure if this is a render event.",25,{"inputs":[{"name":"renderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",25,{"inputs":[{"name":"renderevent"}],"output":{"name":"option"}}],[0,"event_loop","piston","",null,null],[8,"EventMap","piston::event_loop","Methods required to map from consumed event to emitted event.",null,null],[10,"render","","Creates a render event.",26,{"inputs":[{"name":"eventmap"},{"name":"renderargs"}],"output":{"name":"self"}}],[10,"after_render","","Creates an after render event.",26,{"inputs":[{"name":"eventmap"},{"name":"afterrenderargs"}],"output":{"name":"self"}}],[10,"update","","Creates an update event.",26,{"inputs":[{"name":"eventmap"},{"name":"updateargs"}],"output":{"name":"self"}}],[10,"input","","Creates an input event.",26,{"inputs":[{"name":"eventmap"},{"name":"i"}],"output":{"name":"self"}}],[10,"idle","","Creates an idle event.",26,{"inputs":[{"name":"eventmap"},{"name":"idleargs"}],"output":{"name":"self"}}],[8,"Events","","A trait for create event iterator from window.",null,null],[10,"events","","Creates event iterator from window.",27,{"inputs":[{"name":"events"}],"output":{"name":"windowevents"}}],[8,"EventLoop","","Methods implements for event loop settings.",null,null],[10,"set_ups","","The number of updates per second",28,null],[11,"ups","","The number of updates per second",28,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":{"name":"self"}}],[10,"set_max_fps","","The maximum number of frames per second",28,null],[11,"max_fps","","The maximum number of frames per second",28,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":{"name":"self"}}],[10,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",28,null],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",28,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",28,null],[11,"bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",28,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":{"name":"self"}}],[11,"new","event_loop_lib","Creates a new event iterator with default UPS and FPS settings.",29,{"inputs":[{"name":"windowevents"},{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"render","piston::input","",4,{"inputs":[{"name":"event"},{"name":"renderargs"}],"output":{"name":"event"}}],[11,"after_render","","",4,{"inputs":[{"name":"event"},{"name":"afterrenderargs"}],"output":{"name":"event"}}],[11,"update","","",4,{"inputs":[{"name":"event"},{"name":"updateargs"}],"output":{"name":"event"}}],[11,"idle","","",4,{"inputs":[{"name":"event"},{"name":"idleargs"}],"output":{"name":"event"}}],[11,"input","","",4,{"inputs":[{"name":"event"},{"name":"i"}],"output":{"name":"event"}}],[11,"events","alloc::rc","",30,{"inputs":[{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"eq","event_loop_lib","",31,{"inputs":[{"name":"idle"},{"name":"idle"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"idle"},{"name":"idle"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"idle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"idle"}],"output":{"name":"idle"}}],[11,"fmt","","",32,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"set_ups","","",29,null],[11,"set_max_fps","","",29,null],[11,"set_swap_buffers","","",29,null],[11,"set_bench_mode","","",29,null],[11,"next","","Returns the next game event.",29,{"inputs":[{"name":"windowevents"}],"output":{"name":"option"}}],[3,"WindowEvents","piston::event_loop","An event loop iterator",null,null],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[0,"window","piston","",null,null],[11,"clone","window_lib","",33,{"inputs":[{"name":"size"}],"output":{"name":"size"}}],[11,"from","","",33,null],[11,"from","","",33,null],[11,"new","","Creates window settings with defaults.\n- samples: 0\n- fullscreen: false\n- exit_on_esc: false",34,{"inputs":[{"name":"windowsettings"},{"name":"t"},{"name":"s"}],"output":{"name":"windowsettings"}}],[11,"build","","Builds window.",34,{"inputs":[{"name":"windowsettings"}],"output":{"name":"result"}}],[11,"get_title","","Gets title.",34,{"inputs":[{"name":"windowsettings"}],"output":{"name":"string"}}],[11,"title","","Sets title.",34,{"inputs":[{"name":"windowsettings"},{"name":"string"}],"output":{"name":"windowsettings"}}],[11,"get_size","","Gets size.",34,{"inputs":[{"name":"windowsettings"}],"output":{"name":"size"}}],[11,"size","","Sets size.",34,{"inputs":[{"name":"windowsettings"},{"name":"size"}],"output":{"name":"windowsettings"}}],[11,"get_fullscreen","","Gets fullscreen.",34,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"fullscreen","","Sets fullscreen.",34,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"windowsettings"}}],[11,"get_exit_on_esc","","Gets exit on esc.",34,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"exit_on_esc","","Sets exit on esc.",34,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"windowsettings"}}],[11,"get_samples","","Gets samples.",34,{"inputs":[{"name":"windowsettings"}],"output":{"name":"u8"}}],[11,"samples","","Sets samples.",34,{"inputs":[{"name":"windowsettings"},{"name":"u8"}],"output":{"name":"windowsettings"}}],[11,"get_vsync","","Gets vsync.",34,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"vsync","","Sets vsync.",34,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"windowsettings"}}],[11,"get_maybe_opengl","","Gets opengl.",34,{"inputs":[{"name":"windowsettings"}],"output":{"name":"option"}}],[11,"maybe_opengl","","Sets opengl.",34,{"inputs":[{"name":"windowsettings"},{"name":"option"}],"output":{"name":"windowsettings"}}],[11,"opengl","","Sets opengl.",34,{"inputs":[{"name":"windowsettings"},{"name":"opengl"}],"output":{"name":"windowsettings"}}],[11,"new","","Returns a new `NoWindow`.",35,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"nowindow"}}],[11,"should_close","","",35,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"set_should_close","","",35,null],[11,"size","","",35,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"swap_buffers","","",35,null],[11,"poll_event","","",35,{"inputs":[{"name":"nowindow"}],"output":{"name":"option"}}],[11,"draw_size","","",35,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"build_from_window_settings","","",35,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"result"}}],[11,"get_title","","",35,{"inputs":[{"name":"nowindow"}],"output":{"name":"string"}}],[11,"set_title","","",35,null],[11,"get_exit_on_esc","","",35,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",35,null],[11,"set_capture_cursor","","",35,null],[6,"ProcAddress","piston::window","",null,null],[3,"Size","","Size in pixels.",null,null],[12,"width","","The width in pixels.",33,null],[12,"height","","The height in pixels.",33,null],[8,"BuildFromWindowSettings","","Builds window from window settings.",null,null],[10,"build_from_window_settings","","Builds window from window settings.",36,{"inputs":[{"name":"buildfromwindowsettings"},{"name":"windowsettings"}],"output":{"name":"result"}}],[8,"Window","","Required to use the event loop.",null,null],[16,"Event","","The event type emitted by `poll_event`",37,null],[10,"set_should_close","","Tells the window to close or stay open.",37,null],[10,"should_close","","Returns true if window should close.",37,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[10,"size","","Gets the size of the window in user coordinates.",37,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[10,"swap_buffers","","Swaps render buffers.",37,null],[10,"poll_event","","Polls event from window.",37,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[10,"draw_size","","Gets draw size of the window.\nThis is equal to the size of the frame buffer of the inner window,\nexcluding the title bar and borders.",37,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[8,"AdvancedWindow","","Implemented by fully supported window back-ends.",null,null],[10,"get_title","","Gets a copy of the title of the window.",38,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"string"}}],[10,"set_title","","Sets the title of the window.",38,null],[11,"title","","Sets title on window.",38,{"inputs":[{"name":"advancedwindow"},{"name":"string"}],"output":{"name":"self"}}],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",38,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"bool"}}],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",38,null],[11,"exit_on_esc","","Sets whether to exit when pressing esc.",38,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_capture_cursor","","Sets whether to capture/grab cursor.\nThis is used to lock and hide cursor to the window,\nfor example in a first-person shooter game.",38,null],[11,"capture_cursor","","Sets whether to capture/grab cursor (see `set_capture_cursor`).",38,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[8,"OpenGLWindow","","Trait for OpenGL specific operations.",null,null],[10,"get_proc_address","","Returns the address of an OpenGL function if it exist, else returns null pointer.",39,null],[10,"is_current","","Returns true if this context is the current context.",39,{"inputs":[{"name":"openglwindow"}],"output":{"name":"bool"}}],[10,"make_current","","Make this context current.",39,null],[3,"WindowSettings","","Settings for window behavior.",null,null],[3,"NoWindow","","An implementation of Window that runs without a window at all.",null,null]],"paths":[[3,"ModifierKey"],[4,"Key"],[4,"MouseButton"],[4,"Input"],[4,"Event"],[3,"UpdateArgs"],[3,"RenderArgs"],[3,"AfterRenderArgs"],[3,"IdleArgs"],[3,"EventId"],[4,"Button"],[4,"Motion"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"GenericEvent"],[8,"FocusEvent"],[8,"TextEvent"],[8,"CursorEvent"],[8,"ResizeEvent"],[8,"PressEvent"],[8,"UpdateEvent"],[8,"AfterRenderEvent"],[8,"ReleaseEvent"],[8,"IdleEvent"],[8,"RenderEvent"],[8,"EventMap"],[8,"Events"],[8,"EventLoop"],[3,"WindowEvents"],[3,"Rc"],[4,"Idle"],[4,"State"],[3,"Size"],[3,"WindowSettings"],[3,"NoWindow"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"]]};
searchIndex['event_loop'] = {"items":[[0,"","event_loop","A generic event loop for games and interactive applications",null,null],[3,"WindowEvents","","An event loop iterator",null,null],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[8,"EventMap","","Methods required to map from consumed event to emitted event.",null,null],[10,"render","","Creates a render event.",0,{"inputs":[{"name":"eventmap"},{"name":"renderargs"}],"output":{"name":"self"}}],[10,"after_render","","Creates an after render event.",0,{"inputs":[{"name":"eventmap"},{"name":"afterrenderargs"}],"output":{"name":"self"}}],[10,"update","","Creates an update event.",0,{"inputs":[{"name":"eventmap"},{"name":"updateargs"}],"output":{"name":"self"}}],[10,"input","","Creates an input event.",0,{"inputs":[{"name":"eventmap"},{"name":"i"}],"output":{"name":"self"}}],[10,"idle","","Creates an idle event.",0,{"inputs":[{"name":"eventmap"},{"name":"idleargs"}],"output":{"name":"self"}}],[8,"Events","","A trait for create event iterator from window.",null,null],[10,"events","","Creates event iterator from window.",1,{"inputs":[{"name":"events"}],"output":{"name":"windowevents"}}],[8,"EventLoop","","Methods implements for event loop settings.",null,null],[10,"set_ups","","The number of updates per second",2,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":null}],[11,"ups","","The number of updates per second",2,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":{"name":"self"}}],[10,"set_max_fps","","The maximum number of frames per second",2,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":null}],[11,"max_fps","","The maximum number of frames per second",2,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":{"name":"self"}}],[10,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",2,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":null}],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",2,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",2,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":null}],[11,"bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",2,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":{"name":"self"}}],[11,"render","input::event","",3,{"inputs":[{"name":"event"},{"name":"renderargs"}],"output":{"name":"event"}}],[11,"after_render","","",3,{"inputs":[{"name":"event"},{"name":"afterrenderargs"}],"output":{"name":"event"}}],[11,"update","","",3,{"inputs":[{"name":"event"},{"name":"updateargs"}],"output":{"name":"event"}}],[11,"idle","","",3,{"inputs":[{"name":"event"},{"name":"idleargs"}],"output":{"name":"event"}}],[11,"input","","",3,{"inputs":[{"name":"event"},{"name":"i"}],"output":{"name":"event"}}],[11,"events","alloc::rc","",4,{"inputs":[{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"new","event_loop","Creates a new event iterator with default UPS and FPS settings.",5,{"inputs":[{"name":"windowevents"},{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"set_ups","","",5,{"inputs":[{"name":"windowevents"},{"name":"u64"}],"output":null}],[11,"set_max_fps","","",5,{"inputs":[{"name":"windowevents"},{"name":"u64"}],"output":null}],[11,"set_swap_buffers","","",5,{"inputs":[{"name":"windowevents"},{"name":"bool"}],"output":null}],[11,"set_bench_mode","","",5,{"inputs":[{"name":"windowevents"},{"name":"bool"}],"output":null}],[11,"next","","Returns the next game event.",5,{"inputs":[{"name":"windowevents"}],"output":{"name":"option"}}]],"paths":[[8,"EventMap"],[8,"Events"],[8,"EventLoop"],[4,"Event"],[3,"Rc"],[3,"WindowEvents"]]};
searchIndex['window'] = {"items":[[0,"","window","Window abstraction",null,null],[3,"Size","","Size in pixels.",null,null],[12,"width","","The width in pixels.",0,null],[12,"height","","The height in pixels.",0,null],[3,"WindowSettings","","Settings for window behavior.",null,null],[3,"NoWindow","","An implementation of Window that runs without a window at all.",null,null],[6,"ProcAddress","","The type of an OpenGL function address.",null,null],[8,"BuildFromWindowSettings","","Builds window from window settings.",null,null],[10,"build_from_window_settings","","Builds window from window settings.",1,{"inputs":[{"name":"buildfromwindowsettings"},{"name":"windowsettings"}],"output":{"name":"result"}}],[8,"Window","","Required to use the event loop.",null,null],[16,"Event","","The event type emitted by `poll_event`",2,null],[10,"set_should_close","","Tells the window to close or stay open.",2,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[10,"should_close","","Returns true if window should close.",2,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[10,"size","","Gets the size of the window in user coordinates.",2,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[10,"swap_buffers","","Swaps render buffers.",2,{"inputs":[{"name":"window"}],"output":null}],[10,"poll_event","","Polls event from window.",2,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[10,"draw_size","","Gets draw size of the window.\nThis is equal to the size of the frame buffer of the inner window,\nexcluding the title bar and borders.",2,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[8,"AdvancedWindow","","Implemented by fully supported window back-ends.",null,null],[10,"get_title","","Gets a copy of the title of the window.",3,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"string"}}],[10,"set_title","","Sets the title of the window.",3,{"inputs":[{"name":"advancedwindow"},{"name":"string"}],"output":null}],[11,"title","","Sets title on window.",3,{"inputs":[{"name":"advancedwindow"},{"name":"string"}],"output":{"name":"self"}}],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",3,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"bool"}}],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",3,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":null}],[11,"exit_on_esc","","Sets whether to exit when pressing esc.",3,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_capture_cursor","","Sets whether to capture/grab cursor.\nThis is used to lock and hide cursor to the window,\nfor example in a first-person shooter game.",3,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":null}],[11,"capture_cursor","","Sets whether to capture/grab cursor (see `set_capture_cursor`).",3,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[8,"OpenGLWindow","","Trait for OpenGL specific operations.",null,null],[10,"get_proc_address","","Returns the address of an OpenGL function if it exist, else returns null pointer.",4,{"inputs":[{"name":"openglwindow"},{"name":"str"}],"output":{"name":"procaddress"}}],[10,"is_current","","Returns true if this context is the current context.",4,{"inputs":[{"name":"openglwindow"}],"output":{"name":"bool"}}],[10,"make_current","","Make this context current.",4,{"inputs":[{"name":"openglwindow"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"size"}],"output":{"name":"size"}}],[11,"from","","",0,null],[11,"from","","",0,null],[11,"new","","Creates window settings with defaults.\n- samples: 0\n- fullscreen: false\n- exit_on_esc: false",5,{"inputs":[{"name":"windowsettings"},{"name":"t"},{"name":"s"}],"output":{"name":"windowsettings"}}],[11,"build","","Builds window.",5,{"inputs":[{"name":"windowsettings"}],"output":{"name":"result"}}],[11,"get_title","","Gets title.",5,{"inputs":[{"name":"windowsettings"}],"output":{"name":"string"}}],[11,"title","","Sets title.",5,{"inputs":[{"name":"windowsettings"},{"name":"string"}],"output":{"name":"self"}}],[11,"get_size","","Gets size.",5,{"inputs":[{"name":"windowsettings"}],"output":{"name":"size"}}],[11,"size","","Sets size.",5,{"inputs":[{"name":"windowsettings"},{"name":"size"}],"output":{"name":"self"}}],[11,"get_fullscreen","","Gets fullscreen.",5,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"fullscreen","","Sets fullscreen.",5,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_exit_on_esc","","Gets exit on esc.",5,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"exit_on_esc","","Sets exit on esc.",5,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_samples","","Gets samples.",5,{"inputs":[{"name":"windowsettings"}],"output":{"name":"u8"}}],[11,"samples","","Sets samples.",5,{"inputs":[{"name":"windowsettings"},{"name":"u8"}],"output":{"name":"self"}}],[11,"get_vsync","","Gets vsync.",5,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"vsync","","Sets vsync.",5,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_maybe_opengl","","Gets opengl.",5,{"inputs":[{"name":"windowsettings"}],"output":{"name":"option"}}],[11,"maybe_opengl","","Sets opengl.",5,{"inputs":[{"name":"windowsettings"},{"name":"option"}],"output":{"name":"self"}}],[11,"opengl","","Sets opengl.",5,{"inputs":[{"name":"windowsettings"},{"name":"opengl"}],"output":{"name":"self"}}],[11,"new","","Returns a new `NoWindow`.",6,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"nowindow"}}],[11,"should_close","","",6,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"set_should_close","","",6,{"inputs":[{"name":"nowindow"},{"name":"bool"}],"output":null}],[11,"size","","",6,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"swap_buffers","","",6,{"inputs":[{"name":"nowindow"}],"output":null}],[11,"poll_event","","",6,{"inputs":[{"name":"nowindow"}],"output":{"name":"option"}}],[11,"draw_size","","",6,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"build_from_window_settings","","",6,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"result"}}],[11,"get_title","","",6,{"inputs":[{"name":"nowindow"}],"output":{"name":"string"}}],[11,"set_title","","",6,{"inputs":[{"name":"nowindow"},{"name":"string"}],"output":null}],[11,"get_exit_on_esc","","",6,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",6,{"inputs":[{"name":"nowindow"},{"name":"bool"}],"output":null}],[11,"set_capture_cursor","","",6,{"inputs":[{"name":"nowindow"},{"name":"bool"}],"output":null}]],"paths":[[3,"Size"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"WindowSettings"],[3,"NoWindow"]]};
searchIndex['image'] = {"items":[[0,"","image","This crate provides native rust implementations of\nimage encoders and decoders and basic image manipulation\nfunctions.",null,null],[3,"Luma","","Grayscale colors",null,null],[12,"data","","",0,null],[3,"LumaA","","Grayscale colors + alpha channel",null,null],[12,"data","","",1,null],[3,"Rgb","","RGB colors",null,null],[12,"data","","",2,null],[3,"Rgba","","RGB colors + alpha channel",null,null],[12,"data","","",3,null],[3,"SubImage","","A View into another image",null,null],[3,"Pixels","","Immutable pixel iterator",null,null],[3,"MutPixels","","Mutable pixel iterator\nDEPRECATED: It is currently not possible to create a safe iterator for this in Rust. You have to use an iterator over the image buffer instead.",null,null],[3,"ImageBuffer","","Generic image buffer",null,null],[3,"Frame","","A single animation frame",null,null],[3,"Frames","","Hold the frames of the animated image",null,null],[4,"ColorType","","An enumeration over supported color types and their bit depths",null,null],[13,"Gray","","Pixel is grayscale",4,null],[13,"RGB","","Pixel contains R, G and B channels",4,null],[13,"Palette","","Pixel is an index into a color palette",4,null],[13,"GrayA","","Pixel is grayscale with an alpha channel",4,null],[13,"RGBA","","Pixel is RGB with an alpha channel",4,null],[4,"ImageError","","An enumeration of Image Errors",null,null],[13,"FormatError","","The Image is not formatted properly",5,null],[13,"DimensionError","","The Image's dimensions are either too small or too large",5,null],[13,"UnsupportedError","","The Decoder does not support this image format",5,null],[13,"UnsupportedColor","","The Decoder does not support this color type",5,null],[13,"NotEnoughData","","Not enough data was provided to the Decoder\nto decode the image",5,null],[13,"IoError","","An I/O Error occurred while decoding the image",5,null],[13,"ImageEnd","","The end of the image has been reached",5,null],[4,"FilterType","","Available Sampling Filters",null,null],[13,"Nearest","","Nearest Neighbor",6,null],[13,"Triangle","","Linear Filter",6,null],[13,"CatmullRom","","Cubic Filter",6,null],[13,"Gaussian","","Gaussian Filter",6,null],[13,"Lanczos3","","Lanczos with window 3",6,null],[4,"ImageFormat","","An enumeration of supported image formats.\nNot all formats support both encoding and decoding.",null,null],[13,"PNG","","An Image in PNG Format",7,null],[13,"JPEG","","An Image in JPEG Format",7,null],[13,"GIF","","An Image in GIF Format",7,null],[13,"WEBP","","An Image in WEBP Format",7,null],[13,"PPM","","An Image in PPM Format",7,null],[13,"TIFF","","An Image in TIFF Format",7,null],[13,"TGA","","An Image in TGA Format",7,null],[13,"BMP","","An Image in BMP Format",7,null],[4,"DynamicImage","","A Dynamic Image",null,null],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",8,null],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",8,null],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",8,null],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",8,null],[5,"open","","Open the image located at the path specified.\nThe image's format is determined from the path's file extension.",null,{"inputs":[{"name":"p"}],"output":{"name":"imageresult"}}],[5,"load","","Create a new image from a Reader",null,{"inputs":[{"name":"r"},{"name":"imageformat"}],"output":{"name":"imageresult"}}],[5,"load_from_memory","","Create a new image from a byte slice\nMakes an educated guess about the image format.\nTGA is not supported by this function.",null,null],[5,"load_from_memory_with_format","","Create a new image from a byte slice",null,null],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",null,null],[0,"math","","Mathematical helper functions and types.",null,null],[0,"utils","image::math","Shared mathematical utility functions.",null,null],[5,"clamp","image::math::utils","Cut value to be inside given range",null,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"n"}}],[0,"nq","image::math","NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\nSee \"Kohonen neural networks for optimal colour quantization\"\nin \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\nfor a discussion of the algorithm.\nSee also  http://www.acm.org/~dekker/NEUQUANT.HTML",null,null],[3,"NeuQuant","image::math::nq","Neural network color quantizer",null,null],[11,"new","","Creates a new neuronal network and trains it with the supplied data",9,null],[11,"init","","Initializes the neuronal network and trains it with the supplied data",9,null],[11,"map_pixel","","Maps the pixel in-place to the best-matching color in the color map",9,null],[11,"index_of","","Finds the best-matching index in the color map for `pixel`",9,null],[0,"imageops","image","Image Processing Functions",null,null],[5,"rotate90","image::imageops","Rotate an image 90 degrees clockwise.",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"rotate180","","Rotate an image 180 degrees clockwise.",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"rotate270","","Rotate an image 270 degrees clockwise.",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"flip_horizontal","","Flip an image horizontally",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"flip_vertical","","Flip an image vertically",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image.\n```kernel``` is an array of the filter weights of length 9.",null,null],[5,"resize","","Resize the supplied image to the specified dimensions\n```nwidth``` and ```nheight``` are the new dimensions.\n```filter``` is the sampling filter to use.",null,{"inputs":[{"name":"i"},{"name":"u32"},{"name":"u32"},{"name":"filtertype"}],"output":{"name":"imagebuffer"}}],[5,"blur","","Performs a Gaussian blur on the supplied image.\n```sigma``` is a measure of how much to blur by.",null,{"inputs":[{"name":"i"},{"name":"f32"}],"output":{"name":"imagebuffer"}}],[5,"unsharpen","","Performs an unsharpen mask on the supplied image\n```sigma``` is the amount to blur the image by.\n```threshold``` is the threshold for the difference between\nsee https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking",null,{"inputs":[{"name":"i"},{"name":"f32"},{"name":"i32"}],"output":{"name":"imagebuffer"}}],[5,"crop","","Return a mutable view into an image",null,{"inputs":[{"name":"i"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"subimage"}}],[5,"overlay","","Overlay an image at a given coordinate (x, y)",null,{"inputs":[{"name":"i"},{"name":"i"},{"name":"u32"},{"name":"u32"}],"output":null}],[5,"replace","","Replace the contents of an image at a given coordinate (x, y)",null,{"inputs":[{"name":"i"},{"name":"i"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"colorops","","Public only because of Rust bug:\nhttps://github.com/rust-lang/rust/issues/18241\nFunctions for altering and converting the color of pixelbufs",null,null],[3,"BiLevel","image::imageops::colorops","A bi-level color map",null,null],[5,"grayscale","","Convert the supplied image to grayscale",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"invert","","Invert each pixel within the supplied image\nThis function operates in place.",null,{"inputs":[{"name":"i"}],"output":null}],[5,"contrast","","Adjust the contrast of the supplied image\n```contrast``` is the amount to adjust the contrast by.\nNegative values decrease the contrast and positive values increase the contrast.",null,{"inputs":[{"name":"i"},{"name":"f32"}],"output":{"name":"imagebuffer"}}],[5,"brighten","","Brighten the supplied image\n```value``` is the amount to brighten each pixel by.\nNegative values decrease the brightness and positive values increase it.",null,{"inputs":[{"name":"i"},{"name":"i32"}],"output":{"name":"imagebuffer"}}],[5,"dither","","Reduces the colors of the image using the supplied `color_map` while applying\nFloyd-Steinberg dithering to improve the visual conception",null,{"inputs":[{"name":"imagebuffer"},{"name":"map"}],"output":null}],[5,"index_colors","","Reduces the colors using the supplied `color_map` and returns an image of the indices",null,{"inputs":[{"name":"imagebuffer"},{"name":"map"}],"output":{"name":"imagebuffer"}}],[8,"ColorMap","","A color map",null,null],[16,"Color","","The color type on which the map operates on",10,null],[10,"index_of","","Returns the index of the closed match of `color`\nin the color map.",10,{"inputs":[{"name":"colormap"},{"name":"color"}],"output":{"name":"usize"}}],[10,"map_color","","Maps `color` to the closes color in the color map.",10,{"inputs":[{"name":"colormap"},{"name":"color"}],"output":null}],[11,"clone","","",11,{"inputs":[{"name":"bilevel"}],"output":{"name":"bilevel"}}],[11,"index_of","","",11,{"inputs":[{"name":"bilevel"},{"name":"luma"}],"output":{"name":"usize"}}],[11,"map_color","","",11,{"inputs":[{"name":"bilevel"},{"name":"luma"}],"output":null}],[11,"index_of","image::math::nq","",9,{"inputs":[{"name":"neuquant"},{"name":"rgba"}],"output":{"name":"usize"}}],[11,"map_color","","",9,{"inputs":[{"name":"neuquant"},{"name":"rgba"}],"output":null}],[11,"clone","image","",6,{"inputs":[{"name":"filtertype"}],"output":{"name":"filtertype"}}],[0,"webp","","Decoding of Webp Images",null,null],[3,"WebpDecoder","image::webp","A Representation of a Webp Image format decoder.",null,null],[11,"new","","Create a new WebpDecoder from the Reader ```r```.\nThis function takes ownership of the Reader.",12,{"inputs":[{"name":"webpdecoder"},{"name":"r"}],"output":{"name":"webpdecoder"}}],[11,"dimensions","","",12,{"inputs":[{"name":"webpdecoder"}],"output":{"name":"imageresult"}}],[11,"colortype","","",12,{"inputs":[{"name":"webpdecoder"}],"output":{"name":"imageresult"}}],[11,"row_len","","",12,{"inputs":[{"name":"webpdecoder"}],"output":{"name":"imageresult"}}],[11,"read_scanline","","",12,null],[11,"read_image","","",12,{"inputs":[{"name":"webpdecoder"}],"output":{"name":"imageresult"}}],[0,"vp8","","An implementation of the VP8 Video Codec",null,null],[3,"Frame","image::webp::vp8","A Representation of the last decoded video frame",null,null],[12,"width","","The width of the luma plane",13,null],[12,"height","","The height of the luma plane",13,null],[12,"ybuf","","The luma plane of the frame",13,null],[12,"keyframe","","Indicates whether this frame is a keyframe",13,null],[12,"for_display","","Indicates whether this frame is intended for display",13,null],[12,"pixel_type","","The pixel type of the frame as defined by Section 9.2\nof the VP8 Specification",13,null],[3,"VP8Decoder","","VP8 Decoder\nOnly decodes keyframes",null,null],[11,"clone","","",13,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"fmt","","",13,{"inputs":[{"name":"frame"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",13,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"new","","Create a new decoder.\nThe reader must present a raw vp8 bitstream to the decoder",14,{"inputs":[{"name":"vp8decoder"},{"name":"r"}],"output":{"name":"vp8decoder"}}],[11,"decode_frame","","Decodes the current frame and returns a reference to it",14,{"inputs":[{"name":"vp8decoder"}],"output":{"name":"result"}}],[0,"ppm","image","Encoding of portable pixmap Images",null,null],[3,"PPMEncoder","image::ppm","A representation of a PPM encoder.",null,null],[11,"new","","Create a new PPMEncoder from the Writer ```w```.\nThis function takes ownership of the Writer.",15,{"inputs":[{"name":"ppmencoder"},{"name":"w"}],"output":{"name":"ppmencoder"}}],[11,"encode","","Encode the buffer ```im``` as a PPM image.\n```width``` and ```height``` are the dimensions of the buffer.\n```color``` is the buffers ColorType.",15,null],[0,"png","image","Decoding and Encoding of PNG Images",null,null],[3,"PNGDecoder","image::png","The representation of a PNG decoder",null,null],[3,"PNGEncoder","","The representation of a PNG encoder",null,null],[11,"new","","Create a new decoder that decodes from the stream ```r```",16,{"inputs":[{"name":"pngdecoder"},{"name":"r"}],"output":{"name":"pngdecoder"}}],[11,"palette","","Returns a reference to the color palette used for indexed\ncolor images.\nEach array element is a tuple of RGB values.",16,null],[11,"dimensions","","",16,{"inputs":[{"name":"pngdecoder"}],"output":{"name":"imageresult"}}],[11,"colortype","","",16,{"inputs":[{"name":"pngdecoder"}],"output":{"name":"imageresult"}}],[11,"row_len","","",16,{"inputs":[{"name":"pngdecoder"}],"output":{"name":"imageresult"}}],[11,"read_scanline","","",16,null],[11,"read_image","","",16,{"inputs":[{"name":"pngdecoder"}],"output":{"name":"imageresult"}}],[11,"new","","Create a new encoder that writes its output to ```w```",17,{"inputs":[{"name":"pngencoder"},{"name":"w"}],"output":{"name":"pngencoder"}}],[11,"encode","","Encodes the image ```image```\nthat has dimensions ```width``` and ```height```\nand ```ColorType``` ```c```",17,null],[0,"zlib","","An Implementation of RFC 1950",null,null],[3,"ZlibDecoder","image::png::zlib","A Zlib compressed stream decoder.",null,null],[3,"ZlibEncoder","","A Zlib compressed stream encoder.",null,null],[11,"new","","Create a new decoder that decodes from a Reader",18,{"inputs":[{"name":"zlibdecoder"},{"name":"r"}],"output":{"name":"zlibdecoder"}}],[11,"inner","","Return a mutable reference to the wrapped Reader",18,{"inputs":[{"name":"zlibdecoder"}],"output":{"name":"r"}}],[11,"read","","",18,null],[11,"new","","Builds a new encoder.",19,{"inputs":[{"name":"zlibencoder"},{"name":"w"}],"output":{"name":"result"}}],[11,"into_inner","","Finish writing and returns the underlying writer.",19,{"inputs":[{"name":"zlibencoder"}],"output":{"name":"result"}}],[11,"write","","",19,null],[11,"flush","","",19,{"inputs":[{"name":"zlibencoder"}],"output":{"name":"result"}}],[11,"drop","","",19,{"inputs":[{"name":"zlibencoder"}],"output":null}],[0,"deflate","image::png","A DEFLATE encoder (RFC 1951).",null,null],[3,"Deflater","image::png::deflate","A DEFLATE encoder (RFC 1951).",null,null],[11,"new","","Creates a new encoder that writes to the underlying writer.",20,{"inputs":[{"name":"deflater"},{"name":"w"}],"output":{"name":"deflater"}}],[11,"into_inner","","Stops encoding and returns the underlying writer.",20,{"inputs":[{"name":"deflater"}],"output":{"name":"result"}}],[11,"write","","",20,null],[11,"flush","","",20,{"inputs":[{"name":"deflater"}],"output":{"name":"result"}}],[11,"drop","","",20,{"inputs":[{"name":"deflater"}],"output":null}],[0,"inflate","image::png","An Implementation of RFC 1951",null,null],[3,"Inflater","image::png::inflate","A DEFLATE compressed stream decoder.",null,null],[11,"new","","Create a new decoder that decodes from a Reader",21,{"inputs":[{"name":"inflater"},{"name":"r"}],"output":{"name":"inflater"}}],[11,"eof","","Indicate whether the end of the stream has been reached.",21,{"inputs":[{"name":"inflater"}],"output":{"name":"bool"}}],[11,"inner","","Return a mutable reference to the wrapped Reader",21,{"inputs":[{"name":"inflater"}],"output":{"name":"r"}}],[11,"read","","",21,null],[0,"hash","image::png","This module provides implementations of common hashing algorithms.",null,null],[3,"Adler32","image::png::hash","An Implementation of the Adler-32 checksum",null,null],[3,"Crc32","","An Implementation of the Crc-32 checksum",null,null],[11,"clone","","",22,{"inputs":[{"name":"adler32"}],"output":{"name":"adler32"}}],[11,"new","","Create a new hasher.",22,{"inputs":[{"name":"adler32"}],"output":{"name":"adler32"}}],[11,"update","","Update the internal hasher with the bytes from ```buf```",22,null],[11,"checksum","","Return the computed hash.",22,{"inputs":[{"name":"adler32"}],"output":{"name":"u32"}}],[11,"reset","","Reset this hasher to its initial state.",22,{"inputs":[{"name":"adler32"}],"output":null}],[11,"clone","","",23,{"inputs":[{"name":"crc32"}],"output":{"name":"crc32"}}],[11,"new","","Create a new hasher.",23,{"inputs":[{"name":"crc32"}],"output":{"name":"crc32"}}],[11,"update","","Update the internal hasher with the bytes from ```buf```",23,null],[11,"checksum","","Return the computed hash.",23,{"inputs":[{"name":"crc32"}],"output":{"name":"u32"}}],[11,"reset","","Reset this hasher to its initial state.",23,{"inputs":[{"name":"crc32"}],"output":null}],[0,"jpeg","image","Decoding and Encoding of JPEG Images",null,null],[3,"JPEGDecoder","image::jpeg","The representation of a JPEG decoder",null,null],[3,"JPEGEncoder","","The representation of a JPEG encoder",null,null],[3,"Component","","A representation of a JPEG component",null,null],[12,"id","","The Component's identifier",24,null],[12,"h","","Horizontal sampling factor",24,null],[12,"v","","Vertical sampling factor",24,null],[12,"tq","","The quantization table selector",24,null],[12,"dc_table","","Index to the Huffman DC Table",24,null],[12,"ac_table","","Index to the AC Huffman Table",24,null],[12,"dc_pred","","The dc prediction of the component",24,null],[11,"new","","Create a new encoder that writes its output to ```w```",25,{"inputs":[{"name":"jpegencoder"},{"name":"w"}],"output":{"name":"jpegencoder"}}],[11,"encode","","Encodes the image ```image```\nthat has dimensions ```width``` and ```height```\nand ```ColorType``` ```c```\nThe Image in encoded with subsampling ratio 4:2:2",25,null],[11,"clone","","",24,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"new","","Create a new decoder that decodes from the stream ```r```",26,{"inputs":[{"name":"jpegdecoder"},{"name":"r"}],"output":{"name":"jpegdecoder"}}],[11,"dimensions","","",26,{"inputs":[{"name":"jpegdecoder"}],"output":{"name":"imageresult"}}],[11,"colortype","","",26,{"inputs":[{"name":"jpegdecoder"}],"output":{"name":"imageresult"}}],[11,"row_len","","",26,{"inputs":[{"name":"jpegdecoder"}],"output":{"name":"imageresult"}}],[11,"read_scanline","","",26,null],[11,"read_image","","",26,{"inputs":[{"name":"jpegdecoder"}],"output":{"name":"imageresult"}}],[0,"gif","image","Decoding of GIF Images",null,null],[11,"from_rgba","gif::gif::common","Creates a frame from pixels in RGBA format.",27,null],[11,"from_rgb","","Creates a frame from pixels in RGB format.",27,null],[11,"clone","","",28,{"inputs":[{"name":"disposalmethod"}],"output":{"name":"disposalmethod"}}],[11,"fmt","","",28,{"inputs":[{"name":"disposalmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u8","","Converts `u8` to `Option<Self>`",28,{"inputs":[{"name":"disposalmethod"},{"name":"u8"}],"output":{"name":"option"}}],[11,"clone","","",29,{"inputs":[{"name":"block"}],"output":{"name":"block"}}],[11,"fmt","","",29,{"inputs":[{"name":"block"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u8","","Converts `u8` to `Option<Self>`",29,{"inputs":[{"name":"block"},{"name":"u8"}],"output":{"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"extension"}],"output":{"name":"extension"}}],[11,"fmt","","",30,{"inputs":[{"name":"extension"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u8","","Converts `u8` to `Option<Self>`",30,{"inputs":[{"name":"extension"},{"name":"u8"}],"output":{"name":"option"}}],[11,"clone","","",27,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"fmt","","",27,{"inputs":[{"name":"frame"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",27,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"fmt","gif::gif::reader::decoder","",31,{"inputs":[{"name":"decodingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"decodingerror"},{"name":"error"}],"output":{"name":"decodingerror"}}],[11,"fmt","","",32,{"inputs":[{"name":"extensions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"extensions"},{"name":"extensions"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"extensions"},{"name":"extensions"}],"output":{"name":"bool"}}],[11,"set_param","","",32,null],[11,"fmt","","",33,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"u16value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"bytevalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"streamingdecoder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new streaming decoder",37,{"inputs":[{"name":"streamingdecoder"}],"output":{"name":"streamingdecoder"}}],[11,"update","","Updates the internal state of the decoder.",37,null],[11,"last_ext","","Returns the data of the last extension that has been decoded.",37,null],[11,"current_frame_mut","","Current frame info as a mutable ref.",37,{"inputs":[{"name":"streamingdecoder"}],"output":{"name":"frame"}}],[11,"current_frame","","Current frame info as a ref.",37,{"inputs":[{"name":"streamingdecoder"}],"output":{"name":"frame"}}],[11,"width","","Width of the image",37,{"inputs":[{"name":"streamingdecoder"}],"output":{"name":"u16"}}],[11,"height","","Height of the image",37,{"inputs":[{"name":"streamingdecoder"}],"output":{"name":"u16"}}],[11,"fmt","gif::gif::reader","",38,{"inputs":[{"name":"coloroutput"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"coloroutput"},{"name":"coloroutput"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"coloroutput"},{"name":"coloroutput"}],"output":{"name":"bool"}}],[11,"set_param","","",38,null],[11,"fmt","","",39,{"inputs":[{"name":"memorylimit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set_param","","",39,null],[11,"new","","Creates a new decoder builder",40,{"inputs":[{"name":"decoder"},{"name":"r"}],"output":{"name":"decoder"}}],[11,"read_info","","Reads the logical screen descriptor including the global color palette",40,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[11,"next_frame_info","","Returns the next frame info",41,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_next_frame","","Reads the next frame from the image.",41,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"fill_buffer","","Reads data of the current frame into a pre-allocated buffer.",41,null],[11,"buffer_size","","Output buffer size",41,{"inputs":[{"name":"reader"}],"output":{"name":"usize"}}],[11,"line_length","","Line length of the current frame",41,{"inputs":[{"name":"reader"}],"output":{"name":"usize"}}],[11,"palette","","Returns the color palette relevant for the current (next) frame",41,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"global_palette","","The global color palette",41,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"width","","Width of the image",41,{"inputs":[{"name":"reader"}],"output":{"name":"u16"}}],[11,"height","","Height of the image",41,{"inputs":[{"name":"reader"}],"output":{"name":"u16"}}],[11,"bg_color","","Index of the background color in the global palette",41,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"new_control_ext","gif::gif::encoder","Constructor for control extension data.",42,{"inputs":[{"name":"extensiondata"},{"name":"u16"},{"name":"disposalmethod"},{"name":"bool"},{"name":"option"}],"output":{"name":"extensiondata"}}],[11,"write","","",43,null],[11,"flush","","",43,{"inputs":[{"name":"blockwriter"}],"output":{"name":"result"}}],[11,"drop","","",43,null],[11,"write_frame","","Writes a complete frame to the image",44,{"inputs":[{"name":"writer"},{"name":"frame"}],"output":{"name":"result"}}],[11,"write_extension","","Writes an extension to the image",44,{"inputs":[{"name":"writer"},{"name":"extensiondata"}],"output":{"name":"result"}}],[11,"write_raw_extension","","Writes a raw extension to the image",44,null],[11,"drop","","",44,null],[11,"new","","Creates a new encoder.",45,{"inputs":[{"name":"encoder"},{"name":"w"},{"name":"u16"},{"name":"u16"}],"output":{"name":"encoder"}}],[11,"write_global_palette","","Writes the global color palette",45,null],[3,"Frame","image::gif","A GIF frame",null,null],[12,"delay","","Frame delay.",27,null],[12,"dispose","","Disposal method.",27,null],[12,"transparent","","Transparent index (if available).",27,null],[12,"needs_user_input","","True if the frame needs user input do be displayed.",27,null],[12,"top","","Offset from the top border of the canvas.",27,null],[12,"left","","Offset from the left border of the canvas.",27,null],[12,"width","","Width of the frame.",27,null],[12,"height","","Height of the frame.",27,null],[12,"interlaced","","True if the image is interlaced.",27,null],[12,"palette","","Frame local color palette if available.",27,null],[12,"buffer","","Buffer containing the image data.\nOnly indices unless configured differently.",27,null],[3,"Decoder","","GIF decoder",null,null],[3,"Encoder","","GIF encoder.",null,null],[11,"new","","Creates a new decoder that decodes the input steam ```r```",46,{"inputs":[{"name":"decoder"},{"name":"r"}],"output":{"name":"decoder"}}],[11,"dimensions","","",46,{"inputs":[{"name":"decoder"}],"output":{"name":"imageresult"}}],[11,"colortype","","",46,{"inputs":[{"name":"decoder"}],"output":{"name":"imageresult"}}],[11,"row_len","","",46,{"inputs":[{"name":"decoder"}],"output":{"name":"imageresult"}}],[11,"read_scanline","","",46,null],[11,"read_image","","",46,{"inputs":[{"name":"decoder"}],"output":{"name":"imageresult"}}],[11,"new","","Creates a new GIF encoder.",47,{"inputs":[{"name":"encoder"},{"name":"w"}],"output":{"name":"encoder"}}],[11,"encode","","Encodes a frame.",47,{"inputs":[{"name":"encoder"},{"name":"frame"}],"output":{"name":"imageresult"}}],[11,"from","image","",5,{"inputs":[{"name":"imageerror"},{"name":"decodingerror"}],"output":{"name":"imageerror"}}],[0,"tiff","","Decoding and Encoding of TIFF Images",null,null],[3,"TIFFDecoder","image::tiff","The representation of a PNG decoder",null,null],[4,"ByteOrder","","Byte order of the TIFF file.",null,null],[13,"LittleEndian","","little endian byte order",48,null],[13,"BigEndian","","big endian byte order",48,null],[11,"fmt","","",49,{"inputs":[{"name":"tiffdecoder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new decoder that decodes from the stream ```r```",49,{"inputs":[{"name":"tiffdecoder"},{"name":"r"}],"output":{"name":"imageresult"}}],[11,"init","","Initializes the decoder.",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"imageresult"}}],[11,"next_image","","Reads in the next image.\nIf there is no further image in the TIFF file a format error is return.\nTo determine whether there are more images call `TIFFDecoder::more_images` instead.",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"imageresult"}}],[11,"more_images","","Returns `true` if there is at least one more image available.",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"bool"}}],[11,"byte_order","","Returns the byte_order",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"byteorder"}}],[11,"read_short","","Reads a TIFF short value",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"result"}}],[11,"read_long","","Reads a TIFF long value",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"result"}}],[11,"read_offset","","Reads a TIFF IFA offset/value field",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"result"}}],[11,"goto_offset","","Moves the cursor to the specified offset",49,{"inputs":[{"name":"tiffdecoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"dimensions","","",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"imageresult"}}],[11,"colortype","","",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"imageresult"}}],[11,"row_len","","",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"imageresult"}}],[11,"read_scanline","","",49,null],[11,"read_image","","",49,{"inputs":[{"name":"tiffdecoder"}],"output":{"name":"imageresult"}}],[11,"fmt","","",48,{"inputs":[{"name":"byteorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"byteorder"}],"output":{"name":"byteorder"}}],[0,"tga","image","Decoding of TGA Images",null,null],[3,"TGADecoder","image::tga","The representation of a TGA decoder",null,null],[11,"new","","Create a new decoder that decodes from the stream `r`",50,{"inputs":[{"name":"tgadecoder"},{"name":"r"}],"output":{"name":"tgadecoder"}}],[11,"dimensions","","",50,{"inputs":[{"name":"tgadecoder"}],"output":{"name":"imageresult"}}],[11,"colortype","","",50,{"inputs":[{"name":"tgadecoder"}],"output":{"name":"imageresult"}}],[11,"row_len","","",50,{"inputs":[{"name":"tgadecoder"}],"output":{"name":"imageresult"}}],[11,"read_scanline","","",50,null],[11,"read_image","","",50,{"inputs":[{"name":"tgadecoder"}],"output":{"name":"imageresult"}}],[0,"bmp","image","Decoding of BMP Images",null,null],[3,"BMPDecoder","image::bmp","A bmp decoder",null,null],[11,"new","","Create a new decoder that decodes from the stream ```r```",51,{"inputs":[{"name":"bmpdecoder"},{"name":"r"}],"output":{"name":"bmpdecoder"}}],[11,"dimensions","","",51,{"inputs":[{"name":"bmpdecoder"}],"output":{"name":"imageresult"}}],[11,"colortype","","",51,{"inputs":[{"name":"bmpdecoder"}],"output":{"name":"imageresult"}}],[11,"row_len","","",51,{"inputs":[{"name":"bmpdecoder"}],"output":{"name":"imageresult"}}],[11,"read_scanline","","",51,null],[11,"read_image","","",51,{"inputs":[{"name":"bmpdecoder"}],"output":{"name":"imageresult"}}],[11,"fmt","image","",5,{"inputs":[{"name":"imageerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"imageerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"imageerror"}],"output":{"name":"str"}}],[11,"cause","","",5,{"inputs":[{"name":"imageerror"}],"output":{"name":"option"}}],[11,"from","","",5,{"inputs":[{"name":"imageerror"},{"name":"error"}],"output":{"name":"imageerror"}}],[11,"from","","",5,{"inputs":[{"name":"imageerror"},{"name":"error"}],"output":{"name":"imageerror"}}],[11,"fmt","","",7,{"inputs":[{"name":"imageformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"imageformat"},{"name":"imageformat"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"imageformat"},{"name":"imageformat"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"imageformat"}],"output":{"name":"imageformat"}}],[11,"next","","",52,{"inputs":[{"name":"pixels"}],"output":{"name":"option"}}],[11,"next","","",53,{"inputs":[{"name":"mutpixels"}],"output":{"name":"option"}}],[11,"new","","Construct a new subimage",54,{"inputs":[{"name":"subimage"},{"name":"i"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"subimage"}}],[11,"inner_mut","","Returns a mutable reference to the wrapped image.",54,{"inputs":[{"name":"subimage"}],"output":{"name":"i"}}],[11,"change_bounds","","Change the coordinates of this subimage.",54,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"to_image","","Convert this subimage to an ImageBuffer",54,{"inputs":[{"name":"subimage"}],"output":{"name":"imagebuffer"}}],[11,"dimensions","","",54,null],[11,"bounds","","",54,null],[11,"get_pixel","","",54,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"pixel"}}],[11,"put_pixel","","",54,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"},{"name":"pixel"}],"output":null}],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel directly instead.",54,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"},{"name":"pixel"}],"output":null}],[11,"get_pixel_mut","","",54,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"pixel"}}],[11,"clone","","",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey\npixels with transparency.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"to_rgb","","Returns a copy of this image as an RGB image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"rgbimage"}}],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"rgbaimage"}}],[11,"to_luma","","Returns a copy of this image as a Luma image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"grayimage"}}],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"grayalphaimage"}}],[11,"crop","","Return a cut out of this image delimited by the bounding rectangle.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"as_rgb8","","Return a reference to an 8bit RGB image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an alpha channel",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image with an alpha channel",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"raw_pixels","","Return this image's pixels as a byte vector.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"vec"}}],[11,"color","","Return this image's color type.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"colortype"}}],[11,"grayscale","","Return a grayscale version of this image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"invert","","Invert the colors of this image.\nThis method operates inplace.",8,{"inputs":[{"name":"dynamicimage"}],"output":null}],[11,"resize","","Resize this image using the specified filter algorithm.\nReturns a new image. The image's aspect ratio is preserved.\n```nwidth``` and ```nheight``` are the new image's dimensions",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"filtertype"}],"output":{"name":"dynamicimage"}}],[11,"resize_exact","","Resize this image using the specified filter algorithm.\nReturns a new image. Does not preserve aspect ratio.\n```nwidth``` and ```nheight``` are the new image's dimensions",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"filtertype"}],"output":{"name":"dynamicimage"}}],[11,"blur","","Performs a Gaussian blur on this image.\n```sigma``` is a measure of how much to blur by.",8,{"inputs":[{"name":"dynamicimage"},{"name":"f32"}],"output":{"name":"dynamicimage"}}],[11,"unsharpen","","Performs an unsharpen mask on this image\n```sigma``` is the amount to blur the image by.\n```threshold``` is a control of how much to sharpen.\nsee https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking",8,{"inputs":[{"name":"dynamicimage"},{"name":"f32"},{"name":"i32"}],"output":{"name":"dynamicimage"}}],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",8,null],[11,"adjust_contrast","","Adjust the contrast of this image.\n```contrast``` is the amount to adjust the contrast by.\nNegative values decrease the contrast and positive values increase the contrast.",8,{"inputs":[{"name":"dynamicimage"},{"name":"f32"}],"output":{"name":"dynamicimage"}}],[11,"brighten","","Brighten the pixels of this image.\n```value``` is the amount to brighten each pixel by.\nNegative values decrease the brightness and positive values increase it.",8,{"inputs":[{"name":"dynamicimage"},{"name":"i32"}],"output":{"name":"dynamicimage"}}],[11,"flipv","","Flip this image vertically",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"fliph","","Flip this image horizontally",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"rotate90","","Rotate this image 90 degrees clockwise.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"rotate180","","Rotate this image 180 degrees clockwise.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"rotate270","","Rotate this image 270 degrees clockwise.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"save","","Encode this image and write it to ```w```",8,{"inputs":[{"name":"dynamicimage"},{"name":"w"},{"name":"imageformat"}],"output":{"name":"imageresult"}}],[11,"dimensions","","",8,null],[11,"bounds","","",8,null],[11,"get_pixel","","",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"rgba"}}],[11,"put_pixel","","",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"rgba"}],"output":null}],[11,"blend_pixel","","DEPRECATED: Use iterator `pixels_mut` to blend the pixels directly.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"rgba"}],"output":null}],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"rgba"}}],[11,"clone","","",4,{"inputs":[{"name":"colortype"}],"output":{"name":"colortype"}}],[11,"fmt","","",4,{"inputs":[{"name":"colortype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"colortype"},{"name":"colortype"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"colortype"},{"name":"colortype"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"rgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"rgb"}}],[11,"eq","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"}],"output":{"name":"bool"}}],[11,"channel_count","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"u8"}}],[11,"color_model","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"str"}}],[11,"color_type","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"colortype"}}],[11,"channels","","",2,null],[11,"channels_mut","","",2,null],[11,"channels4","","",2,null],[11,"from_channels","","",2,{"inputs":[{"name":"rgb"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"rgb"}}],[11,"from_slice","","",2,null],[11,"from_slice_mut","","",2,null],[11,"to_rgb","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"rgb"}}],[11,"to_rgba","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"rgba"}}],[11,"to_luma","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"luma"}}],[11,"to_luma_alpha","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"lumaa"}}],[11,"map","","",2,{"inputs":[{"name":"rgb"},{"name":"f"}],"output":{"name":"rgb"}}],[11,"apply","","",2,{"inputs":[{"name":"rgb"},{"name":"f"}],"output":null}],[11,"map_with_alpha","","",2,{"inputs":[{"name":"rgb"},{"name":"f"},{"name":"g"}],"output":{"name":"rgb"}}],[11,"apply_with_alpha","","",2,{"inputs":[{"name":"rgb"},{"name":"f"},{"name":"g"}],"output":null}],[11,"map2","","",2,{"inputs":[{"name":"rgb"},{"name":"self"},{"name":"f"}],"output":{"name":"rgb"}}],[11,"apply2","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"},{"name":"f"}],"output":null}],[11,"invert","","",2,{"inputs":[{"name":"rgb"}],"output":null}],[11,"blend","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"}],"output":null}],[11,"index","","",2,{"inputs":[{"name":"rgb"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",2,{"inputs":[{"name":"rgb"},{"name":"usize"}],"output":{"name":"t"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"luma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"luma"}}],[11,"eq","","",0,{"inputs":[{"name":"luma"},{"name":"luma"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"luma"},{"name":"luma"}],"output":{"name":"bool"}}],[11,"channel_count","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"u8"}}],[11,"color_model","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"str"}}],[11,"color_type","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"colortype"}}],[11,"channels","","",0,null],[11,"channels_mut","","",0,null],[11,"channels4","","",0,null],[11,"from_channels","","",0,{"inputs":[{"name":"luma"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"luma"}}],[11,"from_slice","","",0,null],[11,"from_slice_mut","","",0,null],[11,"to_rgb","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"rgb"}}],[11,"to_rgba","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"rgba"}}],[11,"to_luma","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"luma"}}],[11,"to_luma_alpha","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"lumaa"}}],[11,"map","","",0,{"inputs":[{"name":"luma"},{"name":"f"}],"output":{"name":"luma"}}],[11,"apply","","",0,{"inputs":[{"name":"luma"},{"name":"f"}],"output":null}],[11,"map_with_alpha","","",0,{"inputs":[{"name":"luma"},{"name":"f"},{"name":"g"}],"output":{"name":"luma"}}],[11,"apply_with_alpha","","",0,{"inputs":[{"name":"luma"},{"name":"f"},{"name":"g"}],"output":null}],[11,"map2","","",0,{"inputs":[{"name":"luma"},{"name":"self"},{"name":"f"}],"output":{"name":"luma"}}],[11,"apply2","","",0,{"inputs":[{"name":"luma"},{"name":"luma"},{"name":"f"}],"output":null}],[11,"invert","","",0,{"inputs":[{"name":"luma"}],"output":null}],[11,"blend","","",0,{"inputs":[{"name":"luma"},{"name":"luma"}],"output":null}],[11,"index","","",0,{"inputs":[{"name":"luma"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",0,{"inputs":[{"name":"luma"},{"name":"usize"}],"output":{"name":"t"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"rgba"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"rgba"}}],[11,"eq","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"channel_count","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"u8"}}],[11,"color_model","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"str"}}],[11,"color_type","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"colortype"}}],[11,"channels","","",3,null],[11,"channels_mut","","",3,null],[11,"channels4","","",3,null],[11,"from_channels","","",3,{"inputs":[{"name":"rgba"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"rgba"}}],[11,"from_slice","","",3,null],[11,"from_slice_mut","","",3,null],[11,"to_rgb","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"rgb"}}],[11,"to_rgba","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"rgba"}}],[11,"to_luma","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"luma"}}],[11,"to_luma_alpha","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"lumaa"}}],[11,"map","","",3,{"inputs":[{"name":"rgba"},{"name":"f"}],"output":{"name":"rgba"}}],[11,"apply","","",3,{"inputs":[{"name":"rgba"},{"name":"f"}],"output":null}],[11,"map_with_alpha","","",3,{"inputs":[{"name":"rgba"},{"name":"f"},{"name":"g"}],"output":{"name":"rgba"}}],[11,"apply_with_alpha","","",3,{"inputs":[{"name":"rgba"},{"name":"f"},{"name":"g"}],"output":null}],[11,"map2","","",3,{"inputs":[{"name":"rgba"},{"name":"self"},{"name":"f"}],"output":{"name":"rgba"}}],[11,"apply2","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"},{"name":"f"}],"output":null}],[11,"invert","","",3,{"inputs":[{"name":"rgba"}],"output":null}],[11,"blend","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"}],"output":null}],[11,"index","","",3,{"inputs":[{"name":"rgba"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",3,{"inputs":[{"name":"rgba"},{"name":"usize"}],"output":{"name":"t"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"lumaa"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"lumaa"}}],[11,"eq","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"}],"output":{"name":"bool"}}],[11,"channel_count","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"u8"}}],[11,"color_model","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"str"}}],[11,"color_type","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"colortype"}}],[11,"channels","","",1,null],[11,"channels_mut","","",1,null],[11,"channels4","","",1,null],[11,"from_channels","","",1,{"inputs":[{"name":"lumaa"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"lumaa"}}],[11,"from_slice","","",1,null],[11,"from_slice_mut","","",1,null],[11,"to_rgb","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"rgb"}}],[11,"to_rgba","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"rgba"}}],[11,"to_luma","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"luma"}}],[11,"to_luma_alpha","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"lumaa"}}],[11,"map","","",1,{"inputs":[{"name":"lumaa"},{"name":"f"}],"output":{"name":"lumaa"}}],[11,"apply","","",1,{"inputs":[{"name":"lumaa"},{"name":"f"}],"output":null}],[11,"map_with_alpha","","",1,{"inputs":[{"name":"lumaa"},{"name":"f"},{"name":"g"}],"output":{"name":"lumaa"}}],[11,"apply_with_alpha","","",1,{"inputs":[{"name":"lumaa"},{"name":"f"},{"name":"g"}],"output":null}],[11,"map2","","",1,{"inputs":[{"name":"lumaa"},{"name":"self"},{"name":"f"}],"output":{"name":"lumaa"}}],[11,"apply2","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"},{"name":"f"}],"output":null}],[11,"invert","","",1,{"inputs":[{"name":"lumaa"}],"output":null}],[11,"blend","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"}],"output":null}],[11,"index","","",1,{"inputs":[{"name":"lumaa"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",1,{"inputs":[{"name":"lumaa"},{"name":"usize"}],"output":{"name":"t"}}],[11,"from_color","","",0,{"inputs":[{"name":"luma"},{"name":"rgba"}],"output":null}],[11,"from_color","","",0,{"inputs":[{"name":"luma"},{"name":"rgb"}],"output":null}],[11,"from_color","","",0,{"inputs":[{"name":"luma"},{"name":"lumaa"}],"output":null}],[11,"from_color","","",1,{"inputs":[{"name":"lumaa"},{"name":"rgba"}],"output":null}],[11,"from_color","","",1,{"inputs":[{"name":"lumaa"},{"name":"rgb"}],"output":null}],[11,"from_color","","",1,{"inputs":[{"name":"lumaa"},{"name":"luma"}],"output":null}],[11,"from_color","","",3,{"inputs":[{"name":"rgba"},{"name":"rgb"}],"output":null}],[11,"from_color","","",3,{"inputs":[{"name":"rgba"},{"name":"lumaa"}],"output":null}],[11,"from_color","","",3,{"inputs":[{"name":"rgba"},{"name":"luma"}],"output":null}],[11,"from_color","","",2,{"inputs":[{"name":"rgb"},{"name":"rgba"}],"output":null}],[11,"from_color","","",2,{"inputs":[{"name":"rgb"},{"name":"lumaa"}],"output":null}],[11,"from_color","","",2,{"inputs":[{"name":"rgb"},{"name":"luma"}],"output":null}],[11,"blend","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"}],"output":null}],[11,"blend","","",0,{"inputs":[{"name":"luma"},{"name":"luma"}],"output":null}],[11,"blend","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"}],"output":null}],[11,"blend","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"}],"output":null}],[11,"invert","","",1,{"inputs":[{"name":"lumaa"}],"output":null}],[11,"invert","","",0,{"inputs":[{"name":"luma"}],"output":null}],[11,"invert","","",3,{"inputs":[{"name":"rgba"}],"output":null}],[11,"invert","","",2,{"inputs":[{"name":"rgb"}],"output":null}],[11,"from_raw","","Contructs a buffer from a generic container\n(for example a `Vec` or a slice)\nReturns None if the container is not big enough",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"container"}],"output":{"name":"option"}}],[11,"into_raw","","Returns the underlying raw buffer",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"container"}}],[11,"dimensions","","The width and height of this image.",55,null],[11,"width","","The width of this image.",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"u32"}}],[11,"height","","The height of this image.",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"u32"}}],[11,"pixels","","Returns an iterator over the pixels of this image.",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"pixels"}}],[11,"enumerate_pixels","","Enumerates over the pixels of the image.\nThe iterator yields the coordinates of each pixel\nalong with a reference to them.",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"enumeratepixels"}}],[11,"get_pixel","","Gets a reference to the pixel at location `(x, y)`",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"p"}}],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with a mutable reference to them.",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"pixelsmut"}}],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image.",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"enumeratepixelsmut"}}],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"p"}}],[11,"put_pixel","","Puts a pixel at location `(x, y)`",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"p"}],"output":null}],[11,"save","","Saves the buffer to a file at the path specified.",55,{"inputs":[{"name":"imagebuffer"},{"name":"q"}],"output":{"name":"result"}}],[11,"deref","","",55,null],[11,"deref_mut","","",55,null],[11,"index","","",55,null],[11,"index_mut","","",55,null],[11,"clone","","",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"imagebuffer"}}],[11,"dimensions","","",55,null],[11,"bounds","","",55,null],[11,"get_pixel","","",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"p"}}],[11,"get_pixel_mut","","",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"p"}}],[11,"put_pixel","","",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"p"}],"output":null}],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels\nDEPRECATED: This method will be removed. Blend the pixel directly instead.",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"p"}],"output":null}],[11,"new","","Creates a new image buffer based on a `Vec<P::Subpixel>`.",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"imagebuffer"}}],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"p"}],"output":{"name":"imagebuffer"}}],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of the supplied function.\nThe arguments to the function are the pixel's x and y coordinates.",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"f"}],"output":{"name":"imagebuffer"}}],[11,"from_vec","","Creates an image buffer out of an existing buffer.\nReturns None if the buffer is not big enough.",55,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"vec"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the image buffer and returns the underlying data\nas an owned buffer",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"vec"}}],[11,"convert","","",55,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"imagebuffer"}}],[11,"new","","Contructs a new frame iterator",56,{"inputs":[{"name":"frames"},{"name":"vec"}],"output":{"name":"frames"}}],[11,"clone","","",57,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"new","","Contructs a new frame",57,{"inputs":[{"name":"frame"},{"name":"rgbaimage"}],"output":{"name":"frame"}}],[11,"from_parts","","Contructs a new frame",57,{"inputs":[{"name":"frame"},{"name":"rgbaimage"},{"name":"u32"},{"name":"u32"},{"name":"ratio"}],"output":{"name":"frame"}}],[11,"delay","","Delay of this frame",57,{"inputs":[{"name":"frame"}],"output":{"name":"ratio"}}],[11,"buffer","","Returns the image buffer",57,{"inputs":[{"name":"frame"}],"output":{"name":"rgbaimage"}}],[11,"into_buffer","","Returns the image buffer",57,{"inputs":[{"name":"frame"}],"output":{"name":"rgbaimage"}}],[11,"left","","Returns the x offset",57,{"inputs":[{"name":"frame"}],"output":{"name":"u32"}}],[11,"top","","Returns the x offset",57,{"inputs":[{"name":"frame"}],"output":{"name":"u32"}}],[11,"next","","",56,{"inputs":[{"name":"frames"}],"output":{"name":"option"}}],[6,"ImageResult","","Result of an image decoding/encoding process",null,null],[6,"RgbImage","","Sendable Rgb image buffer",null,null],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",null,null],[6,"GrayImage","","Sendable grayscale image buffer",null,null],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",null,null],[8,"ImageDecoder","","The trait that all decoders implement",null,null],[10,"dimensions","","Returns a tuple containing the width and height of the image",58,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[10,"colortype","","Returns the color type of the image e.g RGB(8) (8bit RGB)",58,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[10,"row_len","","Returns the length in bytes of one decoded row of the image",58,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[11,"is_animated","","Returns true if the image is animated",58,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[11,"into_frames","","Returns the frames of the image\nIf the image is not animated it returns a single frame",58,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[10,"read_scanline","","Reads one row from the image into buf and returns the row index",58,null],[10,"read_image","","Decodes the entire image and return it as a Vector",58,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle\nstarting from ```x``` and ```y``` and having ```length``` and ```width```",58,{"inputs":[{"name":"imagedecoder"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"imageresult"}}],[8,"GenericImage","","A trait for manipulating images.",null,null],[16,"Pixel","","The type of pixel.",59,null],[10,"dimensions","","The width and height of this image.",59,null],[11,"width","","The width of this image.",59,{"inputs":[{"name":"genericimage"}],"output":{"name":"u32"}}],[11,"height","","The height of this image.",59,{"inputs":[{"name":"genericimage"}],"output":{"name":"u32"}}],[10,"bounds","","The bounding rectangle of this image.",59,null],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"get_pixel","","Returns the pixel located at (x, y)",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"pixel"}}],[10,"get_pixel_mut","","Puts a pixel at location (x, y)",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"pixel"}}],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"pixel"}}],[10,"put_pixel","","Put a pixel at location (x, y)",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"pixel"}],"output":null}],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"pixel"}],"output":null}],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels\nDEPRECATED: This method will be removed. Blend the pixel directly instead.",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"pixel"}],"output":null}],[11,"pixels","","Returns an Iterator over the pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with their value",59,{"inputs":[{"name":"genericimage"}],"output":{"name":"pixels"}}],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with a mutable reference to them.\nDEPRECATED: \"This cannot be implemented safely Rust. Please use the image buffer directly.",59,{"inputs":[{"name":"genericimage"}],"output":{"name":"mutpixels"}}],[11,"copy_from","","Copies all of the pixels from another image into this image.",59,{"inputs":[{"name":"genericimage"},{"name":"o"},{"name":"u32"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"sub_image","","Returns a subimage that is a view into this image.",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"subimage"}}],[8,"Pixel","","A generalized pixel.",null,null],[16,"Subpixel","","The underlying subpixel type.",60,null],[10,"channel_count","","Returns the number of channels of this pixel type.",60,{"inputs":[{"name":"pixel"}],"output":{"name":"u8"}}],[10,"channels","","Returns the components as a slice.",60,null],[10,"channels_mut","","Returns the components as a mutable slice",60,null],[10,"color_model","","Returns a string that can help to interprete the meaning each channel\nSee [gimp babl](http://gegl.org/babl/).",60,{"inputs":[{"name":"pixel"}],"output":{"name":"str"}}],[10,"color_type","","Returns the ColorType for this pixel format",60,{"inputs":[{"name":"pixel"}],"output":{"name":"colortype"}}],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the pixel\nhas less than 4 channels the remainder is filled with the maximum value\nTODO deprecate",60,null],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d.\nIf the pixel does not contain 4 channels the extra are ignored.\nTODO deprecate",60,{"inputs":[{"name":"pixel"},{"name":"subpixel"},{"name":"subpixel"},{"name":"subpixel"},{"name":"subpixel"}],"output":{"name":"self"}}],[10,"from_slice","","Returns a view into a slice.",60,null],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",60,null],[10,"to_rgb","","Convert this pixel to RGB",60,{"inputs":[{"name":"pixel"}],"output":{"name":"rgb"}}],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",60,{"inputs":[{"name":"pixel"}],"output":{"name":"rgba"}}],[10,"to_luma","","Convert this pixel to luma",60,{"inputs":[{"name":"pixel"}],"output":{"name":"luma"}}],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",60,{"inputs":[{"name":"pixel"}],"output":{"name":"lumaa"}}],[10,"map","","Apply the function ```f``` to each channel of this pixel.",60,{"inputs":[{"name":"pixel"},{"name":"f"}],"output":{"name":"self"}}],[10,"apply","","Apply the function ```f``` to each channel of this pixel.",60,{"inputs":[{"name":"pixel"},{"name":"f"}],"output":null}],[10,"map_with_alpha","","Apply the function f to each channel except the alpha channel.\nApply the function g to the alpha channel.",60,{"inputs":[{"name":"pixel"},{"name":"f"},{"name":"g"}],"output":{"name":"self"}}],[10,"apply_with_alpha","","Apply the function f to each channel except the alpha channel.\nApply the function g to the alpha channel. Works in-place.",60,{"inputs":[{"name":"pixel"},{"name":"f"},{"name":"g"}],"output":null}],[10,"map2","","Apply the function ```f``` to each channel of this pixel and\n```other``` pairwise.",60,{"inputs":[{"name":"pixel"},{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[10,"apply2","","Apply the function ```f``` to each channel of this pixel and\n```other``` pairwise. Works in-place.",60,{"inputs":[{"name":"pixel"},{"name":"self"},{"name":"f"}],"output":null}],[10,"invert","","Invert this pixel",60,{"inputs":[{"name":"pixel"}],"output":null}],[10,"blend","","Blend the color of a given pixel into ourself, taking into account alpha channels",60,{"inputs":[{"name":"pixel"},{"name":"self"}],"output":null}],[8,"Primitive","","Primitive trait from old stdlib, added max_value",null,null],[11,"is_animated","","Returns true if the image is animated",58,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[11,"into_frames","","Returns the frames of the image\nIf the image is not animated it returns a single frame",58,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle\nstarting from ```x``` and ```y``` and having ```length``` and ```width```",58,{"inputs":[{"name":"imagedecoder"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"imageresult"}}],[11,"width","","The width of this image.",59,{"inputs":[{"name":"genericimage"}],"output":{"name":"u32"}}],[11,"height","","The height of this image.",59,{"inputs":[{"name":"genericimage"}],"output":{"name":"u32"}}],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"pixel"}}],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"pixel"}],"output":null}],[11,"pixels","","Returns an Iterator over the pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with their value",59,{"inputs":[{"name":"genericimage"}],"output":{"name":"pixels"}}],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with a mutable reference to them.\nDEPRECATED: \"This cannot be implemented safely Rust. Please use the image buffer directly.",59,{"inputs":[{"name":"genericimage"}],"output":{"name":"mutpixels"}}],[11,"copy_from","","Copies all of the pixels from another image into this image.",59,{"inputs":[{"name":"genericimage"},{"name":"o"},{"name":"u32"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"sub_image","","Returns a subimage that is a view into this image.",59,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"subimage"}}],[11,"expand_palette","","Expands a color palette by re-using the existing buffer.\nAssumes 8 bit per pixel. Uses an optionally transparent index to\nadjust it's alpha value accordingly.",61,null]],"paths":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[4,"ColorType"],[4,"ImageError"],[4,"FilterType"],[4,"ImageFormat"],[4,"DynamicImage"],[3,"NeuQuant"],[8,"ColorMap"],[3,"BiLevel"],[3,"WebpDecoder"],[3,"Frame"],[3,"VP8Decoder"],[3,"PPMEncoder"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"Deflater"],[3,"Inflater"],[3,"Adler32"],[3,"Crc32"],[3,"Component"],[3,"JPEGEncoder"],[3,"JPEGDecoder"],[3,"Frame"],[4,"DisposalMethod"],[4,"Block"],[4,"Extension"],[4,"DecodingError"],[4,"Extensions"],[4,"Decoded"],[4,"State"],[4,"U16Value"],[4,"ByteValue"],[3,"StreamingDecoder"],[4,"ColorOutput"],[3,"MemoryLimit"],[3,"Decoder"],[3,"Reader"],[4,"ExtensionData"],[3,"BlockWriter"],[3,"Writer"],[3,"Encoder"],[3,"Decoder"],[3,"Encoder"],[4,"ByteOrder"],[3,"TIFFDecoder"],[3,"TGADecoder"],[3,"BMPDecoder"],[3,"Pixels"],[3,"MutPixels"],[3,"SubImage"],[3,"ImageBuffer"],[3,"Frames"],[3,"Frame"],[8,"ImageDecoder"],[8,"GenericImage"],[8,"Pixel"],[6,"GrayImage"]]};
searchIndex['input'] = {"items":[[0,"","input","A flexible structure for user interactions\nto be used in window frameworks and widgets libraries.",null,null],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",null,null],[12,"dt","","Delta time in seconds.",0,null],[3,"RenderArgs","","Render arguments",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",1,null],[12,"width","","The width of rendered area in points.",1,null],[12,"height","","The height of rendered area in points.",1,null],[12,"draw_width","","The width of rendered area in pixels.",1,null],[12,"draw_height","","The height of rendered area in pixels.",1,null],[3,"AfterRenderArgs","","After render arguments.",null,null],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",2,null],[3,"EventId","","Used to identify events arguments provided by traits.",null,null],[4,"Event","","Adds render and update events to input events",null,null],[13,"Render","","Render graphics.",3,null],[13,"AfterRender","","After rendering and swapping buffers.",3,null],[13,"Update","","Update the state of the application.",3,null],[13,"Idle","","Do background tasks that can be done incrementally.",3,null],[13,"Input","","Input event.",3,null],[4,"Button","","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",4,null],[13,"Mouse","","A mouse button.",4,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",5,null],[13,"MouseRelative","","x and y in relative coordinates.",5,null],[13,"MouseScroll","","x and y in scroll ticks.",5,null],[4,"Input","","Models input events.",null,null],[13,"Press","","Pressed a button.",6,null],[13,"Release","","Released a button.",6,null],[13,"Move","","Moved mouse cursor.",6,null],[13,"Text","","Text (usually from keyboard).",6,null],[13,"Resize","","Window got resized.",6,null],[13,"Focus","","Window gained or lost focus.",6,null],[13,"Cursor","","Window gained or lost cursor.",6,null],[0,"keyboard","","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","input::keyboard","",null,null],[4,"Key","","Represent a keyboard key.\nKeycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",null,null],[13,"Unknown","","",7,null],[13,"Backspace","","",7,null],[13,"Tab","","",7,null],[13,"Return","","",7,null],[13,"Escape","","",7,null],[13,"Space","","",7,null],[13,"Exclaim","","",7,null],[13,"Quotedbl","","",7,null],[13,"Hash","","",7,null],[13,"Dollar","","",7,null],[13,"Percent","","",7,null],[13,"Ampersand","","",7,null],[13,"Quote","","",7,null],[13,"LeftParen","","",7,null],[13,"RightParen","","",7,null],[13,"Asterisk","","",7,null],[13,"Plus","","",7,null],[13,"Comma","","",7,null],[13,"Minus","","",7,null],[13,"Period","","",7,null],[13,"Slash","","",7,null],[13,"D0","","",7,null],[13,"D1","","",7,null],[13,"D2","","",7,null],[13,"D3","","",7,null],[13,"D4","","",7,null],[13,"D5","","",7,null],[13,"D6","","",7,null],[13,"D7","","",7,null],[13,"D8","","",7,null],[13,"D9","","",7,null],[13,"Colon","","",7,null],[13,"Semicolon","","",7,null],[13,"Less","","",7,null],[13,"Equals","","",7,null],[13,"Greater","","",7,null],[13,"Question","","",7,null],[13,"At","","",7,null],[13,"LeftBracket","","",7,null],[13,"Backslash","","",7,null],[13,"RightBracket","","",7,null],[13,"Caret","","",7,null],[13,"Underscore","","",7,null],[13,"Backquote","","",7,null],[13,"A","","",7,null],[13,"B","","",7,null],[13,"C","","",7,null],[13,"D","","",7,null],[13,"E","","",7,null],[13,"F","","",7,null],[13,"G","","",7,null],[13,"H","","",7,null],[13,"I","","",7,null],[13,"J","","",7,null],[13,"K","","",7,null],[13,"L","","",7,null],[13,"M","","",7,null],[13,"N","","",7,null],[13,"O","","",7,null],[13,"P","","",7,null],[13,"Q","","",7,null],[13,"R","","",7,null],[13,"S","","",7,null],[13,"T","","",7,null],[13,"U","","",7,null],[13,"V","","",7,null],[13,"W","","",7,null],[13,"X","","",7,null],[13,"Y","","",7,null],[13,"Z","","",7,null],[13,"Delete","","",7,null],[13,"CapsLock","","",7,null],[13,"F1","","",7,null],[13,"F2","","",7,null],[13,"F3","","",7,null],[13,"F4","","",7,null],[13,"F5","","",7,null],[13,"F6","","",7,null],[13,"F7","","",7,null],[13,"F8","","",7,null],[13,"F9","","",7,null],[13,"F10","","",7,null],[13,"F11","","",7,null],[13,"F12","","",7,null],[13,"PrintScreen","","",7,null],[13,"ScrollLock","","",7,null],[13,"Pause","","",7,null],[13,"Insert","","",7,null],[13,"Home","","",7,null],[13,"PageUp","","",7,null],[13,"End","","",7,null],[13,"PageDown","","",7,null],[13,"Right","","",7,null],[13,"Left","","",7,null],[13,"Down","","",7,null],[13,"Up","","",7,null],[13,"NumLockClear","","",7,null],[13,"NumPadDivide","","",7,null],[13,"NumPadMultiply","","",7,null],[13,"NumPadMinus","","",7,null],[13,"NumPadPlus","","",7,null],[13,"NumPadEnter","","",7,null],[13,"NumPad1","","",7,null],[13,"NumPad2","","",7,null],[13,"NumPad3","","",7,null],[13,"NumPad4","","",7,null],[13,"NumPad5","","",7,null],[13,"NumPad6","","",7,null],[13,"NumPad7","","",7,null],[13,"NumPad8","","",7,null],[13,"NumPad9","","",7,null],[13,"NumPad0","","",7,null],[13,"NumPadPeriod","","",7,null],[13,"Application","","",7,null],[13,"Power","","",7,null],[13,"NumPadEquals","","",7,null],[13,"F13","","",7,null],[13,"F14","","",7,null],[13,"F15","","",7,null],[13,"F16","","",7,null],[13,"F17","","",7,null],[13,"F18","","",7,null],[13,"F19","","",7,null],[13,"F20","","",7,null],[13,"F21","","",7,null],[13,"F22","","",7,null],[13,"F23","","",7,null],[13,"F24","","",7,null],[13,"Execute","","",7,null],[13,"Help","","",7,null],[13,"Menu","","",7,null],[13,"Select","","",7,null],[13,"Stop","","",7,null],[13,"Again","","",7,null],[13,"Undo","","",7,null],[13,"Cut","","",7,null],[13,"Copy","","",7,null],[13,"Paste","","",7,null],[13,"Find","","",7,null],[13,"Mute","","",7,null],[13,"VolumeUp","","",7,null],[13,"VolumeDown","","",7,null],[13,"NumPadComma","","",7,null],[13,"NumPadEqualsAS400","","",7,null],[13,"AltErase","","",7,null],[13,"Sysreq","","",7,null],[13,"Cancel","","",7,null],[13,"Clear","","",7,null],[13,"Prior","","",7,null],[13,"Return2","","",7,null],[13,"Separator","","",7,null],[13,"Out","","",7,null],[13,"Oper","","",7,null],[13,"ClearAgain","","",7,null],[13,"CrSel","","",7,null],[13,"ExSel","","",7,null],[13,"NumPad00","","",7,null],[13,"NumPad000","","",7,null],[13,"ThousandsSeparator","","",7,null],[13,"DecimalSeparator","","",7,null],[13,"CurrencyUnit","","",7,null],[13,"CurrencySubUnit","","",7,null],[13,"NumPadLeftParen","","",7,null],[13,"NumPadRightParen","","",7,null],[13,"NumPadLeftBrace","","",7,null],[13,"NumPadRightBrace","","",7,null],[13,"NumPadTab","","",7,null],[13,"NumPadBackspace","","",7,null],[13,"NumPadA","","",7,null],[13,"NumPadB","","",7,null],[13,"NumPadC","","",7,null],[13,"NumPadD","","",7,null],[13,"NumPadE","","",7,null],[13,"NumPadF","","",7,null],[13,"NumPadXor","","",7,null],[13,"NumPadPower","","",7,null],[13,"NumPadPercent","","",7,null],[13,"NumPadLess","","",7,null],[13,"NumPadGreater","","",7,null],[13,"NumPadAmpersand","","",7,null],[13,"NumPadDblAmpersand","","",7,null],[13,"NumPadVerticalBar","","",7,null],[13,"NumPadDblVerticalBar","","",7,null],[13,"NumPadColon","","",7,null],[13,"NumPadHash","","",7,null],[13,"NumPadSpace","","",7,null],[13,"NumPadAt","","",7,null],[13,"NumPadExclam","","",7,null],[13,"NumPadMemStore","","",7,null],[13,"NumPadMemRecall","","",7,null],[13,"NumPadMemClear","","",7,null],[13,"NumPadMemAdd","","",7,null],[13,"NumPadMemSubtract","","",7,null],[13,"NumPadMemMultiply","","",7,null],[13,"NumPadMemDivide","","",7,null],[13,"NumPadPlusMinus","","",7,null],[13,"NumPadClear","","",7,null],[13,"NumPadClearEntry","","",7,null],[13,"NumPadBinary","","",7,null],[13,"NumPadOctal","","",7,null],[13,"NumPadDecimal","","",7,null],[13,"NumPadHexadecimal","","",7,null],[13,"LCtrl","","",7,null],[13,"LShift","","",7,null],[13,"LAlt","","",7,null],[13,"LGui","","",7,null],[13,"RCtrl","","",7,null],[13,"RShift","","",7,null],[13,"RAlt","","",7,null],[13,"RGui","","",7,null],[13,"Mode","","",7,null],[13,"AudioNext","","",7,null],[13,"AudioPrev","","",7,null],[13,"AudioStop","","",7,null],[13,"AudioPlay","","",7,null],[13,"AudioMute","","",7,null],[13,"MediaSelect","","",7,null],[13,"Www","","",7,null],[13,"Mail","","",7,null],[13,"Calculator","","",7,null],[13,"Computer","","",7,null],[13,"AcSearch","","",7,null],[13,"AcHome","","",7,null],[13,"AcBack","","",7,null],[13,"AcForward","","",7,null],[13,"AcStop","","",7,null],[13,"AcRefresh","","",7,null],[13,"AcBookmarks","","",7,null],[13,"BrightnessDown","","",7,null],[13,"BrightnessUp","","",7,null],[13,"DisplaySwitch","","",7,null],[13,"KbdIllumToggle","","",7,null],[13,"KbdIllumDown","","",7,null],[13,"KbdIllumUp","","",7,null],[13,"Eject","","",7,null],[13,"Sleep","","",7,null],[17,"NO_MODIFIER","","No modifier.",null,null],[17,"CTRL","","Ctrl.",null,null],[17,"SHIFT","","Shift.",null,null],[17,"ALT","","Alt.",null,null],[17,"GUI","","Gui.",null,null],[17,"CTRL_SHIFT","","Ctrl + Shift.",null,null],[17,"CTRL_ALT","","Ctrl + Alt.",null,null],[17,"CTRL_GUI","","Ctrl + Gui.",null,null],[17,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",null,null],[17,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",null,null],[17,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",null,null],[17,"SHIFT_ALT","","Shift + Alt.",null,null],[17,"SHIFT_GUI","","Shift + Gui.",null,null],[17,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",null,null],[17,"ALT_GUI","","Alt + Gui.",null,null],[11,"hash","","",8,null],[11,"cmp","","",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"eq","","",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"encode","","",8,{"inputs":[{"name":"modifierkey"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"modifierkey"},{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"modifierkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",8,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"all","","Returns the set containing all flags.",8,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bits","","Returns the raw value of the flags currently stored.",8,{"inputs":[{"name":"modifierkey"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",8,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",8,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"modifierkey"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",8,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"sub","","Returns the set difference of the two sets of flags.",8,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"not","","Returns the complement of this set of flags.",8,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"from_iter","","",8,{"inputs":[{"name":"modifierkey"},{"name":"t"}],"output":{"name":"modifierkey"}}],[11,"handle_input","","Change modifier key state depending on input.",8,{"inputs":[{"name":"modifierkey"},{"name":"input"}],"output":null}],[11,"default","","",8,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",7,{"inputs":[{"name":"key"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",7,{"inputs":[{"name":"key"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"from","","",7,{"inputs":[{"name":"key"},{"name":"u32"}],"output":{"name":"key"}}],[11,"eq","","",7,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"option"}}],[11,"cmp","","",7,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"ordering"}}],[11,"code","","Returns an id of the key",7,{"inputs":[{"name":"key"}],"output":{"name":"i32"}}],[0,"mouse","input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",9,null],[13,"Left","","Left mouse button.",9,null],[13,"Right","","Right mouse button.",9,null],[13,"Middle","","Middle mouse button.",9,null],[13,"X1","","Extra mouse button number 1.",9,null],[13,"X2","","Extra mouse button number 2.",9,null],[13,"Button6","","Mouse button number 6.",9,null],[13,"Button7","","Mouse button number 7.",9,null],[13,"Button8","","Mouse button number 8.",9,null],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",10,{"inputs":[{"name":"mousecursorevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",10,{"inputs":[{"name":"mousecursorevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",10,{"inputs":[{"name":"mousecursorevent"}],"output":{"name":"option"}}],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",11,{"inputs":[{"name":"mouserelativeevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",11,{"inputs":[{"name":"mouserelativeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_relative_args","","Returns mouse relative arguments.",11,{"inputs":[{"name":"mouserelativeevent"}],"output":{"name":"option"}}],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",12,{"inputs":[{"name":"mousescrollevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",12,{"inputs":[{"name":"mousescrollevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",12,{"inputs":[{"name":"mousescrollevent"}],"output":{"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"partial_cmp","","",9,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"ordering"}}],[11,"eq","","",9,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"encode","","",9,{"inputs":[{"name":"mousebutton"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"mousebutton"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"from","","",9,{"inputs":[{"name":"mousebutton"},{"name":"u32"}],"output":{"name":"mousebutton"}}],[0,"generic_event","input","Trait for generic events",null,null],[8,"GenericEvent","input::generic_event","Implemented by all events",null,null],[10,"event_id","","The id of this event.",13,{"inputs":[{"name":"genericevent"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with arguments",13,{"inputs":[{"name":"genericevent"},{"name":"f"}],"output":{"name":"u"}}],[10,"from_args","","Converts from arguments to `Self`",13,{"inputs":[{"name":"genericevent"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","input","",6,{"inputs":[{"name":"input"}],"output":{"name":"eventid"}}],[11,"with_args","","",6,{"inputs":[{"name":"input"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",6,{"inputs":[{"name":"input"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","","",3,{"inputs":[{"name":"event"}],"output":{"name":"eventid"}}],[11,"with_args","","",3,{"inputs":[{"name":"event"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",3,{"inputs":[{"name":"event"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"updateargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"updateargs"}],"output":{"name":"updateargs"}}],[11,"fmt","","",1,{"inputs":[{"name":"renderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"renderargs"}],"output":{"name":"renderargs"}}],[11,"viewport","","Returns viewport information filling entire render area.",1,{"inputs":[{"name":"renderargs"}],"output":{"name":"viewport"}}],[11,"fmt","","",14,{"inputs":[{"name":"afterrenderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"afterrenderargs"}],"output":{"name":"afterrenderargs"}}],[11,"fmt","","",2,{"inputs":[{"name":"idleargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"idleargs"}],"output":{"name":"idleargs"}}],[11,"fmt","","",3,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[8,"UpdateEvent","","When the application state should be updated",null,null],[10,"from_update_args","","Creates an update event.",15,{"inputs":[{"name":"updateevent"},{"name":"updateargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",15,{"inputs":[{"name":"updateevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"update","","Calls closure if this is an update event.",15,{"inputs":[{"name":"updateevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",15,{"inputs":[{"name":"updateevent"}],"output":{"name":"option"}}],[8,"RenderEvent","","When the next frame should be rendered",null,null],[10,"from_render_args","","Creates a render event.",16,{"inputs":[{"name":"renderevent"},{"name":"renderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"render","","Calls closure if this is a render event.",16,{"inputs":[{"name":"renderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",16,{"inputs":[{"name":"renderevent"}],"output":{"name":"option"}}],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",17,{"inputs":[{"name":"afterrenderevent"},{"name":"afterrenderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"after_render","","Calls closure if this is an after render event.",17,{"inputs":[{"name":"afterrenderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"after_render_args","","Returns after render arguments.",17,{"inputs":[{"name":"afterrenderevent"}],"output":{"name":"option"}}],[8,"IdleEvent","","When background tasks should be performed",null,null],[10,"from_idle_args","","Creates an idle event.",18,{"inputs":[{"name":"idleevent"},{"name":"idleargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",18,{"inputs":[{"name":"idleevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"idle","","Calls closure if this is an idle event.",18,{"inputs":[{"name":"idleevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",18,{"inputs":[{"name":"idleevent"}],"output":{"name":"option"}}],[8,"PressEvent","","The press of a button",null,null],[10,"from_button","","Creates a press event.",19,{"inputs":[{"name":"pressevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"press","","Calls closure if this is a press event.",19,{"inputs":[{"name":"pressevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",19,{"inputs":[{"name":"pressevent"}],"output":{"name":"option"}}],[8,"ReleaseEvent","","The release of a button",null,null],[10,"from_button","","Creates a release event.",20,{"inputs":[{"name":"releaseevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"release","","Calls closure if this is a release event.",20,{"inputs":[{"name":"releaseevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",20,{"inputs":[{"name":"releaseevent"}],"output":{"name":"option"}}],[8,"TextEvent","","When receiving text from user, such as typing a character",null,null],[10,"from_text","","Creates a text event.",21,{"inputs":[{"name":"textevent"},{"name":"str"},{"name":"self"}],"output":{"name":"option"}}],[10,"text","","Calls closure if this is a text event.",21,{"inputs":[{"name":"textevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",21,{"inputs":[{"name":"textevent"}],"output":{"name":"option"}}],[8,"ResizeEvent","","When the window is resized",null,null],[10,"from_width_height","","Creates a resize event.",22,{"inputs":[{"name":"resizeevent"},{"name":"u32"},{"name":"u32"},{"name":"self"}],"output":{"name":"option"}}],[10,"resize","","Calls closure if this is a resize event.",22,{"inputs":[{"name":"resizeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",22,{"inputs":[{"name":"resizeevent"}],"output":{"name":"option"}}],[8,"FocusEvent","","When window gets or looses focus",null,null],[10,"from_focused","","Creates a focus event.",23,{"inputs":[{"name":"focusevent"},{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"focus","","Calls closure if this is a focus event.",23,{"inputs":[{"name":"focusevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",23,{"inputs":[{"name":"focusevent"}],"output":{"name":"option"}}],[8,"CursorEvent","","When window gets or looses cursor",null,null],[10,"from_cursor","","Creates a cursor event.",24,{"inputs":[{"name":"cursorevent"},{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"cursor","","Calls closure if this is a cursor event.",24,{"inputs":[{"name":"cursorevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"cursor_args","","Returns cursor arguments.",24,{"inputs":[{"name":"cursorevent"}],"output":{"name":"option"}}],[11,"eq","","",25,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"eventid"}],"output":{"name":"eventid"}}],[11,"fmt","","",4,{"inputs":[{"name":"button"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"eq","","",4,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"encode","","",4,{"inputs":[{"name":"button"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"button"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"fmt","","",5,{"inputs":[{"name":"motion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"encode","","",5,{"inputs":[{"name":"motion"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"motion"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"motion"}],"output":{"name":"motion"}}],[11,"fmt","","",6,{"inputs":[{"name":"input"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"encode","","",6,{"inputs":[{"name":"input"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"input"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"input"}],"output":{"name":"input"}}],[11,"from_dt","","Creates an update event with delta time.",15,{"inputs":[{"name":"updateevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",15,{"inputs":[{"name":"updateevent"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",16,{"inputs":[{"name":"renderevent"}],"output":{"name":"option"}}],[11,"after_render_args","","Returns after render arguments.",17,{"inputs":[{"name":"afterrenderevent"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",18,{"inputs":[{"name":"idleevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",18,{"inputs":[{"name":"idleevent"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",19,{"inputs":[{"name":"pressevent"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",20,{"inputs":[{"name":"releaseevent"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",21,{"inputs":[{"name":"textevent"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",22,{"inputs":[{"name":"resizeevent"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",23,{"inputs":[{"name":"focusevent"}],"output":{"name":"option"}}],[11,"cursor_args","","Returns cursor arguments.",24,{"inputs":[{"name":"cursorevent"}],"output":{"name":"option"}}]],"paths":[[3,"UpdateArgs"],[3,"RenderArgs"],[3,"IdleArgs"],[4,"Event"],[4,"Button"],[4,"Motion"],[4,"Input"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"GenericEvent"],[3,"AfterRenderArgs"],[8,"UpdateEvent"],[8,"RenderEvent"],[8,"AfterRenderEvent"],[8,"IdleEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"TextEvent"],[8,"ResizeEvent"],[8,"FocusEvent"],[8,"CursorEvent"],[3,"EventId"]]};
searchIndex['graphics'] = {"items":[[0,"","graphics","A library for 2D graphics that works with multiple back-ends.",null,null],[8,"ImageSize","","Implemented by all images to be used with generic algorithms.",null,null],[10,"get_size","","Get the image size.",0,null],[11,"get_width","","Gets the image width.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[11,"get_height","","Gets the image height.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[0,"draw_state","","",null,null],[0,"state","graphics::draw_state","Fixed-function hardware state.",null,null],[11,"fmt","draw_state_lib::state","",1,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",1,null],[11,"partial_cmp","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"cmp","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",5,{"inputs":[{"name":"primitive"}],"output":{"name":"cullface"}}],[11,"default","","",5,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"cmp","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"cmp","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"cmp","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"cmp","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"default","","",9,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"cmp","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"cmp","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"default","","",11,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"cmp","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"cmp","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"cmp","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"fmt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",15,null],[11,"partial_cmp","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",15,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"eq","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"default","","",16,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",16,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"cmp","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",17,null],[11,"remove","","Removes the specified flags in-place.",17,null],[11,"toggle","","Toggles the specified flags in-place.",17,null],[11,"bitor","","Returns the union of the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"from_iter","","",17,{"inputs":[{"name":"colormask"},{"name":"t"}],"output":{"name":"colormask"}}],[11,"partial_cmp","draw_state_lib::target","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",19,null],[11,"cmp","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"eq","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"mask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"all","","Returns the set containing all flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",19,{"inputs":[{"name":"mask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",19,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",19,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"mask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",19,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",19,null],[11,"remove","","Removes the specified flags in-place.",19,null],[11,"toggle","","Toggles the specified flags in-place.",19,null],[11,"bitor","","Returns the union of the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"not","","Returns the complement of this set of flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"from_iter","","",19,{"inputs":[{"name":"mask"},{"name":"t"}],"output":{"name":"mask"}}],[11,"hash","","",20,null],[11,"cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[11,"bitor","","Returns the union of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"from_iter","","",20,{"inputs":[{"name":"mirror"},{"name":"t"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"eq","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"cleardata"}],"output":{"name":"cleardata"}}],[11,"fmt","","",21,{"inputs":[{"name":"cleardata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","draw_state_lib","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"drawstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"cmp","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"fmt","","",23,{"inputs":[{"name":"blendpreset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"blendpreset"}],"output":{"name":"blendpreset"}}],[11,"new","","Create a default `DrawState`. Uses counter-clockwise winding, culls the backface of each\nprimitive, and does no scissor/stencil/depth/blend/color masking.",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"get_target_mask","","Return a target mask that contains all the planes required by this state.",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"mask"}}],[11,"multi_sample","","Enable multi-sampled rasterization",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"stencil","","Set the stencil test to a simple expression",22,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"u8"}],"output":{"name":"drawstate"}}],[11,"depth","","Set the depth test with the mask",22,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"bool"}],"output":{"name":"drawstate"}}],[11,"scissor","","Set the scissor",22,{"inputs":[{"name":"drawstate"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"drawstate"}}],[11,"blend","","Set the blend mode to one of the presets",22,{"inputs":[{"name":"drawstate"},{"name":"blendpreset"}],"output":{"name":"drawstate"}}],[4,"FrontFace","graphics::draw_state::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",1,null],[13,"CounterClockwise","","Counter-clockwise winding order.",1,null],[6,"LineWidth","","",null,null],[6,"OffsetFactor","","",null,null],[6,"OffsetUnits","","",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",3,null],[13,"Front","","",3,null],[13,"Back","","",3,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",4,null],[13,"Line","","Rasterize as a line with the given width.",4,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",4,null],[3,"Primitive","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",7,null],[13,"Less","","`x < y`",7,null],[13,"LessEqual","","`x <= y`",7,null],[13,"Equal","","`x == y`",7,null],[13,"GreaterEqual","","`x >= y`",7,null],[13,"Greater","","`x > y`",7,null],[13,"NotEqual","","`x != y`",7,null],[13,"Always","","`true`",7,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",8,null],[13,"Zero","","Set the value in the stencil buffer to zero.",8,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",8,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",8,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",8,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",8,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",8,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",8,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",9,null],[12,"value","","Reference value to compare the value in the stencil buffer with.",9,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",9,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",9,null],[12,"op_fail","","What operation to do if the stencil test fails.",9,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",9,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",9,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",10,null],[12,"back","","",10,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",11,null],[12,"write","","Specify whether to write to the depth buffer or not.",11,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",12,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",12,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",12,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",13,null],[13,"SourceAlpha","","",13,null],[13,"DestColor","","",13,null],[13,"DestAlpha","","",13,null],[13,"ConstColor","","",13,null],[13,"ConstAlpha","","",13,null],[4,"Factor","","",null,null],[13,"Zero","","",14,null],[13,"One","","",14,null],[13,"SourceAlphaSaturated","","",14,null],[13,"ZeroPlus","","",14,null],[13,"OneMinus","","",14,null],[3,"BlendChannel","","",null,null],[12,"equation","","",15,null],[12,"source","","",15,null],[12,"destination","","",15,null],[3,"Blend","","",null,null],[12,"color","","",16,null],[12,"alpha","","",16,null],[12,"value","","",16,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[0,"target","graphics::draw_state","Render target specification.",null,null],[6,"Layer","graphics::draw_state::target","",null,null],[6,"Level","","",null,null],[6,"Depth","","",null,null],[6,"Stencil","","",null,null],[3,"Rect","","A screen space rectangle",null,null],[12,"x","","",18,null],[12,"y","","",18,null],[12,"w","","",18,null],[12,"h","","",18,null],[6,"ColorValue","","",null,null],[3,"Mask","","Output mask, used for blitting and clearing",null,null],[17,"COLOR","","",null,null],[17,"COLOR0","","",null,null],[17,"COLOR1","","",null,null],[17,"COLOR2","","",null,null],[17,"COLOR3","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[3,"Mirror","","Mirroring flags, used for blitting",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[3,"ClearData","","How to clear a frame.",null,null],[12,"color","","The color to clear the frame with",21,null],[12,"depth","","The depth value to clear the frame with",21,null],[12,"stencil","","The stencil value to clear the frame with",21,null],[3,"DrawState","graphics::draw_state","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",22,null],[12,"multi_sample","","Multi-sampling mode",22,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",22,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",22,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",22,null],[12,"blend","","Blend function to use. If None, no blending is done.",22,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",22,null],[4,"BlendPreset","","Blend function presets for ease of use.",null,null],[13,"Add","","When combining two fragments, add their values together, saturating at 1.0",23,null],[13,"Multiply","","When combining two fragments, multiply their values together.",23,null],[13,"Alpha","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",23,null],[13,"Invert","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",23,null],[3,"DrawState","graphics","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",22,null],[12,"multi_sample","","Multi-sampling mode",22,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",22,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",22,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",22,null],[12,"blend","","Blend function to use. If None, no blending is done.",22,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",22,null],[11,"abs_transform","viewport","Computes absolute transform for 2D graphics,\nwhich uses a row major 2x3 matrix.\nThe origin is in the upper left corner of the viewport rectangle.\nThe x axis points to the right, and the y axis points down.\nThe units are in points (window coordinates).",24,null],[11,"clone","","",24,{"inputs":[{"name":"viewport"}],"output":{"name":"viewport"}}],[3,"Viewport","graphics","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels.\n```[x, y, width height]``` where ```(x, y)``` is lower left corner.",24,null],[12,"draw_size","","The size of frame buffer in pixels.",24,null],[12,"window_size","","The size of window in points.",24,null],[5,"default_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"clip_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"inside_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"outside_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"clear","","Clears the screen.",null,{"inputs":[{"name":"color"},{"name":"g"}],"output":null}],[5,"image","","Draws image.",null,null],[5,"ellipse","","Draws ellipse.",null,{"inputs":[{"name":"color"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"circle_arc","","Draws arc",null,{"inputs":[{"name":"color"},{"name":"radius"},{"name":"scalar"},{"name":"scalar"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"rectangle","","Draws rectangle.",null,{"inputs":[{"name":"color"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"polygon","","Draws polygon.",null,{"inputs":[{"name":"color"},{"name":"polygon"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"character","","A text character",null,null],[3,"Character","graphics::character","Holds rendered character data.",null,null],[12,"offset","","The offset of character.",25,null],[12,"size","","The size of character, including space.",25,null],[12,"texture","","The texture of the character.",25,null],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The textyre type associated with the character cache.",26,null],[10,"character","","Get reference to character.",26,{"inputs":[{"name":"charactercache"},{"name":"fontsize"},{"name":"char"}],"output":{"name":"character"}}],[11,"width","","Return the width for some given text.",26,{"inputs":[{"name":"charactercache"},{"name":"fontsize"},{"name":"str"}],"output":{"name":"scalar"}}],[11,"clone","","",25,{"inputs":[{"name":"character"}],"output":{"name":"character"}}],[11,"left","","The left offset.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"top","","The top offset.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"width","","Gets width of character, including space to the next one.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"height","","Sets height of character, including space to the next one.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[0,"context","graphics","Transformation context",null,null],[3,"Context","graphics::context","Drawing 2d context.",null,null],[12,"viewport","","Viewport information.",27,null],[12,"view","","View transformation.",27,null],[12,"transform","","Current transformation.",27,null],[12,"draw_state","","Current draw state settings.",27,null],[11,"clone","","",27,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new","","Creates a new drawing context.",27,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new_viewport","","Creates a new context with absolute transform in point coordinates.",27,{"inputs":[{"name":"context"},{"name":"viewport"}],"output":{"name":"context"}}],[11,"abs","","Creates a new drawing context in absolute coordinates.",27,{"inputs":[{"name":"context"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"context"}}],[11,"view","","Moves the current transform to the view coordinate system.",27,{"inputs":[{"name":"context"}],"output":{"name":"self"}}],[11,"reset","","Moves the current transform to the default coordinate system.",27,{"inputs":[{"name":"context"}],"output":{"name":"self"}}],[11,"store_view","","Stores the current transform as new view.",27,{"inputs":[{"name":"context"}],"output":{"name":"self"}}],[11,"get_view_size","","Computes the current view size.",27,{"inputs":[{"name":"context"}],"output":{"name":"vec2d"}}],[0,"color","graphics","Helper methods for colors",null,null],[5,"grey","graphics::color","Returns a grey color",null,{"inputs":[{"name":"colorcomponent"}],"output":{"name":"color"}}],[5,"alpha","","Returns a semi-transparent white color",null,{"inputs":[{"name":"colorcomponent"}],"output":{"name":"color"}}],[5,"hex","","Converts from hexadecimal color format",null,{"inputs":[{"name":"str"}],"output":{"name":"color"}}],[17,"WHITE","","White color.",null,null],[17,"BLACK","","Black color.",null,null],[17,"TRANSPARENT","","Transparent color.",null,null],[0,"polygon","graphics","Draw polygon",null,null],[3,"Polygon","graphics::polygon","A polygon",null,null],[12,"color","","The color of the polygon",28,null],[11,"clone","","",28,{"inputs":[{"name":"polygon"}],"output":{"name":"polygon"}}],[11,"new","","Creates new polygon",28,{"inputs":[{"name":"polygon"},{"name":"color"}],"output":{"name":"polygon"}}],[11,"color","","Sets color.",28,{"inputs":[{"name":"polygon"},{"name":"color"}],"output":{"name":"self"}}],[11,"draw","","Draws polygon",28,{"inputs":[{"name":"polygon"},{"name":"polygon"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation",28,{"inputs":[{"name":"polygon"},{"name":"polygons"},{"name":"scalar"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"line","graphics","Draw Line",null,null],[3,"Line","graphics::line","A colored line with a default border radius",null,null],[12,"color","","The line color",29,null],[12,"radius","","The line radius",29,null],[12,"shape","","The line shape",29,null],[4,"Shape","","The shape of the line",null,null],[13,"Square","","Square edges",30,null],[13,"Round","","Round edges",30,null],[13,"Bevel","","Bevel edges",30,null],[11,"clone","","",30,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"clone","","",29,{"inputs":[{"name":"line"}],"output":{"name":"line"}}],[11,"new","","Creates a new line",29,{"inputs":[{"name":"line"},{"name":"color"},{"name":"radius"}],"output":{"name":"line"}}],[11,"new_round","","Creates a new line",29,{"inputs":[{"name":"line"},{"name":"color"},{"name":"radius"}],"output":{"name":"line"}}],[11,"color","","Sets color.",29,{"inputs":[{"name":"line"},{"name":"color"}],"output":{"name":"self"}}],[11,"radius","","Sets radius.",29,{"inputs":[{"name":"line"},{"name":"radius"}],"output":{"name":"self"}}],[11,"width","","Sets width.",29,{"inputs":[{"name":"line"},{"name":"width"}],"output":{"name":"self"}}],[11,"shape","","Sets shape.",29,{"inputs":[{"name":"line"},{"name":"shape"}],"output":{"name":"self"}}],[11,"draw","","Draw the line.",29,{"inputs":[{"name":"line"},{"name":"l"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"draw_arrow","","Draws an arrow",29,{"inputs":[{"name":"line"},{"name":"l"},{"name":"scalar"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"circle_arc","graphics","Draw an arc",null,null],[3,"CircleArc","graphics::circle_arc","A curved line",null,null],[12,"color","","The arcs color",31,null],[12,"radius","","The radius of the arc (Thickness of the drawing, not the radius of the circle)",31,null],[12,"start","","The start of the arc in radians",31,null],[12,"end","","The end of the arc in radians",31,null],[12,"resolution","","The resolution for the arc.",31,null],[11,"clone","","",31,{"inputs":[{"name":"circlearc"}],"output":{"name":"circlearc"}}],[11,"new","","Creates a new arc",31,{"inputs":[{"name":"circlearc"},{"name":"color"},{"name":"radius"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"circlearc"}}],[11,"color","","Sets the arcs color.",31,{"inputs":[{"name":"circlearc"},{"name":"color"}],"output":{"name":"self"}}],[11,"radius","","Sets the radius of the arc (Thickness of the arc, not the radius of the circle it wraps)",31,{"inputs":[{"name":"circlearc"},{"name":"radius"}],"output":{"name":"self"}}],[11,"start","","Sets the start of the arc (in radians).",31,{"inputs":[{"name":"circlearc"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"end","","Sets the end of the arc (in radians).",31,{"inputs":[{"name":"circlearc"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"resolution","","Sets the resolution of the arcs smoothness.",31,{"inputs":[{"name":"circlearc"},{"name":"resolution"}],"output":{"name":"self"}}],[11,"draw","","Draws the arc.",31,{"inputs":[{"name":"circlearc"},{"name":"r"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"ellipse","graphics","Draw ellipse",null,null],[3,"Border","graphics::ellipse","Ellipse border",null,null],[12,"color","","The border color",32,null],[12,"radius","","The border radius",32,null],[3,"Ellipse","","An ellipse with filled color",null,null],[12,"color","","The ellipse color",33,null],[12,"border","","The ellipse border",33,null],[12,"resolution","","The resolution for the shape, 360 degrees.",33,null],[11,"clone","","",32,{"inputs":[{"name":"border"}],"output":{"name":"border"}}],[11,"clone","","",33,{"inputs":[{"name":"ellipse"}],"output":{"name":"ellipse"}}],[11,"new","","Creates a new ellipse",33,{"inputs":[{"name":"ellipse"},{"name":"color"}],"output":{"name":"ellipse"}}],[11,"new_border","","Creates a new ellipse border",33,{"inputs":[{"name":"ellipse"},{"name":"color"},{"name":"radius"}],"output":{"name":"ellipse"}}],[11,"color","","Sets ellipse color.",33,{"inputs":[{"name":"ellipse"},{"name":"color"}],"output":{"name":"self"}}],[11,"border","","Sets ellipse border.",33,{"inputs":[{"name":"ellipse"},{"name":"border"}],"output":{"name":"self"}}],[11,"maybe_border","","Sets optional ellipse border.",33,{"inputs":[{"name":"ellipse"},{"name":"option"}],"output":{"name":"self"}}],[11,"resolution","","Sets resolution of the ellipse smoothness.",33,{"inputs":[{"name":"ellipse"},{"name":"resolution"}],"output":{"name":"self"}}],[11,"draw","","Draws the ellipse.",33,{"inputs":[{"name":"ellipse"},{"name":"r"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"rectangle","graphics","Draw rectangle",null,null],[3,"Border","graphics::rectangle","The border of the rectangle",null,null],[12,"color","","The color of the border",34,null],[12,"radius","","The radius of the border",34,null],[3,"Rectangle","","A filled rectangle",null,null],[12,"color","","The rectangle color",35,null],[12,"shape","","The roundness of the rectangle",35,null],[12,"border","","The border",35,null],[4,"Shape","","The shape of the rectangle",null,null],[13,"Square","","Square corners",36,null],[13,"Round","","Round corners, with resolution per corner.",36,null],[13,"Bevel","","Bevel corners",36,null],[5,"centered","","Use x, y, half-width, half-height",null,{"inputs":[{"name":"rectangle"}],"output":{"name":"rectangle"}}],[5,"centered_square","","Use centered square",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[5,"square","","Use square with x, y in upper left corner",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[11,"clone","","",36,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"clone","","",34,{"inputs":[{"name":"border"}],"output":{"name":"border"}}],[11,"clone","","",35,{"inputs":[{"name":"rectangle"}],"output":{"name":"rectangle"}}],[11,"new","","Creates a new rectangle.",35,{"inputs":[{"name":"rectangle"},{"name":"color"}],"output":{"name":"rectangle"}}],[11,"new_round","","Creates a new round rectangle.",35,{"inputs":[{"name":"rectangle"},{"name":"color"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"new_border","","Creates a new rectangle border.",35,{"inputs":[{"name":"rectangle"},{"name":"color"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"new_round_border","","Creates a new round rectangle border.",35,{"inputs":[{"name":"rectangle"},{"name":"color"},{"name":"radius"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"color","","Sets color.",35,{"inputs":[{"name":"rectangle"},{"name":"color"}],"output":{"name":"self"}}],[11,"shape","","Sets shape.",35,{"inputs":[{"name":"rectangle"},{"name":"shape"}],"output":{"name":"self"}}],[11,"border","","Sets border.",35,{"inputs":[{"name":"rectangle"},{"name":"border"}],"output":{"name":"self"}}],[11,"maybe_border","","Sets optional border.",35,{"inputs":[{"name":"rectangle"},{"name":"option"}],"output":{"name":"self"}}],[11,"draw","","Draws the rectangle",35,{"inputs":[{"name":"rectangle"},{"name":"r"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"image","graphics","Draw an image",null,null],[3,"Image","graphics::image","An image",null,null],[12,"color","","The color",37,null],[12,"rectangle","","The rectangle to draw image inside",37,null],[12,"source_rectangle","","The image source rectangle",37,null],[5,"draw_many","","Draws many images.",null,null],[11,"clone","","",37,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"new","","Creates a new image",37,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"new_colored","","Creates a new colored image",37,{"inputs":[{"name":"image"},{"name":"color"}],"output":{"name":"image"}}],[11,"color","","Sets color.",37,{"inputs":[{"name":"image"},{"name":"color"}],"output":{"name":"self"}}],[11,"maybe_color","","Sets optional color.",37,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"self"}}],[11,"rect","","Sets rectangle.",37,{"inputs":[{"name":"image"},{"name":"r"}],"output":{"name":"self"}}],[11,"maybe_rect","","Sets optional rectangle.",37,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"self"}}],[11,"src_rect","","Sets source rectangle.",37,{"inputs":[{"name":"image"},{"name":"sourcerectangle"}],"output":{"name":"self"}}],[11,"maybe_src_rect","","Sets optional source rectangle.",37,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"self"}}],[11,"draw","","Draws the image.",37,null],[0,"types","graphics","Contains type aliases used in this library",null,null],[6,"Area","graphics::types","The type used for area.",null,null],[6,"Color","","[red, green, blue, alpha]",null,null],[6,"ColorComponent","","The type used for color component.",null,null],[6,"Line","","[x1, y1, x2, y2]",null,null],[6,"SourceRectangle","","[x, y, w, h]",null,null],[6,"Polygon","","[p0, p1, ...]",null,null],[6,"Polygons","","A slice of polygons.",null,null],[6,"Radius","","The type used for radius.",null,null],[6,"Resolution","","The type used for resolution.",null,null],[6,"Ray","","[x, y, dir_x, dir_y]",null,null],[6,"Rectangle","","[x, y, w, h]",null,null],[6,"Triangle","","[x1, y1, x2, y2, x3, y3]",null,null],[6,"Width","","The type used for width.",null,null],[6,"FontSize","","The type used for font size.",null,null],[0,"modular_index","graphics","Helper functions for computing modular index safely.",null,null],[5,"offset","graphics::modular_index","Computes modular offset safely for indices.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"isize"}],"output":{"name":"usize"}}],[5,"previous","","Computes previous modular index safely.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[5,"next","","Computes next modular index safely.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[0,"text","graphics","Draw text",null,null],[3,"Text","graphics::text","Renders text",null,null],[12,"color","","The color",38,null],[12,"font_size","","The font size",38,null],[11,"clone","","",38,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"new","","Creates a new text with black color",38,{"inputs":[{"name":"text"},{"name":"fontsize"}],"output":{"name":"text"}}],[11,"colored","","Creates a new colored text",38,{"inputs":[{"name":"text"},{"name":"color"},{"name":"fontsize"}],"output":{"name":"text"}}],[11,"draw","","Draws text with a character cache",38,{"inputs":[{"name":"text"},{"name":"str"},{"name":"c"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"triangulation","graphics","Methods for converting shapes into triangles.",null,null],[5,"tx","graphics::triangulation","Transformed x coordinate as f32.",null,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"f32"}}],[5,"ty","","Transformed y coordinate as f32.",null,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"f32"}}],[5,"with_lerp_polygons_tri_list","","Streams tweened polygons using linear interpolation.",null,{"inputs":[{"name":"matrix2d"},{"name":"polygons"},{"name":"scalar"},{"name":"f"}],"output":null}],[5,"with_ellipse_tri_list","","Streams an ellipse specified by a resolution.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"f"}],"output":null}],[5,"with_round_border_line_tri_list","","Streams a round border line.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"line"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_round_rectangle_tri_list","","Streams a round rectangle.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"stream_polygon_tri_list","","Streams a polygon into tri list.\nUses buffers that fit inside L1 cache.",null,{"inputs":[{"name":"matrix2d"},{"name":"e"},{"name":"f"}],"output":null}],[5,"with_ellipse_border_tri_list","","Streams an ellipse border specified by a resolution.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_arc_tri_list","","Streams an arc between the two radian boundaries.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_round_rectangle_border_tri_list","","Streams a round rectangle border.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"stream_quad_tri_list","","Streams a quad into tri list.",null,{"inputs":[{"name":"matrix2d"},{"name":"e"},{"name":"f"}],"output":null}],[5,"with_polygon_tri_list","","Splits polygon into convex segments.\nCreate a buffer that fits into L1 cache with 1KB overhead.",null,{"inputs":[{"name":"matrix2d"},{"name":"polygon"},{"name":"f"}],"output":null}],[5,"rect_tri_list_xy","","Creates triangle list vertices from rectangle.",null,null],[5,"rect_border_tri_list_xy","","Creates triangle list vertices from rectangle.",null,null],[5,"rect_tri_list_uv","","Creates triangle list texture coords from image.",null,null],[0,"math","graphics","Various methods for computing with vectors.",null,null],[5,"multiply","graphics::math","Multiplies two matrices.",null,null],[5,"dot","","Computes the dot product.",null,null],[5,"cross","","Computes the cross product.",null,null],[5,"add","","Adds two vectors.",null,null],[5,"sub","","Subtracts 'b' from 'a'.",null,null],[5,"cast","","Converts to another vector type.",null,null],[5,"mul","","Multiplies two vectors component wise.",null,null],[5,"mul_scalar","","Multiplies the vector with a scalar.",null,null],[5,"square_len","","Computes the square length of a vector.",null,null],[5,"transform_pos","","Transforms a 2D position through matrix.",null,null],[5,"transform_vec","","Transforms a 2D vector through matrix.",null,null],[5,"perp","","Creates a perpendicular vector.",null,null],[5,"abs_transform","","Transforms from normalized to absolute coordinates.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"translate","","Creates a translation matrix.",null,{"inputs":[{"name":"vec2d"}],"output":{"name":"matrix2d"}}],[5,"rotate_radians","","Creates a rotation matrix.",null,{"inputs":[{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"orient","","Orients x axis to look at point.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"scale","","Create a scale matrix.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"shear","","Create a shear matrix.",null,{"inputs":[{"name":"vec2d"}],"output":{"name":"matrix2d"}}],[5,"identity","","Create an identity matrix.",null,{"inputs":[],"output":{"name":"matrix2d"}}],[5,"get_scale","","Extract scale information from matrix.",null,{"inputs":[{"name":"matrix2d"}],"output":{"name":"vec2d"}}],[5,"separation","","Compute the shortest vector from point to ray.\nA ray stores starting point and directional vector.",null,{"inputs":[{"name":"ray"},{"name":"vec2d"}],"output":{"name":"vec2d"}}],[5,"least_separation_4","","Returns the least separation out of four.\nEach seperation can be computed using `separation` function.\nThe separation returned can be used\nto solve collision of rectangles.",null,{"inputs":[{"name":"vec2d"},{"name":"vec2d"},{"name":"vec2d"},{"name":"vec2d"}],"output":{"name":"vec2d"}}],[5,"margin_rectangle","","Shrinks a rectangle by a factor on all sides.",null,{"inputs":[{"name":"rectangle"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[5,"relative_rectangle","","Computes a relative rectangle using the rectangle as a tile.",null,{"inputs":[{"name":"rectangle"},{"name":"vec2d"}],"output":{"name":"rectangle"}}],[5,"overlap_rectangle","","Computes overlap between two rectangles.\nThe area of the overlapping rectangle is positive.\nA shared edge or corner is not considered overlap.",null,{"inputs":[{"name":"rectangle"},{"name":"rectangle"}],"output":{"name":"option"}}],[5,"relative_source_rectangle","","Computes a relative source rectangle using\nthe source rectangle as a tile.",null,{"inputs":[{"name":"sourcerectangle"},{"name":"i32"},{"name":"i32"}],"output":{"name":"sourcerectangle"}}],[5,"modular_offset","","Computes modular offset safely for numbers.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"area_centroid","","Computes the area and centroid of a simple polygon.",null,null],[5,"area","","Computes area of a simple polygon.",null,{"inputs":[{"name":"polygon"}],"output":{"name":"scalar"}}],[5,"centroid","","Computes centroid of a simple polygon.",null,{"inputs":[{"name":"polygon"}],"output":{"name":"vec2d"}}],[5,"line_side","","Returns a number that tells which side it is relative to a line.",null,{"inputs":[{"name":"line"},{"name":"vec2d"}],"output":{"name":"scalar"}}],[5,"inside_triangle","","Returns true if point is inside triangle.",null,{"inputs":[{"name":"triangle"},{"name":"vec2d"}],"output":{"name":"bool"}}],[5,"triangle_face","","Returns true if triangle is clockwise.",null,{"inputs":[{"name":"triangle"}],"output":{"name":"bool"}}],[5,"to_barycentric","","Transforms from cartesian coordinates to barycentric.",null,{"inputs":[{"name":"triangle"},{"name":"vec2d"}],"output":{"name":"vec3d"}}],[5,"from_barycentric","","Transforms from barycentric coordinates to cartesian.",null,{"inputs":[{"name":"triangle"},{"name":"vec3d"}],"output":{"name":"vec2d"}}],[5,"hsv","","Transform color with hue, saturation and value.",null,{"inputs":[{"name":"color"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[6,"Scalar","","The type used for scalars.",null,null],[6,"Matrix2d","","The type used for matrices.",null,null],[6,"Vec2d","","The type used for 2D vectors.",null,null],[6,"Vec3d","","The type used for 3D vectors.",null,null],[0,"deform","graphics","Least square deforming of a 2D grid.",null,null],[3,"DeformGrid","graphics::deform","Represents a deformed grid.",null,null],[12,"cols","","The number of columns in the grid.",39,null],[12,"rows","","The number of rows in the grid.",39,null],[12,"rect","","The grid undeformed, which is a plain rectangle.",39,null],[12,"vertices","","The vertices, deformed.",39,null],[12,"indices","","The triangle indices.",39,null],[12,"texture_coords","","The texture coordinates.",39,null],[12,"ps","","Initial position of control points.",39,null],[12,"qs","","The current position of control points.",39,null],[12,"wis","","A weight computation buffer, one for each control point.",39,null],[11,"clone","","",39,{"inputs":[{"name":"deformgrid"}],"output":{"name":"deformgrid"}}],[11,"new","","Creates a new DeformGrid.",39,{"inputs":[{"name":"deformgrid"},{"name":"rectangle"},{"name":"usize"},{"name":"usize"}],"output":{"name":"deformgrid"}}],[11,"set_current","","Sets current control position.",39,{"inputs":[{"name":"deformgrid"},{"name":"usize"},{"name":"vec2d"}],"output":null}],[11,"set_original","","Sets original control position.",39,{"inputs":[{"name":"deformgrid"},{"name":"usize"},{"name":"vec2d"}],"output":null}],[11,"reset_control_points","","Removes all control points.",39,{"inputs":[{"name":"deformgrid"}],"output":null}],[11,"reset_vertices_and_texture_coords","","Sets vertices and texture coords back to default.",39,{"inputs":[{"name":"deformgrid"}],"output":null}],[11,"hit","","Finds original coordinate.\nIf the deformed grid is overlapping itself, multiple hits might occur.\nReturns the first hit it finds.",39,{"inputs":[{"name":"deformgrid"},{"name":"vec2d"}],"output":{"name":"option"}}],[11,"draw_image","","Draws deformed image.",39,null],[11,"add_control_point","","Adds a control point, in original coordinates.",39,{"inputs":[{"name":"deformgrid"},{"name":"vec2d"}],"output":null}],[11,"draw_vertical_lines","","Draw vertical grid lines.",39,{"inputs":[{"name":"deformgrid"},{"name":"line"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"draw_horizontal_lines","","Draw horizontal grid lines.",39,{"inputs":[{"name":"deformgrid"},{"name":"line"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"update","","Updates the grid, by deforming the vertices.",39,{"inputs":[{"name":"deformgrid"}],"output":null}],[0,"grid","graphics","A flat grid with square cells.",null,null],[3,"Grid","graphics::grid","Represents a flat grid with square cells.",null,null],[12,"cols","","Number of columns.",40,null],[12,"rows","","Number of rows.",40,null],[12,"units","","The width and height of each grid cell.",40,null],[3,"GridCells","","Iterates through the cells of a grid as (u32, u32).",null,null],[11,"clone","","",40,{"inputs":[{"name":"grid"}],"output":{"name":"grid"}}],[11,"clone","","",41,{"inputs":[{"name":"gridcells"}],"output":{"name":"gridcells"}}],[11,"draw","","Draws the grid.",40,{"inputs":[{"name":"grid"},{"name":"line"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"cells","","Get a GridIterator for the grid",40,{"inputs":[{"name":"grid"}],"output":{"name":"gridcells"}}],[11,"next","","",41,{"inputs":[{"name":"gridcells"}],"output":{"name":"option"}}],[0,"radians","graphics","Reexport radians helper trait from vecmath",null,null],[8,"Radians","graphics::radians","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",42,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_180","","Returns radians corresponding to 180 degrees.",42,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_360","","Returns radians corresponding to 360 degrees.",42,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",42,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"rad_to_deg","","Convert a value to degrees from radians.\nEquivalent to ```value * (180 / π)```.",42,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[7,"BACK_END_MAX_VERTEX_COUNT","graphics","Any triangulation method called on the back-end\nnever exceeds this number of vertices.\nThis can be used to initialize buffers that fit the chunk size.",null,null],[8,"Graphics","","Implemented by all graphics back-ends.",null,null],[16,"Texture","","The texture type associated with the back-end.",43,null],[10,"clear_color","","Clears background with a color.",43,null],[10,"clear_stencil","","Clears stencil buffer with a value.",43,{"inputs":[{"name":"graphics"},{"name":"u8"}],"output":null}],[10,"tri_list","","Renders list of 2d triangles.",43,null],[10,"tri_list_uv","","Renders list of 2d triangles.",43,null],[8,"SourceRectangled","","Should be implemented by contexts that\nhave source rectangle information.",null,null],[10,"src_rect","","Adds a source rectangle.",44,{"inputs":[{"name":"sourcerectangled"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[10,"src_rel","","Moves to a relative source rectangle using\nthe current source rectangle as tile.",44,{"inputs":[{"name":"sourcerectangled"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[10,"src_flip_h","","Flips the source rectangle horizontally.",44,{"inputs":[{"name":"sourcerectangled"}],"output":{"name":"self"}}],[10,"src_flip_v","","Flips the source rectangle vertically.",44,{"inputs":[{"name":"sourcerectangled"}],"output":{"name":"self"}}],[10,"src_flip_hv","","Flips the source rectangle horizontally and vertically.",44,{"inputs":[{"name":"sourcerectangled"}],"output":{"name":"self"}}],[8,"Rectangled","","Should be implemented by contexts that have rectangle information.",null,null],[10,"margin","","Shrinks the current rectangle equally by all sides.",45,{"inputs":[{"name":"rectangled"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"expand","","Expands the current rectangle equally by all sides.",45,{"inputs":[{"name":"rectangled"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"rel","","Moves to a relative rectangle using the current rectangle as tile.",45,{"inputs":[{"name":"rectangled"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[8,"Transformed","","Implemented by contexts that can transform.",null,null],[10,"append_transform","","Appends transform to the current one.",46,{"inputs":[{"name":"transformed"},{"name":"matrix2d"}],"output":{"name":"self"}}],[10,"prepend_transform","","Prepends transform to the current one.",46,{"inputs":[{"name":"transformed"},{"name":"matrix2d"}],"output":{"name":"self"}}],[10,"trans","","Translate x an y in local coordinates.",46,{"inputs":[{"name":"transformed"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rot_deg","","Rotates degrees in local coordinates.",46,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"rot_rad","","Rotate radians in local coordinates.",46,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"orient","","Orients x axis to look at point locally.",46,{"inputs":[{"name":"transformed"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"scale","","Scales in local coordinates.",46,{"inputs":[{"name":"transformed"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"zoom","","Scales in both directions in local coordinates.",46,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"flip_v","","Flips vertically in local coordinates.",46,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_h","","Flips horizontally in local coordinates.",46,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",46,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[10,"shear","","Shears in local coordinates.",46,{"inputs":[{"name":"transformed"},{"name":"vec2d"}],"output":{"name":"self"}}],[8,"Colored","","Implemented by contexts that contains color.",null,null],[10,"mul_rgba","","Multiplies with red, green, blue and alpha values.",47,{"inputs":[{"name":"colored"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"tint","","Mixes the current color with white.",47,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"shade","","Mixes the current color with black.",47,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_deg","","Rotates hue by degrees.",47,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[10,"hue_rad","","Rotates hue by radians.",47,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"src_rect","graphics::types","",48,{"inputs":[{"name":"sourcerectangle"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[11,"src_rel","","",48,{"inputs":[{"name":"sourcerectangle"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[11,"src_flip_h","","",48,{"inputs":[{"name":"sourcerectangle"}],"output":{"name":"self"}}],[11,"src_flip_v","","",48,{"inputs":[{"name":"sourcerectangle"}],"output":{"name":"self"}}],[11,"src_flip_hv","","",48,{"inputs":[{"name":"sourcerectangle"}],"output":{"name":"self"}}],[11,"expand","graphics","Expands the current rectangle equally by all sides.",45,{"inputs":[{"name":"rectangled"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"margin","graphics::types","",49,{"inputs":[{"name":"rectangle"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rel","","",49,{"inputs":[{"name":"rectangle"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rot_deg","graphics","Rotates degrees in local coordinates.",46,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"zoom","","Scales in both directions in local coordinates.",46,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"flip_v","","Flips vertically in local coordinates.",46,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_h","","Flips horizontally in local coordinates.",46,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",46,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"append_transform","graphics::math","",50,{"inputs":[{"name":"matrix2d"},{"name":"matrix2d"}],"output":{"name":"self"}}],[11,"prepend_transform","","",50,{"inputs":[{"name":"matrix2d"},{"name":"matrix2d"}],"output":{"name":"self"}}],[11,"trans","","",50,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rot_rad","","",50,{"inputs":[{"name":"matrix2d"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"orient","","",50,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"scale","","",50,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"shear","","",50,{"inputs":[{"name":"matrix2d"},{"name":"vec2d"}],"output":{"name":"self"}}],[11,"append_transform","graphics::context","",27,{"inputs":[{"name":"context"},{"name":"matrix2d"}],"output":{"name":"self"}}],[11,"prepend_transform","","",27,{"inputs":[{"name":"context"},{"name":"matrix2d"}],"output":{"name":"self"}}],[11,"trans","","",27,{"inputs":[{"name":"context"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rot_rad","","",27,{"inputs":[{"name":"context"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"orient","","",27,{"inputs":[{"name":"context"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"scale","","",27,{"inputs":[{"name":"context"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"shear","","",27,{"inputs":[{"name":"context"},{"name":"vec2d"}],"output":{"name":"self"}}],[11,"tint","graphics","Mixes the current color with white.",47,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"shade","","Mixes the current color with black.",47,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_deg","","Rotates hue by degrees.",47,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"mul_rgba","graphics::types","",51,{"inputs":[{"name":"color"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_rad","","",51,{"inputs":[{"name":"color"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"mul_rgba","graphics::line","",29,{"inputs":[{"name":"line"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_rad","","",29,{"inputs":[{"name":"line"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"mul_rgba","graphics::ellipse","",33,{"inputs":[{"name":"ellipse"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_rad","","",33,{"inputs":[{"name":"ellipse"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"mul_rgba","graphics::rectangle","",35,{"inputs":[{"name":"rectangle"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_rad","","",35,{"inputs":[{"name":"rectangle"},{"name":"colorcomponent"}],"output":{"name":"self"}}]],"paths":[[8,"ImageSize"],[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Primitive"],[3,"MultiSample"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Rect"],[3,"Mask"],[3,"Mirror"],[3,"ClearData"],[3,"DrawState"],[4,"BlendPreset"],[3,"Viewport"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[3,"Line"],[4,"Shape"],[3,"CircleArc"],[3,"Border"],[3,"Ellipse"],[3,"Border"],[3,"Rectangle"],[4,"Shape"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GridCells"],[8,"Radians"],[8,"Graphics"],[8,"SourceRectangled"],[8,"Rectangled"],[8,"Transformed"],[8,"Colored"],[6,"SourceRectangle"],[6,"Rectangle"],[6,"Matrix2d"],[6,"Color"]]};
searchIndex['enum_primitive'] = {"items":[[0,"","enum_primitive","This crate exports a macro `enum_from_primitive!` that wraps an\n`enum` declaration and automatically adds an implementation of\n`num::FromPrimitive` (reexported here), to allow conversion from\nprimitive integers to the enum.  It therefore provides an\nalternative to the built-in `#[derive(FromPrimitive)]`, which\nrequires the unstable `std::num::FromPrimitive` and is disabled in\nRust 1.0.",null,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[14,"enum_from_primitive_impl_ty!","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive_impl!","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive!","","Wrap this macro around an `enum` declaration to get an\nautomatically generated implementation of `num::FromPrimitive`.",null,null]],"paths":[[8,"FromPrimitive"]]};
searchIndex['num'] = {"items":[[0,"","num","Simple numerics.",null,null],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[0,"bigint","","A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).",null,null],[3,"BigUint","num::bigint","A big unsigned integer type.",null,null],[3,"RadixFmt","","",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num::bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num::bigint","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,{"inputs":[{"name":"tobiguint"}],"output":{"name":"option"}}],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,{"inputs":[{"name":"tobigint"}],"output":{"name":"option"}}],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"biguint"}}],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"biguint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"biguint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"eq","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"hash","","",5,{"inputs":[{"name":"biguint"},{"name":"h"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",5,{"inputs":[{"name":"biguint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"shl","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"shr","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"is_zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"neg","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"checked_add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"div_rem","","",5,null],[11,"div_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"to_i64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"biguint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"biguint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_biguint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_biguint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",7,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"usize"}}],[11,"decode","","",0,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"neg","","Negate Sign value.",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"bigint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"bigint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"eq","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,{"inputs":[{"name":"bigint"},{"name":"h"}],"output":null}],[11,"from_str","","",6,{"inputs":[{"name":"bigint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"shr","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_positive","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_negative","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"neg","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"div_rem","","",6,null],[11,"div_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"to_i64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_u64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"from_i64","","",6,{"inputs":[{"name":"bigint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"bigint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_bigint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_bigint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"parsebiginterror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[0,"complex","num","Complex numbers.",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",8,null],[12,"im","","Imaginary portion of the complex number",8,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"clone","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"eq","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"decode","","",8,{"inputs":[{"name":"complex"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"complex"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Create a new Complex",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",8,null],[11,"from_polar","","Convert a polar representation into a complex number.",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"neg","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"integer","num","Integer trait and functions.",null,null],[5,"div_rem","num::integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[0,"iter","num","External iterators for generic mathematics",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",10,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"next_back","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"rangestep"}}],[11,"next","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"option"}}],[0,"traits","num","Numeric traits for generic mathematics",null,null],[3,"ParseFloatError","num::traits","",null,null],[12,"kind","","",14,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",15,null],[13,"Invalid","","",15,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","Parse error for `from_str_radix`",16,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",16,{"inputs":[{"name":"num"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",17,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",17,{"inputs":[{"name":"zero"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",18,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",19,{"inputs":[{"name":"signed"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",22,{"inputs":[{"name":"checkedadd"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",23,{"inputs":[{"name":"checkedsub"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",24,{"inputs":[{"name":"checkedmul"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",25,{"inputs":[{"name":"checkeddiv"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",29,{"inputs":[{"name":"numcast"},{"name":"t"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",30,{"inputs":[{"name":"float"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",30,{"inputs":[{"name":"float"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",30,{"inputs":[{"name":"float"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",30,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",30,null],[0,"rational","num","Rational numbers",null,null],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"clone","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"decode","","",31,{"inputs":[{"name":"ratio"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"ratio"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_integer","","Creates a ratio representing the integer `t`.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"numer","","Gets an immutable reference to the numerator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"denom","","Gets an immutable reference to the denominator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"reduced","","Returns a `reduce`d copy of self.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"recip","","Returns the reciprocal.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"floor","","Rounds towards minus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"ceil","","Rounds towards plus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"trunc","","Rounds towards zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"fract","","Returns the fractional part of a number.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"pow","","Raises the ratio to the power of an exponent",31,{"inputs":[{"name":"ratio"},{"name":"i32"}],"output":{"name":"ratio"}}],[11,"from_float","","Converts a float into a rational number.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"option"}}],[11,"eq","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"lt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ordering"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"neg","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"one","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",31,{"inputs":[{"name":"ratio"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"abs_sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"signum","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_positive","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"is_negative","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Parses `numer/denom` or just `numer`.",31,{"inputs":[{"name":"ratio"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"parseratioerror"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"str"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"],[3,"RadixFmt"],[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"Float"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"cow"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",17,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",20,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",18,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"decodererror"},{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",29,{"inputs":[{"name":"parsererror"},{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",35,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",35,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",35,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",35,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",35,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",35,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",35,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",35,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",35,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",35,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",35,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",35,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",35,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",27,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",27,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",32,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",36,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"next","","",37,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",39,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",4,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",5,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",42,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",42,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",43,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",44,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",44,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",44,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",44,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",44,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",44,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",44,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",44,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",44,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",44,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",44,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",44,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",44,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",44,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['wayland_kbd'] = {"items":[[0,"","wayland_kbd","Keyboard mapping utility for `wayland-client` using libxkbcommon.",null,null],[3,"MappedKeyboard","","A wayland keyboard mapped to its keymap",null,null],[3,"KbState","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",0,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",0,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",0,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",0,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",0,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",0,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",0,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",0,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",0,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",0,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",0,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",1,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",2,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",2,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",2,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",2,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",2,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",2,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",2,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",2,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",2,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",2,null],[11,"eq","","",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",2,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",2,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",3,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",3,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",3,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",3,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",3,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",3,null],[11,"eq","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",3,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",4,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",6,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",6,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",6,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",6,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",7,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",7,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",7,null],[11,"clone","","",8,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",8,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",8,null],[11,"fmt","","",9,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",10,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",10,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",11,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",12,null],[11,"eq","","",13,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",15,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num","",16,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",17,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",17,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",18,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",19,null],[11,"fmt","","",19,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",19,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",19,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",20,null],[11,"get","","Dereferences the content.",20,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",20,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",20,null],[11,"fmt","","",20,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",21,null],[11,"eq","","",21,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",21,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",21,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",22,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",22,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",23,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",24,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",25,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",26,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",26,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",26,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","wayland_kbd","",27,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",27,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",27,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",27,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",27,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",27,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",27,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",28,null],[11,"fmt","","",28,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",28,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",29,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",30,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",31,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",32,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",33,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",29,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",29,null],[11,"swap","","Stores a value into the bool, returning the old value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",30,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",30,null],[11,"swap","","Stores a value into the isize, returning the old value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",31,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",31,null],[11,"swap","","Stores a value into the usize, returning the old value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",32,null],[11,"load","","Loads a value from the pointer.",32,null],[11,"store","","Stores a value into the pointer.",32,null],[11,"swap","","Stores a value into the pointer, returning the old value.",32,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",32,null],[11,"fmt","","",31,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",34,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",34,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",34,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",34,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",34,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",34,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",34,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",36,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",36,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",36,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",36,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",36,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",37,null],[11,"clone","","",37,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",38,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",38,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",38,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",38,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",39,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",39,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",40,null],[11,"deref","","",39,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",39,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",41,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",41,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",41,null],[11,"clone","core::char","",42,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",43,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",42,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",44,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",45,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",44,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",46,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",46,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"next_back","","",46,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",47,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",47,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"next_back","","",47,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",48,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",48,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"clone","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",49,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",50,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",50,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"next_back","","",50,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",51,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"next_back","","",51,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",52,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",52,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"next_back","","",52,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",53,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",53,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"next_back","","",53,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",54,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"nth","","",54,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",54,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",54,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",55,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",55,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",55,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",55,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",55,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",55,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",55,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",56,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"clone","","",57,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",57,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"clone","","",58,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",58,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",58,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",58,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",58,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"clone","","",59,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",59,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",59,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"clone","","",60,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",60,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"clone","","",61,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",61,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",62,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",63,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",63,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",64,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",24,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",23,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",64,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"clone","","",65,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",65,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"next_back","","",65,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next","core::ops","",23,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",23,null],[11,"next_back","","",23,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",66,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",66,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",68,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",68,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",68,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",69,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",69,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",70,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",70,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",71,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",72,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",72,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",0,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",73,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",74,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",75,null],[11,"fmt","","",75,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",75,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",75,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",75,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",75,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",75,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",75,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",75,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",75,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",75,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",75,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",75,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",75,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",75,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",75,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",75,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",75,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",75,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",75,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",75,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",75,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",77,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",78,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",75,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",79,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",80,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",81,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",82,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",83,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",84,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",85,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",86,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",87,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",88,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",87,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",88,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",87,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",88,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",87,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",88,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",87,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",88,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",89,null],[11,"next","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"count","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",89,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",90,null],[11,"next","","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"count","","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",90,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",91,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next_back","","",91,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",91,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",92,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",92,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next_back","","",92,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",93,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next","","",94,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next","","",95,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next","","",96,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next","","",97,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"clone","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"count","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",98,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"count","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",99,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",100,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"count","","",100,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",100,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",100,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",100,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",101,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",101,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",102,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",103,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",102,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",102,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",102,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",107,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",108,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",109,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",110,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",111,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",111,null],[11,"matching","","",111,null],[11,"use_early_reject","","",112,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",112,null],[11,"matching","","",112,null],[11,"eq","core::str","",113,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",113,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",114,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",114,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",114,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",115,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",116,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",116,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",117,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",118,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",118,null],[11,"call_mut","","",118,null],[11,"call_once","","",118,null],[11,"next","","",117,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",117,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",119,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",120,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",120,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",121,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",120,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",121,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",122,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",123,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",123,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",122,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",123,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",124,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",125,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",126,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",127,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",128,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",129,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",128,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",129,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",131,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",132,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",131,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",132,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",133,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"next_back","","",133,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",135,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",135,null],[11,"call_mut","","",135,null],[11,"call_once","","",135,null],[11,"next","","",134,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",134,null],[11,"next_back","","",134,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",137,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",137,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",137,null],[11,"finish","","",137,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",137,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",137,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",138,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",139,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",140,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",141,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",142,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",143,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",144,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",145,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",146,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",146,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",147,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",147,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",147,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",148,null],[11,"entry","","Adds a new entry to the set output.",149,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",149,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",149,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",150,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",150,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",150,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",151,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",151,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",151,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",152,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",153,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",154,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",155,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",156,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",157,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",158,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",159,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",160,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",160,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",161,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",161,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",161,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",161,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",161,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",161,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",161,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",161,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",161,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",21,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",34,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get_one_sym","wayland_kbd","Tries to match this keycode as a key symbol according to current keyboard state.",162,{"inputs":[{"name":"kbstate"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"get_utf8","","Tries to retrieve the generated keycode as an UTF8 sequence",162,{"inputs":[{"name":"kbstate"},{"name":"u32"}],"output":{"name":"option"}}],[11,"drop","","",162,{"inputs":[{"name":"kbstate"}],"output":null}],[11,"new","","Creates a mapped keyboard from a regular wayland keyboard.",163,{"inputs":[{"name":"mappedkeyboard"},{"name":"keyboard"}],"output":{"name":"result"}}],[11,"release","","Releases the keyboard from this MappedKeyboard and returns it.",163,{"inputs":[{"name":"mappedkeyboard"}],"output":{"name":"keyboard"}}],[11,"set_key_action","","Sets the action to perform when a key is pressed or released.",163,{"inputs":[{"name":"mappedkeyboard"},{"name":"f"}],"output":null}],[11,"set_enter_action","","Defines the action to be executed when a surface gains keyboard focus.",163,{"inputs":[{"name":"mappedkeyboard"},{"name":"f"}],"output":null}],[11,"set_leave_action","","Defines the action to be executed when a surface loses keyboard focus.",163,{"inputs":[{"name":"mappedkeyboard"},{"name":"f"}],"output":null}],[0,"keysyms","","",null,null],[17,"XKB_KEY_VoidSymbol","wayland_kbd::keysyms","",null,null],[17,"XKB_KEY_BackSpace","","",null,null],[17,"XKB_KEY_Tab","","",null,null],[17,"XKB_KEY_Linefeed","","",null,null],[17,"XKB_KEY_Clear","","",null,null],[17,"XKB_KEY_Return","","",null,null],[17,"XKB_KEY_Pause","","",null,null],[17,"XKB_KEY_Scroll_Lock","","",null,null],[17,"XKB_KEY_Sys_Req","","",null,null],[17,"XKB_KEY_Escape","","",null,null],[17,"XKB_KEY_Delete","","",null,null],[17,"XKB_KEY_Multi_key","","",null,null],[17,"XKB_KEY_Codeinput","","",null,null],[17,"XKB_KEY_SingleCandidate","","",null,null],[17,"XKB_KEY_MultipleCandidate","","",null,null],[17,"XKB_KEY_PreviousCandidate","","",null,null],[17,"XKB_KEY_Kanji","","",null,null],[17,"XKB_KEY_Muhenkan","","",null,null],[17,"XKB_KEY_Henkan_Mode","","",null,null],[17,"XKB_KEY_Henkan","","",null,null],[17,"XKB_KEY_Romaji","","",null,null],[17,"XKB_KEY_Hiragana","","",null,null],[17,"XKB_KEY_Katakana","","",null,null],[17,"XKB_KEY_Hiragana_Katakana","","",null,null],[17,"XKB_KEY_Zenkaku","","",null,null],[17,"XKB_KEY_Hankaku","","",null,null],[17,"XKB_KEY_Zenkaku_Hankaku","","",null,null],[17,"XKB_KEY_Touroku","","",null,null],[17,"XKB_KEY_Massyo","","",null,null],[17,"XKB_KEY_Kana_Lock","","",null,null],[17,"XKB_KEY_Kana_Shift","","",null,null],[17,"XKB_KEY_Eisu_Shift","","",null,null],[17,"XKB_KEY_Eisu_toggle","","",null,null],[17,"XKB_KEY_Kanji_Bangou","","",null,null],[17,"XKB_KEY_Zen_Koho","","",null,null],[17,"XKB_KEY_Mae_Koho","","",null,null],[17,"XKB_KEY_Home","","",null,null],[17,"XKB_KEY_Left","","",null,null],[17,"XKB_KEY_Up","","",null,null],[17,"XKB_KEY_Right","","",null,null],[17,"XKB_KEY_Down","","",null,null],[17,"XKB_KEY_Prior","","",null,null],[17,"XKB_KEY_Page_Up","","",null,null],[17,"XKB_KEY_Next","","",null,null],[17,"XKB_KEY_Page_Down","","",null,null],[17,"XKB_KEY_End","","",null,null],[17,"XKB_KEY_Begin","","",null,null],[17,"XKB_KEY_Select","","",null,null],[17,"XKB_KEY_Print","","",null,null],[17,"XKB_KEY_Execute","","",null,null],[17,"XKB_KEY_Insert","","",null,null],[17,"XKB_KEY_Undo","","",null,null],[17,"XKB_KEY_Redo","","",null,null],[17,"XKB_KEY_Menu","","",null,null],[17,"XKB_KEY_Find","","",null,null],[17,"XKB_KEY_Cancel","","",null,null],[17,"XKB_KEY_Help","","",null,null],[17,"XKB_KEY_Break","","",null,null],[17,"XKB_KEY_Mode_switch","","",null,null],[17,"XKB_KEY_script_switch","","",null,null],[17,"XKB_KEY_Num_Lock","","",null,null],[17,"XKB_KEY_KP_Space","","",null,null],[17,"XKB_KEY_KP_Tab","","",null,null],[17,"XKB_KEY_KP_Enter","","",null,null],[17,"XKB_KEY_KP_F1","","",null,null],[17,"XKB_KEY_KP_F2","","",null,null],[17,"XKB_KEY_KP_F3","","",null,null],[17,"XKB_KEY_KP_F4","","",null,null],[17,"XKB_KEY_KP_Home","","",null,null],[17,"XKB_KEY_KP_Left","","",null,null],[17,"XKB_KEY_KP_Up","","",null,null],[17,"XKB_KEY_KP_Right","","",null,null],[17,"XKB_KEY_KP_Down","","",null,null],[17,"XKB_KEY_KP_Prior","","",null,null],[17,"XKB_KEY_KP_Page_Up","","",null,null],[17,"XKB_KEY_KP_Next","","",null,null],[17,"XKB_KEY_KP_Page_Down","","",null,null],[17,"XKB_KEY_KP_End","","",null,null],[17,"XKB_KEY_KP_Begin","","",null,null],[17,"XKB_KEY_KP_Insert","","",null,null],[17,"XKB_KEY_KP_Delete","","",null,null],[17,"XKB_KEY_KP_Equal","","",null,null],[17,"XKB_KEY_KP_Multiply","","",null,null],[17,"XKB_KEY_KP_Add","","",null,null],[17,"XKB_KEY_KP_Separator","","",null,null],[17,"XKB_KEY_KP_Subtract","","",null,null],[17,"XKB_KEY_KP_Decimal","","",null,null],[17,"XKB_KEY_KP_Divide","","",null,null],[17,"XKB_KEY_KP_0","","",null,null],[17,"XKB_KEY_KP_1","","",null,null],[17,"XKB_KEY_KP_2","","",null,null],[17,"XKB_KEY_KP_3","","",null,null],[17,"XKB_KEY_KP_4","","",null,null],[17,"XKB_KEY_KP_5","","",null,null],[17,"XKB_KEY_KP_6","","",null,null],[17,"XKB_KEY_KP_7","","",null,null],[17,"XKB_KEY_KP_8","","",null,null],[17,"XKB_KEY_KP_9","","",null,null],[17,"XKB_KEY_F1","","",null,null],[17,"XKB_KEY_F2","","",null,null],[17,"XKB_KEY_F3","","",null,null],[17,"XKB_KEY_F4","","",null,null],[17,"XKB_KEY_F5","","",null,null],[17,"XKB_KEY_F6","","",null,null],[17,"XKB_KEY_F7","","",null,null],[17,"XKB_KEY_F8","","",null,null],[17,"XKB_KEY_F9","","",null,null],[17,"XKB_KEY_F10","","",null,null],[17,"XKB_KEY_F11","","",null,null],[17,"XKB_KEY_L1","","",null,null],[17,"XKB_KEY_F12","","",null,null],[17,"XKB_KEY_L2","","",null,null],[17,"XKB_KEY_F13","","",null,null],[17,"XKB_KEY_L3","","",null,null],[17,"XKB_KEY_F14","","",null,null],[17,"XKB_KEY_L4","","",null,null],[17,"XKB_KEY_F15","","",null,null],[17,"XKB_KEY_L5","","",null,null],[17,"XKB_KEY_F16","","",null,null],[17,"XKB_KEY_L6","","",null,null],[17,"XKB_KEY_F17","","",null,null],[17,"XKB_KEY_L7","","",null,null],[17,"XKB_KEY_F18","","",null,null],[17,"XKB_KEY_L8","","",null,null],[17,"XKB_KEY_F19","","",null,null],[17,"XKB_KEY_L9","","",null,null],[17,"XKB_KEY_F20","","",null,null],[17,"XKB_KEY_L10","","",null,null],[17,"XKB_KEY_F21","","",null,null],[17,"XKB_KEY_R1","","",null,null],[17,"XKB_KEY_F22","","",null,null],[17,"XKB_KEY_R2","","",null,null],[17,"XKB_KEY_F23","","",null,null],[17,"XKB_KEY_R3","","",null,null],[17,"XKB_KEY_F24","","",null,null],[17,"XKB_KEY_R4","","",null,null],[17,"XKB_KEY_F25","","",null,null],[17,"XKB_KEY_R5","","",null,null],[17,"XKB_KEY_F26","","",null,null],[17,"XKB_KEY_R6","","",null,null],[17,"XKB_KEY_F27","","",null,null],[17,"XKB_KEY_R7","","",null,null],[17,"XKB_KEY_F28","","",null,null],[17,"XKB_KEY_R8","","",null,null],[17,"XKB_KEY_F29","","",null,null],[17,"XKB_KEY_R9","","",null,null],[17,"XKB_KEY_F30","","",null,null],[17,"XKB_KEY_R10","","",null,null],[17,"XKB_KEY_F31","","",null,null],[17,"XKB_KEY_R11","","",null,null],[17,"XKB_KEY_F32","","",null,null],[17,"XKB_KEY_R12","","",null,null],[17,"XKB_KEY_F33","","",null,null],[17,"XKB_KEY_R13","","",null,null],[17,"XKB_KEY_F34","","",null,null],[17,"XKB_KEY_R14","","",null,null],[17,"XKB_KEY_F35","","",null,null],[17,"XKB_KEY_R15","","",null,null],[17,"XKB_KEY_Shift_L","","",null,null],[17,"XKB_KEY_Shift_R","","",null,null],[17,"XKB_KEY_Control_L","","",null,null],[17,"XKB_KEY_Control_R","","",null,null],[17,"XKB_KEY_Caps_Lock","","",null,null],[17,"XKB_KEY_Shift_Lock","","",null,null],[17,"XKB_KEY_Meta_L","","",null,null],[17,"XKB_KEY_Meta_R","","",null,null],[17,"XKB_KEY_Alt_L","","",null,null],[17,"XKB_KEY_Alt_R","","",null,null],[17,"XKB_KEY_Super_L","","",null,null],[17,"XKB_KEY_Super_R","","",null,null],[17,"XKB_KEY_Hyper_L","","",null,null],[17,"XKB_KEY_Hyper_R","","",null,null],[17,"XKB_KEY_ISO_Lock","","",null,null],[17,"XKB_KEY_ISO_Level2_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Shift","","",null,null],[17,"XKB_KEY_ISO_Level3_Latch","","",null,null],[17,"XKB_KEY_ISO_Level3_Lock","","",null,null],[17,"XKB_KEY_ISO_Level5_Shift","","",null,null],[17,"XKB_KEY_ISO_Level5_Latch","","",null,null],[17,"XKB_KEY_ISO_Level5_Lock","","",null,null],[17,"XKB_KEY_ISO_Group_Shift","","",null,null],[17,"XKB_KEY_ISO_Group_Latch","","",null,null],[17,"XKB_KEY_ISO_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Next_Group","","",null,null],[17,"XKB_KEY_ISO_Next_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Prev_Group","","",null,null],[17,"XKB_KEY_ISO_Prev_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_First_Group","","",null,null],[17,"XKB_KEY_ISO_First_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Last_Group","","",null,null],[17,"XKB_KEY_ISO_Last_Group_Lock","","",null,null],[17,"XKB_KEY_ISO_Left_Tab","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Move_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Up","","",null,null],[17,"XKB_KEY_ISO_Partial_Line_Down","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Left","","",null,null],[17,"XKB_KEY_ISO_Partial_Space_Right","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Set_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Left","","",null,null],[17,"XKB_KEY_ISO_Release_Margin_Right","","",null,null],[17,"XKB_KEY_ISO_Release_Both_Margins","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Left","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Right","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Up","","",null,null],[17,"XKB_KEY_ISO_Fast_Cursor_Down","","",null,null],[17,"XKB_KEY_ISO_Continuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Discontinuous_Underline","","",null,null],[17,"XKB_KEY_ISO_Emphasize","","",null,null],[17,"XKB_KEY_ISO_Center_Object","","",null,null],[17,"XKB_KEY_ISO_Enter","","",null,null],[17,"XKB_KEY_dead_grave","","",null,null],[17,"XKB_KEY_dead_acute","","",null,null],[17,"XKB_KEY_dead_circumflex","","",null,null],[17,"XKB_KEY_dead_tilde","","",null,null],[17,"XKB_KEY_dead_perispomeni","","",null,null],[17,"XKB_KEY_dead_macron","","",null,null],[17,"XKB_KEY_dead_breve","","",null,null],[17,"XKB_KEY_dead_abovedot","","",null,null],[17,"XKB_KEY_dead_diaeresis","","",null,null],[17,"XKB_KEY_dead_abovering","","",null,null],[17,"XKB_KEY_dead_doubleacute","","",null,null],[17,"XKB_KEY_dead_caron","","",null,null],[17,"XKB_KEY_dead_cedilla","","",null,null],[17,"XKB_KEY_dead_ogonek","","",null,null],[17,"XKB_KEY_dead_iota","","",null,null],[17,"XKB_KEY_dead_voiced_sound","","",null,null],[17,"XKB_KEY_dead_semivoiced_sound","","",null,null],[17,"XKB_KEY_dead_belowdot","","",null,null],[17,"XKB_KEY_dead_hook","","",null,null],[17,"XKB_KEY_dead_horn","","",null,null],[17,"XKB_KEY_dead_stroke","","",null,null],[17,"XKB_KEY_dead_abovecomma","","",null,null],[17,"XKB_KEY_dead_psili","","",null,null],[17,"XKB_KEY_dead_abovereversedcomma","","",null,null],[17,"XKB_KEY_dead_dasia","","",null,null],[17,"XKB_KEY_dead_doublegrave","","",null,null],[17,"XKB_KEY_dead_belowring","","",null,null],[17,"XKB_KEY_dead_belowmacron","","",null,null],[17,"XKB_KEY_dead_belowcircumflex","","",null,null],[17,"XKB_KEY_dead_belowtilde","","",null,null],[17,"XKB_KEY_dead_belowbreve","","",null,null],[17,"XKB_KEY_dead_belowdiaeresis","","",null,null],[17,"XKB_KEY_dead_invertedbreve","","",null,null],[17,"XKB_KEY_dead_belowcomma","","",null,null],[17,"XKB_KEY_dead_currency","","",null,null],[17,"XKB_KEY_dead_lowline","","",null,null],[17,"XKB_KEY_dead_aboveverticalline","","",null,null],[17,"XKB_KEY_dead_belowverticalline","","",null,null],[17,"XKB_KEY_dead_longsolidusoverlay","","",null,null],[17,"XKB_KEY_dead_a","","",null,null],[17,"XKB_KEY_dead_A","","",null,null],[17,"XKB_KEY_dead_e","","",null,null],[17,"XKB_KEY_dead_E","","",null,null],[17,"XKB_KEY_dead_i","","",null,null],[17,"XKB_KEY_dead_I","","",null,null],[17,"XKB_KEY_dead_o","","",null,null],[17,"XKB_KEY_dead_O","","",null,null],[17,"XKB_KEY_dead_u","","",null,null],[17,"XKB_KEY_dead_U","","",null,null],[17,"XKB_KEY_dead_small_schwa","","",null,null],[17,"XKB_KEY_dead_capital_schwa","","",null,null],[17,"XKB_KEY_dead_greek","","",null,null],[17,"XKB_KEY_First_Virtual_Screen","","",null,null],[17,"XKB_KEY_Prev_Virtual_Screen","","",null,null],[17,"XKB_KEY_Next_Virtual_Screen","","",null,null],[17,"XKB_KEY_Last_Virtual_Screen","","",null,null],[17,"XKB_KEY_Terminate_Server","","",null,null],[17,"XKB_KEY_AccessX_Enable","","",null,null],[17,"XKB_KEY_AccessX_Feedback_Enable","","",null,null],[17,"XKB_KEY_RepeatKeys_Enable","","",null,null],[17,"XKB_KEY_SlowKeys_Enable","","",null,null],[17,"XKB_KEY_BounceKeys_Enable","","",null,null],[17,"XKB_KEY_StickyKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Enable","","",null,null],[17,"XKB_KEY_MouseKeys_Accel_Enable","","",null,null],[17,"XKB_KEY_Overlay1_Enable","","",null,null],[17,"XKB_KEY_Overlay2_Enable","","",null,null],[17,"XKB_KEY_AudibleBell_Enable","","",null,null],[17,"XKB_KEY_Pointer_Left","","",null,null],[17,"XKB_KEY_Pointer_Right","","",null,null],[17,"XKB_KEY_Pointer_Up","","",null,null],[17,"XKB_KEY_Pointer_Down","","",null,null],[17,"XKB_KEY_Pointer_UpLeft","","",null,null],[17,"XKB_KEY_Pointer_UpRight","","",null,null],[17,"XKB_KEY_Pointer_DownLeft","","",null,null],[17,"XKB_KEY_Pointer_DownRight","","",null,null],[17,"XKB_KEY_Pointer_Button_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Button1","","",null,null],[17,"XKB_KEY_Pointer_Button2","","",null,null],[17,"XKB_KEY_Pointer_Button3","","",null,null],[17,"XKB_KEY_Pointer_Button4","","",null,null],[17,"XKB_KEY_Pointer_Button5","","",null,null],[17,"XKB_KEY_Pointer_DblClick_Dflt","","",null,null],[17,"XKB_KEY_Pointer_DblClick1","","",null,null],[17,"XKB_KEY_Pointer_DblClick2","","",null,null],[17,"XKB_KEY_Pointer_DblClick3","","",null,null],[17,"XKB_KEY_Pointer_DblClick4","","",null,null],[17,"XKB_KEY_Pointer_DblClick5","","",null,null],[17,"XKB_KEY_Pointer_Drag_Dflt","","",null,null],[17,"XKB_KEY_Pointer_Drag1","","",null,null],[17,"XKB_KEY_Pointer_Drag2","","",null,null],[17,"XKB_KEY_Pointer_Drag3","","",null,null],[17,"XKB_KEY_Pointer_Drag4","","",null,null],[17,"XKB_KEY_Pointer_Drag5","","",null,null],[17,"XKB_KEY_Pointer_EnableKeys","","",null,null],[17,"XKB_KEY_Pointer_Accelerate","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnNext","","",null,null],[17,"XKB_KEY_Pointer_DfltBtnPrev","","",null,null],[17,"XKB_KEY_ch","","",null,null],[17,"XKB_KEY_Ch","","",null,null],[17,"XKB_KEY_CH","","",null,null],[17,"XKB_KEY_c_h","","",null,null],[17,"XKB_KEY_C_h","","",null,null],[17,"XKB_KEY_C_H","","",null,null],[17,"XKB_KEY_3270_Duplicate","","",null,null],[17,"XKB_KEY_3270_FieldMark","","",null,null],[17,"XKB_KEY_3270_Right2","","",null,null],[17,"XKB_KEY_3270_Left2","","",null,null],[17,"XKB_KEY_3270_BackTab","","",null,null],[17,"XKB_KEY_3270_EraseEOF","","",null,null],[17,"XKB_KEY_3270_EraseInput","","",null,null],[17,"XKB_KEY_3270_Reset","","",null,null],[17,"XKB_KEY_3270_Quit","","",null,null],[17,"XKB_KEY_3270_PA1","","",null,null],[17,"XKB_KEY_3270_PA2","","",null,null],[17,"XKB_KEY_3270_PA3","","",null,null],[17,"XKB_KEY_3270_Test","","",null,null],[17,"XKB_KEY_3270_Attn","","",null,null],[17,"XKB_KEY_3270_CursorBlink","","",null,null],[17,"XKB_KEY_3270_AltCursor","","",null,null],[17,"XKB_KEY_3270_KeyClick","","",null,null],[17,"XKB_KEY_3270_Jump","","",null,null],[17,"XKB_KEY_3270_Ident","","",null,null],[17,"XKB_KEY_3270_Rule","","",null,null],[17,"XKB_KEY_3270_Copy","","",null,null],[17,"XKB_KEY_3270_Play","","",null,null],[17,"XKB_KEY_3270_Setup","","",null,null],[17,"XKB_KEY_3270_Record","","",null,null],[17,"XKB_KEY_3270_ChangeScreen","","",null,null],[17,"XKB_KEY_3270_DeleteWord","","",null,null],[17,"XKB_KEY_3270_ExSelect","","",null,null],[17,"XKB_KEY_3270_CursorSelect","","",null,null],[17,"XKB_KEY_3270_PrintScreen","","",null,null],[17,"XKB_KEY_3270_Enter","","",null,null],[17,"XKB_KEY_space","","",null,null],[17,"XKB_KEY_exclam","","",null,null],[17,"XKB_KEY_quotedbl","","",null,null],[17,"XKB_KEY_numbersign","","",null,null],[17,"XKB_KEY_dollar","","",null,null],[17,"XKB_KEY_percent","","",null,null],[17,"XKB_KEY_ampersand","","",null,null],[17,"XKB_KEY_apostrophe","","",null,null],[17,"XKB_KEY_quoteright","","",null,null],[17,"XKB_KEY_parenleft","","",null,null],[17,"XKB_KEY_parenright","","",null,null],[17,"XKB_KEY_asterisk","","",null,null],[17,"XKB_KEY_plus","","",null,null],[17,"XKB_KEY_comma","","",null,null],[17,"XKB_KEY_minus","","",null,null],[17,"XKB_KEY_period","","",null,null],[17,"XKB_KEY_slash","","",null,null],[17,"XKB_KEY_0","","",null,null],[17,"XKB_KEY_1","","",null,null],[17,"XKB_KEY_2","","",null,null],[17,"XKB_KEY_3","","",null,null],[17,"XKB_KEY_4","","",null,null],[17,"XKB_KEY_5","","",null,null],[17,"XKB_KEY_6","","",null,null],[17,"XKB_KEY_7","","",null,null],[17,"XKB_KEY_8","","",null,null],[17,"XKB_KEY_9","","",null,null],[17,"XKB_KEY_colon","","",null,null],[17,"XKB_KEY_semicolon","","",null,null],[17,"XKB_KEY_less","","",null,null],[17,"XKB_KEY_equal","","",null,null],[17,"XKB_KEY_greater","","",null,null],[17,"XKB_KEY_question","","",null,null],[17,"XKB_KEY_at","","",null,null],[17,"XKB_KEY_A","","",null,null],[17,"XKB_KEY_B","","",null,null],[17,"XKB_KEY_C","","",null,null],[17,"XKB_KEY_D","","",null,null],[17,"XKB_KEY_E","","",null,null],[17,"XKB_KEY_F","","",null,null],[17,"XKB_KEY_G","","",null,null],[17,"XKB_KEY_H","","",null,null],[17,"XKB_KEY_I","","",null,null],[17,"XKB_KEY_J","","",null,null],[17,"XKB_KEY_K","","",null,null],[17,"XKB_KEY_L","","",null,null],[17,"XKB_KEY_M","","",null,null],[17,"XKB_KEY_N","","",null,null],[17,"XKB_KEY_O","","",null,null],[17,"XKB_KEY_P","","",null,null],[17,"XKB_KEY_Q","","",null,null],[17,"XKB_KEY_R","","",null,null],[17,"XKB_KEY_S","","",null,null],[17,"XKB_KEY_T","","",null,null],[17,"XKB_KEY_U","","",null,null],[17,"XKB_KEY_V","","",null,null],[17,"XKB_KEY_W","","",null,null],[17,"XKB_KEY_X","","",null,null],[17,"XKB_KEY_Y","","",null,null],[17,"XKB_KEY_Z","","",null,null],[17,"XKB_KEY_bracketleft","","",null,null],[17,"XKB_KEY_backslash","","",null,null],[17,"XKB_KEY_bracketright","","",null,null],[17,"XKB_KEY_asciicircum","","",null,null],[17,"XKB_KEY_underscore","","",null,null],[17,"XKB_KEY_grave","","",null,null],[17,"XKB_KEY_quoteleft","","",null,null],[17,"XKB_KEY_a","","",null,null],[17,"XKB_KEY_b","","",null,null],[17,"XKB_KEY_c","","",null,null],[17,"XKB_KEY_d","","",null,null],[17,"XKB_KEY_e","","",null,null],[17,"XKB_KEY_f","","",null,null],[17,"XKB_KEY_g","","",null,null],[17,"XKB_KEY_h","","",null,null],[17,"XKB_KEY_i","","",null,null],[17,"XKB_KEY_j","","",null,null],[17,"XKB_KEY_k","","",null,null],[17,"XKB_KEY_l","","",null,null],[17,"XKB_KEY_m","","",null,null],[17,"XKB_KEY_n","","",null,null],[17,"XKB_KEY_o","","",null,null],[17,"XKB_KEY_p","","",null,null],[17,"XKB_KEY_q","","",null,null],[17,"XKB_KEY_r","","",null,null],[17,"XKB_KEY_s","","",null,null],[17,"XKB_KEY_t","","",null,null],[17,"XKB_KEY_u","","",null,null],[17,"XKB_KEY_v","","",null,null],[17,"XKB_KEY_w","","",null,null],[17,"XKB_KEY_x","","",null,null],[17,"XKB_KEY_y","","",null,null],[17,"XKB_KEY_z","","",null,null],[17,"XKB_KEY_braceleft","","",null,null],[17,"XKB_KEY_bar","","",null,null],[17,"XKB_KEY_braceright","","",null,null],[17,"XKB_KEY_asciitilde","","",null,null],[17,"XKB_KEY_nobreakspace","","",null,null],[17,"XKB_KEY_exclamdown","","",null,null],[17,"XKB_KEY_cent","","",null,null],[17,"XKB_KEY_sterling","","",null,null],[17,"XKB_KEY_currency","","",null,null],[17,"XKB_KEY_yen","","",null,null],[17,"XKB_KEY_brokenbar","","",null,null],[17,"XKB_KEY_section","","",null,null],[17,"XKB_KEY_diaeresis","","",null,null],[17,"XKB_KEY_copyright","","",null,null],[17,"XKB_KEY_ordfeminine","","",null,null],[17,"XKB_KEY_guillemotleft","","",null,null],[17,"XKB_KEY_notsign","","",null,null],[17,"XKB_KEY_hyphen","","",null,null],[17,"XKB_KEY_registered","","",null,null],[17,"XKB_KEY_macron","","",null,null],[17,"XKB_KEY_degree","","",null,null],[17,"XKB_KEY_plusminus","","",null,null],[17,"XKB_KEY_twosuperior","","",null,null],[17,"XKB_KEY_threesuperior","","",null,null],[17,"XKB_KEY_acute","","",null,null],[17,"XKB_KEY_mu","","",null,null],[17,"XKB_KEY_paragraph","","",null,null],[17,"XKB_KEY_periodcentered","","",null,null],[17,"XKB_KEY_cedilla","","",null,null],[17,"XKB_KEY_onesuperior","","",null,null],[17,"XKB_KEY_masculine","","",null,null],[17,"XKB_KEY_guillemotright","","",null,null],[17,"XKB_KEY_onequarter","","",null,null],[17,"XKB_KEY_onehalf","","",null,null],[17,"XKB_KEY_threequarters","","",null,null],[17,"XKB_KEY_questiondown","","",null,null],[17,"XKB_KEY_Agrave","","",null,null],[17,"XKB_KEY_Aacute","","",null,null],[17,"XKB_KEY_Acircumflex","","",null,null],[17,"XKB_KEY_Atilde","","",null,null],[17,"XKB_KEY_Adiaeresis","","",null,null],[17,"XKB_KEY_Aring","","",null,null],[17,"XKB_KEY_AE","","",null,null],[17,"XKB_KEY_Ccedilla","","",null,null],[17,"XKB_KEY_Egrave","","",null,null],[17,"XKB_KEY_Eacute","","",null,null],[17,"XKB_KEY_Ecircumflex","","",null,null],[17,"XKB_KEY_Ediaeresis","","",null,null],[17,"XKB_KEY_Igrave","","",null,null],[17,"XKB_KEY_Iacute","","",null,null],[17,"XKB_KEY_Icircumflex","","",null,null],[17,"XKB_KEY_Idiaeresis","","",null,null],[17,"XKB_KEY_ETH","","",null,null],[17,"XKB_KEY_Eth","","",null,null],[17,"XKB_KEY_Ntilde","","",null,null],[17,"XKB_KEY_Ograve","","",null,null],[17,"XKB_KEY_Oacute","","",null,null],[17,"XKB_KEY_Ocircumflex","","",null,null],[17,"XKB_KEY_Otilde","","",null,null],[17,"XKB_KEY_Odiaeresis","","",null,null],[17,"XKB_KEY_multiply","","",null,null],[17,"XKB_KEY_Oslash","","",null,null],[17,"XKB_KEY_Ooblique","","",null,null],[17,"XKB_KEY_Ugrave","","",null,null],[17,"XKB_KEY_Uacute","","",null,null],[17,"XKB_KEY_Ucircumflex","","",null,null],[17,"XKB_KEY_Udiaeresis","","",null,null],[17,"XKB_KEY_Yacute","","",null,null],[17,"XKB_KEY_THORN","","",null,null],[17,"XKB_KEY_Thorn","","",null,null],[17,"XKB_KEY_ssharp","","",null,null],[17,"XKB_KEY_agrave","","",null,null],[17,"XKB_KEY_aacute","","",null,null],[17,"XKB_KEY_acircumflex","","",null,null],[17,"XKB_KEY_atilde","","",null,null],[17,"XKB_KEY_adiaeresis","","",null,null],[17,"XKB_KEY_aring","","",null,null],[17,"XKB_KEY_ae","","",null,null],[17,"XKB_KEY_ccedilla","","",null,null],[17,"XKB_KEY_egrave","","",null,null],[17,"XKB_KEY_eacute","","",null,null],[17,"XKB_KEY_ecircumflex","","",null,null],[17,"XKB_KEY_ediaeresis","","",null,null],[17,"XKB_KEY_igrave","","",null,null],[17,"XKB_KEY_iacute","","",null,null],[17,"XKB_KEY_icircumflex","","",null,null],[17,"XKB_KEY_idiaeresis","","",null,null],[17,"XKB_KEY_eth","","",null,null],[17,"XKB_KEY_ntilde","","",null,null],[17,"XKB_KEY_ograve","","",null,null],[17,"XKB_KEY_oacute","","",null,null],[17,"XKB_KEY_ocircumflex","","",null,null],[17,"XKB_KEY_otilde","","",null,null],[17,"XKB_KEY_odiaeresis","","",null,null],[17,"XKB_KEY_division","","",null,null],[17,"XKB_KEY_oslash","","",null,null],[17,"XKB_KEY_ooblique","","",null,null],[17,"XKB_KEY_ugrave","","",null,null],[17,"XKB_KEY_uacute","","",null,null],[17,"XKB_KEY_ucircumflex","","",null,null],[17,"XKB_KEY_udiaeresis","","",null,null],[17,"XKB_KEY_yacute","","",null,null],[17,"XKB_KEY_thorn","","",null,null],[17,"XKB_KEY_ydiaeresis","","",null,null],[17,"XKB_KEY_Aogonek","","",null,null],[17,"XKB_KEY_breve","","",null,null],[17,"XKB_KEY_Lstroke","","",null,null],[17,"XKB_KEY_Lcaron","","",null,null],[17,"XKB_KEY_Sacute","","",null,null],[17,"XKB_KEY_Scaron","","",null,null],[17,"XKB_KEY_Scedilla","","",null,null],[17,"XKB_KEY_Tcaron","","",null,null],[17,"XKB_KEY_Zacute","","",null,null],[17,"XKB_KEY_Zcaron","","",null,null],[17,"XKB_KEY_Zabovedot","","",null,null],[17,"XKB_KEY_aogonek","","",null,null],[17,"XKB_KEY_ogonek","","",null,null],[17,"XKB_KEY_lstroke","","",null,null],[17,"XKB_KEY_lcaron","","",null,null],[17,"XKB_KEY_sacute","","",null,null],[17,"XKB_KEY_caron","","",null,null],[17,"XKB_KEY_scaron","","",null,null],[17,"XKB_KEY_scedilla","","",null,null],[17,"XKB_KEY_tcaron","","",null,null],[17,"XKB_KEY_zacute","","",null,null],[17,"XKB_KEY_doubleacute","","",null,null],[17,"XKB_KEY_zcaron","","",null,null],[17,"XKB_KEY_zabovedot","","",null,null],[17,"XKB_KEY_Racute","","",null,null],[17,"XKB_KEY_Abreve","","",null,null],[17,"XKB_KEY_Lacute","","",null,null],[17,"XKB_KEY_Cacute","","",null,null],[17,"XKB_KEY_Ccaron","","",null,null],[17,"XKB_KEY_Eogonek","","",null,null],[17,"XKB_KEY_Ecaron","","",null,null],[17,"XKB_KEY_Dcaron","","",null,null],[17,"XKB_KEY_Dstroke","","",null,null],[17,"XKB_KEY_Nacute","","",null,null],[17,"XKB_KEY_Ncaron","","",null,null],[17,"XKB_KEY_Odoubleacute","","",null,null],[17,"XKB_KEY_Rcaron","","",null,null],[17,"XKB_KEY_Uring","","",null,null],[17,"XKB_KEY_Udoubleacute","","",null,null],[17,"XKB_KEY_Tcedilla","","",null,null],[17,"XKB_KEY_racute","","",null,null],[17,"XKB_KEY_abreve","","",null,null],[17,"XKB_KEY_lacute","","",null,null],[17,"XKB_KEY_cacute","","",null,null],[17,"XKB_KEY_ccaron","","",null,null],[17,"XKB_KEY_eogonek","","",null,null],[17,"XKB_KEY_ecaron","","",null,null],[17,"XKB_KEY_dcaron","","",null,null],[17,"XKB_KEY_dstroke","","",null,null],[17,"XKB_KEY_nacute","","",null,null],[17,"XKB_KEY_ncaron","","",null,null],[17,"XKB_KEY_odoubleacute","","",null,null],[17,"XKB_KEY_rcaron","","",null,null],[17,"XKB_KEY_uring","","",null,null],[17,"XKB_KEY_udoubleacute","","",null,null],[17,"XKB_KEY_tcedilla","","",null,null],[17,"XKB_KEY_abovedot","","",null,null],[17,"XKB_KEY_Hstroke","","",null,null],[17,"XKB_KEY_Hcircumflex","","",null,null],[17,"XKB_KEY_Iabovedot","","",null,null],[17,"XKB_KEY_Gbreve","","",null,null],[17,"XKB_KEY_Jcircumflex","","",null,null],[17,"XKB_KEY_hstroke","","",null,null],[17,"XKB_KEY_hcircumflex","","",null,null],[17,"XKB_KEY_idotless","","",null,null],[17,"XKB_KEY_gbreve","","",null,null],[17,"XKB_KEY_jcircumflex","","",null,null],[17,"XKB_KEY_Cabovedot","","",null,null],[17,"XKB_KEY_Ccircumflex","","",null,null],[17,"XKB_KEY_Gabovedot","","",null,null],[17,"XKB_KEY_Gcircumflex","","",null,null],[17,"XKB_KEY_Ubreve","","",null,null],[17,"XKB_KEY_Scircumflex","","",null,null],[17,"XKB_KEY_cabovedot","","",null,null],[17,"XKB_KEY_ccircumflex","","",null,null],[17,"XKB_KEY_gabovedot","","",null,null],[17,"XKB_KEY_gcircumflex","","",null,null],[17,"XKB_KEY_ubreve","","",null,null],[17,"XKB_KEY_scircumflex","","",null,null],[17,"XKB_KEY_kra","","",null,null],[17,"XKB_KEY_kappa","","",null,null],[17,"XKB_KEY_Rcedilla","","",null,null],[17,"XKB_KEY_Itilde","","",null,null],[17,"XKB_KEY_Lcedilla","","",null,null],[17,"XKB_KEY_Emacron","","",null,null],[17,"XKB_KEY_Gcedilla","","",null,null],[17,"XKB_KEY_Tslash","","",null,null],[17,"XKB_KEY_rcedilla","","",null,null],[17,"XKB_KEY_itilde","","",null,null],[17,"XKB_KEY_lcedilla","","",null,null],[17,"XKB_KEY_emacron","","",null,null],[17,"XKB_KEY_gcedilla","","",null,null],[17,"XKB_KEY_tslash","","",null,null],[17,"XKB_KEY_ENG","","",null,null],[17,"XKB_KEY_eng","","",null,null],[17,"XKB_KEY_Amacron","","",null,null],[17,"XKB_KEY_Iogonek","","",null,null],[17,"XKB_KEY_Eabovedot","","",null,null],[17,"XKB_KEY_Imacron","","",null,null],[17,"XKB_KEY_Ncedilla","","",null,null],[17,"XKB_KEY_Omacron","","",null,null],[17,"XKB_KEY_Kcedilla","","",null,null],[17,"XKB_KEY_Uogonek","","",null,null],[17,"XKB_KEY_Utilde","","",null,null],[17,"XKB_KEY_Umacron","","",null,null],[17,"XKB_KEY_amacron","","",null,null],[17,"XKB_KEY_iogonek","","",null,null],[17,"XKB_KEY_eabovedot","","",null,null],[17,"XKB_KEY_imacron","","",null,null],[17,"XKB_KEY_ncedilla","","",null,null],[17,"XKB_KEY_omacron","","",null,null],[17,"XKB_KEY_kcedilla","","",null,null],[17,"XKB_KEY_uogonek","","",null,null],[17,"XKB_KEY_utilde","","",null,null],[17,"XKB_KEY_umacron","","",null,null],[17,"XKB_KEY_Wcircumflex","","",null,null],[17,"XKB_KEY_wcircumflex","","",null,null],[17,"XKB_KEY_Ycircumflex","","",null,null],[17,"XKB_KEY_ycircumflex","","",null,null],[17,"XKB_KEY_Babovedot","","",null,null],[17,"XKB_KEY_babovedot","","",null,null],[17,"XKB_KEY_Dabovedot","","",null,null],[17,"XKB_KEY_dabovedot","","",null,null],[17,"XKB_KEY_Fabovedot","","",null,null],[17,"XKB_KEY_fabovedot","","",null,null],[17,"XKB_KEY_Mabovedot","","",null,null],[17,"XKB_KEY_mabovedot","","",null,null],[17,"XKB_KEY_Pabovedot","","",null,null],[17,"XKB_KEY_pabovedot","","",null,null],[17,"XKB_KEY_Sabovedot","","",null,null],[17,"XKB_KEY_sabovedot","","",null,null],[17,"XKB_KEY_Tabovedot","","",null,null],[17,"XKB_KEY_tabovedot","","",null,null],[17,"XKB_KEY_Wgrave","","",null,null],[17,"XKB_KEY_wgrave","","",null,null],[17,"XKB_KEY_Wacute","","",null,null],[17,"XKB_KEY_wacute","","",null,null],[17,"XKB_KEY_Wdiaeresis","","",null,null],[17,"XKB_KEY_wdiaeresis","","",null,null],[17,"XKB_KEY_Ygrave","","",null,null],[17,"XKB_KEY_ygrave","","",null,null],[17,"XKB_KEY_OE","","",null,null],[17,"XKB_KEY_oe","","",null,null],[17,"XKB_KEY_Ydiaeresis","","",null,null],[17,"XKB_KEY_overline","","",null,null],[17,"XKB_KEY_kana_fullstop","","",null,null],[17,"XKB_KEY_kana_openingbracket","","",null,null],[17,"XKB_KEY_kana_closingbracket","","",null,null],[17,"XKB_KEY_kana_comma","","",null,null],[17,"XKB_KEY_kana_conjunctive","","",null,null],[17,"XKB_KEY_kana_middledot","","",null,null],[17,"XKB_KEY_kana_WO","","",null,null],[17,"XKB_KEY_kana_a","","",null,null],[17,"XKB_KEY_kana_i","","",null,null],[17,"XKB_KEY_kana_u","","",null,null],[17,"XKB_KEY_kana_e","","",null,null],[17,"XKB_KEY_kana_o","","",null,null],[17,"XKB_KEY_kana_ya","","",null,null],[17,"XKB_KEY_kana_yu","","",null,null],[17,"XKB_KEY_kana_yo","","",null,null],[17,"XKB_KEY_kana_tsu","","",null,null],[17,"XKB_KEY_kana_tu","","",null,null],[17,"XKB_KEY_prolongedsound","","",null,null],[17,"XKB_KEY_kana_A","","",null,null],[17,"XKB_KEY_kana_I","","",null,null],[17,"XKB_KEY_kana_U","","",null,null],[17,"XKB_KEY_kana_E","","",null,null],[17,"XKB_KEY_kana_O","","",null,null],[17,"XKB_KEY_kana_KA","","",null,null],[17,"XKB_KEY_kana_KI","","",null,null],[17,"XKB_KEY_kana_KU","","",null,null],[17,"XKB_KEY_kana_KE","","",null,null],[17,"XKB_KEY_kana_KO","","",null,null],[17,"XKB_KEY_kana_SA","","",null,null],[17,"XKB_KEY_kana_SHI","","",null,null],[17,"XKB_KEY_kana_SU","","",null,null],[17,"XKB_KEY_kana_SE","","",null,null],[17,"XKB_KEY_kana_SO","","",null,null],[17,"XKB_KEY_kana_TA","","",null,null],[17,"XKB_KEY_kana_CHI","","",null,null],[17,"XKB_KEY_kana_TI","","",null,null],[17,"XKB_KEY_kana_TSU","","",null,null],[17,"XKB_KEY_kana_TU","","",null,null],[17,"XKB_KEY_kana_TE","","",null,null],[17,"XKB_KEY_kana_TO","","",null,null],[17,"XKB_KEY_kana_NA","","",null,null],[17,"XKB_KEY_kana_NI","","",null,null],[17,"XKB_KEY_kana_NU","","",null,null],[17,"XKB_KEY_kana_NE","","",null,null],[17,"XKB_KEY_kana_NO","","",null,null],[17,"XKB_KEY_kana_HA","","",null,null],[17,"XKB_KEY_kana_HI","","",null,null],[17,"XKB_KEY_kana_FU","","",null,null],[17,"XKB_KEY_kana_HU","","",null,null],[17,"XKB_KEY_kana_HE","","",null,null],[17,"XKB_KEY_kana_HO","","",null,null],[17,"XKB_KEY_kana_MA","","",null,null],[17,"XKB_KEY_kana_MI","","",null,null],[17,"XKB_KEY_kana_MU","","",null,null],[17,"XKB_KEY_kana_ME","","",null,null],[17,"XKB_KEY_kana_MO","","",null,null],[17,"XKB_KEY_kana_YA","","",null,null],[17,"XKB_KEY_kana_YU","","",null,null],[17,"XKB_KEY_kana_YO","","",null,null],[17,"XKB_KEY_kana_RA","","",null,null],[17,"XKB_KEY_kana_RI","","",null,null],[17,"XKB_KEY_kana_RU","","",null,null],[17,"XKB_KEY_kana_RE","","",null,null],[17,"XKB_KEY_kana_RO","","",null,null],[17,"XKB_KEY_kana_WA","","",null,null],[17,"XKB_KEY_kana_N","","",null,null],[17,"XKB_KEY_voicedsound","","",null,null],[17,"XKB_KEY_semivoicedsound","","",null,null],[17,"XKB_KEY_kana_switch","","",null,null],[17,"XKB_KEY_Farsi_0","","",null,null],[17,"XKB_KEY_Farsi_1","","",null,null],[17,"XKB_KEY_Farsi_2","","",null,null],[17,"XKB_KEY_Farsi_3","","",null,null],[17,"XKB_KEY_Farsi_4","","",null,null],[17,"XKB_KEY_Farsi_5","","",null,null],[17,"XKB_KEY_Farsi_6","","",null,null],[17,"XKB_KEY_Farsi_7","","",null,null],[17,"XKB_KEY_Farsi_8","","",null,null],[17,"XKB_KEY_Farsi_9","","",null,null],[17,"XKB_KEY_Arabic_percent","","",null,null],[17,"XKB_KEY_Arabic_superscript_alef","","",null,null],[17,"XKB_KEY_Arabic_tteh","","",null,null],[17,"XKB_KEY_Arabic_peh","","",null,null],[17,"XKB_KEY_Arabic_tcheh","","",null,null],[17,"XKB_KEY_Arabic_ddal","","",null,null],[17,"XKB_KEY_Arabic_rreh","","",null,null],[17,"XKB_KEY_Arabic_comma","","",null,null],[17,"XKB_KEY_Arabic_fullstop","","",null,null],[17,"XKB_KEY_Arabic_0","","",null,null],[17,"XKB_KEY_Arabic_1","","",null,null],[17,"XKB_KEY_Arabic_2","","",null,null],[17,"XKB_KEY_Arabic_3","","",null,null],[17,"XKB_KEY_Arabic_4","","",null,null],[17,"XKB_KEY_Arabic_5","","",null,null],[17,"XKB_KEY_Arabic_6","","",null,null],[17,"XKB_KEY_Arabic_7","","",null,null],[17,"XKB_KEY_Arabic_8","","",null,null],[17,"XKB_KEY_Arabic_9","","",null,null],[17,"XKB_KEY_Arabic_semicolon","","",null,null],[17,"XKB_KEY_Arabic_question_mark","","",null,null],[17,"XKB_KEY_Arabic_hamza","","",null,null],[17,"XKB_KEY_Arabic_maddaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonwaw","","",null,null],[17,"XKB_KEY_Arabic_hamzaunderalef","","",null,null],[17,"XKB_KEY_Arabic_hamzaonyeh","","",null,null],[17,"XKB_KEY_Arabic_alef","","",null,null],[17,"XKB_KEY_Arabic_beh","","",null,null],[17,"XKB_KEY_Arabic_tehmarbuta","","",null,null],[17,"XKB_KEY_Arabic_teh","","",null,null],[17,"XKB_KEY_Arabic_theh","","",null,null],[17,"XKB_KEY_Arabic_jeem","","",null,null],[17,"XKB_KEY_Arabic_hah","","",null,null],[17,"XKB_KEY_Arabic_khah","","",null,null],[17,"XKB_KEY_Arabic_dal","","",null,null],[17,"XKB_KEY_Arabic_thal","","",null,null],[17,"XKB_KEY_Arabic_ra","","",null,null],[17,"XKB_KEY_Arabic_zain","","",null,null],[17,"XKB_KEY_Arabic_seen","","",null,null],[17,"XKB_KEY_Arabic_sheen","","",null,null],[17,"XKB_KEY_Arabic_sad","","",null,null],[17,"XKB_KEY_Arabic_dad","","",null,null],[17,"XKB_KEY_Arabic_tah","","",null,null],[17,"XKB_KEY_Arabic_zah","","",null,null],[17,"XKB_KEY_Arabic_ain","","",null,null],[17,"XKB_KEY_Arabic_ghain","","",null,null],[17,"XKB_KEY_Arabic_tatweel","","",null,null],[17,"XKB_KEY_Arabic_feh","","",null,null],[17,"XKB_KEY_Arabic_qaf","","",null,null],[17,"XKB_KEY_Arabic_kaf","","",null,null],[17,"XKB_KEY_Arabic_lam","","",null,null],[17,"XKB_KEY_Arabic_meem","","",null,null],[17,"XKB_KEY_Arabic_noon","","",null,null],[17,"XKB_KEY_Arabic_ha","","",null,null],[17,"XKB_KEY_Arabic_heh","","",null,null],[17,"XKB_KEY_Arabic_waw","","",null,null],[17,"XKB_KEY_Arabic_alefmaksura","","",null,null],[17,"XKB_KEY_Arabic_yeh","","",null,null],[17,"XKB_KEY_Arabic_fathatan","","",null,null],[17,"XKB_KEY_Arabic_dammatan","","",null,null],[17,"XKB_KEY_Arabic_kasratan","","",null,null],[17,"XKB_KEY_Arabic_fatha","","",null,null],[17,"XKB_KEY_Arabic_damma","","",null,null],[17,"XKB_KEY_Arabic_kasra","","",null,null],[17,"XKB_KEY_Arabic_shadda","","",null,null],[17,"XKB_KEY_Arabic_sukun","","",null,null],[17,"XKB_KEY_Arabic_madda_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_above","","",null,null],[17,"XKB_KEY_Arabic_hamza_below","","",null,null],[17,"XKB_KEY_Arabic_jeh","","",null,null],[17,"XKB_KEY_Arabic_veh","","",null,null],[17,"XKB_KEY_Arabic_keheh","","",null,null],[17,"XKB_KEY_Arabic_gaf","","",null,null],[17,"XKB_KEY_Arabic_noon_ghunna","","",null,null],[17,"XKB_KEY_Arabic_heh_doachashmee","","",null,null],[17,"XKB_KEY_Farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_farsi_yeh","","",null,null],[17,"XKB_KEY_Arabic_yeh_baree","","",null,null],[17,"XKB_KEY_Arabic_heh_goal","","",null,null],[17,"XKB_KEY_Arabic_switch","","",null,null],[17,"XKB_KEY_Cyrillic_GHE_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ghe_bar","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_zhe_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ka_descender","","",null,null],[17,"XKB_KEY_Cyrillic_KA_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_ka_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_EN_descender","","",null,null],[17,"XKB_KEY_Cyrillic_en_descender","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight","","",null,null],[17,"XKB_KEY_Cyrillic_U_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_u_straight_bar","","",null,null],[17,"XKB_KEY_Cyrillic_HA_descender","","",null,null],[17,"XKB_KEY_Cyrillic_ha_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_descender","","",null,null],[17,"XKB_KEY_Cyrillic_che_descender","","",null,null],[17,"XKB_KEY_Cyrillic_CHE_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_che_vertstroke","","",null,null],[17,"XKB_KEY_Cyrillic_SHHA","","",null,null],[17,"XKB_KEY_Cyrillic_shha","","",null,null],[17,"XKB_KEY_Cyrillic_SCHWA","","",null,null],[17,"XKB_KEY_Cyrillic_schwa","","",null,null],[17,"XKB_KEY_Cyrillic_I_macron","","",null,null],[17,"XKB_KEY_Cyrillic_i_macron","","",null,null],[17,"XKB_KEY_Cyrillic_O_bar","","",null,null],[17,"XKB_KEY_Cyrillic_o_bar","","",null,null],[17,"XKB_KEY_Cyrillic_U_macron","","",null,null],[17,"XKB_KEY_Cyrillic_u_macron","","",null,null],[17,"XKB_KEY_Serbian_dje","","",null,null],[17,"XKB_KEY_Macedonia_gje","","",null,null],[17,"XKB_KEY_Cyrillic_io","","",null,null],[17,"XKB_KEY_Ukrainian_ie","","",null,null],[17,"XKB_KEY_Ukranian_je","","",null,null],[17,"XKB_KEY_Macedonia_dse","","",null,null],[17,"XKB_KEY_Ukrainian_i","","",null,null],[17,"XKB_KEY_Ukranian_i","","",null,null],[17,"XKB_KEY_Ukrainian_yi","","",null,null],[17,"XKB_KEY_Ukranian_yi","","",null,null],[17,"XKB_KEY_Cyrillic_je","","",null,null],[17,"XKB_KEY_Serbian_je","","",null,null],[17,"XKB_KEY_Cyrillic_lje","","",null,null],[17,"XKB_KEY_Serbian_lje","","",null,null],[17,"XKB_KEY_Cyrillic_nje","","",null,null],[17,"XKB_KEY_Serbian_nje","","",null,null],[17,"XKB_KEY_Serbian_tshe","","",null,null],[17,"XKB_KEY_Macedonia_kje","","",null,null],[17,"XKB_KEY_Ukrainian_ghe_with_upturn","","",null,null],[17,"XKB_KEY_Byelorussian_shortu","","",null,null],[17,"XKB_KEY_Cyrillic_dzhe","","",null,null],[17,"XKB_KEY_Serbian_dze","","",null,null],[17,"XKB_KEY_numerosign","","",null,null],[17,"XKB_KEY_Serbian_DJE","","",null,null],[17,"XKB_KEY_Macedonia_GJE","","",null,null],[17,"XKB_KEY_Cyrillic_IO","","",null,null],[17,"XKB_KEY_Ukrainian_IE","","",null,null],[17,"XKB_KEY_Ukranian_JE","","",null,null],[17,"XKB_KEY_Macedonia_DSE","","",null,null],[17,"XKB_KEY_Ukrainian_I","","",null,null],[17,"XKB_KEY_Ukranian_I","","",null,null],[17,"XKB_KEY_Ukrainian_YI","","",null,null],[17,"XKB_KEY_Ukranian_YI","","",null,null],[17,"XKB_KEY_Cyrillic_JE","","",null,null],[17,"XKB_KEY_Serbian_JE","","",null,null],[17,"XKB_KEY_Cyrillic_LJE","","",null,null],[17,"XKB_KEY_Serbian_LJE","","",null,null],[17,"XKB_KEY_Cyrillic_NJE","","",null,null],[17,"XKB_KEY_Serbian_NJE","","",null,null],[17,"XKB_KEY_Serbian_TSHE","","",null,null],[17,"XKB_KEY_Macedonia_KJE","","",null,null],[17,"XKB_KEY_Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"XKB_KEY_Byelorussian_SHORTU","","",null,null],[17,"XKB_KEY_Cyrillic_DZHE","","",null,null],[17,"XKB_KEY_Serbian_DZE","","",null,null],[17,"XKB_KEY_Cyrillic_yu","","",null,null],[17,"XKB_KEY_Cyrillic_a","","",null,null],[17,"XKB_KEY_Cyrillic_be","","",null,null],[17,"XKB_KEY_Cyrillic_tse","","",null,null],[17,"XKB_KEY_Cyrillic_de","","",null,null],[17,"XKB_KEY_Cyrillic_ie","","",null,null],[17,"XKB_KEY_Cyrillic_ef","","",null,null],[17,"XKB_KEY_Cyrillic_ghe","","",null,null],[17,"XKB_KEY_Cyrillic_ha","","",null,null],[17,"XKB_KEY_Cyrillic_i","","",null,null],[17,"XKB_KEY_Cyrillic_shorti","","",null,null],[17,"XKB_KEY_Cyrillic_ka","","",null,null],[17,"XKB_KEY_Cyrillic_el","","",null,null],[17,"XKB_KEY_Cyrillic_em","","",null,null],[17,"XKB_KEY_Cyrillic_en","","",null,null],[17,"XKB_KEY_Cyrillic_o","","",null,null],[17,"XKB_KEY_Cyrillic_pe","","",null,null],[17,"XKB_KEY_Cyrillic_ya","","",null,null],[17,"XKB_KEY_Cyrillic_er","","",null,null],[17,"XKB_KEY_Cyrillic_es","","",null,null],[17,"XKB_KEY_Cyrillic_te","","",null,null],[17,"XKB_KEY_Cyrillic_u","","",null,null],[17,"XKB_KEY_Cyrillic_zhe","","",null,null],[17,"XKB_KEY_Cyrillic_ve","","",null,null],[17,"XKB_KEY_Cyrillic_softsign","","",null,null],[17,"XKB_KEY_Cyrillic_yeru","","",null,null],[17,"XKB_KEY_Cyrillic_ze","","",null,null],[17,"XKB_KEY_Cyrillic_sha","","",null,null],[17,"XKB_KEY_Cyrillic_e","","",null,null],[17,"XKB_KEY_Cyrillic_shcha","","",null,null],[17,"XKB_KEY_Cyrillic_che","","",null,null],[17,"XKB_KEY_Cyrillic_hardsign","","",null,null],[17,"XKB_KEY_Cyrillic_YU","","",null,null],[17,"XKB_KEY_Cyrillic_A","","",null,null],[17,"XKB_KEY_Cyrillic_BE","","",null,null],[17,"XKB_KEY_Cyrillic_TSE","","",null,null],[17,"XKB_KEY_Cyrillic_DE","","",null,null],[17,"XKB_KEY_Cyrillic_IE","","",null,null],[17,"XKB_KEY_Cyrillic_EF","","",null,null],[17,"XKB_KEY_Cyrillic_GHE","","",null,null],[17,"XKB_KEY_Cyrillic_HA","","",null,null],[17,"XKB_KEY_Cyrillic_I","","",null,null],[17,"XKB_KEY_Cyrillic_SHORTI","","",null,null],[17,"XKB_KEY_Cyrillic_KA","","",null,null],[17,"XKB_KEY_Cyrillic_EL","","",null,null],[17,"XKB_KEY_Cyrillic_EM","","",null,null],[17,"XKB_KEY_Cyrillic_EN","","",null,null],[17,"XKB_KEY_Cyrillic_O","","",null,null],[17,"XKB_KEY_Cyrillic_PE","","",null,null],[17,"XKB_KEY_Cyrillic_YA","","",null,null],[17,"XKB_KEY_Cyrillic_ER","","",null,null],[17,"XKB_KEY_Cyrillic_ES","","",null,null],[17,"XKB_KEY_Cyrillic_TE","","",null,null],[17,"XKB_KEY_Cyrillic_U","","",null,null],[17,"XKB_KEY_Cyrillic_ZHE","","",null,null],[17,"XKB_KEY_Cyrillic_VE","","",null,null],[17,"XKB_KEY_Cyrillic_SOFTSIGN","","",null,null],[17,"XKB_KEY_Cyrillic_YERU","","",null,null],[17,"XKB_KEY_Cyrillic_ZE","","",null,null],[17,"XKB_KEY_Cyrillic_SHA","","",null,null],[17,"XKB_KEY_Cyrillic_E","","",null,null],[17,"XKB_KEY_Cyrillic_SHCHA","","",null,null],[17,"XKB_KEY_Cyrillic_CHE","","",null,null],[17,"XKB_KEY_Cyrillic_HARDSIGN","","",null,null],[17,"XKB_KEY_Greek_ALPHAaccent","","",null,null],[17,"XKB_KEY_Greek_EPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_ETAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAaccent","","",null,null],[17,"XKB_KEY_Greek_IOTAdieresis","","",null,null],[17,"XKB_KEY_Greek_IOTAdiaeresis","","",null,null],[17,"XKB_KEY_Greek_OMICRONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONaccent","","",null,null],[17,"XKB_KEY_Greek_UPSILONdieresis","","",null,null],[17,"XKB_KEY_Greek_OMEGAaccent","","",null,null],[17,"XKB_KEY_Greek_accentdieresis","","",null,null],[17,"XKB_KEY_Greek_horizbar","","",null,null],[17,"XKB_KEY_Greek_alphaaccent","","",null,null],[17,"XKB_KEY_Greek_epsilonaccent","","",null,null],[17,"XKB_KEY_Greek_etaaccent","","",null,null],[17,"XKB_KEY_Greek_iotaaccent","","",null,null],[17,"XKB_KEY_Greek_iotadieresis","","",null,null],[17,"XKB_KEY_Greek_iotaaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omicronaccent","","",null,null],[17,"XKB_KEY_Greek_upsilonaccent","","",null,null],[17,"XKB_KEY_Greek_upsilondieresis","","",null,null],[17,"XKB_KEY_Greek_upsilonaccentdieresis","","",null,null],[17,"XKB_KEY_Greek_omegaaccent","","",null,null],[17,"XKB_KEY_Greek_ALPHA","","",null,null],[17,"XKB_KEY_Greek_BETA","","",null,null],[17,"XKB_KEY_Greek_GAMMA","","",null,null],[17,"XKB_KEY_Greek_DELTA","","",null,null],[17,"XKB_KEY_Greek_EPSILON","","",null,null],[17,"XKB_KEY_Greek_ZETA","","",null,null],[17,"XKB_KEY_Greek_ETA","","",null,null],[17,"XKB_KEY_Greek_THETA","","",null,null],[17,"XKB_KEY_Greek_IOTA","","",null,null],[17,"XKB_KEY_Greek_KAPPA","","",null,null],[17,"XKB_KEY_Greek_LAMDA","","",null,null],[17,"XKB_KEY_Greek_LAMBDA","","",null,null],[17,"XKB_KEY_Greek_MU","","",null,null],[17,"XKB_KEY_Greek_NU","","",null,null],[17,"XKB_KEY_Greek_XI","","",null,null],[17,"XKB_KEY_Greek_OMICRON","","",null,null],[17,"XKB_KEY_Greek_PI","","",null,null],[17,"XKB_KEY_Greek_RHO","","",null,null],[17,"XKB_KEY_Greek_SIGMA","","",null,null],[17,"XKB_KEY_Greek_TAU","","",null,null],[17,"XKB_KEY_Greek_UPSILON","","",null,null],[17,"XKB_KEY_Greek_PHI","","",null,null],[17,"XKB_KEY_Greek_CHI","","",null,null],[17,"XKB_KEY_Greek_PSI","","",null,null],[17,"XKB_KEY_Greek_OMEGA","","",null,null],[17,"XKB_KEY_Greek_alpha","","",null,null],[17,"XKB_KEY_Greek_beta","","",null,null],[17,"XKB_KEY_Greek_gamma","","",null,null],[17,"XKB_KEY_Greek_delta","","",null,null],[17,"XKB_KEY_Greek_epsilon","","",null,null],[17,"XKB_KEY_Greek_zeta","","",null,null],[17,"XKB_KEY_Greek_eta","","",null,null],[17,"XKB_KEY_Greek_theta","","",null,null],[17,"XKB_KEY_Greek_iota","","",null,null],[17,"XKB_KEY_Greek_kappa","","",null,null],[17,"XKB_KEY_Greek_lamda","","",null,null],[17,"XKB_KEY_Greek_lambda","","",null,null],[17,"XKB_KEY_Greek_mu","","",null,null],[17,"XKB_KEY_Greek_nu","","",null,null],[17,"XKB_KEY_Greek_xi","","",null,null],[17,"XKB_KEY_Greek_omicron","","",null,null],[17,"XKB_KEY_Greek_pi","","",null,null],[17,"XKB_KEY_Greek_rho","","",null,null],[17,"XKB_KEY_Greek_sigma","","",null,null],[17,"XKB_KEY_Greek_finalsmallsigma","","",null,null],[17,"XKB_KEY_Greek_tau","","",null,null],[17,"XKB_KEY_Greek_upsilon","","",null,null],[17,"XKB_KEY_Greek_phi","","",null,null],[17,"XKB_KEY_Greek_chi","","",null,null],[17,"XKB_KEY_Greek_psi","","",null,null],[17,"XKB_KEY_Greek_omega","","",null,null],[17,"XKB_KEY_Greek_switch","","",null,null],[17,"XKB_KEY_leftradical","","",null,null],[17,"XKB_KEY_topleftradical","","",null,null],[17,"XKB_KEY_horizconnector","","",null,null],[17,"XKB_KEY_topintegral","","",null,null],[17,"XKB_KEY_botintegral","","",null,null],[17,"XKB_KEY_vertconnector","","",null,null],[17,"XKB_KEY_topleftsqbracket","","",null,null],[17,"XKB_KEY_botleftsqbracket","","",null,null],[17,"XKB_KEY_toprightsqbracket","","",null,null],[17,"XKB_KEY_botrightsqbracket","","",null,null],[17,"XKB_KEY_topleftparens","","",null,null],[17,"XKB_KEY_botleftparens","","",null,null],[17,"XKB_KEY_toprightparens","","",null,null],[17,"XKB_KEY_botrightparens","","",null,null],[17,"XKB_KEY_leftmiddlecurlybrace","","",null,null],[17,"XKB_KEY_rightmiddlecurlybrace","","",null,null],[17,"XKB_KEY_topleftsummation","","",null,null],[17,"XKB_KEY_botleftsummation","","",null,null],[17,"XKB_KEY_topvertsummationconnector","","",null,null],[17,"XKB_KEY_botvertsummationconnector","","",null,null],[17,"XKB_KEY_toprightsummation","","",null,null],[17,"XKB_KEY_botrightsummation","","",null,null],[17,"XKB_KEY_rightmiddlesummation","","",null,null],[17,"XKB_KEY_lessthanequal","","",null,null],[17,"XKB_KEY_notequal","","",null,null],[17,"XKB_KEY_greaterthanequal","","",null,null],[17,"XKB_KEY_integral","","",null,null],[17,"XKB_KEY_therefore","","",null,null],[17,"XKB_KEY_variation","","",null,null],[17,"XKB_KEY_infinity","","",null,null],[17,"XKB_KEY_nabla","","",null,null],[17,"XKB_KEY_approximate","","",null,null],[17,"XKB_KEY_similarequal","","",null,null],[17,"XKB_KEY_ifonlyif","","",null,null],[17,"XKB_KEY_implies","","",null,null],[17,"XKB_KEY_identical","","",null,null],[17,"XKB_KEY_radical","","",null,null],[17,"XKB_KEY_includedin","","",null,null],[17,"XKB_KEY_includes","","",null,null],[17,"XKB_KEY_intersection","","",null,null],[17,"XKB_KEY_union","","",null,null],[17,"XKB_KEY_logicaland","","",null,null],[17,"XKB_KEY_logicalor","","",null,null],[17,"XKB_KEY_partialderivative","","",null,null],[17,"XKB_KEY_function","","",null,null],[17,"XKB_KEY_leftarrow","","",null,null],[17,"XKB_KEY_uparrow","","",null,null],[17,"XKB_KEY_rightarrow","","",null,null],[17,"XKB_KEY_downarrow","","",null,null],[17,"XKB_KEY_blank","","",null,null],[17,"XKB_KEY_soliddiamond","","",null,null],[17,"XKB_KEY_checkerboard","","",null,null],[17,"XKB_KEY_ht","","",null,null],[17,"XKB_KEY_ff","","",null,null],[17,"XKB_KEY_cr","","",null,null],[17,"XKB_KEY_lf","","",null,null],[17,"XKB_KEY_nl","","",null,null],[17,"XKB_KEY_vt","","",null,null],[17,"XKB_KEY_lowrightcorner","","",null,null],[17,"XKB_KEY_uprightcorner","","",null,null],[17,"XKB_KEY_upleftcorner","","",null,null],[17,"XKB_KEY_lowleftcorner","","",null,null],[17,"XKB_KEY_crossinglines","","",null,null],[17,"XKB_KEY_horizlinescan1","","",null,null],[17,"XKB_KEY_horizlinescan3","","",null,null],[17,"XKB_KEY_horizlinescan5","","",null,null],[17,"XKB_KEY_horizlinescan7","","",null,null],[17,"XKB_KEY_horizlinescan9","","",null,null],[17,"XKB_KEY_leftt","","",null,null],[17,"XKB_KEY_rightt","","",null,null],[17,"XKB_KEY_bott","","",null,null],[17,"XKB_KEY_topt","","",null,null],[17,"XKB_KEY_vertbar","","",null,null],[17,"XKB_KEY_emspace","","",null,null],[17,"XKB_KEY_enspace","","",null,null],[17,"XKB_KEY_em3space","","",null,null],[17,"XKB_KEY_em4space","","",null,null],[17,"XKB_KEY_digitspace","","",null,null],[17,"XKB_KEY_punctspace","","",null,null],[17,"XKB_KEY_thinspace","","",null,null],[17,"XKB_KEY_hairspace","","",null,null],[17,"XKB_KEY_emdash","","",null,null],[17,"XKB_KEY_endash","","",null,null],[17,"XKB_KEY_signifblank","","",null,null],[17,"XKB_KEY_ellipsis","","",null,null],[17,"XKB_KEY_doubbaselinedot","","",null,null],[17,"XKB_KEY_onethird","","",null,null],[17,"XKB_KEY_twothirds","","",null,null],[17,"XKB_KEY_onefifth","","",null,null],[17,"XKB_KEY_twofifths","","",null,null],[17,"XKB_KEY_threefifths","","",null,null],[17,"XKB_KEY_fourfifths","","",null,null],[17,"XKB_KEY_onesixth","","",null,null],[17,"XKB_KEY_fivesixths","","",null,null],[17,"XKB_KEY_careof","","",null,null],[17,"XKB_KEY_figdash","","",null,null],[17,"XKB_KEY_leftanglebracket","","",null,null],[17,"XKB_KEY_decimalpoint","","",null,null],[17,"XKB_KEY_rightanglebracket","","",null,null],[17,"XKB_KEY_marker","","",null,null],[17,"XKB_KEY_oneeighth","","",null,null],[17,"XKB_KEY_threeeighths","","",null,null],[17,"XKB_KEY_fiveeighths","","",null,null],[17,"XKB_KEY_seveneighths","","",null,null],[17,"XKB_KEY_trademark","","",null,null],[17,"XKB_KEY_signaturemark","","",null,null],[17,"XKB_KEY_trademarkincircle","","",null,null],[17,"XKB_KEY_leftopentriangle","","",null,null],[17,"XKB_KEY_rightopentriangle","","",null,null],[17,"XKB_KEY_emopencircle","","",null,null],[17,"XKB_KEY_emopenrectangle","","",null,null],[17,"XKB_KEY_leftsinglequotemark","","",null,null],[17,"XKB_KEY_rightsinglequotemark","","",null,null],[17,"XKB_KEY_leftdoublequotemark","","",null,null],[17,"XKB_KEY_rightdoublequotemark","","",null,null],[17,"XKB_KEY_prescription","","",null,null],[17,"XKB_KEY_permille","","",null,null],[17,"XKB_KEY_minutes","","",null,null],[17,"XKB_KEY_seconds","","",null,null],[17,"XKB_KEY_latincross","","",null,null],[17,"XKB_KEY_hexagram","","",null,null],[17,"XKB_KEY_filledrectbullet","","",null,null],[17,"XKB_KEY_filledlefttribullet","","",null,null],[17,"XKB_KEY_filledrighttribullet","","",null,null],[17,"XKB_KEY_emfilledcircle","","",null,null],[17,"XKB_KEY_emfilledrect","","",null,null],[17,"XKB_KEY_enopencircbullet","","",null,null],[17,"XKB_KEY_enopensquarebullet","","",null,null],[17,"XKB_KEY_openrectbullet","","",null,null],[17,"XKB_KEY_opentribulletup","","",null,null],[17,"XKB_KEY_opentribulletdown","","",null,null],[17,"XKB_KEY_openstar","","",null,null],[17,"XKB_KEY_enfilledcircbullet","","",null,null],[17,"XKB_KEY_enfilledsqbullet","","",null,null],[17,"XKB_KEY_filledtribulletup","","",null,null],[17,"XKB_KEY_filledtribulletdown","","",null,null],[17,"XKB_KEY_leftpointer","","",null,null],[17,"XKB_KEY_rightpointer","","",null,null],[17,"XKB_KEY_club","","",null,null],[17,"XKB_KEY_diamond","","",null,null],[17,"XKB_KEY_heart","","",null,null],[17,"XKB_KEY_maltesecross","","",null,null],[17,"XKB_KEY_dagger","","",null,null],[17,"XKB_KEY_doubledagger","","",null,null],[17,"XKB_KEY_checkmark","","",null,null],[17,"XKB_KEY_ballotcross","","",null,null],[17,"XKB_KEY_musicalsharp","","",null,null],[17,"XKB_KEY_musicalflat","","",null,null],[17,"XKB_KEY_malesymbol","","",null,null],[17,"XKB_KEY_femalesymbol","","",null,null],[17,"XKB_KEY_telephone","","",null,null],[17,"XKB_KEY_telephonerecorder","","",null,null],[17,"XKB_KEY_phonographcopyright","","",null,null],[17,"XKB_KEY_caret","","",null,null],[17,"XKB_KEY_singlelowquotemark","","",null,null],[17,"XKB_KEY_doublelowquotemark","","",null,null],[17,"XKB_KEY_cursor","","",null,null],[17,"XKB_KEY_leftcaret","","",null,null],[17,"XKB_KEY_rightcaret","","",null,null],[17,"XKB_KEY_downcaret","","",null,null],[17,"XKB_KEY_upcaret","","",null,null],[17,"XKB_KEY_overbar","","",null,null],[17,"XKB_KEY_downtack","","",null,null],[17,"XKB_KEY_upshoe","","",null,null],[17,"XKB_KEY_downstile","","",null,null],[17,"XKB_KEY_underbar","","",null,null],[17,"XKB_KEY_jot","","",null,null],[17,"XKB_KEY_quad","","",null,null],[17,"XKB_KEY_uptack","","",null,null],[17,"XKB_KEY_circle","","",null,null],[17,"XKB_KEY_upstile","","",null,null],[17,"XKB_KEY_downshoe","","",null,null],[17,"XKB_KEY_rightshoe","","",null,null],[17,"XKB_KEY_leftshoe","","",null,null],[17,"XKB_KEY_lefttack","","",null,null],[17,"XKB_KEY_righttack","","",null,null],[17,"XKB_KEY_hebrew_doublelowline","","",null,null],[17,"XKB_KEY_hebrew_aleph","","",null,null],[17,"XKB_KEY_hebrew_bet","","",null,null],[17,"XKB_KEY_hebrew_beth","","",null,null],[17,"XKB_KEY_hebrew_gimel","","",null,null],[17,"XKB_KEY_hebrew_gimmel","","",null,null],[17,"XKB_KEY_hebrew_dalet","","",null,null],[17,"XKB_KEY_hebrew_daleth","","",null,null],[17,"XKB_KEY_hebrew_he","","",null,null],[17,"XKB_KEY_hebrew_waw","","",null,null],[17,"XKB_KEY_hebrew_zain","","",null,null],[17,"XKB_KEY_hebrew_zayin","","",null,null],[17,"XKB_KEY_hebrew_chet","","",null,null],[17,"XKB_KEY_hebrew_het","","",null,null],[17,"XKB_KEY_hebrew_tet","","",null,null],[17,"XKB_KEY_hebrew_teth","","",null,null],[17,"XKB_KEY_hebrew_yod","","",null,null],[17,"XKB_KEY_hebrew_finalkaph","","",null,null],[17,"XKB_KEY_hebrew_kaph","","",null,null],[17,"XKB_KEY_hebrew_lamed","","",null,null],[17,"XKB_KEY_hebrew_finalmem","","",null,null],[17,"XKB_KEY_hebrew_mem","","",null,null],[17,"XKB_KEY_hebrew_finalnun","","",null,null],[17,"XKB_KEY_hebrew_nun","","",null,null],[17,"XKB_KEY_hebrew_samech","","",null,null],[17,"XKB_KEY_hebrew_samekh","","",null,null],[17,"XKB_KEY_hebrew_ayin","","",null,null],[17,"XKB_KEY_hebrew_finalpe","","",null,null],[17,"XKB_KEY_hebrew_pe","","",null,null],[17,"XKB_KEY_hebrew_finalzade","","",null,null],[17,"XKB_KEY_hebrew_finalzadi","","",null,null],[17,"XKB_KEY_hebrew_zade","","",null,null],[17,"XKB_KEY_hebrew_zadi","","",null,null],[17,"XKB_KEY_hebrew_qoph","","",null,null],[17,"XKB_KEY_hebrew_kuf","","",null,null],[17,"XKB_KEY_hebrew_resh","","",null,null],[17,"XKB_KEY_hebrew_shin","","",null,null],[17,"XKB_KEY_hebrew_taw","","",null,null],[17,"XKB_KEY_hebrew_taf","","",null,null],[17,"XKB_KEY_Hebrew_switch","","",null,null],[17,"XKB_KEY_Thai_kokai","","",null,null],[17,"XKB_KEY_Thai_khokhai","","",null,null],[17,"XKB_KEY_Thai_khokhuat","","",null,null],[17,"XKB_KEY_Thai_khokhwai","","",null,null],[17,"XKB_KEY_Thai_khokhon","","",null,null],[17,"XKB_KEY_Thai_khorakhang","","",null,null],[17,"XKB_KEY_Thai_ngongu","","",null,null],[17,"XKB_KEY_Thai_chochan","","",null,null],[17,"XKB_KEY_Thai_choching","","",null,null],[17,"XKB_KEY_Thai_chochang","","",null,null],[17,"XKB_KEY_Thai_soso","","",null,null],[17,"XKB_KEY_Thai_chochoe","","",null,null],[17,"XKB_KEY_Thai_yoying","","",null,null],[17,"XKB_KEY_Thai_dochada","","",null,null],[17,"XKB_KEY_Thai_topatak","","",null,null],[17,"XKB_KEY_Thai_thothan","","",null,null],[17,"XKB_KEY_Thai_thonangmontho","","",null,null],[17,"XKB_KEY_Thai_thophuthao","","",null,null],[17,"XKB_KEY_Thai_nonen","","",null,null],[17,"XKB_KEY_Thai_dodek","","",null,null],[17,"XKB_KEY_Thai_totao","","",null,null],[17,"XKB_KEY_Thai_thothung","","",null,null],[17,"XKB_KEY_Thai_thothahan","","",null,null],[17,"XKB_KEY_Thai_thothong","","",null,null],[17,"XKB_KEY_Thai_nonu","","",null,null],[17,"XKB_KEY_Thai_bobaimai","","",null,null],[17,"XKB_KEY_Thai_popla","","",null,null],[17,"XKB_KEY_Thai_phophung","","",null,null],[17,"XKB_KEY_Thai_fofa","","",null,null],[17,"XKB_KEY_Thai_phophan","","",null,null],[17,"XKB_KEY_Thai_fofan","","",null,null],[17,"XKB_KEY_Thai_phosamphao","","",null,null],[17,"XKB_KEY_Thai_moma","","",null,null],[17,"XKB_KEY_Thai_yoyak","","",null,null],[17,"XKB_KEY_Thai_rorua","","",null,null],[17,"XKB_KEY_Thai_ru","","",null,null],[17,"XKB_KEY_Thai_loling","","",null,null],[17,"XKB_KEY_Thai_lu","","",null,null],[17,"XKB_KEY_Thai_wowaen","","",null,null],[17,"XKB_KEY_Thai_sosala","","",null,null],[17,"XKB_KEY_Thai_sorusi","","",null,null],[17,"XKB_KEY_Thai_sosua","","",null,null],[17,"XKB_KEY_Thai_hohip","","",null,null],[17,"XKB_KEY_Thai_lochula","","",null,null],[17,"XKB_KEY_Thai_oang","","",null,null],[17,"XKB_KEY_Thai_honokhuk","","",null,null],[17,"XKB_KEY_Thai_paiyannoi","","",null,null],[17,"XKB_KEY_Thai_saraa","","",null,null],[17,"XKB_KEY_Thai_maihanakat","","",null,null],[17,"XKB_KEY_Thai_saraaa","","",null,null],[17,"XKB_KEY_Thai_saraam","","",null,null],[17,"XKB_KEY_Thai_sarai","","",null,null],[17,"XKB_KEY_Thai_saraii","","",null,null],[17,"XKB_KEY_Thai_saraue","","",null,null],[17,"XKB_KEY_Thai_sarauee","","",null,null],[17,"XKB_KEY_Thai_sarau","","",null,null],[17,"XKB_KEY_Thai_sarauu","","",null,null],[17,"XKB_KEY_Thai_phinthu","","",null,null],[17,"XKB_KEY_Thai_maihanakat_maitho","","",null,null],[17,"XKB_KEY_Thai_baht","","",null,null],[17,"XKB_KEY_Thai_sarae","","",null,null],[17,"XKB_KEY_Thai_saraae","","",null,null],[17,"XKB_KEY_Thai_sarao","","",null,null],[17,"XKB_KEY_Thai_saraaimaimuan","","",null,null],[17,"XKB_KEY_Thai_saraaimaimalai","","",null,null],[17,"XKB_KEY_Thai_lakkhangyao","","",null,null],[17,"XKB_KEY_Thai_maiyamok","","",null,null],[17,"XKB_KEY_Thai_maitaikhu","","",null,null],[17,"XKB_KEY_Thai_maiek","","",null,null],[17,"XKB_KEY_Thai_maitho","","",null,null],[17,"XKB_KEY_Thai_maitri","","",null,null],[17,"XKB_KEY_Thai_maichattawa","","",null,null],[17,"XKB_KEY_Thai_thanthakhat","","",null,null],[17,"XKB_KEY_Thai_nikhahit","","",null,null],[17,"XKB_KEY_Thai_leksun","","",null,null],[17,"XKB_KEY_Thai_leknung","","",null,null],[17,"XKB_KEY_Thai_leksong","","",null,null],[17,"XKB_KEY_Thai_leksam","","",null,null],[17,"XKB_KEY_Thai_leksi","","",null,null],[17,"XKB_KEY_Thai_lekha","","",null,null],[17,"XKB_KEY_Thai_lekhok","","",null,null],[17,"XKB_KEY_Thai_lekchet","","",null,null],[17,"XKB_KEY_Thai_lekpaet","","",null,null],[17,"XKB_KEY_Thai_lekkao","","",null,null],[17,"XKB_KEY_Hangul","","",null,null],[17,"XKB_KEY_Hangul_Start","","",null,null],[17,"XKB_KEY_Hangul_End","","",null,null],[17,"XKB_KEY_Hangul_Hanja","","",null,null],[17,"XKB_KEY_Hangul_Jamo","","",null,null],[17,"XKB_KEY_Hangul_Romaja","","",null,null],[17,"XKB_KEY_Hangul_Codeinput","","",null,null],[17,"XKB_KEY_Hangul_Jeonja","","",null,null],[17,"XKB_KEY_Hangul_Banja","","",null,null],[17,"XKB_KEY_Hangul_PreHanja","","",null,null],[17,"XKB_KEY_Hangul_PostHanja","","",null,null],[17,"XKB_KEY_Hangul_SingleCandidate","","",null,null],[17,"XKB_KEY_Hangul_MultipleCandidate","","",null,null],[17,"XKB_KEY_Hangul_PreviousCandidate","","",null,null],[17,"XKB_KEY_Hangul_Special","","",null,null],[17,"XKB_KEY_Hangul_switch","","",null,null],[17,"XKB_KEY_Hangul_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_Nieun","","",null,null],[17,"XKB_KEY_Hangul_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_SsangDikeud","","",null,null],[17,"XKB_KEY_Hangul_Rieul","","",null,null],[17,"XKB_KEY_Hangul_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_Mieum","","",null,null],[17,"XKB_KEY_Hangul_Pieub","","",null,null],[17,"XKB_KEY_Hangul_SsangPieub","","",null,null],[17,"XKB_KEY_Hangul_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_Sios","","",null,null],[17,"XKB_KEY_Hangul_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_Ieung","","",null,null],[17,"XKB_KEY_Hangul_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_SsangJieuj","","",null,null],[17,"XKB_KEY_Hangul_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_Tieut","","",null,null],[17,"XKB_KEY_Hangul_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_A","","",null,null],[17,"XKB_KEY_Hangul_AE","","",null,null],[17,"XKB_KEY_Hangul_YA","","",null,null],[17,"XKB_KEY_Hangul_YAE","","",null,null],[17,"XKB_KEY_Hangul_EO","","",null,null],[17,"XKB_KEY_Hangul_E","","",null,null],[17,"XKB_KEY_Hangul_YEO","","",null,null],[17,"XKB_KEY_Hangul_YE","","",null,null],[17,"XKB_KEY_Hangul_O","","",null,null],[17,"XKB_KEY_Hangul_WA","","",null,null],[17,"XKB_KEY_Hangul_WAE","","",null,null],[17,"XKB_KEY_Hangul_OE","","",null,null],[17,"XKB_KEY_Hangul_YO","","",null,null],[17,"XKB_KEY_Hangul_U","","",null,null],[17,"XKB_KEY_Hangul_WEO","","",null,null],[17,"XKB_KEY_Hangul_WE","","",null,null],[17,"XKB_KEY_Hangul_WI","","",null,null],[17,"XKB_KEY_Hangul_YU","","",null,null],[17,"XKB_KEY_Hangul_EU","","",null,null],[17,"XKB_KEY_Hangul_YI","","",null,null],[17,"XKB_KEY_Hangul_I","","",null,null],[17,"XKB_KEY_Hangul_J_Kiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_SsangKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_KiyeogSios","","",null,null],[17,"XKB_KEY_Hangul_J_Nieun","","",null,null],[17,"XKB_KEY_Hangul_J_NieunJieuj","","",null,null],[17,"XKB_KEY_Hangul_J_NieunHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Dikeud","","",null,null],[17,"XKB_KEY_Hangul_J_Rieul","","",null,null],[17,"XKB_KEY_Hangul_J_RieulKiyeog","","",null,null],[17,"XKB_KEY_Hangul_J_RieulMieum","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPieub","","",null,null],[17,"XKB_KEY_Hangul_J_RieulSios","","",null,null],[17,"XKB_KEY_Hangul_J_RieulTieut","","",null,null],[17,"XKB_KEY_Hangul_J_RieulPhieuf","","",null,null],[17,"XKB_KEY_Hangul_J_RieulHieuh","","",null,null],[17,"XKB_KEY_Hangul_J_Mieum","","",null,null],[17,"XKB_KEY_Hangul_J_Pieub","","",null,null],[17,"XKB_KEY_Hangul_J_PieubSios","","",null,null],[17,"XKB_KEY_Hangul_J_Sios","","",null,null],[17,"XKB_KEY_Hangul_J_SsangSios","","",null,null],[17,"XKB_KEY_Hangul_J_Ieung","","",null,null],[17,"XKB_KEY_Hangul_J_Jieuj","","",null,null],[17,"XKB_KEY_Hangul_J_Cieuc","","",null,null],[17,"XKB_KEY_Hangul_J_Khieuq","","",null,null],[17,"XKB_KEY_Hangul_J_Tieut","","",null,null],[17,"XKB_KEY_Hangul_J_Phieuf","","",null,null],[17,"XKB_KEY_Hangul_J_Hieuh","","",null,null],[17,"XKB_KEY_Hangul_RieulYeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumMieum","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPieub","","",null,null],[17,"XKB_KEY_Hangul_PanSios","","",null,null],[17,"XKB_KEY_Hangul_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_SunkyeongeumPhieuf","","",null,null],[17,"XKB_KEY_Hangul_YeorinHieuh","","",null,null],[17,"XKB_KEY_Hangul_AraeA","","",null,null],[17,"XKB_KEY_Hangul_AraeAE","","",null,null],[17,"XKB_KEY_Hangul_J_PanSios","","",null,null],[17,"XKB_KEY_Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"XKB_KEY_Hangul_J_YeorinHieuh","","",null,null],[17,"XKB_KEY_Korean_Won","","",null,null],[17,"XKB_KEY_Armenian_ligature_ew","","",null,null],[17,"XKB_KEY_Armenian_full_stop","","",null,null],[17,"XKB_KEY_Armenian_verjaket","","",null,null],[17,"XKB_KEY_Armenian_separation_mark","","",null,null],[17,"XKB_KEY_Armenian_but","","",null,null],[17,"XKB_KEY_Armenian_hyphen","","",null,null],[17,"XKB_KEY_Armenian_yentamna","","",null,null],[17,"XKB_KEY_Armenian_exclam","","",null,null],[17,"XKB_KEY_Armenian_amanak","","",null,null],[17,"XKB_KEY_Armenian_accent","","",null,null],[17,"XKB_KEY_Armenian_shesht","","",null,null],[17,"XKB_KEY_Armenian_question","","",null,null],[17,"XKB_KEY_Armenian_paruyk","","",null,null],[17,"XKB_KEY_Armenian_AYB","","",null,null],[17,"XKB_KEY_Armenian_ayb","","",null,null],[17,"XKB_KEY_Armenian_BEN","","",null,null],[17,"XKB_KEY_Armenian_ben","","",null,null],[17,"XKB_KEY_Armenian_GIM","","",null,null],[17,"XKB_KEY_Armenian_gim","","",null,null],[17,"XKB_KEY_Armenian_DA","","",null,null],[17,"XKB_KEY_Armenian_da","","",null,null],[17,"XKB_KEY_Armenian_YECH","","",null,null],[17,"XKB_KEY_Armenian_yech","","",null,null],[17,"XKB_KEY_Armenian_ZA","","",null,null],[17,"XKB_KEY_Armenian_za","","",null,null],[17,"XKB_KEY_Armenian_E","","",null,null],[17,"XKB_KEY_Armenian_e","","",null,null],[17,"XKB_KEY_Armenian_AT","","",null,null],[17,"XKB_KEY_Armenian_at","","",null,null],[17,"XKB_KEY_Armenian_TO","","",null,null],[17,"XKB_KEY_Armenian_to","","",null,null],[17,"XKB_KEY_Armenian_ZHE","","",null,null],[17,"XKB_KEY_Armenian_zhe","","",null,null],[17,"XKB_KEY_Armenian_INI","","",null,null],[17,"XKB_KEY_Armenian_ini","","",null,null],[17,"XKB_KEY_Armenian_LYUN","","",null,null],[17,"XKB_KEY_Armenian_lyun","","",null,null],[17,"XKB_KEY_Armenian_KHE","","",null,null],[17,"XKB_KEY_Armenian_khe","","",null,null],[17,"XKB_KEY_Armenian_TSA","","",null,null],[17,"XKB_KEY_Armenian_tsa","","",null,null],[17,"XKB_KEY_Armenian_KEN","","",null,null],[17,"XKB_KEY_Armenian_ken","","",null,null],[17,"XKB_KEY_Armenian_HO","","",null,null],[17,"XKB_KEY_Armenian_ho","","",null,null],[17,"XKB_KEY_Armenian_DZA","","",null,null],[17,"XKB_KEY_Armenian_dza","","",null,null],[17,"XKB_KEY_Armenian_GHAT","","",null,null],[17,"XKB_KEY_Armenian_ghat","","",null,null],[17,"XKB_KEY_Armenian_TCHE","","",null,null],[17,"XKB_KEY_Armenian_tche","","",null,null],[17,"XKB_KEY_Armenian_MEN","","",null,null],[17,"XKB_KEY_Armenian_men","","",null,null],[17,"XKB_KEY_Armenian_HI","","",null,null],[17,"XKB_KEY_Armenian_hi","","",null,null],[17,"XKB_KEY_Armenian_NU","","",null,null],[17,"XKB_KEY_Armenian_nu","","",null,null],[17,"XKB_KEY_Armenian_SHA","","",null,null],[17,"XKB_KEY_Armenian_sha","","",null,null],[17,"XKB_KEY_Armenian_VO","","",null,null],[17,"XKB_KEY_Armenian_vo","","",null,null],[17,"XKB_KEY_Armenian_CHA","","",null,null],[17,"XKB_KEY_Armenian_cha","","",null,null],[17,"XKB_KEY_Armenian_PE","","",null,null],[17,"XKB_KEY_Armenian_pe","","",null,null],[17,"XKB_KEY_Armenian_JE","","",null,null],[17,"XKB_KEY_Armenian_je","","",null,null],[17,"XKB_KEY_Armenian_RA","","",null,null],[17,"XKB_KEY_Armenian_ra","","",null,null],[17,"XKB_KEY_Armenian_SE","","",null,null],[17,"XKB_KEY_Armenian_se","","",null,null],[17,"XKB_KEY_Armenian_VEV","","",null,null],[17,"XKB_KEY_Armenian_vev","","",null,null],[17,"XKB_KEY_Armenian_TYUN","","",null,null],[17,"XKB_KEY_Armenian_tyun","","",null,null],[17,"XKB_KEY_Armenian_RE","","",null,null],[17,"XKB_KEY_Armenian_re","","",null,null],[17,"XKB_KEY_Armenian_TSO","","",null,null],[17,"XKB_KEY_Armenian_tso","","",null,null],[17,"XKB_KEY_Armenian_VYUN","","",null,null],[17,"XKB_KEY_Armenian_vyun","","",null,null],[17,"XKB_KEY_Armenian_PYUR","","",null,null],[17,"XKB_KEY_Armenian_pyur","","",null,null],[17,"XKB_KEY_Armenian_KE","","",null,null],[17,"XKB_KEY_Armenian_ke","","",null,null],[17,"XKB_KEY_Armenian_O","","",null,null],[17,"XKB_KEY_Armenian_o","","",null,null],[17,"XKB_KEY_Armenian_FE","","",null,null],[17,"XKB_KEY_Armenian_fe","","",null,null],[17,"XKB_KEY_Armenian_apostrophe","","",null,null],[17,"XKB_KEY_Georgian_an","","",null,null],[17,"XKB_KEY_Georgian_ban","","",null,null],[17,"XKB_KEY_Georgian_gan","","",null,null],[17,"XKB_KEY_Georgian_don","","",null,null],[17,"XKB_KEY_Georgian_en","","",null,null],[17,"XKB_KEY_Georgian_vin","","",null,null],[17,"XKB_KEY_Georgian_zen","","",null,null],[17,"XKB_KEY_Georgian_tan","","",null,null],[17,"XKB_KEY_Georgian_in","","",null,null],[17,"XKB_KEY_Georgian_kan","","",null,null],[17,"XKB_KEY_Georgian_las","","",null,null],[17,"XKB_KEY_Georgian_man","","",null,null],[17,"XKB_KEY_Georgian_nar","","",null,null],[17,"XKB_KEY_Georgian_on","","",null,null],[17,"XKB_KEY_Georgian_par","","",null,null],[17,"XKB_KEY_Georgian_zhar","","",null,null],[17,"XKB_KEY_Georgian_rae","","",null,null],[17,"XKB_KEY_Georgian_san","","",null,null],[17,"XKB_KEY_Georgian_tar","","",null,null],[17,"XKB_KEY_Georgian_un","","",null,null],[17,"XKB_KEY_Georgian_phar","","",null,null],[17,"XKB_KEY_Georgian_khar","","",null,null],[17,"XKB_KEY_Georgian_ghan","","",null,null],[17,"XKB_KEY_Georgian_qar","","",null,null],[17,"XKB_KEY_Georgian_shin","","",null,null],[17,"XKB_KEY_Georgian_chin","","",null,null],[17,"XKB_KEY_Georgian_can","","",null,null],[17,"XKB_KEY_Georgian_jil","","",null,null],[17,"XKB_KEY_Georgian_cil","","",null,null],[17,"XKB_KEY_Georgian_char","","",null,null],[17,"XKB_KEY_Georgian_xan","","",null,null],[17,"XKB_KEY_Georgian_jhan","","",null,null],[17,"XKB_KEY_Georgian_hae","","",null,null],[17,"XKB_KEY_Georgian_he","","",null,null],[17,"XKB_KEY_Georgian_hie","","",null,null],[17,"XKB_KEY_Georgian_we","","",null,null],[17,"XKB_KEY_Georgian_har","","",null,null],[17,"XKB_KEY_Georgian_hoe","","",null,null],[17,"XKB_KEY_Georgian_fi","","",null,null],[17,"XKB_KEY_Xabovedot","","",null,null],[17,"XKB_KEY_Ibreve","","",null,null],[17,"XKB_KEY_Zstroke","","",null,null],[17,"XKB_KEY_Gcaron","","",null,null],[17,"XKB_KEY_Ocaron","","",null,null],[17,"XKB_KEY_Obarred","","",null,null],[17,"XKB_KEY_xabovedot","","",null,null],[17,"XKB_KEY_ibreve","","",null,null],[17,"XKB_KEY_zstroke","","",null,null],[17,"XKB_KEY_gcaron","","",null,null],[17,"XKB_KEY_ocaron","","",null,null],[17,"XKB_KEY_obarred","","",null,null],[17,"XKB_KEY_SCHWA","","",null,null],[17,"XKB_KEY_schwa","","",null,null],[17,"XKB_KEY_EZH","","",null,null],[17,"XKB_KEY_ezh","","",null,null],[17,"XKB_KEY_Lbelowdot","","",null,null],[17,"XKB_KEY_lbelowdot","","",null,null],[17,"XKB_KEY_Abelowdot","","",null,null],[17,"XKB_KEY_abelowdot","","",null,null],[17,"XKB_KEY_Ahook","","",null,null],[17,"XKB_KEY_ahook","","",null,null],[17,"XKB_KEY_Acircumflexacute","","",null,null],[17,"XKB_KEY_acircumflexacute","","",null,null],[17,"XKB_KEY_Acircumflexgrave","","",null,null],[17,"XKB_KEY_acircumflexgrave","","",null,null],[17,"XKB_KEY_Acircumflexhook","","",null,null],[17,"XKB_KEY_acircumflexhook","","",null,null],[17,"XKB_KEY_Acircumflextilde","","",null,null],[17,"XKB_KEY_acircumflextilde","","",null,null],[17,"XKB_KEY_Acircumflexbelowdot","","",null,null],[17,"XKB_KEY_acircumflexbelowdot","","",null,null],[17,"XKB_KEY_Abreveacute","","",null,null],[17,"XKB_KEY_abreveacute","","",null,null],[17,"XKB_KEY_Abrevegrave","","",null,null],[17,"XKB_KEY_abrevegrave","","",null,null],[17,"XKB_KEY_Abrevehook","","",null,null],[17,"XKB_KEY_abrevehook","","",null,null],[17,"XKB_KEY_Abrevetilde","","",null,null],[17,"XKB_KEY_abrevetilde","","",null,null],[17,"XKB_KEY_Abrevebelowdot","","",null,null],[17,"XKB_KEY_abrevebelowdot","","",null,null],[17,"XKB_KEY_Ebelowdot","","",null,null],[17,"XKB_KEY_ebelowdot","","",null,null],[17,"XKB_KEY_Ehook","","",null,null],[17,"XKB_KEY_ehook","","",null,null],[17,"XKB_KEY_Etilde","","",null,null],[17,"XKB_KEY_etilde","","",null,null],[17,"XKB_KEY_Ecircumflexacute","","",null,null],[17,"XKB_KEY_ecircumflexacute","","",null,null],[17,"XKB_KEY_Ecircumflexgrave","","",null,null],[17,"XKB_KEY_ecircumflexgrave","","",null,null],[17,"XKB_KEY_Ecircumflexhook","","",null,null],[17,"XKB_KEY_ecircumflexhook","","",null,null],[17,"XKB_KEY_Ecircumflextilde","","",null,null],[17,"XKB_KEY_ecircumflextilde","","",null,null],[17,"XKB_KEY_Ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_ecircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ihook","","",null,null],[17,"XKB_KEY_ihook","","",null,null],[17,"XKB_KEY_Ibelowdot","","",null,null],[17,"XKB_KEY_ibelowdot","","",null,null],[17,"XKB_KEY_Obelowdot","","",null,null],[17,"XKB_KEY_obelowdot","","",null,null],[17,"XKB_KEY_Ohook","","",null,null],[17,"XKB_KEY_ohook","","",null,null],[17,"XKB_KEY_Ocircumflexacute","","",null,null],[17,"XKB_KEY_ocircumflexacute","","",null,null],[17,"XKB_KEY_Ocircumflexgrave","","",null,null],[17,"XKB_KEY_ocircumflexgrave","","",null,null],[17,"XKB_KEY_Ocircumflexhook","","",null,null],[17,"XKB_KEY_ocircumflexhook","","",null,null],[17,"XKB_KEY_Ocircumflextilde","","",null,null],[17,"XKB_KEY_ocircumflextilde","","",null,null],[17,"XKB_KEY_Ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_ocircumflexbelowdot","","",null,null],[17,"XKB_KEY_Ohornacute","","",null,null],[17,"XKB_KEY_ohornacute","","",null,null],[17,"XKB_KEY_Ohorngrave","","",null,null],[17,"XKB_KEY_ohorngrave","","",null,null],[17,"XKB_KEY_Ohornhook","","",null,null],[17,"XKB_KEY_ohornhook","","",null,null],[17,"XKB_KEY_Ohorntilde","","",null,null],[17,"XKB_KEY_ohorntilde","","",null,null],[17,"XKB_KEY_Ohornbelowdot","","",null,null],[17,"XKB_KEY_ohornbelowdot","","",null,null],[17,"XKB_KEY_Ubelowdot","","",null,null],[17,"XKB_KEY_ubelowdot","","",null,null],[17,"XKB_KEY_Uhook","","",null,null],[17,"XKB_KEY_uhook","","",null,null],[17,"XKB_KEY_Uhornacute","","",null,null],[17,"XKB_KEY_uhornacute","","",null,null],[17,"XKB_KEY_Uhorngrave","","",null,null],[17,"XKB_KEY_uhorngrave","","",null,null],[17,"XKB_KEY_Uhornhook","","",null,null],[17,"XKB_KEY_uhornhook","","",null,null],[17,"XKB_KEY_Uhorntilde","","",null,null],[17,"XKB_KEY_uhorntilde","","",null,null],[17,"XKB_KEY_Uhornbelowdot","","",null,null],[17,"XKB_KEY_uhornbelowdot","","",null,null],[17,"XKB_KEY_Ybelowdot","","",null,null],[17,"XKB_KEY_ybelowdot","","",null,null],[17,"XKB_KEY_Yhook","","",null,null],[17,"XKB_KEY_yhook","","",null,null],[17,"XKB_KEY_Ytilde","","",null,null],[17,"XKB_KEY_ytilde","","",null,null],[17,"XKB_KEY_Ohorn","","",null,null],[17,"XKB_KEY_ohorn","","",null,null],[17,"XKB_KEY_Uhorn","","",null,null],[17,"XKB_KEY_uhorn","","",null,null],[17,"XKB_KEY_EcuSign","","",null,null],[17,"XKB_KEY_ColonSign","","",null,null],[17,"XKB_KEY_CruzeiroSign","","",null,null],[17,"XKB_KEY_FFrancSign","","",null,null],[17,"XKB_KEY_LiraSign","","",null,null],[17,"XKB_KEY_MillSign","","",null,null],[17,"XKB_KEY_NairaSign","","",null,null],[17,"XKB_KEY_PesetaSign","","",null,null],[17,"XKB_KEY_RupeeSign","","",null,null],[17,"XKB_KEY_WonSign","","",null,null],[17,"XKB_KEY_NewSheqelSign","","",null,null],[17,"XKB_KEY_DongSign","","",null,null],[17,"XKB_KEY_EuroSign","","",null,null],[17,"XKB_KEY_zerosuperior","","",null,null],[17,"XKB_KEY_foursuperior","","",null,null],[17,"XKB_KEY_fivesuperior","","",null,null],[17,"XKB_KEY_sixsuperior","","",null,null],[17,"XKB_KEY_sevensuperior","","",null,null],[17,"XKB_KEY_eightsuperior","","",null,null],[17,"XKB_KEY_ninesuperior","","",null,null],[17,"XKB_KEY_zerosubscript","","",null,null],[17,"XKB_KEY_onesubscript","","",null,null],[17,"XKB_KEY_twosubscript","","",null,null],[17,"XKB_KEY_threesubscript","","",null,null],[17,"XKB_KEY_foursubscript","","",null,null],[17,"XKB_KEY_fivesubscript","","",null,null],[17,"XKB_KEY_sixsubscript","","",null,null],[17,"XKB_KEY_sevensubscript","","",null,null],[17,"XKB_KEY_eightsubscript","","",null,null],[17,"XKB_KEY_ninesubscript","","",null,null],[17,"XKB_KEY_partdifferential","","",null,null],[17,"XKB_KEY_emptyset","","",null,null],[17,"XKB_KEY_elementof","","",null,null],[17,"XKB_KEY_notelementof","","",null,null],[17,"XKB_KEY_containsas","","",null,null],[17,"XKB_KEY_squareroot","","",null,null],[17,"XKB_KEY_cuberoot","","",null,null],[17,"XKB_KEY_fourthroot","","",null,null],[17,"XKB_KEY_dintegral","","",null,null],[17,"XKB_KEY_tintegral","","",null,null],[17,"XKB_KEY_because","","",null,null],[17,"XKB_KEY_approxeq","","",null,null],[17,"XKB_KEY_notapproxeq","","",null,null],[17,"XKB_KEY_notidentical","","",null,null],[17,"XKB_KEY_stricteq","","",null,null],[17,"XKB_KEY_braille_dot_1","","",null,null],[17,"XKB_KEY_braille_dot_2","","",null,null],[17,"XKB_KEY_braille_dot_3","","",null,null],[17,"XKB_KEY_braille_dot_4","","",null,null],[17,"XKB_KEY_braille_dot_5","","",null,null],[17,"XKB_KEY_braille_dot_6","","",null,null],[17,"XKB_KEY_braille_dot_7","","",null,null],[17,"XKB_KEY_braille_dot_8","","",null,null],[17,"XKB_KEY_braille_dot_9","","",null,null],[17,"XKB_KEY_braille_dot_10","","",null,null],[17,"XKB_KEY_braille_blank","","",null,null],[17,"XKB_KEY_braille_dots_1","","",null,null],[17,"XKB_KEY_braille_dots_2","","",null,null],[17,"XKB_KEY_braille_dots_12","","",null,null],[17,"XKB_KEY_braille_dots_3","","",null,null],[17,"XKB_KEY_braille_dots_13","","",null,null],[17,"XKB_KEY_braille_dots_23","","",null,null],[17,"XKB_KEY_braille_dots_123","","",null,null],[17,"XKB_KEY_braille_dots_4","","",null,null],[17,"XKB_KEY_braille_dots_14","","",null,null],[17,"XKB_KEY_braille_dots_24","","",null,null],[17,"XKB_KEY_braille_dots_124","","",null,null],[17,"XKB_KEY_braille_dots_34","","",null,null],[17,"XKB_KEY_braille_dots_134","","",null,null],[17,"XKB_KEY_braille_dots_234","","",null,null],[17,"XKB_KEY_braille_dots_1234","","",null,null],[17,"XKB_KEY_braille_dots_5","","",null,null],[17,"XKB_KEY_braille_dots_15","","",null,null],[17,"XKB_KEY_braille_dots_25","","",null,null],[17,"XKB_KEY_braille_dots_125","","",null,null],[17,"XKB_KEY_braille_dots_35","","",null,null],[17,"XKB_KEY_braille_dots_135","","",null,null],[17,"XKB_KEY_braille_dots_235","","",null,null],[17,"XKB_KEY_braille_dots_1235","","",null,null],[17,"XKB_KEY_braille_dots_45","","",null,null],[17,"XKB_KEY_braille_dots_145","","",null,null],[17,"XKB_KEY_braille_dots_245","","",null,null],[17,"XKB_KEY_braille_dots_1245","","",null,null],[17,"XKB_KEY_braille_dots_345","","",null,null],[17,"XKB_KEY_braille_dots_1345","","",null,null],[17,"XKB_KEY_braille_dots_2345","","",null,null],[17,"XKB_KEY_braille_dots_12345","","",null,null],[17,"XKB_KEY_braille_dots_6","","",null,null],[17,"XKB_KEY_braille_dots_16","","",null,null],[17,"XKB_KEY_braille_dots_26","","",null,null],[17,"XKB_KEY_braille_dots_126","","",null,null],[17,"XKB_KEY_braille_dots_36","","",null,null],[17,"XKB_KEY_braille_dots_136","","",null,null],[17,"XKB_KEY_braille_dots_236","","",null,null],[17,"XKB_KEY_braille_dots_1236","","",null,null],[17,"XKB_KEY_braille_dots_46","","",null,null],[17,"XKB_KEY_braille_dots_146","","",null,null],[17,"XKB_KEY_braille_dots_246","","",null,null],[17,"XKB_KEY_braille_dots_1246","","",null,null],[17,"XKB_KEY_braille_dots_346","","",null,null],[17,"XKB_KEY_braille_dots_1346","","",null,null],[17,"XKB_KEY_braille_dots_2346","","",null,null],[17,"XKB_KEY_braille_dots_12346","","",null,null],[17,"XKB_KEY_braille_dots_56","","",null,null],[17,"XKB_KEY_braille_dots_156","","",null,null],[17,"XKB_KEY_braille_dots_256","","",null,null],[17,"XKB_KEY_braille_dots_1256","","",null,null],[17,"XKB_KEY_braille_dots_356","","",null,null],[17,"XKB_KEY_braille_dots_1356","","",null,null],[17,"XKB_KEY_braille_dots_2356","","",null,null],[17,"XKB_KEY_braille_dots_12356","","",null,null],[17,"XKB_KEY_braille_dots_456","","",null,null],[17,"XKB_KEY_braille_dots_1456","","",null,null],[17,"XKB_KEY_braille_dots_2456","","",null,null],[17,"XKB_KEY_braille_dots_12456","","",null,null],[17,"XKB_KEY_braille_dots_3456","","",null,null],[17,"XKB_KEY_braille_dots_13456","","",null,null],[17,"XKB_KEY_braille_dots_23456","","",null,null],[17,"XKB_KEY_braille_dots_123456","","",null,null],[17,"XKB_KEY_braille_dots_7","","",null,null],[17,"XKB_KEY_braille_dots_17","","",null,null],[17,"XKB_KEY_braille_dots_27","","",null,null],[17,"XKB_KEY_braille_dots_127","","",null,null],[17,"XKB_KEY_braille_dots_37","","",null,null],[17,"XKB_KEY_braille_dots_137","","",null,null],[17,"XKB_KEY_braille_dots_237","","",null,null],[17,"XKB_KEY_braille_dots_1237","","",null,null],[17,"XKB_KEY_braille_dots_47","","",null,null],[17,"XKB_KEY_braille_dots_147","","",null,null],[17,"XKB_KEY_braille_dots_247","","",null,null],[17,"XKB_KEY_braille_dots_1247","","",null,null],[17,"XKB_KEY_braille_dots_347","","",null,null],[17,"XKB_KEY_braille_dots_1347","","",null,null],[17,"XKB_KEY_braille_dots_2347","","",null,null],[17,"XKB_KEY_braille_dots_12347","","",null,null],[17,"XKB_KEY_braille_dots_57","","",null,null],[17,"XKB_KEY_braille_dots_157","","",null,null],[17,"XKB_KEY_braille_dots_257","","",null,null],[17,"XKB_KEY_braille_dots_1257","","",null,null],[17,"XKB_KEY_braille_dots_357","","",null,null],[17,"XKB_KEY_braille_dots_1357","","",null,null],[17,"XKB_KEY_braille_dots_2357","","",null,null],[17,"XKB_KEY_braille_dots_12357","","",null,null],[17,"XKB_KEY_braille_dots_457","","",null,null],[17,"XKB_KEY_braille_dots_1457","","",null,null],[17,"XKB_KEY_braille_dots_2457","","",null,null],[17,"XKB_KEY_braille_dots_12457","","",null,null],[17,"XKB_KEY_braille_dots_3457","","",null,null],[17,"XKB_KEY_braille_dots_13457","","",null,null],[17,"XKB_KEY_braille_dots_23457","","",null,null],[17,"XKB_KEY_braille_dots_123457","","",null,null],[17,"XKB_KEY_braille_dots_67","","",null,null],[17,"XKB_KEY_braille_dots_167","","",null,null],[17,"XKB_KEY_braille_dots_267","","",null,null],[17,"XKB_KEY_braille_dots_1267","","",null,null],[17,"XKB_KEY_braille_dots_367","","",null,null],[17,"XKB_KEY_braille_dots_1367","","",null,null],[17,"XKB_KEY_braille_dots_2367","","",null,null],[17,"XKB_KEY_braille_dots_12367","","",null,null],[17,"XKB_KEY_braille_dots_467","","",null,null],[17,"XKB_KEY_braille_dots_1467","","",null,null],[17,"XKB_KEY_braille_dots_2467","","",null,null],[17,"XKB_KEY_braille_dots_12467","","",null,null],[17,"XKB_KEY_braille_dots_3467","","",null,null],[17,"XKB_KEY_braille_dots_13467","","",null,null],[17,"XKB_KEY_braille_dots_23467","","",null,null],[17,"XKB_KEY_braille_dots_123467","","",null,null],[17,"XKB_KEY_braille_dots_567","","",null,null],[17,"XKB_KEY_braille_dots_1567","","",null,null],[17,"XKB_KEY_braille_dots_2567","","",null,null],[17,"XKB_KEY_braille_dots_12567","","",null,null],[17,"XKB_KEY_braille_dots_3567","","",null,null],[17,"XKB_KEY_braille_dots_13567","","",null,null],[17,"XKB_KEY_braille_dots_23567","","",null,null],[17,"XKB_KEY_braille_dots_123567","","",null,null],[17,"XKB_KEY_braille_dots_4567","","",null,null],[17,"XKB_KEY_braille_dots_14567","","",null,null],[17,"XKB_KEY_braille_dots_24567","","",null,null],[17,"XKB_KEY_braille_dots_124567","","",null,null],[17,"XKB_KEY_braille_dots_34567","","",null,null],[17,"XKB_KEY_braille_dots_134567","","",null,null],[17,"XKB_KEY_braille_dots_234567","","",null,null],[17,"XKB_KEY_braille_dots_1234567","","",null,null],[17,"XKB_KEY_braille_dots_8","","",null,null],[17,"XKB_KEY_braille_dots_18","","",null,null],[17,"XKB_KEY_braille_dots_28","","",null,null],[17,"XKB_KEY_braille_dots_128","","",null,null],[17,"XKB_KEY_braille_dots_38","","",null,null],[17,"XKB_KEY_braille_dots_138","","",null,null],[17,"XKB_KEY_braille_dots_238","","",null,null],[17,"XKB_KEY_braille_dots_1238","","",null,null],[17,"XKB_KEY_braille_dots_48","","",null,null],[17,"XKB_KEY_braille_dots_148","","",null,null],[17,"XKB_KEY_braille_dots_248","","",null,null],[17,"XKB_KEY_braille_dots_1248","","",null,null],[17,"XKB_KEY_braille_dots_348","","",null,null],[17,"XKB_KEY_braille_dots_1348","","",null,null],[17,"XKB_KEY_braille_dots_2348","","",null,null],[17,"XKB_KEY_braille_dots_12348","","",null,null],[17,"XKB_KEY_braille_dots_58","","",null,null],[17,"XKB_KEY_braille_dots_158","","",null,null],[17,"XKB_KEY_braille_dots_258","","",null,null],[17,"XKB_KEY_braille_dots_1258","","",null,null],[17,"XKB_KEY_braille_dots_358","","",null,null],[17,"XKB_KEY_braille_dots_1358","","",null,null],[17,"XKB_KEY_braille_dots_2358","","",null,null],[17,"XKB_KEY_braille_dots_12358","","",null,null],[17,"XKB_KEY_braille_dots_458","","",null,null],[17,"XKB_KEY_braille_dots_1458","","",null,null],[17,"XKB_KEY_braille_dots_2458","","",null,null],[17,"XKB_KEY_braille_dots_12458","","",null,null],[17,"XKB_KEY_braille_dots_3458","","",null,null],[17,"XKB_KEY_braille_dots_13458","","",null,null],[17,"XKB_KEY_braille_dots_23458","","",null,null],[17,"XKB_KEY_braille_dots_123458","","",null,null],[17,"XKB_KEY_braille_dots_68","","",null,null],[17,"XKB_KEY_braille_dots_168","","",null,null],[17,"XKB_KEY_braille_dots_268","","",null,null],[17,"XKB_KEY_braille_dots_1268","","",null,null],[17,"XKB_KEY_braille_dots_368","","",null,null],[17,"XKB_KEY_braille_dots_1368","","",null,null],[17,"XKB_KEY_braille_dots_2368","","",null,null],[17,"XKB_KEY_braille_dots_12368","","",null,null],[17,"XKB_KEY_braille_dots_468","","",null,null],[17,"XKB_KEY_braille_dots_1468","","",null,null],[17,"XKB_KEY_braille_dots_2468","","",null,null],[17,"XKB_KEY_braille_dots_12468","","",null,null],[17,"XKB_KEY_braille_dots_3468","","",null,null],[17,"XKB_KEY_braille_dots_13468","","",null,null],[17,"XKB_KEY_braille_dots_23468","","",null,null],[17,"XKB_KEY_braille_dots_123468","","",null,null],[17,"XKB_KEY_braille_dots_568","","",null,null],[17,"XKB_KEY_braille_dots_1568","","",null,null],[17,"XKB_KEY_braille_dots_2568","","",null,null],[17,"XKB_KEY_braille_dots_12568","","",null,null],[17,"XKB_KEY_braille_dots_3568","","",null,null],[17,"XKB_KEY_braille_dots_13568","","",null,null],[17,"XKB_KEY_braille_dots_23568","","",null,null],[17,"XKB_KEY_braille_dots_123568","","",null,null],[17,"XKB_KEY_braille_dots_4568","","",null,null],[17,"XKB_KEY_braille_dots_14568","","",null,null],[17,"XKB_KEY_braille_dots_24568","","",null,null],[17,"XKB_KEY_braille_dots_124568","","",null,null],[17,"XKB_KEY_braille_dots_34568","","",null,null],[17,"XKB_KEY_braille_dots_134568","","",null,null],[17,"XKB_KEY_braille_dots_234568","","",null,null],[17,"XKB_KEY_braille_dots_1234568","","",null,null],[17,"XKB_KEY_braille_dots_78","","",null,null],[17,"XKB_KEY_braille_dots_178","","",null,null],[17,"XKB_KEY_braille_dots_278","","",null,null],[17,"XKB_KEY_braille_dots_1278","","",null,null],[17,"XKB_KEY_braille_dots_378","","",null,null],[17,"XKB_KEY_braille_dots_1378","","",null,null],[17,"XKB_KEY_braille_dots_2378","","",null,null],[17,"XKB_KEY_braille_dots_12378","","",null,null],[17,"XKB_KEY_braille_dots_478","","",null,null],[17,"XKB_KEY_braille_dots_1478","","",null,null],[17,"XKB_KEY_braille_dots_2478","","",null,null],[17,"XKB_KEY_braille_dots_12478","","",null,null],[17,"XKB_KEY_braille_dots_3478","","",null,null],[17,"XKB_KEY_braille_dots_13478","","",null,null],[17,"XKB_KEY_braille_dots_23478","","",null,null],[17,"XKB_KEY_braille_dots_123478","","",null,null],[17,"XKB_KEY_braille_dots_578","","",null,null],[17,"XKB_KEY_braille_dots_1578","","",null,null],[17,"XKB_KEY_braille_dots_2578","","",null,null],[17,"XKB_KEY_braille_dots_12578","","",null,null],[17,"XKB_KEY_braille_dots_3578","","",null,null],[17,"XKB_KEY_braille_dots_13578","","",null,null],[17,"XKB_KEY_braille_dots_23578","","",null,null],[17,"XKB_KEY_braille_dots_123578","","",null,null],[17,"XKB_KEY_braille_dots_4578","","",null,null],[17,"XKB_KEY_braille_dots_14578","","",null,null],[17,"XKB_KEY_braille_dots_24578","","",null,null],[17,"XKB_KEY_braille_dots_124578","","",null,null],[17,"XKB_KEY_braille_dots_34578","","",null,null],[17,"XKB_KEY_braille_dots_134578","","",null,null],[17,"XKB_KEY_braille_dots_234578","","",null,null],[17,"XKB_KEY_braille_dots_1234578","","",null,null],[17,"XKB_KEY_braille_dots_678","","",null,null],[17,"XKB_KEY_braille_dots_1678","","",null,null],[17,"XKB_KEY_braille_dots_2678","","",null,null],[17,"XKB_KEY_braille_dots_12678","","",null,null],[17,"XKB_KEY_braille_dots_3678","","",null,null],[17,"XKB_KEY_braille_dots_13678","","",null,null],[17,"XKB_KEY_braille_dots_23678","","",null,null],[17,"XKB_KEY_braille_dots_123678","","",null,null],[17,"XKB_KEY_braille_dots_4678","","",null,null],[17,"XKB_KEY_braille_dots_14678","","",null,null],[17,"XKB_KEY_braille_dots_24678","","",null,null],[17,"XKB_KEY_braille_dots_124678","","",null,null],[17,"XKB_KEY_braille_dots_34678","","",null,null],[17,"XKB_KEY_braille_dots_134678","","",null,null],[17,"XKB_KEY_braille_dots_234678","","",null,null],[17,"XKB_KEY_braille_dots_1234678","","",null,null],[17,"XKB_KEY_braille_dots_5678","","",null,null],[17,"XKB_KEY_braille_dots_15678","","",null,null],[17,"XKB_KEY_braille_dots_25678","","",null,null],[17,"XKB_KEY_braille_dots_125678","","",null,null],[17,"XKB_KEY_braille_dots_35678","","",null,null],[17,"XKB_KEY_braille_dots_135678","","",null,null],[17,"XKB_KEY_braille_dots_235678","","",null,null],[17,"XKB_KEY_braille_dots_1235678","","",null,null],[17,"XKB_KEY_braille_dots_45678","","",null,null],[17,"XKB_KEY_braille_dots_145678","","",null,null],[17,"XKB_KEY_braille_dots_245678","","",null,null],[17,"XKB_KEY_braille_dots_1245678","","",null,null],[17,"XKB_KEY_braille_dots_345678","","",null,null],[17,"XKB_KEY_braille_dots_1345678","","",null,null],[17,"XKB_KEY_braille_dots_2345678","","",null,null],[17,"XKB_KEY_braille_dots_12345678","","",null,null],[17,"XKB_KEY_Sinh_ng","","",null,null],[17,"XKB_KEY_Sinh_h2","","",null,null],[17,"XKB_KEY_Sinh_a","","",null,null],[17,"XKB_KEY_Sinh_aa","","",null,null],[17,"XKB_KEY_Sinh_ae","","",null,null],[17,"XKB_KEY_Sinh_aee","","",null,null],[17,"XKB_KEY_Sinh_i","","",null,null],[17,"XKB_KEY_Sinh_ii","","",null,null],[17,"XKB_KEY_Sinh_u","","",null,null],[17,"XKB_KEY_Sinh_uu","","",null,null],[17,"XKB_KEY_Sinh_ri","","",null,null],[17,"XKB_KEY_Sinh_rii","","",null,null],[17,"XKB_KEY_Sinh_lu","","",null,null],[17,"XKB_KEY_Sinh_luu","","",null,null],[17,"XKB_KEY_Sinh_e","","",null,null],[17,"XKB_KEY_Sinh_ee","","",null,null],[17,"XKB_KEY_Sinh_ai","","",null,null],[17,"XKB_KEY_Sinh_o","","",null,null],[17,"XKB_KEY_Sinh_oo","","",null,null],[17,"XKB_KEY_Sinh_au","","",null,null],[17,"XKB_KEY_Sinh_ka","","",null,null],[17,"XKB_KEY_Sinh_kha","","",null,null],[17,"XKB_KEY_Sinh_ga","","",null,null],[17,"XKB_KEY_Sinh_gha","","",null,null],[17,"XKB_KEY_Sinh_ng2","","",null,null],[17,"XKB_KEY_Sinh_nga","","",null,null],[17,"XKB_KEY_Sinh_ca","","",null,null],[17,"XKB_KEY_Sinh_cha","","",null,null],[17,"XKB_KEY_Sinh_ja","","",null,null],[17,"XKB_KEY_Sinh_jha","","",null,null],[17,"XKB_KEY_Sinh_nya","","",null,null],[17,"XKB_KEY_Sinh_jnya","","",null,null],[17,"XKB_KEY_Sinh_nja","","",null,null],[17,"XKB_KEY_Sinh_tta","","",null,null],[17,"XKB_KEY_Sinh_ttha","","",null,null],[17,"XKB_KEY_Sinh_dda","","",null,null],[17,"XKB_KEY_Sinh_ddha","","",null,null],[17,"XKB_KEY_Sinh_nna","","",null,null],[17,"XKB_KEY_Sinh_ndda","","",null,null],[17,"XKB_KEY_Sinh_tha","","",null,null],[17,"XKB_KEY_Sinh_thha","","",null,null],[17,"XKB_KEY_Sinh_dha","","",null,null],[17,"XKB_KEY_Sinh_dhha","","",null,null],[17,"XKB_KEY_Sinh_na","","",null,null],[17,"XKB_KEY_Sinh_ndha","","",null,null],[17,"XKB_KEY_Sinh_pa","","",null,null],[17,"XKB_KEY_Sinh_pha","","",null,null],[17,"XKB_KEY_Sinh_ba","","",null,null],[17,"XKB_KEY_Sinh_bha","","",null,null],[17,"XKB_KEY_Sinh_ma","","",null,null],[17,"XKB_KEY_Sinh_mba","","",null,null],[17,"XKB_KEY_Sinh_ya","","",null,null],[17,"XKB_KEY_Sinh_ra","","",null,null],[17,"XKB_KEY_Sinh_la","","",null,null],[17,"XKB_KEY_Sinh_va","","",null,null],[17,"XKB_KEY_Sinh_sha","","",null,null],[17,"XKB_KEY_Sinh_ssha","","",null,null],[17,"XKB_KEY_Sinh_sa","","",null,null],[17,"XKB_KEY_Sinh_ha","","",null,null],[17,"XKB_KEY_Sinh_lla","","",null,null],[17,"XKB_KEY_Sinh_fa","","",null,null],[17,"XKB_KEY_Sinh_al","","",null,null],[17,"XKB_KEY_Sinh_aa2","","",null,null],[17,"XKB_KEY_Sinh_ae2","","",null,null],[17,"XKB_KEY_Sinh_aee2","","",null,null],[17,"XKB_KEY_Sinh_i2","","",null,null],[17,"XKB_KEY_Sinh_ii2","","",null,null],[17,"XKB_KEY_Sinh_u2","","",null,null],[17,"XKB_KEY_Sinh_uu2","","",null,null],[17,"XKB_KEY_Sinh_ru2","","",null,null],[17,"XKB_KEY_Sinh_e2","","",null,null],[17,"XKB_KEY_Sinh_ee2","","",null,null],[17,"XKB_KEY_Sinh_ai2","","",null,null],[17,"XKB_KEY_Sinh_o2","","",null,null],[17,"XKB_KEY_Sinh_oo2","","",null,null],[17,"XKB_KEY_Sinh_au2","","",null,null],[17,"XKB_KEY_Sinh_lu2","","",null,null],[17,"XKB_KEY_Sinh_ruu2","","",null,null],[17,"XKB_KEY_Sinh_luu2","","",null,null],[17,"XKB_KEY_Sinh_kunddaliya","","",null,null],[17,"XKB_KEY_XF86ModeLock","","",null,null],[17,"XKB_KEY_XF86MonBrightnessUp","","",null,null],[17,"XKB_KEY_XF86MonBrightnessDown","","",null,null],[17,"XKB_KEY_XF86KbdLightOnOff","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessUp","","",null,null],[17,"XKB_KEY_XF86KbdBrightnessDown","","",null,null],[17,"XKB_KEY_XF86Standby","","",null,null],[17,"XKB_KEY_XF86AudioLowerVolume","","",null,null],[17,"XKB_KEY_XF86AudioMute","","",null,null],[17,"XKB_KEY_XF86AudioRaiseVolume","","",null,null],[17,"XKB_KEY_XF86AudioPlay","","",null,null],[17,"XKB_KEY_XF86AudioStop","","",null,null],[17,"XKB_KEY_XF86AudioPrev","","",null,null],[17,"XKB_KEY_XF86AudioNext","","",null,null],[17,"XKB_KEY_XF86HomePage","","",null,null],[17,"XKB_KEY_XF86Mail","","",null,null],[17,"XKB_KEY_XF86Start","","",null,null],[17,"XKB_KEY_XF86Search","","",null,null],[17,"XKB_KEY_XF86AudioRecord","","",null,null],[17,"XKB_KEY_XF86Calculator","","",null,null],[17,"XKB_KEY_XF86Memo","","",null,null],[17,"XKB_KEY_XF86ToDoList","","",null,null],[17,"XKB_KEY_XF86Calendar","","",null,null],[17,"XKB_KEY_XF86PowerDown","","",null,null],[17,"XKB_KEY_XF86ContrastAdjust","","",null,null],[17,"XKB_KEY_XF86RockerUp","","",null,null],[17,"XKB_KEY_XF86RockerDown","","",null,null],[17,"XKB_KEY_XF86RockerEnter","","",null,null],[17,"XKB_KEY_XF86Back","","",null,null],[17,"XKB_KEY_XF86Forward","","",null,null],[17,"XKB_KEY_XF86Stop","","",null,null],[17,"XKB_KEY_XF86Refresh","","",null,null],[17,"XKB_KEY_XF86PowerOff","","",null,null],[17,"XKB_KEY_XF86WakeUp","","",null,null],[17,"XKB_KEY_XF86Eject","","",null,null],[17,"XKB_KEY_XF86ScreenSaver","","",null,null],[17,"XKB_KEY_XF86WWW","","",null,null],[17,"XKB_KEY_XF86Sleep","","",null,null],[17,"XKB_KEY_XF86Favorites","","",null,null],[17,"XKB_KEY_XF86AudioPause","","",null,null],[17,"XKB_KEY_XF86AudioMedia","","",null,null],[17,"XKB_KEY_XF86MyComputer","","",null,null],[17,"XKB_KEY_XF86VendorHome","","",null,null],[17,"XKB_KEY_XF86LightBulb","","",null,null],[17,"XKB_KEY_XF86Shop","","",null,null],[17,"XKB_KEY_XF86History","","",null,null],[17,"XKB_KEY_XF86OpenURL","","",null,null],[17,"XKB_KEY_XF86AddFavorite","","",null,null],[17,"XKB_KEY_XF86HotLinks","","",null,null],[17,"XKB_KEY_XF86BrightnessAdjust","","",null,null],[17,"XKB_KEY_XF86Finance","","",null,null],[17,"XKB_KEY_XF86Community","","",null,null],[17,"XKB_KEY_XF86AudioRewind","","",null,null],[17,"XKB_KEY_XF86BackForward","","",null,null],[17,"XKB_KEY_XF86Launch0","","",null,null],[17,"XKB_KEY_XF86Launch1","","",null,null],[17,"XKB_KEY_XF86Launch2","","",null,null],[17,"XKB_KEY_XF86Launch3","","",null,null],[17,"XKB_KEY_XF86Launch4","","",null,null],[17,"XKB_KEY_XF86Launch5","","",null,null],[17,"XKB_KEY_XF86Launch6","","",null,null],[17,"XKB_KEY_XF86Launch7","","",null,null],[17,"XKB_KEY_XF86Launch8","","",null,null],[17,"XKB_KEY_XF86Launch9","","",null,null],[17,"XKB_KEY_XF86LaunchA","","",null,null],[17,"XKB_KEY_XF86LaunchB","","",null,null],[17,"XKB_KEY_XF86LaunchC","","",null,null],[17,"XKB_KEY_XF86LaunchD","","",null,null],[17,"XKB_KEY_XF86LaunchE","","",null,null],[17,"XKB_KEY_XF86LaunchF","","",null,null],[17,"XKB_KEY_XF86ApplicationLeft","","",null,null],[17,"XKB_KEY_XF86ApplicationRight","","",null,null],[17,"XKB_KEY_XF86Book","","",null,null],[17,"XKB_KEY_XF86CD","","",null,null],[17,"XKB_KEY_XF86Calculater","","",null,null],[17,"XKB_KEY_XF86Clear","","",null,null],[17,"XKB_KEY_XF86Close","","",null,null],[17,"XKB_KEY_XF86Copy","","",null,null],[17,"XKB_KEY_XF86Cut","","",null,null],[17,"XKB_KEY_XF86Display","","",null,null],[17,"XKB_KEY_XF86DOS","","",null,null],[17,"XKB_KEY_XF86Documents","","",null,null],[17,"XKB_KEY_XF86Excel","","",null,null],[17,"XKB_KEY_XF86Explorer","","",null,null],[17,"XKB_KEY_XF86Game","","",null,null],[17,"XKB_KEY_XF86Go","","",null,null],[17,"XKB_KEY_XF86iTouch","","",null,null],[17,"XKB_KEY_XF86LogOff","","",null,null],[17,"XKB_KEY_XF86Market","","",null,null],[17,"XKB_KEY_XF86Meeting","","",null,null],[17,"XKB_KEY_XF86MenuKB","","",null,null],[17,"XKB_KEY_XF86MenuPB","","",null,null],[17,"XKB_KEY_XF86MySites","","",null,null],[17,"XKB_KEY_XF86New","","",null,null],[17,"XKB_KEY_XF86News","","",null,null],[17,"XKB_KEY_XF86OfficeHome","","",null,null],[17,"XKB_KEY_XF86Open","","",null,null],[17,"XKB_KEY_XF86Option","","",null,null],[17,"XKB_KEY_XF86Paste","","",null,null],[17,"XKB_KEY_XF86Phone","","",null,null],[17,"XKB_KEY_XF86Q","","",null,null],[17,"XKB_KEY_XF86Reply","","",null,null],[17,"XKB_KEY_XF86Reload","","",null,null],[17,"XKB_KEY_XF86RotateWindows","","",null,null],[17,"XKB_KEY_XF86RotationPB","","",null,null],[17,"XKB_KEY_XF86RotationKB","","",null,null],[17,"XKB_KEY_XF86Save","","",null,null],[17,"XKB_KEY_XF86ScrollUp","","",null,null],[17,"XKB_KEY_XF86ScrollDown","","",null,null],[17,"XKB_KEY_XF86ScrollClick","","",null,null],[17,"XKB_KEY_XF86Send","","",null,null],[17,"XKB_KEY_XF86Spell","","",null,null],[17,"XKB_KEY_XF86SplitScreen","","",null,null],[17,"XKB_KEY_XF86Support","","",null,null],[17,"XKB_KEY_XF86TaskPane","","",null,null],[17,"XKB_KEY_XF86Terminal","","",null,null],[17,"XKB_KEY_XF86Tools","","",null,null],[17,"XKB_KEY_XF86Travel","","",null,null],[17,"XKB_KEY_XF86UserPB","","",null,null],[17,"XKB_KEY_XF86User1KB","","",null,null],[17,"XKB_KEY_XF86User2KB","","",null,null],[17,"XKB_KEY_XF86Video","","",null,null],[17,"XKB_KEY_XF86WheelButton","","",null,null],[17,"XKB_KEY_XF86Word","","",null,null],[17,"XKB_KEY_XF86Xfer","","",null,null],[17,"XKB_KEY_XF86ZoomIn","","",null,null],[17,"XKB_KEY_XF86ZoomOut","","",null,null],[17,"XKB_KEY_XF86Away","","",null,null],[17,"XKB_KEY_XF86Messenger","","",null,null],[17,"XKB_KEY_XF86WebCam","","",null,null],[17,"XKB_KEY_XF86MailForward","","",null,null],[17,"XKB_KEY_XF86Pictures","","",null,null],[17,"XKB_KEY_XF86Music","","",null,null],[17,"XKB_KEY_XF86Battery","","",null,null],[17,"XKB_KEY_XF86Bluetooth","","",null,null],[17,"XKB_KEY_XF86WLAN","","",null,null],[17,"XKB_KEY_XF86UWB","","",null,null],[17,"XKB_KEY_XF86AudioForward","","",null,null],[17,"XKB_KEY_XF86AudioRepeat","","",null,null],[17,"XKB_KEY_XF86AudioRandomPlay","","",null,null],[17,"XKB_KEY_XF86Subtitle","","",null,null],[17,"XKB_KEY_XF86AudioCycleTrack","","",null,null],[17,"XKB_KEY_XF86CycleAngle","","",null,null],[17,"XKB_KEY_XF86FrameBack","","",null,null],[17,"XKB_KEY_XF86FrameForward","","",null,null],[17,"XKB_KEY_XF86Time","","",null,null],[17,"XKB_KEY_XF86Select","","",null,null],[17,"XKB_KEY_XF86View","","",null,null],[17,"XKB_KEY_XF86TopMenu","","",null,null],[17,"XKB_KEY_XF86Red","","",null,null],[17,"XKB_KEY_XF86Green","","",null,null],[17,"XKB_KEY_XF86Yellow","","",null,null],[17,"XKB_KEY_XF86Blue","","",null,null],[17,"XKB_KEY_XF86Suspend","","",null,null],[17,"XKB_KEY_XF86Hibernate","","",null,null],[17,"XKB_KEY_XF86TouchpadToggle","","",null,null],[17,"XKB_KEY_XF86TouchpadOn","","",null,null],[17,"XKB_KEY_XF86TouchpadOff","","",null,null],[17,"XKB_KEY_XF86AudioMicMute","","",null,null],[17,"XKB_KEY_XF86Switch_VT_1","","",null,null],[17,"XKB_KEY_XF86Switch_VT_2","","",null,null],[17,"XKB_KEY_XF86Switch_VT_3","","",null,null],[17,"XKB_KEY_XF86Switch_VT_4","","",null,null],[17,"XKB_KEY_XF86Switch_VT_5","","",null,null],[17,"XKB_KEY_XF86Switch_VT_6","","",null,null],[17,"XKB_KEY_XF86Switch_VT_7","","",null,null],[17,"XKB_KEY_XF86Switch_VT_8","","",null,null],[17,"XKB_KEY_XF86Switch_VT_9","","",null,null],[17,"XKB_KEY_XF86Switch_VT_10","","",null,null],[17,"XKB_KEY_XF86Switch_VT_11","","",null,null],[17,"XKB_KEY_XF86Switch_VT_12","","",null,null],[17,"XKB_KEY_XF86Ungrab","","",null,null],[17,"XKB_KEY_XF86ClearGrab","","",null,null],[17,"XKB_KEY_XF86Next_VMode","","",null,null],[17,"XKB_KEY_XF86Prev_VMode","","",null,null],[17,"XKB_KEY_XF86LogWindowTree","","",null,null],[17,"XKB_KEY_XF86LogGrabInfo","","",null,null],[17,"XKB_KEY_SunFA_Grave","","",null,null],[17,"XKB_KEY_SunFA_Circum","","",null,null],[17,"XKB_KEY_SunFA_Tilde","","",null,null],[17,"XKB_KEY_SunFA_Acute","","",null,null],[17,"XKB_KEY_SunFA_Diaeresis","","",null,null],[17,"XKB_KEY_SunFA_Cedilla","","",null,null],[17,"XKB_KEY_SunF36","","",null,null],[17,"XKB_KEY_SunF37","","",null,null],[17,"XKB_KEY_SunSys_Req","","",null,null],[17,"XKB_KEY_SunPrint_Screen","","",null,null],[17,"XKB_KEY_SunCompose","","",null,null],[17,"XKB_KEY_SunAltGraph","","",null,null],[17,"XKB_KEY_SunPageUp","","",null,null],[17,"XKB_KEY_SunPageDown","","",null,null],[17,"XKB_KEY_SunUndo","","",null,null],[17,"XKB_KEY_SunAgain","","",null,null],[17,"XKB_KEY_SunFind","","",null,null],[17,"XKB_KEY_SunStop","","",null,null],[17,"XKB_KEY_SunProps","","",null,null],[17,"XKB_KEY_SunFront","","",null,null],[17,"XKB_KEY_SunCopy","","",null,null],[17,"XKB_KEY_SunOpen","","",null,null],[17,"XKB_KEY_SunPaste","","",null,null],[17,"XKB_KEY_SunCut","","",null,null],[17,"XKB_KEY_SunPowerSwitch","","",null,null],[17,"XKB_KEY_SunAudioLowerVolume","","",null,null],[17,"XKB_KEY_SunAudioMute","","",null,null],[17,"XKB_KEY_SunAudioRaiseVolume","","",null,null],[17,"XKB_KEY_SunVideoDegauss","","",null,null],[17,"XKB_KEY_SunVideoLowerBrightness","","",null,null],[17,"XKB_KEY_SunVideoRaiseBrightness","","",null,null],[17,"XKB_KEY_SunPowerSwitchShift","","",null,null],[17,"XKB_KEY_Dring_accent","","",null,null],[17,"XKB_KEY_Dcircumflex_accent","","",null,null],[17,"XKB_KEY_Dcedilla_accent","","",null,null],[17,"XKB_KEY_Dacute_accent","","",null,null],[17,"XKB_KEY_Dgrave_accent","","",null,null],[17,"XKB_KEY_Dtilde","","",null,null],[17,"XKB_KEY_Ddiaeresis","","",null,null],[17,"XKB_KEY_DRemove","","",null,null],[17,"XKB_KEY_hpClearLine","","",null,null],[17,"XKB_KEY_hpInsertLine","","",null,null],[17,"XKB_KEY_hpDeleteLine","","",null,null],[17,"XKB_KEY_hpInsertChar","","",null,null],[17,"XKB_KEY_hpDeleteChar","","",null,null],[17,"XKB_KEY_hpBackTab","","",null,null],[17,"XKB_KEY_hpKP_BackTab","","",null,null],[17,"XKB_KEY_hpModelock1","","",null,null],[17,"XKB_KEY_hpModelock2","","",null,null],[17,"XKB_KEY_hpReset","","",null,null],[17,"XKB_KEY_hpSystem","","",null,null],[17,"XKB_KEY_hpUser","","",null,null],[17,"XKB_KEY_hpmute_acute","","",null,null],[17,"XKB_KEY_hpmute_grave","","",null,null],[17,"XKB_KEY_hpmute_asciicircum","","",null,null],[17,"XKB_KEY_hpmute_diaeresis","","",null,null],[17,"XKB_KEY_hpmute_asciitilde","","",null,null],[17,"XKB_KEY_hplira","","",null,null],[17,"XKB_KEY_hpguilder","","",null,null],[17,"XKB_KEY_hpYdiaeresis","","",null,null],[17,"XKB_KEY_hpIO","","",null,null],[17,"XKB_KEY_hplongminus","","",null,null],[17,"XKB_KEY_hpblock","","",null,null],[17,"XKB_KEY_osfCopy","","",null,null],[17,"XKB_KEY_osfCut","","",null,null],[17,"XKB_KEY_osfPaste","","",null,null],[17,"XKB_KEY_osfBackTab","","",null,null],[17,"XKB_KEY_osfBackSpace","","",null,null],[17,"XKB_KEY_osfClear","","",null,null],[17,"XKB_KEY_osfEscape","","",null,null],[17,"XKB_KEY_osfAddMode","","",null,null],[17,"XKB_KEY_osfPrimaryPaste","","",null,null],[17,"XKB_KEY_osfQuickPaste","","",null,null],[17,"XKB_KEY_osfPageLeft","","",null,null],[17,"XKB_KEY_osfPageUp","","",null,null],[17,"XKB_KEY_osfPageDown","","",null,null],[17,"XKB_KEY_osfPageRight","","",null,null],[17,"XKB_KEY_osfActivate","","",null,null],[17,"XKB_KEY_osfMenuBar","","",null,null],[17,"XKB_KEY_osfLeft","","",null,null],[17,"XKB_KEY_osfUp","","",null,null],[17,"XKB_KEY_osfRight","","",null,null],[17,"XKB_KEY_osfDown","","",null,null],[17,"XKB_KEY_osfEndLine","","",null,null],[17,"XKB_KEY_osfBeginLine","","",null,null],[17,"XKB_KEY_osfEndData","","",null,null],[17,"XKB_KEY_osfBeginData","","",null,null],[17,"XKB_KEY_osfPrevMenu","","",null,null],[17,"XKB_KEY_osfNextMenu","","",null,null],[17,"XKB_KEY_osfPrevField","","",null,null],[17,"XKB_KEY_osfNextField","","",null,null],[17,"XKB_KEY_osfSelect","","",null,null],[17,"XKB_KEY_osfInsert","","",null,null],[17,"XKB_KEY_osfUndo","","",null,null],[17,"XKB_KEY_osfMenu","","",null,null],[17,"XKB_KEY_osfCancel","","",null,null],[17,"XKB_KEY_osfHelp","","",null,null],[17,"XKB_KEY_osfSelectAll","","",null,null],[17,"XKB_KEY_osfDeselectAll","","",null,null],[17,"XKB_KEY_osfReselect","","",null,null],[17,"XKB_KEY_osfExtend","","",null,null],[17,"XKB_KEY_osfRestore","","",null,null],[17,"XKB_KEY_osfDelete","","",null,null],[17,"XKB_KEY_Reset","","",null,null],[17,"XKB_KEY_System","","",null,null],[17,"XKB_KEY_User","","",null,null],[17,"XKB_KEY_ClearLine","","",null,null],[17,"XKB_KEY_InsertLine","","",null,null],[17,"XKB_KEY_DeleteLine","","",null,null],[17,"XKB_KEY_InsertChar","","",null,null],[17,"XKB_KEY_DeleteChar","","",null,null],[17,"XKB_KEY_BackTab","","",null,null],[17,"XKB_KEY_KP_BackTab","","",null,null],[17,"XKB_KEY_Ext16bit_L","","",null,null],[17,"XKB_KEY_Ext16bit_R","","",null,null],[17,"XKB_KEY_mute_acute","","",null,null],[17,"XKB_KEY_mute_grave","","",null,null],[17,"XKB_KEY_mute_asciicircum","","",null,null],[17,"XKB_KEY_mute_diaeresis","","",null,null],[17,"XKB_KEY_mute_asciitilde","","",null,null],[17,"XKB_KEY_lira","","",null,null],[17,"XKB_KEY_guilder","","",null,null],[17,"XKB_KEY_IO","","",null,null],[17,"XKB_KEY_longminus","","",null,null],[17,"XKB_KEY_block","","",null,null]],"paths":[[4,"Option"],[3,"Wrapping"],[3,"Big32x40"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"KbState"],[3,"MappedKeyboard"]]};
searchIndex['wayland_window'] = {"items":[[0,"","wayland_window","Wayland Window, a minimalistic decoration-drawing library for\nwayland applications.",null,null],[3,"DecoratedSurface","","A wrapper for a decorated surface.",null,null],[3,"SurfaceGuard","","A wrapper around a reference to the surface you\nstored in a `DecoratedSurface`.",null,null],[5,"substract_borders","","Substracts the border dimensions from the given dimensions.",null,null],[11,"destroy","wayland::core::shell::shell_surface","Frees the `Surface` from its role of `shell_surface` and returns it.",0,{"inputs":[{"name":"shellsurface"}],"output":{"name":"s"}}],[11,"start_move","","Start an interactive move",0,null],[11,"start_resize","","Start a pointer-driven resizing of the surface.",0,null],[11,"set_toplevel","","Set this shell surface as being a toplevel window.",0,null],[11,"set_transient","","Set this shell surface as being a transient surface.",0,null],[11,"set_popup","","Set this shell surface as being a popup.",0,null],[11,"set_fullscreen","","Set this shell surface as being fullscreen.",0,null],[11,"set_maximised","","Set this shell surface as being maximised.",0,null],[11,"set_title","","Sets the shell surface title.",0,null],[11,"set_class","","Sets the shell surface class.",0,null],[11,"set_configure_callback","","Sets the callback to be invoked when a `configure` event is received for this shell surface.",0,null],[11,"set_popup_done_callback","","Sets the callback to be invoked when the popup grab of this popup surface is\nbroken. See `set_popup()` for details.",0,null],[11,"open","wayland::ffi::abi","",1,{"inputs":[{"name":"waylandclient"},{"name":"str"}],"output":{"name":"result"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",2,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",2,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",2,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",2,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",2,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",2,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",2,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",2,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",2,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",2,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",2,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",2,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",2,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",2,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",2,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",2,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",2,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",2,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",2,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",2,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",2,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",2,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",3,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",3,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",3,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",3,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",4,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",4,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",4,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",4,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",4,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",4,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",4,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",4,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",4,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",4,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",4,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",4,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",4,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",4,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",4,null],[11,"eq","","",4,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",4,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",4,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",4,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",5,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",5,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",5,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",5,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",5,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",5,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",5,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",5,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",5,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",5,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",5,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",5,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",5,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",5,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",5,null],[11,"eq","","",5,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",5,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",5,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",6,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",7,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",8,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",8,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",8,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",8,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",9,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",9,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",9,null],[11,"clone","","",10,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",10,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",10,null],[11,"fmt","","",11,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",12,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",12,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",13,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",14,null],[11,"eq","","",15,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",16,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",16,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",17,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num","",18,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",19,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",19,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",20,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",21,null],[11,"fmt","","",21,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",21,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",21,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",21,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",21,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",22,null],[11,"get","","Dereferences the content.",22,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",22,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",22,null],[11,"fmt","","",22,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",23,null],[11,"eq","","",23,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",23,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",23,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",24,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",24,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",25,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",26,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",27,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",28,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",28,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",28,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","wayland_window","",29,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",29,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",29,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",29,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",29,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",29,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",29,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",30,null],[11,"fmt","","",30,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",30,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",31,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",32,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",33,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",34,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",35,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",31,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",31,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",31,null],[11,"swap","","Stores a value into the bool, returning the old value.",31,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",31,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",31,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",31,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",31,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",31,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",32,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",32,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",32,null],[11,"swap","","Stores a value into the isize, returning the old value.",32,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",32,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",32,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",32,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",32,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",32,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",32,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",33,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",33,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",33,null],[11,"swap","","Stores a value into the usize, returning the old value.",33,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",33,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",33,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",33,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",33,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",33,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",33,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",34,null],[11,"load","","Loads a value from the pointer.",34,null],[11,"store","","Stores a value into the pointer.",34,null],[11,"swap","","Stores a value into the pointer, returning the old value.",34,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",34,null],[11,"fmt","","",33,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",34,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",36,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",36,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",36,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",36,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",36,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",36,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",36,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",38,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",38,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",38,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",38,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",38,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",38,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",38,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",38,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",38,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",39,null],[11,"clone","","",39,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",40,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",40,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",40,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",40,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",41,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",41,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",42,null],[11,"deref","","",41,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",41,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",43,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",43,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",43,null],[11,"clone","core::char","",44,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",45,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",44,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",46,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",47,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",46,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",48,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",48,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"next_back","","",48,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",49,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",49,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",50,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",50,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"clone","","",51,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",51,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",51,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",51,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",51,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"next_back","","",51,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",52,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",52,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"next_back","","",52,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",53,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",53,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"next_back","","",53,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",54,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"next_back","","",54,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",55,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",55,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",56,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",56,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"nth","","",56,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",56,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",56,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",57,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",57,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",57,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",57,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",57,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",57,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",58,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"clone","","",59,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",59,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"clone","","",60,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",60,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",60,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",60,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",60,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"clone","","",61,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",61,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",61,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"clone","","",62,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",62,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"clone","","",63,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",63,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",64,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",64,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",64,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",64,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",64,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",65,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",65,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"next_back","","",65,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",66,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",26,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",25,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",66,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"clone","","",67,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",67,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",66,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next","core::ops","",25,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",25,null],[11,"next_back","","",25,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",26,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",68,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",68,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",69,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",69,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",69,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",69,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",70,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",70,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",70,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",2,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",2,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",71,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",71,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",72,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",72,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",73,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",74,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",74,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"next_back","","",74,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",2,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",75,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",76,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",77,null],[11,"fmt","","",77,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",77,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",77,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",77,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",77,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",77,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",77,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",77,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",77,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",77,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",77,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",77,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",77,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",77,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",77,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",77,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",77,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",77,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",77,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",77,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",77,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",77,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",78,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",78,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",79,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",80,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",77,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",81,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",82,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",83,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",84,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",85,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",86,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",87,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",88,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",89,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",90,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",89,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",90,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",89,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",90,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",89,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",90,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",89,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",90,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",85,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",86,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",87,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",88,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",81,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",82,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",83,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",84,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",91,null],[11,"next","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"count","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",91,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",92,null],[11,"next","","",92,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"count","","",92,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",92,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",92,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",92,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",93,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",93,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next_back","","",93,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",93,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",94,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",94,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",95,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next","","",96,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next","","",97,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next","","",98,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next","","",99,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"clone","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"count","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",100,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",100,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"count","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",101,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",101,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",102,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"count","","",102,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",102,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",102,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",102,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",103,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",104,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",105,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",104,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",104,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",104,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",106,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",107,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",108,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",109,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",110,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",111,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",109,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",112,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",113,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",113,null],[11,"matching","","",113,null],[11,"use_early_reject","","",114,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",114,null],[11,"matching","","",114,null],[11,"eq","core::str","",115,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",115,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",116,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",116,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",116,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",117,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",118,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",118,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"next_back","","",118,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",120,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",120,null],[11,"call_mut","","",120,null],[11,"call_once","","",120,null],[11,"next","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",121,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",122,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",123,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",123,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",122,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",123,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",124,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",124,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",125,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",124,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",125,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",127,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",127,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",128,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",129,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",130,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",131,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",130,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",131,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",133,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",134,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",133,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",134,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",135,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",135,null],[11,"next_back","","",135,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",137,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",137,null],[11,"call_mut","","",137,null],[11,"call_once","","",137,null],[11,"next","","",136,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",136,null],[11,"next_back","","",136,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",139,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",139,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",139,null],[11,"finish","","",139,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",139,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",139,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",140,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",141,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",142,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",143,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",144,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",145,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",146,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",147,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",148,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",148,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",149,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",149,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",149,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",150,null],[11,"entry","","Adds a new entry to the set output.",151,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",151,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",151,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",152,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",152,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",152,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",153,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",153,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",153,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",154,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",155,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",156,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",157,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",158,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",159,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",160,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",161,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",162,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",162,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",163,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",163,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",163,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",163,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",163,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",163,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",163,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",163,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",163,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",163,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",163,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",163,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",163,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",163,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",163,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",163,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",163,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",23,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",36,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","wayland::ffi::abi","",164,{"inputs":[{"name":"wayland_client_option"}],"output":{"name":"option"}}],[11,"deref","","",165,{"inputs":[{"name":"wayland_client_handle"}],"output":{"name":"waylandclient"}}],[11,"eq","wayland::ffi::enums","",166,{"inputs":[{"name":"keystate"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"keystate"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"eq","","",167,{"inputs":[{"name":"keymapformat"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"keymapformat"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"hash","","",168,null],[11,"cmp","","",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"option"}}],[11,"lt","","",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"le","","",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"gt","","",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"ge","","",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"eq","","",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"fmt","","",168,{"inputs":[{"name":"outputmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"all","","Returns the set containing all flags.",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",168,{"inputs":[{"name":"outputmode"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",168,{"inputs":[{"name":"outputmode"},{"name":"u32"}],"output":{"name":"outputmode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",168,null],[11,"remove","","Removes the specified flags in-place.",168,null],[11,"toggle","","Toggles the specified flags in-place.",168,null],[11,"bitor","","Returns the union of the two sets of flags.",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"sub","","Returns the set difference of the two sets of flags.",168,{"inputs":[{"name":"outputmode"},{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"not","","Returns the complement of this set of flags.",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"from_iter","","",168,{"inputs":[{"name":"outputmode"},{"name":"t"}],"output":{"name":"outputmode"}}],[11,"clone","","",169,{"inputs":[{"name":"outputsubpixel"}],"output":{"name":"outputsubpixel"}}],[11,"clone","","",170,{"inputs":[{"name":"outputtransform"}],"output":{"name":"outputtransform"}}],[11,"eq","","",171,{"inputs":[{"name":"scrollaxis"},{"name":"scrollaxis"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"scrollaxis"},{"name":"scrollaxis"}],"output":{"name":"bool"}}],[11,"eq","","",172,{"inputs":[{"name":"buttonstate"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"buttonstate"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"hash","","",173,null],[11,"cmp","","",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"option"}}],[11,"lt","","",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"le","","",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"gt","","",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"ge","","",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"eq","","",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"fmt","","",173,{"inputs":[{"name":"seatcapability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",173,{"inputs":[{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"all","","Returns the set containing all flags.",173,{"inputs":[{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",173,{"inputs":[{"name":"seatcapability"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",173,{"inputs":[{"name":"seatcapability"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",173,{"inputs":[{"name":"seatcapability"},{"name":"u32"}],"output":{"name":"seatcapability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",173,{"inputs":[{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",173,{"inputs":[{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",173,null],[11,"remove","","Removes the specified flags in-place.",173,null],[11,"toggle","","Toggles the specified flags in-place.",173,null],[11,"bitor","","Returns the union of the two sets of flags.",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"sub","","Returns the set difference of the two sets of flags.",173,{"inputs":[{"name":"seatcapability"},{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"not","","Returns the complement of this set of flags.",173,{"inputs":[{"name":"seatcapability"}],"output":{"name":"seatcapability"}}],[11,"from_iter","","",173,{"inputs":[{"name":"seatcapability"},{"name":"t"}],"output":{"name":"seatcapability"}}],[11,"eq","","",174,{"inputs":[{"name":"fullscreenmethod"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"fullscreenmethod"},{"name":"fullscreenmethod"}],"output":{"name":"bool"}}],[11,"eq","","",175,{"inputs":[{"name":"shellsurfaceresize"},{"name":"shellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"shellsurfaceresize"},{"name":"shellsurfaceresize"}],"output":{"name":"bool"}}],[11,"hash","","",176,null],[11,"cmp","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"option"}}],[11,"lt","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"le","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"gt","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ge","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"eq","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"fmt","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",176,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"all","","Returns the set containing all flags.",176,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",176,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"u32"}],"output":{"name":"shellsurfacetransient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",176,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",176,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",176,null],[11,"remove","","Removes the specified flags in-place.",176,null],[11,"toggle","","Toggles the specified flags in-place.",176,null],[11,"bitor","","Returns the union of the two sets of flags.",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"sub","","Returns the set difference of the two sets of flags.",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"not","","Returns the complement of this set of flags.",176,{"inputs":[{"name":"shellsurfacetransient"}],"output":{"name":"shellsurfacetransient"}}],[11,"from_iter","","",176,{"inputs":[{"name":"shellsurfacetransient"},{"name":"t"}],"output":{"name":"shellsurfacetransient"}}],[11,"eq","","",177,{"inputs":[{"name":"shmformat"},{"name":"shmformat"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"shmformat"},{"name":"shmformat"}],"output":{"name":"bool"}}],[11,"clone","wayland::core::display","",178,{"inputs":[{"name":"display"}],"output":{"name":"display"}}],[11,"get_registry","","Creates a Registry associated to this Display and returns it.",178,{"inputs":[{"name":"display"}],"output":{"name":"registry"}}],[11,"sync_roundtrip","","Performs a blocking synchronisation of the events of the server.",178,null],[11,"dispatch_pending","","Dispatches all pending events to their appropriate callbacks.",178,null],[11,"dispatch","","Dispatches all pending events to their appropriate callbacks.",178,null],[11,"flush","","Send as much requests to the server as possible.",178,{"inputs":[{"name":"display"}],"output":{"name":"result"}}],[11,"sync","","Send a `sync` message to the server.",178,null],[11,"set_sync_callback","","Sets the callback of a `done` event.",178,null],[11,"drop","","",179,null],[11,"ptr","","",178,null],[11,"ptr_mut","","",178,null],[11,"hash","wayland::core::ids","",180,null],[11,"clone","","",180,{"inputs":[{"name":"surfaceid"}],"output":{"name":"surfaceid"}}],[11,"eq","","",180,{"inputs":[{"name":"surfaceid"},{"name":"surfaceid"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"surfaceid"},{"name":"surfaceid"}],"output":{"name":"bool"}}],[11,"clone","","",181,{"inputs":[{"name":"serial"}],"output":{"name":"serial"}}],[11,"clone","wayland::core::registry","",182,{"inputs":[{"name":"registry"}],"output":{"name":"registry"}}],[11,"get_display","","Returns a handle to the Display associated with this registry.",182,{"inputs":[{"name":"registry"}],"output":{"name":"display"}}],[11,"get_global_objects","","Returns a `Vec` of all global objects and their interface.",182,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_objects_with_interface","","Returns a `Vec` of all global objects implementing given interface.",182,{"inputs":[{"name":"registry"},{"name":"str"}],"output":{"name":"vec"}}],[11,"get_compositor","","Retrieves a handle to the global compositor",182,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_outputs","","Retrieve handles to all available outputs",182,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_seats","","Retrieve handles to all available seats",182,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_shell","","Retrieves a handle to the global shell",182,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_shm","","Retrieves a handle to the global shm",182,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_subcompositor","","Retrieves a handle to the global subcompositor",182,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"bind","","",182,{"inputs":[{"name":"registry"},{"name":"u32"},{"name":"u32"}],"output":{"name":"t"}}],[11,"from","","",182,{"inputs":[{"name":"registry"},{"name":"display"}],"output":{"name":"registry"}}],[11,"drop","","",183,null],[11,"ptr","","",182,null],[11,"ptr_mut","","",182,null],[11,"clone","wayland::core::compositor::compositor","",184,{"inputs":[{"name":"compositor"}],"output":{"name":"compositor"}}],[11,"create_surface","","Creates a new surface to draw on.",184,{"inputs":[{"name":"compositor"}],"output":{"name":"wsurface"}}],[11,"create_region","","Creates a new region.",184,{"inputs":[{"name":"compositor"}],"output":{"name":"region"}}],[11,"interface","","",184,{"inputs":[{"name":"compositor"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",184,null],[11,"drop","","",185,null],[11,"ptr","","",184,null],[11,"ptr_mut","","",184,null],[11,"add","wayland::core::compositor::region","Adds given rectangle to the region.",186,null],[11,"subtract","","Subtract given rectangle from the region.",186,null],[11,"from","","",186,{"inputs":[{"name":"region"},{"name":"compositor"}],"output":{"name":"region"}}],[11,"drop","","",186,null],[11,"ptr","","",186,null],[11,"ptr_mut","","",186,null],[11,"attach","wayland::core::compositor::surface","Attaches given buffer to be the content of the image.",187,null],[11,"commit","","Commit the changes to the server.",187,null],[11,"damage","","Mark part of this surface as damaged.",187,null],[11,"get_id","","Returns the unique `SurfaceId` associated to this surface.",187,{"inputs":[{"name":"wsurface"}],"output":{"name":"surfaceid"}}],[11,"set_opaque_region","","Sets the opaque region of this surface.",187,null],[11,"set_input_region","","Sets the input region of this surface.",187,null],[11,"set_buffer_transform","","Sets the transformation the server will apply to the buffer.",187,null],[11,"set_buffer_scale","","Sets the scale the server will apply to the buffer.",187,null],[11,"from","","",187,{"inputs":[{"name":"wsurface"},{"name":"compositor"}],"output":{"name":"wsurface"}}],[11,"drop","","",187,null],[11,"ptr","","",187,null],[11,"ptr_mut","","",187,null],[11,"get_wsurface","","",187,{"inputs":[{"name":"wsurface"}],"output":{"name":"wsurface"}}],[11,"hash","wayland::core::output::output","",188,null],[11,"eq","","",188,{"inputs":[{"name":"outputid"},{"name":"outputid"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"outputid"},{"name":"outputid"}],"output":{"name":"bool"}}],[11,"clone","","",188,{"inputs":[{"name":"outputid"}],"output":{"name":"outputid"}}],[11,"clone","","",189,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"is_current","","",189,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"is_preferred","","",189,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"get_id","","The unique Id representing this output",190,{"inputs":[{"name":"output"}],"output":{"name":"outputid"}}],[11,"position","","The location of the top-left corner of this output in the\ncompositor space.",190,null],[11,"dimensions","","The dimensions (width, height) of this output, in milimeters",190,null],[11,"subpixel","","The subpixel orientation of this output",190,{"inputs":[{"name":"output"}],"output":{"name":"outputsubpixel"}}],[11,"transform","","The current transform of this output",190,{"inputs":[{"name":"output"}],"output":{"name":"outputtransform"}}],[11,"manufacturer","","The manufacturer of this output",190,{"inputs":[{"name":"output"}],"output":{"name":"string"}}],[11,"model","","The model of this output",190,{"inputs":[{"name":"output"}],"output":{"name":"string"}}],[11,"scale","","The current scaling factor of this output",190,{"inputs":[{"name":"output"}],"output":{"name":"i32"}}],[11,"modes","","The modes of this output",190,{"inputs":[{"name":"output"}],"output":{"name":"vec"}}],[11,"interface","","",190,{"inputs":[{"name":"output"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",190,null],[11,"drop","","",190,null],[11,"ptr","","",190,null],[11,"ptr_mut","","",190,null],[11,"hash","wayland::core::seat::keyboard","",191,null],[11,"clone","","",191,{"inputs":[{"name":"keyboardid"}],"output":{"name":"keyboardid"}}],[11,"eq","","",191,{"inputs":[{"name":"keyboardid"},{"name":"keyboardid"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"keyboardid"},{"name":"keyboardid"}],"output":{"name":"bool"}}],[11,"new","","",192,{"inputs":[{"name":"keyboardlistener"},{"name":"keyboarddata"}],"output":{"name":"keyboardlistener"}}],[11,"from","","",193,{"inputs":[{"name":"keyboard"},{"name":"seat"}],"output":{"name":"keyboard"}}],[11,"get_id","","Returns the unique `KeyboardId` associated to this keyboard.",193,{"inputs":[{"name":"keyboard"}],"output":{"name":"keyboardid"}}],[11,"get_seat","","Get access to the seat associated with this keyboard",193,{"inputs":[{"name":"keyboard"}],"output":{"name":"seat"}}],[11,"keymap_fd","","Provides the file descriptor giving access to the keymap definition\ncurrently used by the compositor for this keyboard.",193,{"inputs":[{"name":"keyboard"}],"output":{"name":"option"}}],[11,"repeat_info","","Provides the repeat information of this keayboard.",193,{"inputs":[{"name":"keyboard"}],"output":{"name":"option"}}],[11,"release","","",193,null],[11,"set_enter_action","","Defines the action to be executed when a surface gains keyboard focus.",193,null],[11,"set_leave_action","","Defines the action to be executed when a surface loses keyboard focus.",193,null],[11,"set_key_action","","Defines the action to be executed when a keystroke is done.",193,null],[11,"set_modifiers_action","","Defines the action to be executed when a modifier is changed.",193,null],[11,"drop","","",193,null],[11,"ptr","","",193,null],[11,"ptr_mut","","",193,null],[11,"hash","wayland::core::seat::pointer","",194,null],[11,"clone","","",194,{"inputs":[{"name":"pointerid"}],"output":{"name":"pointerid"}}],[11,"eq","","",194,{"inputs":[{"name":"pointerid"},{"name":"pointerid"}],"output":{"name":"bool"}}],[11,"ne","","",194,{"inputs":[{"name":"pointerid"},{"name":"pointerid"}],"output":{"name":"bool"}}],[11,"advertise_cursor","","",195,null],[11,"enter_surface","","",195,{"inputs":[{"name":"pointerdata"},{"name":"surfaceid"}],"output":{"name":"bool"}}],[11,"leave_surface","","",195,{"inputs":[{"name":"pointerdata"}],"output":{"name":"bool"}}],[11,"is_on_handled_surface","","",195,{"inputs":[{"name":"pointerdata"}],"output":{"name":"bool"}}],[11,"new","","",196,{"inputs":[{"name":"pointerlistener"},{"name":"cursoradvertising"}],"output":{"name":"pointerlistener"}}],[11,"set_enter_handler","","",196,null],[11,"set_leave_handler","","",196,null],[11,"set_motion_handler","","",196,null],[11,"set_button_handler","","",196,null],[11,"set_axis_handler","","",196,null],[11,"from","","",197,{"inputs":[{"name":"pointer"},{"name":"seat"}],"output":{"name":"pointer"}}],[11,"get_id","","Returns the unique `PointerId` associated to this pointer.",197,{"inputs":[{"name":"pointer"}],"output":{"name":"pointerid"}}],[11,"get_seat","","Get access to the seat associated with this keyboard",197,{"inputs":[{"name":"pointer"}],"output":{"name":"seat"}}],[11,"set_cursor","","Change the surface for drawing the cursor.",197,null],[11,"set_cursor_hidden","","Hides or unhides the cursor image.",197,null],[11,"add_handled_surface","","Adds a surface to the set of surfaces this pointer handler\nwill change cursor and dispatch events.",197,null],[11,"remove_handled_surface","","Adds a surface to the set of surfaces this pointer handler\nwill change cursor and dispatch events.",197,null],[11,"release","","",197,{"inputs":[{"name":"pointer"}],"output":{"name":"option"}}],[11,"get_surface","","Provides a reference to the current cursor surface.",197,{"inputs":[{"name":"pointer"}],"output":{"name":"option"}}],[11,"set_enter_action","","Defines the action to be executed when the cursor enters a surface.",197,null],[11,"set_leave_action","","Defines the action to be executed when the cursor leaves a surface.",197,null],[11,"set_motion_action","","Defines the action to be executed when the cursor moves",197,null],[11,"set_button_action","","Defines the action to be executed when a button is clicked or released",197,null],[11,"set_axis_action","","Defines the action to be executed when a scrolling is done",197,null],[11,"drop","","",197,null],[11,"ptr","","",197,null],[11,"ptr_mut","","",197,null],[11,"clone","wayland::core::seat::seat","",198,{"inputs":[{"name":"seat"}],"output":{"name":"seat"}}],[11,"get_pointer","","",198,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"get_keyboard","","",198,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"get_touch","","",198,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"interface","","",198,{"inputs":[{"name":"seat"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",198,null],[11,"drop","","",199,null],[11,"ptr","","",198,null],[11,"ptr_mut","","",198,null],[11,"hash","wayland::core::seat::touch","",200,null],[11,"clone","","",200,{"inputs":[{"name":"touchid"}],"output":{"name":"touchid"}}],[11,"eq","","",200,{"inputs":[{"name":"touchid"},{"name":"touchid"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"touchid"},{"name":"touchid"}],"output":{"name":"bool"}}],[11,"from","","",201,{"inputs":[{"name":"touch"},{"name":"seat"}],"output":{"name":"touch"}}],[11,"get_id","","Returns the unique \\TouchId` associated with this touch device.",201,{"inputs":[{"name":"touch"}],"output":{"name":"touchid"}}],[11,"get_seat","","Get access to the seat associated with this keyboard",201,{"inputs":[{"name":"touch"}],"output":{"name":"seat"}}],[11,"release","","",201,null],[11,"set_down_action","","Defines the action to be executed when a new touch point appears",201,null],[11,"set_up_action","","Defines the action to be executed when a touch point dissapears",201,null],[11,"set_motion_action","","Defines the action to be executed a touch point moves",201,null],[11,"set_frame_action","","",201,null],[11,"set_cancel_action","","Defines the action to be executed when a touch sequence is cancelled.",201,null],[11,"drop","","",201,null],[11,"ptr","","",201,null],[11,"ptr_mut","","",201,null],[11,"clone","wayland::core::shell::shell","",202,{"inputs":[{"name":"shell"}],"output":{"name":"shell"}}],[11,"get_shell_surface","","Assigns the `shell_surface` role to given surface.",202,{"inputs":[{"name":"shell"},{"name":"s"}],"output":{"name":"shellsurface"}}],[11,"interface","","",202,{"inputs":[{"name":"shell"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",202,null],[11,"drop","","",203,null],[11,"ptr","","",202,null],[11,"ptr_mut","","",202,null],[11,"deref","wayland::core::shell::shell_surface","",0,{"inputs":[{"name":"shellsurface"}],"output":{"name":"s"}}],[11,"from","","",0,null],[11,"drop","","",0,null],[11,"ptr","","",0,null],[11,"ptr_mut","","",0,null],[11,"from","wayland::core::shm::buffer","",204,null],[11,"drop","","",204,null],[11,"ptr","","",204,null],[11,"ptr_mut","","",204,null],[11,"clone","wayland::core::shm::shm","",205,{"inputs":[{"name":"shm"}],"output":{"name":"shm"}}],[11,"pool_from_fd","","Creates a shared memory pool from given file descriptor.",205,{"inputs":[{"name":"shm"},{"name":"f"},{"name":"i32"}],"output":{"name":"shmpool"}}],[11,"pool_from_raw_fd","","Creates a sahred memory pool from given raw file descriptor.",205,{"inputs":[{"name":"shm"},{"name":"i32"},{"name":"i32"}],"output":{"name":"shmpool"}}],[11,"interface","","",205,{"inputs":[{"name":"shm"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",205,null],[11,"drop","","",206,null],[11,"ptr","","",205,null],[11,"ptr_mut","","",205,null],[11,"create_buffer","wayland::core::shm::shm_pool","Creates a new buffer from this memory pool.",207,{"inputs":[{"name":"shmpool"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"shmformat"}],"output":{"name":"option"}}],[11,"resize","","Resizes the memory pool to a new size.",207,null],[11,"from","","",207,null],[11,"drop","","",207,null],[11,"ptr","","",207,null],[11,"ptr_mut","","",207,null],[11,"clone","wayland::core::subcompositor::subcompositor","",208,{"inputs":[{"name":"subcompositor"}],"output":{"name":"subcompositor"}}],[11,"get_subsurface","","Maps `surface` as a subsurface of `parent`.",208,{"inputs":[{"name":"subcompositor"},{"name":"s"},{"name":"wsurface"}],"output":{"name":"subsurface"}}],[11,"drop","","",209,null],[11,"interface","","",208,{"inputs":[{"name":"subcompositor"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",208,null],[11,"ptr","","",208,null],[11,"ptr_mut","","",208,null],[11,"destroy","wayland::core::subcompositor::subsurface","Frees the `Surface` from its role of `subsurface` and returns it.",210,{"inputs":[{"name":"subsurface"}],"output":{"name":"s"}}],[11,"set_position","","Sets the position of the subsurface in the parent surface coordinate\nsystem.",210,null],[11,"set_sync","","Sets of unsets the subsurface into synchronysed mode.",210,null],[11,"restack_sibling","","Sets this surface to be displayed above or below `other`, which\nmust be one of its siblings (but not itself).",210,null],[11,"restack_parent","","Sets this surface to be displayed above or below `other`, which\nmust be its parent.",210,null],[11,"deref","","",210,{"inputs":[{"name":"subsurface"}],"output":{"name":"s"}}],[11,"from","","",210,null],[11,"drop","","",210,null],[11,"ptr","","",210,null],[11,"ptr_mut","","",210,null],[11,"new","wayland::egl","Creates a new EGL surface on a wayland surface.",211,{"inputs":[{"name":"eglsurface"},{"name":"wsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eglsurface"}}],[11,"destroy","","Destroys the EGL association to this `WSurface` and returns it.",211,{"inputs":[{"name":"eglsurface"}],"output":{"name":"wsurface"}}],[11,"as_native_ptr","","Provides a ptr to the native window to be used for EGL initialization.",211,null],[11,"resize","","Resizes the egl surface.",211,null],[11,"get_attached_size","","The size of the EGL buffer attached to this surface.",211,null],[11,"get_wsurface","","",211,{"inputs":[{"name":"eglsurface"}],"output":{"name":"wsurface"}}],[11,"drop","","",211,null],[11,"ptr","","",211,null],[11,"ptr_mut","","",211,null],[11,"open","wayland::egl::eglffi","",212,{"inputs":[{"name":"waylandegl"},{"name":"str"}],"output":{"name":"result"}}],[11,"deref","","",213,{"inputs":[{"name":"wayland_egl_option"}],"output":{"name":"option"}}],[11,"deref","","",214,{"inputs":[{"name":"wayland_egl_handle"}],"output":{"name":"waylandegl"}}],[11,"deref","wayland_window","",215,{"inputs":[{"name":"surfaceguard"}],"output":{"name":"shellsurface"}}],[11,"deref_mut","","",215,{"inputs":[{"name":"surfaceguard"}],"output":{"name":"shellsurface"}}],[11,"resize","","Resizes the borders to given width and height.",216,{"inputs":[{"name":"decoratedsurface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"new","","Creates a new decorated window around given surface.",216,{"inputs":[{"name":"decoratedsurface"},{"name":"s"},{"name":"i32"},{"name":"i32"},{"name":"registry"},{"name":"option"}],"output":{"name":"result"}}],[11,"get_shell","","Creates a guard giving you access to the shell surface wrapped\nin this object.",216,{"inputs":[{"name":"decoratedsurface"}],"output":{"name":"surfaceguard"}}],[11,"destroy","","Destroys the DecoratedSurface and returns the wrapped surface",216,{"inputs":[{"name":"decoratedsurface"}],"output":{"name":"s"}}]],"paths":[[3,"ShellSurface"],[3,"WaylandClient"],[4,"Option"],[3,"Wrapping"],[3,"Big32x40"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[4,"KeyState"],[4,"KeymapFormat"],[3,"OutputMode"],[4,"OutputSubpixel"],[4,"OutputTransform"],[4,"ScrollAxis"],[4,"ButtonState"],[3,"SeatCapability"],[4,"FullscreenMethod"],[4,"ShellSurfaceResize"],[3,"ShellSurfaceTransient"],[4,"ShmFormat"],[3,"Display"],[3,"InternalDisplay"],[3,"SurfaceId"],[3,"Serial"],[3,"Registry"],[3,"RegistryInternal"],[3,"Compositor"],[3,"CompositorInternal"],[3,"Region"],[3,"WSurface"],[3,"OutputId"],[3,"OutputMode"],[3,"Output"],[3,"KeyboardId"],[3,"KeyboardListener"],[3,"Keyboard"],[3,"PointerId"],[3,"PointerData"],[3,"PointerListener"],[3,"Pointer"],[3,"Seat"],[3,"InternalSeat"],[3,"TouchId"],[3,"Touch"],[3,"Shell"],[3,"InternalShell"],[3,"Buffer"],[3,"Shm"],[3,"InternalShm"],[3,"ShmPool"],[3,"SubCompositor"],[3,"InternalSubCompositor"],[3,"SubSurface"],[3,"EGLSurface"],[3,"WaylandEGL"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"SurfaceGuard"],[3,"DecoratedSurface"]]};
searchIndex['gl_generator'] = {"items":[[0,"","gl_generator","# gl_generator",null,null],[5,"generate_bindings","","Public function that generates Rust source code.",null,null],[0,"generators","","",null,null],[5,"gen_enum_item","gl_generator::generators","This function generates a `const name: type = value;` item.",null,{"inputs":[{"name":"enum"},{"name":"str"},{"name":"w"}],"output":{"name":"result"}}],[5,"gen_type_aliases","","Generates all the type aliases for a namespace.",null,{"inputs":[{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[5,"gen_parameters","","Generates the list of Rust `Arg`s that a `Cmd` requires.",null,{"inputs":[{"name":"cmd"},{"name":"bool"},{"name":"bool"}],"output":{"name":"vec"}}],[5,"gen_return_type","","Generates the Rust return type of a `Cmd`.",null,{"inputs":[{"name":"cmd"}],"output":{"name":"string"}}],[5,"gen_symbol_name","","Generates the native symbol name of a `Cmd`.",null,{"inputs":[{"name":"ns"},{"name":"str"}],"output":{"name":"string"}}],[0,"debug_struct_gen","","",null,null],[3,"DebugStructGenerator","gl_generator::generators::debug_struct_gen","",null,null],[11,"write","","",0,{"inputs":[{"name":"debugstructgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"global_gen","gl_generator::generators","",null,null],[3,"GlobalGenerator","gl_generator::generators::global_gen","",null,null],[11,"write","","",1,{"inputs":[{"name":"globalgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"static_gen","gl_generator::generators","",null,null],[3,"StaticGenerator","gl_generator::generators::static_gen","",null,null],[11,"write","","",2,{"inputs":[{"name":"staticgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"struct_gen","gl_generator::generators","",null,null],[3,"StructGenerator","gl_generator::generators::struct_gen","",null,null],[11,"write","","",3,{"inputs":[{"name":"structgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"static_struct_gen","gl_generator::generators","",null,null],[3,"StaticStructGenerator","gl_generator::generators::static_struct_gen","",null,null],[11,"write","","",4,{"inputs":[{"name":"staticstructgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[8,"Generator","gl_generator::generators","Trait for a bindings generator.",null,null],[10,"write","","Builds the GL bindings.",5,{"inputs":[{"name":"generator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"registry","gl_generator","",null,null],[3,"Registry","gl_generator::registry","",null,null],[12,"groups","","",6,null],[12,"enums","","",6,null],[12,"cmds","","",6,null],[12,"features","","",6,null],[12,"extensions","","",6,null],[12,"aliases","","",6,null],[3,"EnumIterator","","",null,null],[3,"CmdIterator","","",null,null],[3,"Group","","",null,null],[12,"name","","",7,null],[12,"enums","","",7,null],[3,"EnumNs","","",null,null],[12,"namespace","","",8,null],[12,"group","","",8,null],[12,"ty","","",8,null],[12,"start","","",8,null],[12,"end","","",8,null],[12,"vendor","","",8,null],[12,"comment","","",8,null],[12,"defs","","",8,null],[3,"Enum","","",null,null],[12,"ident","","",9,null],[12,"value","","",9,null],[12,"alias","","",9,null],[12,"ty","","",9,null],[3,"CmdNs","","",null,null],[12,"namespace","","",10,null],[12,"defs","","",10,null],[3,"Binding","","",null,null],[12,"ident","","",11,null],[12,"ty","","",11,null],[12,"group","","",11,null],[3,"Cmd","","",null,null],[12,"proto","","",12,null],[12,"params","","",12,null],[12,"is_safe","","True if this command doesn't take any pointers.",12,null],[12,"alias","","",12,null],[12,"vecequiv","","",12,null],[12,"glx","","",12,null],[3,"Feature","","",null,null],[12,"api","","",13,null],[12,"name","","",13,null],[12,"number","","",13,null],[12,"requires","","",13,null],[12,"removes","","",13,null],[3,"Require","","",null,null],[12,"comment","","",14,null],[12,"enums","","A reference to the earlier types, by name",14,null],[12,"commands","","A reference to the earlier types, by name",14,null],[3,"Remove","","",null,null],[12,"profile","","",15,null],[12,"comment","","",15,null],[12,"enums","","A reference to the earlier types, by name",15,null],[12,"commands","","A reference to the earlier types, by name",15,null],[3,"Extension","","",null,null],[12,"name","","",16,null],[12,"supported","","which apis this extension is defined for (see Feature.api)",16,null],[12,"requires","","",16,null],[3,"GlxOpcode","","",null,null],[12,"ty","","",17,null],[12,"opcode","","",17,null],[12,"name","","",17,null],[12,"comment","","",17,null],[3,"Filter","","",null,null],[12,"fallbacks","","",18,null],[12,"extensions","","",18,null],[12,"profile","","",18,null],[12,"version","","",18,null],[12,"api","","",18,null],[4,"Ns","","",null,null],[13,"Gl","","",19,null],[13,"Glx","","",19,null],[13,"Wgl","","",19,null],[13,"Egl","","",19,null],[13,"Gles1","","",19,null],[13,"Gles2","","",19,null],[4,"Fallbacks","","",null,null],[13,"All","","",20,null],[13,"None","","",20,null],[11,"clone","","",19,{"inputs":[{"name":"ns"}],"output":{"name":"ns"}}],[11,"fmt_struct_name","","",19,{"inputs":[{"name":"ns"}],"output":{"name":"str"}}],[11,"from_str","","",19,{"inputs":[{"name":"ns"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"ns"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_xml","","Generate a registry from the supplied XML string",6,{"inputs":[{"name":"registry"},{"name":"r"},{"name":"ns"},{"name":"option"}],"output":{"name":"registry"}}],[11,"get_tys","","Returns a set of all the types used in the supplied registry. This is useful\nfor working out what conversions are needed for the specific registry.",6,{"inputs":[{"name":"registry"}],"output":{"name":"btreeset"}}],[11,"enum_iter","","",6,{"inputs":[{"name":"registry"}],"output":{"name":"enumiterator"}}],[11,"cmd_iter","","",6,{"inputs":[{"name":"registry"}],"output":{"name":"cmditerator"}}],[11,"add","","",6,{"inputs":[{"name":"registry"},{"name":"registry"}],"output":{"name":"registry"}}],[11,"next","","",21,{"inputs":[{"name":"enumiterator"}],"output":{"name":"option"}}],[11,"next","","",22,{"inputs":[{"name":"cmditerator"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"feature"}],"output":{"name":"feature"}}],[11,"clone","","",14,{"inputs":[{"name":"require"}],"output":{"name":"require"}}],[11,"clone","","",15,{"inputs":[{"name":"remove"}],"output":{"name":"remove"}}],[11,"clone","","",16,{"inputs":[{"name":"extension"}],"output":{"name":"extension"}}]],"paths":[[3,"DebugStructGenerator"],[3,"GlobalGenerator"],[3,"StaticGenerator"],[3,"StructGenerator"],[3,"StaticStructGenerator"],[8,"Generator"],[3,"Registry"],[3,"Group"],[3,"EnumNs"],[3,"Enum"],[3,"CmdNs"],[3,"Binding"],[3,"Cmd"],[3,"Feature"],[3,"Require"],[3,"Remove"],[3,"Extension"],[3,"GlxOpcode"],[3,"Filter"],[4,"Ns"],[4,"Fallbacks"],[3,"EnumIterator"],[3,"CmdIterator"]]};
searchIndex['tempfile'] = {"items":[[0,"","tempfile","Securely create and manage temporary files. Temporary files created by this create are\nautomatically deleted.",null,null],[3,"NamedTempFile","","A named temporary file.",null,null],[3,"TempFile","","An unnamed temporary file.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"namedtempfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"open","std::fs","Attempts to open a file in read-only mode.",1,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",1,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",1,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",4,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",5,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",6,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",8,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","tempfile","Returns true if the boxed type is the same as `T`",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",12,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",13,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",13,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",14,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",14,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",15,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",15,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",15,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",16,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",16,null],[11,"get","","",16,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",17,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",17,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",17,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",17,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",18,null],[11,"name","","Gets the thread's name.",18,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",18,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",20,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",22,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",22,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",21,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",21,null],[11,"next","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",24,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",23,null],[11,"take","","Removes this bucket's key and value from the hashtable.",23,null],[11,"replace","","",23,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",23,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",23,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",23,null],[11,"expect_full","","",25,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",27,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",29,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",30,null],[11,"len","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",31,null],[11,"len","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"len","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"len","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",33,null],[11,"clone","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",27,null],[11,"clone","std::collections::hash::map","",34,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",35,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",35,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",35,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",35,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",35,null],[11,"get","","Returns a reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",35,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",35,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",38,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"len","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"len","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"len","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"len","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",38,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"len","","",38,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"len","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",43,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",44,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",35,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",35,null],[11,"clone","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",46,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",46,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",46,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",46,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",46,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",46,null],[11,"contains","","Returns `true` if the set contains a value.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",46,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"eq","","",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",46,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",46,null],[11,"default","","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"len","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"len","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"len","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"clone","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"clone","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"clone","","",53,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",53,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"hasher","std::collections::hash::state","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",55,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",57,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",57,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",58,null],[11,"iter","","Provides a forward iterator.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",58,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",58,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",58,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",58,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",58,null],[11,"next","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",59,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",58,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",58,null],[11,"extend","","",58,null],[11,"eq","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",58,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",58,null],[11,"clone","collections::vec_deque","",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",60,null],[11,"default","","",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",60,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",60,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",60,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",60,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",60,null],[11,"iter","","Returns a front-to-back iterator.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",60,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",60,null],[11,"len","","Returns the number of elements in the `VecDeque`.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",60,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",60,null],[11,"push_back","","Appends an element to the back of a buffer",60,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",60,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",60,null],[11,"retain","","Retains only the elements specified by the predicate.",60,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",60,null],[11,"clone","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",62,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",64,null],[11,"next","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",60,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",60,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",60,null],[11,"index","","",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",60,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",60,null],[11,"extend","","",60,null],[11,"fmt","","",60,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","collections::binary_heap","",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"default","","",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",65,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",65,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",65,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",65,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",65,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",65,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",65,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",65,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",65,null],[11,"drop","","",66,null],[11,"clone","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",69,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from_iter","","",65,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",65,null],[11,"extend","","",65,null],[11,"drop","std::dynamic_lib","",70,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",70,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",70,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",70,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",70,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",70,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",70,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",71,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next","","",72,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"clone","","",73,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",73,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",73,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",74,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"fmt","","",75,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",75,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",76,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"len","","",76,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",77,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"len","","",77,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",78,null],[11,"cmp","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",79,null],[11,"fmt","","",80,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",78,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",78,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",78,null],[11,"from_raw","","Retakes ownership of a CString that was transferred to C.",78,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",78,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",78,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",78,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",78,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",79,null],[11,"as_ptr","","Returns the inner pointer to this C string.",79,null],[11,"to_bytes","","Converts this C string to a byte slice.",79,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",79,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",79,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",79,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",78,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",80,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",81,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"eq","std::ffi::c_str","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",79,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",82,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",82,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",82,null],[11,"from","","",82,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",82,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",82,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",83,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",82,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",82,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",82,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",82,null],[11,"eq","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",83,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",83,null],[11,"fmt","","",83,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",83,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",83,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",85,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",86,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",87,null],[11,"eq","","",87,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"fmt","","",1,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",1,null],[11,"read_to_end","","",1,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",1,null],[11,"flush","","",1,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",1,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",85,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",85,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",88,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",88,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",88,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",88,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",88,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",86,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",86,null],[11,"is_dir","","Test whether this file type represents a directory.",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",89,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",90,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",90,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",90,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",90,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",91,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",92,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",92,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",92,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",92,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",92,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",92,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",92,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",92,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",93,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",93,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",93,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",94,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",94,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",94,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",94,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",94,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",94,null],[11,"fill_buf","","",94,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",94,null],[11,"fmt","","",94,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",94,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",95,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",96,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",96,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",96,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",96,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",96,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",96,null],[11,"flush","","",96,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",96,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",96,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",95,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",95,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",81,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",95,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",95,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",97,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",97,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",97,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",97,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",97,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",97,null],[11,"flush","","",97,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",98,null],[11,"fmt","std::io::cursor","",99,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",99,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",99,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",99,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",99,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",99,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",99,null],[11,"seek","","",99,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",99,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",99,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",99,null],[11,"read","","",99,null],[11,"read","","",99,null],[11,"fill_buf","","",99,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",99,null],[11,"fill_buf","","",99,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",99,null],[11,"fill_buf","","",99,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",99,null],[11,"write","","",99,null],[11,"flush","","",99,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",99,null],[11,"flush","","",99,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",81,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",101,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",81,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",81,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",81,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",81,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",102,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",81,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","","",2,null],[11,"flush","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",2,null],[11,"write_fmt","","",2,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",2,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",2,null],[11,"read_until","","",2,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",103,null],[11,"write_all","","",103,null],[11,"flush","","",103,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",104,null],[11,"get","","",104,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",105,null],[11,"fill_buf","","",105,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",105,null],[11,"read","","",106,null],[11,"write","","",107,null],[11,"flush","","",107,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",108,null],[11,"write","","",109,null],[11,"flush","","",109,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",110,null],[11,"flush","","",110,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",111,null],[11,"flush","","",111,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",111,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",112,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",112,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",112,null],[11,"read_to_end","","",112,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",112,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",113,null],[11,"read_to_end","","",113,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",113,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",113,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",114,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",114,null],[11,"flush","","",114,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",114,null],[11,"write_fmt","","",114,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",115,null],[11,"flush","","",115,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",116,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",116,null],[11,"flush","","",116,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",116,null],[11,"write_fmt","","",116,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",117,null],[11,"flush","","",117,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",118,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",118,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",119,null],[11,"flush","","",119,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",120,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",121,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",121,null],[11,"fill_buf","","",121,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",121,null],[11,"read","","",122,null],[11,"next","","",123,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",124,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",125,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",124,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",124,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",124,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",126,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",127,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",128,null],[11,"fmt","","",128,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",129,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",129,null],[11,"clone","","",129,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",129,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",130,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",130,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",128,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",130,null],[11,"partial_cmp","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",131,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",131,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",131,null],[11,"partial_cmp","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",132,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",132,null],[11,"eq","","",132,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",132,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",132,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",132,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",133,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",133,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",133,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",134,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",132,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",133,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",134,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",133,null],[11,"hash","","",134,null],[11,"to_socket_addrs","","",132,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",133,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",134,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",135,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",135,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",135,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",135,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",135,null],[11,"read_to_end","","",135,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",135,null],[11,"flush","","",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",136,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",137,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",136,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",138,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",138,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",138,null],[11,"local_addr","","Returns the socket address that this socket was created from.",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",138,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",138,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",128,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",130,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",131,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",132,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",139,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",139,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::net","",140,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",140,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",141,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"as_raw_fd","std::fs","",1,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",1,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",1,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",135,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",136,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",138,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",135,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",136,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",138,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",82,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",83,null],[11,"as_bytes","","",83,null],[11,"mode","std::fs","",86,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",86,null],[11,"from_mode","","",86,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",85,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"dev","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",90,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",93,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",142,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",142,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",142,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"signal","","",143,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",144,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",145,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",146,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",147,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",145,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",146,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",147,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",148,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",148,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",148,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",148,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",148,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",148,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",148,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",148,null],[11,"fmt","","",148,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",148,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",149,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",149,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",149,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",149,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",149,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",149,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",149,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",149,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",150,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",150,null],[11,"clone","","",150,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",150,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",150,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",150,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",150,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",150,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",151,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",151,null],[11,"cmp","","",151,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",151,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",151,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",151,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",151,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",151,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",151,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",151,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",152,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",153,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",152,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",152,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",152,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",152,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",153,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",153,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",153,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",153,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",153,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",152,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",152,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",152,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",152,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",154,null],[11,"clone","","",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",154,null],[11,"pop","","Truncate `self` to `self.parent()`.",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",154,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",154,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",154,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",154,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",154,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",154,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",154,null],[11,"fmt","","",154,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",92,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",92,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",92,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",92,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",92,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",92,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",92,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",92,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",92,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",92,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",92,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",92,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",92,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",92,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",92,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",92,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",92,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",92,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",92,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",92,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",92,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",92,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"deref","","",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",92,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",154,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",154,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",92,null],[11,"as_ref","","",92,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",92,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",92,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",92,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",92,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",92,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",83,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",154,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",145,null],[11,"flush","","",145,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",146,null],[11,"read","","",147,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",142,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",142,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",142,null],[11,"env","","Inserts or updates an environment variable mapping.",142,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",142,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",142,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",142,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",142,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",142,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",142,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",142,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",142,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",142,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",142,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",156,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",144,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",144,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",144,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",143,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",143,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",143,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",143,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",143,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",157,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",157,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",157,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",157,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",158,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",158,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",158,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",158,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",159,null],[11,"new","std::sync::mpsc::oneshot","",160,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",160,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",160,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",160,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",160,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",160,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",160,null],[11,"drop_port","","",160,null],[11,"can_recv","","",160,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",160,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",160,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",160,null],[11,"eq","std::sync::mpsc::select","",161,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",162,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",162,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",162,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",163,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",163,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",163,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",163,null],[11,"drop","","",162,null],[11,"drop","","",163,null],[11,"next","","",164,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",165,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",165,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",165,null],[11,"send","","",165,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",165,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",165,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",165,null],[11,"drop_chan","","",165,null],[11,"drop_port","","",165,null],[11,"can_recv","","",165,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",165,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",165,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",165,null],[11,"new","std::sync::mpsc::stream","",166,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",166,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",166,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",166,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",166,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",166,null],[11,"drop_port","","",166,null],[11,"can_recv","","",166,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",166,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",166,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",166,null],[11,"fmt","std::sync::mpsc::sync","",167,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",168,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",168,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",168,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",168,null],[11,"drop_chan","","",168,null],[11,"drop_port","","",168,null],[11,"can_recv","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",168,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",168,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",168,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",169,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",169,null],[11,"pop","","Pops some data from this queue.",169,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",169,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",170,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",170,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",170,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",170,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",170,null],[11,"clone","std::sync::mpsc","",171,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",171,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",172,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",172,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",172,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",173,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",173,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",174,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",174,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",175,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",175,null],[11,"send","","Sends a value on this synchronous channel.",176,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",176,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",176,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",176,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",177,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",177,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",177,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",178,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",179,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",177,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",177,null],[11,"fmt","","",171,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",171,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",171,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",174,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",174,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",174,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",172,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",172,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",172,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",173,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",173,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",173,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",180,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",180,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",181,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",182,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",182,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",182,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",182,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",183,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",183,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",183,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",183,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",183,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",183,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",183,null],[11,"drop","","",183,null],[11,"new","","Creates a new condition variable",184,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",184,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",184,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",184,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",184,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",184,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",184,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",184,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",185,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",185,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",185,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",185,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"drop","","",185,null],[11,"fmt","","",185,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",186,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",186,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",186,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",186,null],[11,"deref","","",187,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",187,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",187,null],[11,"new","std::sync::once","Creates a new `Once` value.",188,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",188,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",189,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"drop","","",189,null],[11,"fmt","","",189,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",190,null],[11,"deref","","",191,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",192,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",192,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",191,null],[11,"drop","","",192,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",193,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",193,null],[11,"release","","Release a resource from this semaphore.",193,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",193,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",194,null],[11,"default","core::sync::atomic","",195,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",196,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",197,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",198,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",199,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",195,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",195,null],[11,"swap","","Stores a value into the bool, returning the old value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",196,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",196,null],[11,"swap","","Stores a value into the isize, returning the old value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",197,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",197,null],[11,"swap","","Stores a value into the usize, returning the old value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",198,null],[11,"load","","Loads a value from the pointer.",198,null],[11,"store","","Stores a value into the pointer.",198,null],[11,"swap","","Stores a value into the pointer, returning the old value.",198,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",198,null],[11,"fmt","","",197,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",196,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",195,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",198,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::time::duration","",200,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",200,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Crates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",200,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",200,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",200,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",200,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",200,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",200,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",200,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",200,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",201,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",201,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",201,null],[11,"wait","","Waits for a signal on the specified mutex.",201,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",201,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",201,null],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",202,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",202,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",202,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",202,null],[11,"destroy","","Deallocates all resources associated with this mutex.",202,null],[11,"next","std::sys_common::net","",203,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",203,null],[11,"connect","","",204,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",204,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",204,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",204,null],[11,"write","","",204,null],[11,"peer_addr","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",204,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",204,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",205,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",205,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",206,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",206,null],[11,"send_to","","",206,null],[11,"duplicate","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",206,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",206,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",206,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",207,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",207,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",207,null],[11,"get","","",207,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",208,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",208,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",208,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",208,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",208,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",208,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",208,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",209,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",209,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",209,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",209,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",209,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",210,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",210,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",210,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",210,null],[11,"fmt","","",210,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",211,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",211,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",212,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",212,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",212,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",212,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",212,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",212,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",212,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",212,null],[11,"new","std::sys_common::thread_local","",213,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",213,null],[11,"set","","Sets this TLS key to a new value.",213,null],[11,"destroy","","Deallocates this OS TLS key.",213,null],[11,"new","","Creates a new managed OS TLS key.",214,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",214,null],[11,"set","","See StaticKey::set",214,null],[11,"drop","","",214,null],[11,"clone","std::sys_common::wtf8","",215,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",215,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",215,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",215,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",215,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",215,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",215,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",215,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",217,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",217,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an new, empty WTF-8 string.",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates an new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",216,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",216,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",216,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",216,null],[11,"as_slice","","",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",216,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",216,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",216,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",216,null],[11,"push","","Append a code point at the end of the string.",216,null],[11,"truncate","","Shortens a string to the specified length.",216,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",216,null],[11,"eq","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",217,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",217,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",217,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",217,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",217,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",218,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",218,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",218,null],[11,"clone","","",219,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",219,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",219,null],[11,"hash","","",215,null],[11,"hash","","",216,null],[11,"hash","","",217,null],[11,"is_ascii","","",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",217,null],[11,"make_ascii_lowercase","","",217,null],[11,"new","std::sys::condvar","",220,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",220,null],[11,"notify_all","","",220,null],[11,"wait","","",220,null],[11,"wait_timeout","","",220,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",220,null],[11,"new","std::sys::fd","",221,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",221,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",221,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",221,null],[11,"write","","",221,null],[11,"set_cloexec","","",221,null],[11,"drop","","",221,null],[11,"clone","std::sys::fs","",222,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",223,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",223,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",223,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",223,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",224,null],[11,"eq","","",224,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",224,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",224,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",225,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",225,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",225,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",88,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",223,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",223,null],[11,"mode","","",223,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",224,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",224,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",224,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",224,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",226,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",227,null],[11,"path","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",222,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",222,null],[11,"write","","",222,null],[11,"append","","",222,null],[11,"truncate","","",222,null],[11,"create","","",222,null],[11,"mode","","",222,null],[11,"open","","",229,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",229,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",229,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",229,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",229,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",229,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",229,null],[11,"write","","",229,null],[11,"flush","","",229,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",229,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",229,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",229,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",230,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",230,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",230,null],[11,"fmt","","",229,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",231,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",231,null],[11,"unlock","","",231,null],[11,"try_lock","","",231,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",231,null],[11,"uninitialized","","",232,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",232,null],[11,"lock","","",232,null],[11,"try_lock","","",232,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",232,null],[11,"destroy","","",232,null],[11,"new","std::sys::net","",233,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",233,null],[11,"duplicate","","",233,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",233,null],[11,"set_timeout","","",233,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",233,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",234,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",234,null],[11,"fmt","","",235,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",235,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",235,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",236,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",236,null],[11,"len","","",236,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",237,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"hash","std::sys::os_str","",238,null],[11,"clone","","",238,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",239,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",238,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",238,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",238,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",238,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",238,null],[11,"from_str","","",239,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",239,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",239,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",239,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",240,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",240,null],[11,"write","","",240,null],[11,"raw","","",240,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",240,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",240,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",241,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",241,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",241,null],[11,"args","","",241,null],[11,"env","","",241,null],[11,"env_remove","","",241,null],[11,"env_clear","","",241,null],[11,"cwd","","",241,null],[11,"fmt","","",242,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",242,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",242,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",242,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",242,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",242,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",242,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",243,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",243,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",243,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",243,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",243,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",244,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",244,null],[11,"try_read","","",244,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",244,null],[11,"try_write","","",244,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",244,null],[11,"write_unlock","","",244,null],[11,"destroy","","",244,null],[11,"new","std::sys::stack_overflow","",245,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",245,null],[11,"new","std::sys::thread","",246,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",246,null],[11,"set_name","","",246,null],[11,"sleep","","",246,null],[11,"join","","",246,null],[11,"drop","","",246,null],[11,"now","std::sys::time::inner","",247,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",248,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",248,null],[11,"new","","",249,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",249,null],[11,"new","","",250,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",250,null],[11,"write","","",250,null],[11,"flush","","",250,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::rt::libunwind","",251,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",252,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"clone","std::rt::dwarf::eh","",253,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::rt::dwarf","",254,null],[11,"read","","",254,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",254,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",254,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",255,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",255,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",255,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",255,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",256,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",256,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",256,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",256,null],[11,"clone","std::rand","",257,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",257,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",257,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",257,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",257,null],[11,"from_seed","","",257,null],[11,"reseed","","",258,null],[11,"clone","","",259,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",259,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",259,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",259,null],[11,"new","core::ptr","Creates a new `Unique`.",260,null],[11,"get","","Dereferences the content.",260,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",260,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",260,null],[11,"fmt","","",260,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::ops","",261,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",261,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",261,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",261,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",262,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",262,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",262,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",262,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",263,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",263,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",263,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",263,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",264,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",264,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",264,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",264,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::result","",265,null],[11,"fmt","","",265,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",265,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",265,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",265,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",265,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",265,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",265,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",265,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",265,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",265,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",265,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",265,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",265,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",265,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",265,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",265,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",265,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",265,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",265,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",265,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",265,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",265,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",266,null],[11,"next_back","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",267,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",267,null],[11,"next_back","","",267,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",268,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",268,null],[11,"next_back","","",268,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",265,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",103,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",103,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",103,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",103,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",103,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",103,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",103,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",103,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",103,null],[11,"as_slice","","Extracts a slice containing the entire vector.",103,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",103,null],[11,"set_len","","Sets the length of a vector.",103,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",103,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",103,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",103,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",103,null],[11,"push","","Appends an element to the back of a collection.",103,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",103,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",103,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",103,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",103,null],[11,"len","","Returns the number of elements in the vector.",103,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",103,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",103,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",103,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",103,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",103,null],[11,"clone","","",103,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",103,null],[11,"hash","","",103,null],[11,"index","","",103,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",103,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",103,null],[11,"index","","",103,null],[11,"index","","",103,null],[11,"index","","",103,null],[11,"index_mut","","",103,null],[11,"index_mut","","",103,null],[11,"index_mut","","",103,null],[11,"index_mut","","",103,null],[11,"deref","","",103,null],[11,"deref_mut","","",103,null],[11,"from_iter","","",103,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",103,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",103,null],[11,"extend","","",103,null],[11,"eq","","",103,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","collections::borrow","",269,null],[11,"ne","","",269,null],[11,"eq","","",269,null],[11,"ne","","",269,null],[11,"eq","","",269,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",269,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"partial_cmp","","",103,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",103,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",103,null],[11,"default","","",103,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",103,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",103,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",103,null],[11,"from","","",103,null],[11,"from","","",103,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",269,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",103,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",270,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"count","","",270,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",270,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",270,null],[11,"next","","",271,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",271,null],[11,"next_back","","",271,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",271,null],[11,"clone","core::raw","",272,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",273,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"fmt","core::cmp","",274,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",274,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",274,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",274,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",274,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",274,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",274,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"borrow","alloc::boxed","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow","alloc::rc","",275,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",276,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",269,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",269,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",269,null],[11,"into_owned","","Extracts the owned data.",269,null],[11,"deref","","",269,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",269,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",269,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",269,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",269,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",269,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",269,null],[11,"into_cow","","",269,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",269,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"clone","core::fmt::rt::v1","",277,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",278,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",279,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",279,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",279,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",280,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",281,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"clone","collections::str","",282,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",282,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",282,null],[11,"borrow","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",283,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",283,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",283,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",285,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",289,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",290,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",291,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",291,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",292,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",292,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",293,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",293,null],[11,"matching","","",293,null],[11,"use_early_reject","","",294,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",294,null],[11,"matching","","",294,null],[11,"clone","alloc::boxed","",295,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",296,null],[11,"make_place","","",296,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",296,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",2,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",295,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",296,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",2,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",2,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",2,null],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",2,null],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",297,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",297,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",297,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",297,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",297,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",297,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",297,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",298,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",298,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",298,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",298,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",299,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",299,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",299,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",299,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",299,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",300,null],[11,"clone","","",300,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",301,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",301,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",301,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",301,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",302,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",302,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",303,null],[11,"deref","","",302,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",302,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",304,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",304,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",304,null],[11,"clone","core::iter","",305,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",305,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",305,null],[11,"next_back","","",305,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",306,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",306,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",306,null],[11,"next_back","","",306,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",307,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",307,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",307,null],[11,"clone","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",308,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",308,null],[11,"next_back","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",309,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",309,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",309,null],[11,"next_back","","",309,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",310,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",310,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",310,null],[11,"next_back","","",310,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",311,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",311,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",311,null],[11,"next_back","","",311,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",312,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",312,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",312,null],[11,"next_back","","",312,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",313,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",313,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",313,null],[11,"nth","","",313,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",313,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",313,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",314,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",314,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",314,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",314,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",314,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",314,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",314,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",314,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",315,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",315,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",315,null],[11,"clone","","",316,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",316,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",316,null],[11,"clone","","",317,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",317,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",317,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",317,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",317,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",317,null],[11,"clone","","",318,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",318,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",318,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",318,null],[11,"clone","","",319,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",319,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",319,null],[11,"clone","","",320,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",320,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",320,null],[11,"next_back","","",320,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",321,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",321,null],[11,"next_back","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",322,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",322,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",322,null],[11,"next_back","","",322,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",323,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",263,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",262,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",323,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",323,null],[11,"clone","","",324,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",324,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",324,null],[11,"next_back","","",324,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",323,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",323,null],[11,"next","core::ops","",262,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",262,null],[11,"next_back","","",262,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",263,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",325,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",325,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",325,null],[11,"next_back","","",325,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",326,null],[11,"next_back","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",327,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",327,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",327,null],[11,"next_back","","",327,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",327,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"fmt","core::simd","",328,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",328,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",329,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",329,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",330,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",330,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",331,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",331,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",332,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",332,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",333,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",333,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",334,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",334,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",335,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",335,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",336,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",336,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",337,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",337,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",336,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",337,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",336,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",337,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",336,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",337,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",336,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",337,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"cmp","collections::string","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",84,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",84,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",84,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",84,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",84,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",84,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",84,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",84,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",84,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",84,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",84,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",84,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",84,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",84,null],[11,"push","","Adds the given character to the end of the string.",84,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",84,null],[11,"truncate","","Shortens a string to the specified length.",84,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",84,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",84,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",84,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",84,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",84,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",84,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",84,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",84,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts the string into `Box<str>`.",84,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",84,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",84,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",84,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",84,null],[11,"extend","","",84,null],[11,"extend","","",84,null],[11,"eq","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",269,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",269,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",84,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",84,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",84,null],[11,"add","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",84,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",84,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",84,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",84,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",84,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",84,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",84,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",84,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"eq","","",338,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",338,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",338,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",338,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"from_str","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",84,null],[11,"from","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",269,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",84,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",84,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",339,null],[11,"next","","",339,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",339,null],[11,"next_back","","",339,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"fmt","tempfile","",340,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",340,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",340,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",340,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",340,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",340,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",340,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",340,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",341,null],[11,"fmt","","",341,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",341,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",341,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",341,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"borrow","collections::vec","",103,null],[11,"borrow_mut","","",103,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",275,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",275,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",275,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",275,null],[11,"clone","","Makes a clone of the `Rc<T>`.",275,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",275,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",275,null],[11,"fmt","","",275,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",275,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",275,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",342,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",342,null],[11,"clone","","Makes a clone of the `Weak<T>`.",342,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",342,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",343,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",343,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",343,null],[11,"finish","","",343,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",343,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",343,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"hash","core::option","",344,null],[11,"fmt","","",344,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",344,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",344,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",344,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",344,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",344,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",344,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",344,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",344,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",344,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",344,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",344,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",344,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",344,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",344,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",345,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",345,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",345,null],[11,"next_back","","",345,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",346,null],[11,"next_back","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",347,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",347,null],[11,"next_back","","",347,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",348,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",348,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",348,null],[11,"next_back","","",348,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",344,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"hash","core::marker","",349,null],[11,"eq","","",349,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",349,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",349,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",349,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"next","rustc_unicode::char","",350,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",351,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",352,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"deref","tempfile","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"file"}}],[11,"deref_mut","","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"file"}}],[11,"from","std::io::error","",81,{"inputs":[{"name":"error"},{"name":"persisterror"}],"output":{"name":"error"}}],[11,"new","tempfile","Create a new temporary file.",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"result"}}],[11,"new_in","","Create a new temporary file in the specified directory.",0,{"inputs":[{"name":"namedtempfile"},{"name":"p"}],"output":{"name":"result"}}],[11,"path","","Get the temporary file's path.",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"path"}}],[11,"close","","Close and remove the temporary file.",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"result"}}],[11,"persist","","Persist the temporary file at the target path.",0,{"inputs":[{"name":"namedtempfile"},{"name":"p"}],"output":{"name":"result"}}],[11,"drop","","",0,{"inputs":[{"name":"namedtempfile"}],"output":null}],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"result"}}],[11,"seek","","",0,{"inputs":[{"name":"namedtempfile"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",0,{"inputs":[{"name":"namedtempfile"}],"output":{"name":"rawfd"}}],[11,"fmt","","",353,{"inputs":[{"name":"tempfile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new temporary file.",353,{"inputs":[{"name":"tempfile"}],"output":{"name":"result"}}],[11,"new_in","","Create a new temporary file in the specified directory.",353,{"inputs":[{"name":"tempfile"},{"name":"p"}],"output":{"name":"result"}}],[11,"shared","","Create a new temporary file and open it `count` times returning `count` independent\nreferences to the same file.",353,{"inputs":[{"name":"tempfile"},{"name":"usize"}],"output":{"name":"result"}}],[11,"shared_in","","Same as `shared` but creates the file in the specified directory.",353,{"inputs":[{"name":"tempfile"},{"name":"p"},{"name":"usize"}],"output":{"name":"result"}}],[11,"len","","Number of bytes in the file.",353,{"inputs":[{"name":"tempfile"}],"output":{"name":"result"}}],[11,"set_len","","Truncate the file to `size` bytes.",353,{"inputs":[{"name":"tempfile"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",353,null],[11,"write","","",353,null],[11,"flush","","",353,{"inputs":[{"name":"tempfile"}],"output":{"name":"result"}}],[11,"seek","","",353,{"inputs":[{"name":"tempfile"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",353,{"inputs":[{"name":"tempfile"}],"output":{"name":"rawfd"}}]],"paths":[[3,"NamedTempFile"],[3,"File"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"Metadata"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Vec"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"FileAttr"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"EHContext"],[3,"DwarfReader"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Unique"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"Slice"],[3,"TraitObject"],[4,"Ordering"],[3,"Rc"],[3,"Arc"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"ParseError"],[3,"Drain"],[8,"Any"],[3,"TypeId"],[3,"Weak"],[3,"SipHasher"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"PhantomData"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"TempFile"]]};
searchIndex['mmap'] = {"items":[[0,"","mmap","",null,null],[3,"MemoryMap","","A memory mapped file or chunk of memory. This is a very system-specific\ninterface to the OS's memory mapping facilities (`mmap` on POSIX,\n`VirtualAlloc`/`CreateFileMapping` on Windows). It makes no attempt at\nabstracting platform differences, besides in error values returned. Consider\nyourself warned.",null,null],[4,"MemoryMapKind","","Type of memory map",null,null],[13,"MapFile","","Virtual memory map. Usually used to change the permissions of a given\nchunk of memory.  Corresponds to `VirtualAlloc` on Windows.",0,null],[13,"MapVirtual","","Virtual memory map. Usually used to change the permissions of a given\nchunk of memory, or for allocation. Corresponds to `VirtualAlloc` on\nWindows.",0,null],[4,"MapOption","","Options the memory map is created with",null,null],[13,"MapReadable","","The memory should be readable",1,null],[13,"MapWritable","","The memory should be writable",1,null],[13,"MapExecutable","","The memory should be executable",1,null],[13,"MapAddr","","Create a map for a specific address range. Corresponds to `MAP_FIXED` on\nPOSIX.",1,null],[13,"MapFd","","Create a memory mapping for a file with a given fd.",1,null],[13,"MapOffset","","When using `MapFd`, the start of the map is `usize` bytes from the start\nof the file.",1,null],[13,"MapNonStandardFlags","","On POSIX, this can be used to specify the default flags passed to\n`mmap`. By default it uses `MAP_PRIVATE` and, if not using `MapFd`,\n`MAP_ANON`. This will override both of those. This is platform-specific\n(the exact values used) and ignored on Windows.",1,null],[4,"MapError","","Possible errors when creating a map.",null,null],[13,"ErrFdNotAvail","","# The following are POSIX-specific",2,null],[13,"ErrInvalidFd","","fd was not valid",2,null],[13,"ErrUnaligned","","Either the address given by `MapAddr` or offset given by `MapOffset` was\nnot a multiple of `MemoryMap::granularity` (unaligned to page size).",2,null],[13,"ErrNoMapSupport","","With `MapFd`, the fd does not support mapping.",2,null],[13,"ErrNoMem","","If using `MapAddr`, the address + `min_len` was outside of the process's\naddress space. If using `MapFd`, the target of the fd didn't have enough\nresources to fulfill the request.",2,null],[13,"ErrZeroLength","","A zero-length map was requested. This is invalid according to\n[POSIX](http://pubs.opengroup.org/onlinepubs/9699919799/functions/mmap.html).\nNot all platforms obey this, but this wrapper does.",2,null],[13,"ErrUnknown","","Unrecognized error. The inner value is the unrecognized errno.",2,null],[13,"ErrUnsupProt","","# The following are Windows-specific",2,null],[13,"ErrUnsupOffset","","When using `MapFd`, `MapOffset` was given (Windows does not support this\nat all)",2,null],[13,"ErrAlreadyExists","","When using `MapFd`, there was already a mapping to the file.",2,null],[13,"ErrVirtualAlloc","","Unrecognized error from `VirtualAlloc`. The inner value is the return\nvalue of GetLastError.",2,null],[13,"ErrCreateFileMappingW","","Unrecognized error from `CreateFileMapping`. The inner value is the\nreturn value of `GetLastError`.",2,null],[13,"ErrMapViewOfFile","","Unrecognized error from `MapViewOfFile`. The inner value is the return\nvalue of `GetLastError`.",2,null],[11,"clone","","",0,{"inputs":[{"name":"memorymapkind"}],"output":{"name":"memorymapkind"}}],[11,"clone","","",1,{"inputs":[{"name":"mapoption"}],"output":{"name":"mapoption"}}],[11,"fmt","","",2,{"inputs":[{"name":"maperror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"maperror"}],"output":{"name":"maperror"}}],[11,"fmt","","",2,{"inputs":[{"name":"maperror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",2,{"inputs":[{"name":"maperror"}],"output":{"name":"str"}}],[11,"new","","Create a new mapping with the given `options`, at least `min_len` bytes\nlong. `min_len` must be greater than zero; see the note on\n`ErrZeroLength`.",3,null],[11,"granularity","","Granularity that the offset or address must be for `MapOffset` and\n`MapAddr` respectively.",3,{"inputs":[{"name":"memorymap"}],"output":{"name":"usize"}}],[11,"drop","","Unmap the mapping. Panics the task if `munmap` panics.",3,{"inputs":[{"name":"memorymap"}],"output":null}],[11,"data","","Returns the pointer to the memory created or modified by this map.",3,null],[11,"len","","Returns the number of bytes this map applies to.",3,{"inputs":[{"name":"memorymap"}],"output":{"name":"usize"}}],[11,"kind","","Returns the type of mapping this represents.",3,{"inputs":[{"name":"memorymap"}],"output":{"name":"memorymapkind"}}]],"paths":[[4,"MemoryMapKind"],[4,"MapOption"],[4,"MapError"],[3,"MemoryMap"]]};
searchIndex['wayland_client'] = {"items":[[0,"","wayland_client","This library provides a Rust interface on the Wayland client library.",null,null],[5,"is_wayland_lib_available","","Returns whether the library `libwayland-client.so` has been found and could be loaded.",null,{"inputs":[],"output":{"name":"bool"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",0,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",0,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",0,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",0,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",0,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",0,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",0,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",0,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",0,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",0,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",0,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",1,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",2,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"from_u64","","Makes a bignum from `u64` value.",2,{"inputs":[{"name":"big32x40"},{"name":"u64"}],"output":{"name":"big32x40"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",2,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",2,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",2,{"inputs":[{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",2,{"inputs":[{"name":"big32x40"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"add_small","","",2,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"u32"}],"output":{"name":"big32x40"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",2,{"inputs":[{"name":"big32x40"},{"name":"usize"}],"output":{"name":"big32x40"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",2,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",2,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",2,null],[11,"eq","","",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"big32x40"},{"name":"big32x40"}],"output":{"name":"ordering"}}],[11,"clone","","",2,{"inputs":[{"name":"big32x40"}],"output":{"name":"big32x40"}}],[11,"fmt","","",2,{"inputs":[{"name":"big32x40"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",3,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"digits","","Return the internal digits as a slice `[a, b, c, ...]` such that the numeric\nvalue is `a + b * 2^W + c * 2^(2W) + ...` where `W` is the number of bits in\nthe digit type.",3,null],[11,"get_bit","","Return the `i`-th bit where bit 0 is the least significant one.\nIn other words, the bit with weight `2^i`.",3,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"is_zero","","Returns true if the bignum is zero.",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"bit_length","","Returns the number of bits necessary to represent this value. Note that zero\nis considered to need 0 bits.",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"usize"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"add_small","","",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_pow5","","Multiplies itself by `5^e` and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",3,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",3,null],[11,"div_rem","","Divide self by another bignum, overwriting `q` with the quotient and `r` with the\nremainder.",3,null],[11,"eq","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",3,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",4,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",6,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"mul","","Returns a correctly rounded product of itself and `other`.",6,{"inputs":[{"name":"fp"},{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize","","Normalizes itself so that the resulting mantissa is at least `2^63`.",6,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"normalize_to","","Normalizes itself to have the shared exponent.\nIt can only decrease the exponent (and thus increase the mantissa).",6,{"inputs":[{"name":"fp"},{"name":"i16"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",7,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",7,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",7,null],[11,"clone","","",8,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",8,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",8,null],[11,"fmt","","",9,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num::dec2flt::rawfp","",10,{"inputs":[{"name":"unpacked"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"unpacked"}],"output":{"name":"unpacked"}}],[11,"new","","",10,{"inputs":[{"name":"unpacked"},{"name":"u64"},{"name":"i16"}],"output":{"name":"unpacked"}}],[11,"fmt","core::num::dec2flt::parse","",11,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"decimal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",12,null],[11,"eq","","",13,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"parseresult"},{"name":"parseresult"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"parseresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::dec2flt","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",15,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num","",16,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",17,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",17,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",18,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",19,null],[11,"fmt","","",19,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",19,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",19,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",20,null],[11,"get","","Dereferences the content.",20,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",20,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",20,null],[11,"fmt","","",20,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",21,null],[11,"eq","","",21,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",21,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",21,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",22,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",22,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",23,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",24,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",25,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",26,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",26,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",26,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","wayland_client::ffi","",27,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",27,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",27,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",27,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",27,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",27,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",27,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",28,null],[11,"fmt","","",28,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",28,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",29,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",30,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",31,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",32,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",33,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",29,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",29,null],[11,"swap","","Stores a value into the bool, returning the old value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",29,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",30,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",30,null],[11,"swap","","Stores a value into the isize, returning the old value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",30,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",31,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",31,null],[11,"swap","","Stores a value into the usize, returning the old value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",31,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",32,null],[11,"load","","Loads a value from the pointer.",32,null],[11,"store","","Stores a value into the pointer.",32,null],[11,"swap","","Stores a value into the pointer, returning the old value.",32,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",32,null],[11,"fmt","","",31,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",34,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",34,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",34,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",34,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",34,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",34,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",34,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",36,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",36,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",36,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",36,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",36,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",36,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",37,null],[11,"clone","","",37,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",38,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",38,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",38,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",38,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",39,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",39,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",40,null],[11,"deref","","",39,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",39,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",41,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",41,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",41,null],[11,"clone","core::char","",42,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",43,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",42,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",44,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",45,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",44,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",46,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",46,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"next_back","","",46,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",47,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",47,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"next_back","","",47,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",48,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",48,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"clone","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",49,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",50,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",50,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"next_back","","",50,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",51,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"next_back","","",51,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",52,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",52,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"next_back","","",52,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",53,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",53,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"next_back","","",53,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",54,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"nth","","",54,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",54,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",54,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",55,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",55,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",55,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",55,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",55,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",55,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",55,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",56,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"clone","","",57,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",57,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"clone","","",58,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",58,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",58,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",58,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",58,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"clone","","",59,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",59,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",59,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"clone","","",60,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",60,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"clone","","",61,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",61,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",62,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",63,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",63,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",64,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",24,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",23,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",64,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"clone","","",65,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",65,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"next_back","","",65,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next","core::ops","",23,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",23,null],[11,"next_back","","",23,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",24,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",66,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",66,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",67,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",68,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",68,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",68,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",69,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",69,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",70,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",70,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",71,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",72,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",72,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",0,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",73,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",74,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",75,null],[11,"fmt","","",75,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",75,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",75,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",75,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",75,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",75,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",75,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",75,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",75,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",75,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",75,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",75,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",75,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",75,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",75,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",75,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",75,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",75,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",75,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",75,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",75,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",75,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",77,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",78,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",75,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",79,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",80,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",81,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",82,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",83,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",84,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",85,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",86,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",87,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",88,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",87,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",88,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",87,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",88,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",87,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",88,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",87,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",88,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",83,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",84,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",85,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",86,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",79,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",80,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",81,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",82,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",89,null],[11,"next","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"count","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",89,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",89,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",90,null],[11,"next","","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"count","","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",90,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",90,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",91,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next_back","","",91,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",91,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",92,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",92,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next_back","","",92,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",93,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next","","",94,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next","","",95,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next","","",96,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next","","",97,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"clone","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"count","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",98,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",98,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"count","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",99,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",99,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",100,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"count","","",100,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",100,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",100,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",100,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",101,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",101,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",102,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",103,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",102,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",102,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",102,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",104,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",105,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",106,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",107,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",108,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",109,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",107,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",110,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",111,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",111,null],[11,"matching","","",111,null],[11,"use_early_reject","","",112,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",112,null],[11,"matching","","",112,null],[11,"eq","core::str","",113,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",113,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",114,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",114,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",114,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",115,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",116,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",116,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",117,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",118,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",118,null],[11,"call_mut","","",118,null],[11,"call_once","","",118,null],[11,"next","","",117,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",117,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",119,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",120,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",120,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",121,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",120,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",121,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",122,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",123,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",123,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",122,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",123,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",124,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",125,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",126,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",127,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",128,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",129,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",128,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",129,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",131,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",132,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",131,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",132,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",133,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"next_back","","",133,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",135,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",135,null],[11,"call_mut","","",135,null],[11,"call_once","","",135,null],[11,"next","","",134,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",134,null],[11,"next_back","","",134,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",137,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",137,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",137,null],[11,"finish","","",137,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",137,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",137,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",138,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",139,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",140,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",141,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",142,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",143,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",144,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",145,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",146,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",146,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",147,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",147,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",147,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",148,null],[11,"entry","","Adds a new entry to the set output.",149,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",149,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",149,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",150,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",150,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",150,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",151,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",151,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",151,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",152,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",153,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",154,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",155,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",156,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",157,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",158,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",159,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",160,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",160,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",161,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",161,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",161,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",161,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",161,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",161,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",161,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",161,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",161,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",21,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",34,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"core","wayland_client","The core wayland protocol.",null,null],[3,"Display","wayland_client::core","A wayland Display.",null,null],[3,"Serial","","An opaque identifier to the serial number associated to an event.",null,null],[3,"Registry","","A Registry, giving access to the global wayland objects.",null,null],[5,"default_display","","Tries to connect to the default wayland display.",null,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",162,{"inputs":[{"name":"display"}],"output":{"name":"display"}}],[11,"get_registry","","Creates a Registry associated to this Display and returns it.",162,{"inputs":[{"name":"display"}],"output":{"name":"registry"}}],[11,"sync_roundtrip","","Performs a blocking synchronisation of the events of the server.",162,{"inputs":[{"name":"display"}],"output":null}],[11,"dispatch_pending","","Dispatches all pending events to their appropriate callbacks.",162,{"inputs":[{"name":"display"}],"output":null}],[11,"dispatch","","Dispatches all pending events to their appropriate callbacks.",162,{"inputs":[{"name":"display"}],"output":null}],[11,"flush","","Send as much requests to the server as possible.",162,{"inputs":[{"name":"display"}],"output":{"name":"result"}}],[11,"sync","","Send a `sync` message to the server.",162,{"inputs":[{"name":"display"}],"output":null}],[11,"set_sync_callback","","Sets the callback of a `done` event.",162,{"inputs":[{"name":"display"},{"name":"f"}],"output":null}],[11,"ptr","","",162,null],[11,"ptr_mut","","",162,null],[11,"clone","","",163,{"inputs":[{"name":"serial"}],"output":{"name":"serial"}}],[11,"clone","","",164,{"inputs":[{"name":"registry"}],"output":{"name":"registry"}}],[11,"get_display","","Returns a handle to the Display associated with this registry.",164,{"inputs":[{"name":"registry"}],"output":{"name":"display"}}],[11,"get_global_objects","","Returns a `Vec` of all global objects and their interface.",164,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_objects_with_interface","","Returns a `Vec` of all global objects implementing given interface.",164,{"inputs":[{"name":"registry"},{"name":"str"}],"output":{"name":"vec"}}],[11,"get_compositor","","Retrieves a handle to the global compositor",164,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_outputs","","Retrieve handles to all available outputs",164,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_seats","","Retrieve handles to all available seats",164,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_shell","","Retrieves a handle to the global shell",164,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_shm","","Retrieves a handle to the global shm",164,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_subcompositor","","Retrieves a handle to the global subcompositor",164,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"bind","","",164,{"inputs":[{"name":"registry"},{"name":"u32"},{"name":"u32"}],"output":{"name":"t"}}],[11,"ptr","","",164,null],[11,"ptr_mut","","",164,null],[0,"compositor","","Structures related to the compositor and surfaces.",null,null],[3,"Compositor","wayland_client::core::compositor","A wayland compositor.",null,null],[3,"Region","","Region represent a set of pixel.",null,null],[3,"WSurface","","A wayland Surface.",null,null],[3,"SurfaceId","","An opaque unique identifier to a surface, can be tested for equality.",null,null],[11,"clone","","",165,{"inputs":[{"name":"compositor"}],"output":{"name":"compositor"}}],[11,"create_surface","","Creates a new surface to draw on.",165,{"inputs":[{"name":"compositor"}],"output":{"name":"wsurface"}}],[11,"create_region","","Creates a new region.",165,{"inputs":[{"name":"compositor"}],"output":{"name":"region"}}],[11,"interface","","",165,{"inputs":[{"name":"compositor"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",165,null],[11,"ptr","","",165,null],[11,"ptr_mut","","",165,null],[11,"add","","Adds given rectangle to the region.",166,{"inputs":[{"name":"region"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"subtract","","Subtract given rectangle from the region.",166,{"inputs":[{"name":"region"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"drop","","",166,{"inputs":[{"name":"region"}],"output":null}],[11,"ptr","","",166,null],[11,"ptr_mut","","",166,null],[11,"attach","","Attaches given buffer to be the content of the image.",167,{"inputs":[{"name":"wsurface"},{"name":"buffer"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"commit","","Commit the changes to the server.",167,{"inputs":[{"name":"wsurface"}],"output":null}],[11,"damage","","Mark part of this surface as damaged.",167,{"inputs":[{"name":"wsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_id","","Returns the unique `SurfaceId` associated to this surface.",167,{"inputs":[{"name":"wsurface"}],"output":{"name":"surfaceid"}}],[11,"set_opaque_region","","Sets the opaque region of this surface.",167,{"inputs":[{"name":"wsurface"},{"name":"region"}],"output":null}],[11,"set_input_region","","Sets the input region of this surface.",167,{"inputs":[{"name":"wsurface"},{"name":"region"}],"output":null}],[11,"set_buffer_transform","","Sets the transformation the server will apply to the buffer.",167,{"inputs":[{"name":"wsurface"},{"name":"outputtransform"}],"output":null}],[11,"set_buffer_scale","","Sets the scale the server will apply to the buffer.",167,{"inputs":[{"name":"wsurface"},{"name":"i32"}],"output":null}],[11,"drop","","",167,{"inputs":[{"name":"wsurface"}],"output":null}],[11,"ptr","","",167,null],[11,"ptr_mut","","",167,null],[11,"get_wsurface","","",167,{"inputs":[{"name":"wsurface"}],"output":{"name":"wsurface"}}],[0,"output","wayland_client::core","Structures related to outputs.",null,null],[3,"Output","wayland_client::core::output","A physical output",null,null],[3,"OutputMode","","Representation of an output mode",null,null],[12,"width","","width of the mode in hardware units",168,null],[12,"height","","height of the mode in hardware units",168,null],[12,"refresh","","vertical refresh rate in mHz",168,null],[3,"OutputId","","An opaque unique identifier to an output, can be tested for equality.",null,null],[4,"OutputTransform","","Transformation applied to an output.",null,null],[13,"Normal","","",169,null],[13,"Rotated90","","",169,null],[13,"Rotated180","","",169,null],[13,"Rotated270","","",169,null],[13,"Flipped","","",169,null],[13,"FlippedRotated90","","",169,null],[13,"FlippedRotated180","","",169,null],[13,"FlippedRotated270","","",169,null],[4,"OutputSubpixel","","Subpixel format of an output.",null,null],[13,"Unknown","","",170,null],[13,"None","","",170,null],[13,"HorizontalRGB","","",170,null],[13,"HorizontalBGR","","",170,null],[13,"VerticalRGB","","",170,null],[13,"VerticalBGR","","",170,null],[11,"hash","","",171,null],[11,"eq","","",171,{"inputs":[{"name":"outputid"},{"name":"outputid"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"outputid"},{"name":"outputid"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"outputid"}],"output":{"name":"outputid"}}],[11,"clone","","",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"is_current","","",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"is_preferred","","",168,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"get_id","","The unique Id representing this output",172,{"inputs":[{"name":"output"}],"output":{"name":"outputid"}}],[11,"position","","The location of the top-left corner of this output in the\ncompositor space.",172,null],[11,"dimensions","","The dimensions (width, height) of this output, in milimeters",172,null],[11,"subpixel","","The subpixel orientation of this output",172,{"inputs":[{"name":"output"}],"output":{"name":"outputsubpixel"}}],[11,"transform","","The current transform of this output",172,{"inputs":[{"name":"output"}],"output":{"name":"outputtransform"}}],[11,"manufacturer","","The manufacturer of this output",172,{"inputs":[{"name":"output"}],"output":{"name":"string"}}],[11,"model","","The model of this output",172,{"inputs":[{"name":"output"}],"output":{"name":"string"}}],[11,"scale","","The current scaling factor of this output",172,{"inputs":[{"name":"output"}],"output":{"name":"i32"}}],[11,"modes","","The modes of this output",172,{"inputs":[{"name":"output"}],"output":{"name":"vec"}}],[11,"interface","","",172,{"inputs":[{"name":"output"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",172,null],[11,"drop","","",172,{"inputs":[{"name":"output"}],"output":null}],[11,"ptr","","",172,null],[11,"ptr_mut","","",172,null],[0,"seat","wayland_client::core","Structures related to seats and inputs.",null,null],[3,"Keyboard","wayland_client::core::seat","A keyboard interface.",null,null],[3,"KeyboardId","","An opaque unique identifier to a keyboard, can be tested for equality.",null,null],[3,"Pointer","","A pointer interface.",null,null],[3,"PointerId","","An opaque unique identifier to a pointer, can be tested for equality.",null,null],[3,"Touch","","",null,null],[3,"TouchId","","An opaque unique identifier to a touch screen, can be tested for equality.",null,null],[3,"Seat","","A global wayland Seat.",null,null],[4,"KeymapFormat","","Possible keymap formats",null,null],[13,"NoKeymap","","",173,null],[13,"XkbV1","","",173,null],[4,"KeyState","","The state of a keyboard key.",null,null],[13,"Released","","",174,null],[13,"Pressed","","",174,null],[4,"ScrollAxis","","Axis associated to a scroll event.",null,null],[13,"Vertical","","",175,null],[13,"Horizontal","","",175,null],[4,"ButtonState","","State of a button of a pointer.",null,null],[13,"Released","","",176,null],[13,"Pressed","","",176,null],[11,"hash","","",177,null],[11,"clone","","",177,{"inputs":[{"name":"keyboardid"}],"output":{"name":"keyboardid"}}],[11,"eq","","",177,{"inputs":[{"name":"keyboardid"},{"name":"keyboardid"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"keyboardid"},{"name":"keyboardid"}],"output":{"name":"bool"}}],[11,"get_id","","Returns the unique `KeyboardId` associated to this keyboard.",178,{"inputs":[{"name":"keyboard"}],"output":{"name":"keyboardid"}}],[11,"get_seat","","Get access to the seat associated with this keyboard",178,{"inputs":[{"name":"keyboard"}],"output":{"name":"seat"}}],[11,"keymap_fd","","Provides the file descriptor giving access to the keymap definition\ncurrently used by the compositor for this keyboard.",178,{"inputs":[{"name":"keyboard"}],"output":{"name":"option"}}],[11,"repeat_info","","Provides the repeat information of this keayboard.",178,{"inputs":[{"name":"keyboard"}],"output":{"name":"option"}}],[11,"release","","",178,{"inputs":[{"name":"keyboard"}],"output":null}],[11,"set_enter_action","","Defines the action to be executed when a surface gains keyboard focus.",178,{"inputs":[{"name":"keyboard"},{"name":"f"}],"output":null}],[11,"set_leave_action","","Defines the action to be executed when a surface loses keyboard focus.",178,{"inputs":[{"name":"keyboard"},{"name":"f"}],"output":null}],[11,"set_key_action","","Defines the action to be executed when a keystroke is done.",178,{"inputs":[{"name":"keyboard"},{"name":"f"}],"output":null}],[11,"set_modifiers_action","","Defines the action to be executed when a modifier is changed.",178,{"inputs":[{"name":"keyboard"},{"name":"f"}],"output":null}],[11,"drop","","",178,{"inputs":[{"name":"keyboard"}],"output":null}],[11,"ptr","","",178,null],[11,"ptr_mut","","",178,null],[11,"hash","","",179,null],[11,"clone","","",179,{"inputs":[{"name":"pointerid"}],"output":{"name":"pointerid"}}],[11,"eq","","",179,{"inputs":[{"name":"pointerid"},{"name":"pointerid"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"pointerid"},{"name":"pointerid"}],"output":{"name":"bool"}}],[11,"get_id","","Returns the unique `PointerId` associated to this pointer.",180,{"inputs":[{"name":"pointer"}],"output":{"name":"pointerid"}}],[11,"get_seat","","Get access to the seat associated with this keyboard",180,{"inputs":[{"name":"pointer"}],"output":{"name":"seat"}}],[11,"set_cursor","","Change the surface for drawing the cursor.",180,null],[11,"set_cursor_hidden","","Hides or unhides the cursor image.",180,{"inputs":[{"name":"pointer"},{"name":"bool"}],"output":null}],[11,"add_handled_surface","","Adds a surface to the set of surfaces this pointer handler\nwill change cursor and dispatch events.",180,{"inputs":[{"name":"pointer"},{"name":"surfaceid"}],"output":null}],[11,"remove_handled_surface","","Adds a surface to the set of surfaces this pointer handler\nwill change cursor and dispatch events.",180,{"inputs":[{"name":"pointer"},{"name":"surfaceid"}],"output":null}],[11,"release","","",180,{"inputs":[{"name":"pointer"}],"output":{"name":"option"}}],[11,"get_surface","","Provides a reference to the current cursor surface.",180,{"inputs":[{"name":"pointer"}],"output":{"name":"option"}}],[11,"set_enter_action","","Defines the action to be executed when the cursor enters a surface.",180,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"set_leave_action","","Defines the action to be executed when the cursor leaves a surface.",180,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"set_motion_action","","Defines the action to be executed when the cursor moves",180,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"set_button_action","","Defines the action to be executed when a button is clicked or released",180,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"set_axis_action","","Defines the action to be executed when a scrolling is done",180,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"drop","","",180,{"inputs":[{"name":"pointer"}],"output":null}],[11,"ptr","","",180,null],[11,"ptr_mut","","",180,null],[11,"clone","","",181,{"inputs":[{"name":"seat"}],"output":{"name":"seat"}}],[11,"get_pointer","","",181,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"get_keyboard","","",181,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"get_touch","","",181,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"interface","","",181,{"inputs":[{"name":"seat"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",181,null],[11,"ptr","","",181,null],[11,"ptr_mut","","",181,null],[11,"hash","","",182,null],[11,"clone","","",182,{"inputs":[{"name":"touchid"}],"output":{"name":"touchid"}}],[11,"eq","","",182,{"inputs":[{"name":"touchid"},{"name":"touchid"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"touchid"},{"name":"touchid"}],"output":{"name":"bool"}}],[11,"get_id","","Returns the unique \\TouchId` associated with this touch device.",183,{"inputs":[{"name":"touch"}],"output":{"name":"touchid"}}],[11,"get_seat","","Get access to the seat associated with this keyboard",183,{"inputs":[{"name":"touch"}],"output":{"name":"seat"}}],[11,"release","","",183,{"inputs":[{"name":"touch"}],"output":null}],[11,"set_down_action","","Defines the action to be executed when a new touch point appears",183,{"inputs":[{"name":"touch"},{"name":"f"}],"output":null}],[11,"set_up_action","","Defines the action to be executed when a touch point dissapears",183,{"inputs":[{"name":"touch"},{"name":"f"}],"output":null}],[11,"set_motion_action","","Defines the action to be executed a touch point moves",183,{"inputs":[{"name":"touch"},{"name":"f"}],"output":null}],[11,"set_frame_action","","",183,{"inputs":[{"name":"touch"},{"name":"f"}],"output":null}],[11,"set_cancel_action","","Defines the action to be executed when a touch sequence is cancelled.",183,{"inputs":[{"name":"touch"},{"name":"f"}],"output":null}],[11,"drop","","",183,{"inputs":[{"name":"touch"}],"output":null}],[11,"ptr","","",183,null],[11,"ptr_mut","","",183,null],[0,"shell","wayland_client::core","Structures related to the shell.",null,null],[3,"Shell","wayland_client::core::shell","A handle to a wayland `wl_shell`.",null,null],[3,"ShellSurface","","A wayland `shell_surface`.",null,null],[4,"ShellFullscreenMethod","","Different methods of fullscreen for a shell surface.",null,null],[13,"Default","","Default method: let the compositor decide.",184,null],[13,"Scale","","Match the sizes by scaling the content of the window to fit\nthe output dimensions.",184,null],[13,"Driver","","Match the sizes by changing the video mode of the graphic driver.\nAn optionnal framerate can be provided, if not the compositor will it.\nThe framerate is provided in mHz.",184,null],[13,"Fill","","Buffer is not scaled (but its intrisic scaling is still applied), unless\nit is bigger than the output: the compositor is then allowed to scale it down.",184,null],[4,"ShellSurfaceResize","","Hint about which border of the surface is being dragged for a resize.",null,null],[13,"None","","",185,null],[13,"Top","","",185,null],[13,"Bottom","","",185,null],[13,"Left","","",185,null],[13,"TopLeft","","",185,null],[13,"BottomLeft","","",185,null],[13,"Right","","",185,null],[13,"TopRight","","",185,null],[13,"BottomRight","","",185,null],[11,"clone","","",186,{"inputs":[{"name":"shell"}],"output":{"name":"shell"}}],[11,"get_shell_surface","","Assigns the `shell_surface` role to given surface.",186,{"inputs":[{"name":"shell"},{"name":"s"}],"output":{"name":"shellsurface"}}],[11,"interface","","",186,{"inputs":[{"name":"shell"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",186,null],[11,"ptr","","",186,null],[11,"ptr_mut","","",186,null],[11,"destroy","","Frees the `Surface` from its role of `shell_surface` and returns it.",187,{"inputs":[{"name":"shellsurface"}],"output":{"name":"s"}}],[11,"start_move","","Start an interactive move",187,{"inputs":[{"name":"shellsurface"},{"name":"seat"},{"name":"serial"}],"output":null}],[11,"start_resize","","Start a pointer-driven resizing of the surface.",187,{"inputs":[{"name":"shellsurface"},{"name":"seat"},{"name":"serial"},{"name":"shellsurfaceresize"}],"output":null}],[11,"set_toplevel","","Set this shell surface as being a toplevel window.",187,{"inputs":[{"name":"shellsurface"}],"output":null}],[11,"set_transient","","Set this shell surface as being a transient surface.",187,{"inputs":[{"name":"shellsurface"},{"name":"r"},{"name":"i32"},{"name":"i32"},{"name":"shellsurfacetransient"}],"output":null}],[11,"set_popup","","Set this shell surface as being a popup.",187,{"inputs":[{"name":"shellsurface"},{"name":"serial"},{"name":"seat"},{"name":"r"},{"name":"i32"},{"name":"i32"},{"name":"shellsurfacetransient"}],"output":null}],[11,"set_fullscreen","","Set this shell surface as being fullscreen.",187,{"inputs":[{"name":"shellsurface"},{"name":"shellfullscreenmethod"},{"name":"option"}],"output":null}],[11,"set_maximised","","Set this shell surface as being maximised.",187,{"inputs":[{"name":"shellsurface"},{"name":"option"}],"output":null}],[11,"set_title","","Sets the shell surface title.",187,{"inputs":[{"name":"shellsurface"},{"name":"cstr"}],"output":null}],[11,"set_class","","Sets the shell surface class.",187,{"inputs":[{"name":"shellsurface"},{"name":"cstr"}],"output":null}],[11,"set_configure_callback","","Sets the callback to be invoked when a `configure` event is received for this shell surface.",187,{"inputs":[{"name":"shellsurface"},{"name":"f"}],"output":null}],[11,"set_popup_done_callback","","Sets the callback to be invoked when the popup grab of this popup surface is\nbroken. See `set_popup()` for details.",187,{"inputs":[{"name":"shellsurface"},{"name":"f"}],"output":null}],[11,"deref","","",187,{"inputs":[{"name":"shellsurface"}],"output":{"name":"s"}}],[11,"drop","","",187,{"inputs":[{"name":"shellsurface"}],"output":null}],[11,"ptr","","",187,null],[11,"ptr_mut","","",187,null],[0,"shm","wayland_client::core","Structures related to buffers and shared memory pools.",null,null],[3,"Buffer","wayland_client::core::shm","A view into a memory pool.",null,null],[3,"Shm","","The shared memory controller.",null,null],[3,"ShmPool","","A shared memory pool.",null,null],[4,"ShmFormat","","Possible formats for a Shm.",null,null],[13,"ARGB8888","","",188,null],[13,"XRGB8888","","",188,null],[13,"C8","","",188,null],[13,"RGB332","","",188,null],[13,"BGR233","","",188,null],[13,"XRGB4444","","",188,null],[13,"XBGR4444","","",188,null],[13,"RGBX4444","","",188,null],[13,"BGRX4444","","",188,null],[13,"ARGB4444","","",188,null],[13,"ABGR4444","","",188,null],[13,"RGBA4444","","",188,null],[13,"BGRA4444","","",188,null],[13,"XRGB1555","","",188,null],[13,"XBGR1555","","",188,null],[13,"RGBX5551","","",188,null],[13,"BGRX5551","","",188,null],[13,"ARGB1555","","",188,null],[13,"ABGR1555","","",188,null],[13,"RGBA5551","","",188,null],[13,"BGRA5551","","",188,null],[13,"RGB565","","",188,null],[13,"BGR565","","",188,null],[13,"RGB888","","",188,null],[13,"BGR888","","",188,null],[13,"XBGR8888","","",188,null],[13,"RGBX8888","","",188,null],[13,"BGRX8888","","",188,null],[13,"ABGR8888","","",188,null],[13,"RGBA8888","","",188,null],[13,"BGRA8888","","",188,null],[13,"XRGB2101010","","",188,null],[13,"XBGR2101010","","",188,null],[13,"RGBX1010102","","",188,null],[13,"BGRX1010102","","",188,null],[13,"ARGB2101010","","",188,null],[13,"ABGR2101010","","",188,null],[13,"RGBA1010102","","",188,null],[13,"BGRA1010102","","",188,null],[13,"YUYV","","",188,null],[13,"YVYU","","",188,null],[13,"UYVY","","",188,null],[13,"VYUY","","",188,null],[13,"AYUV","","",188,null],[13,"NV12","","",188,null],[13,"NV21","","",188,null],[13,"NV16","","",188,null],[13,"NV61","","",188,null],[13,"YUV410","","",188,null],[13,"YVU410","","",188,null],[13,"YUV411","","",188,null],[13,"YVU411","","",188,null],[13,"YUV420","","",188,null],[13,"YVU420","","",188,null],[13,"YUV422","","",188,null],[13,"YVU422","","",188,null],[13,"YUV444","","",188,null],[13,"YVU444","","",188,null],[11,"drop","","",189,{"inputs":[{"name":"buffer"}],"output":null}],[11,"ptr","","",189,null],[11,"ptr_mut","","",189,null],[11,"clone","","",190,{"inputs":[{"name":"shm"}],"output":{"name":"shm"}}],[11,"pool_from_fd","","Creates a shared memory pool from given file descriptor.",190,{"inputs":[{"name":"shm"},{"name":"f"},{"name":"i32"}],"output":{"name":"shmpool"}}],[11,"pool_from_raw_fd","","Creates a sahred memory pool from given raw file descriptor.",190,{"inputs":[{"name":"shm"},{"name":"c_int"},{"name":"i32"}],"output":{"name":"shmpool"}}],[11,"interface","","",190,{"inputs":[{"name":"shm"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",190,null],[11,"ptr","","",190,null],[11,"ptr_mut","","",190,null],[11,"create_buffer","","Creates a new buffer from this memory pool.",191,{"inputs":[{"name":"shmpool"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"shmformat"}],"output":{"name":"option"}}],[11,"resize","","Resizes the memory pool to a new size.",191,{"inputs":[{"name":"shmpool"},{"name":"i32"}],"output":null}],[11,"drop","","",191,{"inputs":[{"name":"shmpool"}],"output":null}],[11,"ptr","","",191,null],[11,"ptr_mut","","",191,null],[0,"subcompositor","wayland_client::core","Structures related to subsurfaces and the subcompositor.",null,null],[3,"SubCompositor","wayland_client::core::subcompositor","A wayland subcompositor.",null,null],[3,"SubSurface","","A wayland subsurface.",null,null],[4,"Stacking","","",null,null],[13,"Above","","",192,null],[13,"Below","","",192,null],[11,"clone","","",193,{"inputs":[{"name":"subcompositor"}],"output":{"name":"subcompositor"}}],[11,"get_subsurface","","Maps `surface` as a subsurface of `parent`.",193,{"inputs":[{"name":"subcompositor"},{"name":"s"},{"name":"wsurface"}],"output":{"name":"subsurface"}}],[11,"interface","","",193,{"inputs":[{"name":"subcompositor"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",193,null],[11,"ptr","","",193,null],[11,"ptr_mut","","",193,null],[11,"destroy","","Frees the `Surface` from its role of `subsurface` and returns it.",194,{"inputs":[{"name":"subsurface"}],"output":{"name":"s"}}],[11,"set_position","","Sets the position of the subsurface in the parent surface coordinate\nsystem.",194,{"inputs":[{"name":"subsurface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_sync","","Sets of unsets the subsurface into synchronysed mode.",194,{"inputs":[{"name":"subsurface"},{"name":"bool"}],"output":null}],[11,"restack_sibling","","Sets this surface to be displayed above or below `other`, which\nmust be one of its siblings (but not itself).",194,{"inputs":[{"name":"subsurface"},{"name":"subsurface"},{"name":"stacking"}],"output":null}],[11,"restack_parent","","Sets this surface to be displayed above or below `other`, which\nmust be its parent.",194,{"inputs":[{"name":"subsurface"},{"name":"r"},{"name":"stacking"}],"output":null}],[11,"deref","","",194,{"inputs":[{"name":"subsurface"}],"output":{"name":"s"}}],[11,"drop","","",194,{"inputs":[{"name":"subsurface"}],"output":null}],[11,"ptr","","",194,null],[11,"ptr_mut","","",194,null],[8,"Surface","wayland_client::core","A trait representing whatever can be used a a surface. Protocol extentions\nsurch as EGL can define their own kind of surfaces, but they wrap a `WSurface`.",null,null],[10,"get_wsurface","","",195,{"inputs":[{"name":"surface"}],"output":{"name":"wsurface"}}],[0,"egl","wayland_client","The EGL wayland protocol.",null,null],[3,"wl_egl_window","wayland_client::egl","An opaque struct representing a native window for EGL.",null,null],[3,"EGLSurface","","",null,null],[5,"is_egl_available","","Returns whether the library `libwayland-egl.so` has been found and could be loaded.",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","Creates a new EGL surface on a wayland surface.",196,{"inputs":[{"name":"eglsurface"},{"name":"wsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eglsurface"}}],[11,"destroy","","Destroys the EGL association to this `WSurface` and returns it.",196,{"inputs":[{"name":"eglsurface"}],"output":{"name":"wsurface"}}],[11,"as_native_ptr","","Provides a ptr to the native window to be used for EGL initialization.",196,null],[11,"resize","","Resizes the egl surface.",196,{"inputs":[{"name":"eglsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_attached_size","","The size of the EGL buffer attached to this surface.",196,null],[11,"get_wsurface","","",196,{"inputs":[{"name":"eglsurface"}],"output":{"name":"wsurface"}}],[11,"drop","","",196,{"inputs":[{"name":"eglsurface"}],"output":null}],[11,"ptr","","",196,null],[11,"ptr_mut","","",196,null],[0,"internals","wayland_client","Internal types and traits provided for custom protocol extensions.",null,null],[3,"wl_interface","wayland_client::internals","Type representing an interface in the `libwayland-client.so` ABI.",null,null],[12,"name","","",197,null],[12,"version","","",197,null],[12,"method_count","","",197,null],[12,"methods","","",197,null],[12,"event_count","","",197,null],[12,"events","","",197,null],[3,"wl_message","","Type representing a message in the `libwayland-client.so` ABI.",null,null],[12,"name","","",198,null],[12,"signature","","",198,null],[12,"types","","",198,null],[8,"FFI","","A trait for structures wrapping a FFI pointer, to access the pointer.",null,null],[16,"Ptr","","",199,null],[10,"ptr","","Returns a `*const` pointer to the underlying wayland object.",199,null],[10,"ptr_mut","","Returns a `*mut` pointer to the underlying wayland object.",199,null],[8,"Bind","","A trait for structure representing global objects that can be bound\nby the registry.",null,null],[10,"interface","","The `wl_interface` used to create this object in the registry.",200,{"inputs":[{"name":"bind"}],"output":{"name":"wl_interface"}}],[10,"wrap","","Create the object by wraping the pointer returned by the registry.",200,null],[11,"eq","wayland_client::core::seat","",174,{"inputs":[{"name":"keystate"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"keystate"},{"name":"keystate"}],"output":{"name":"bool"}}],[11,"eq","","",173,{"inputs":[{"name":"keymapformat"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"keymapformat"},{"name":"keymapformat"}],"output":{"name":"bool"}}],[11,"clone","wayland_client::core::output","",170,{"inputs":[{"name":"outputsubpixel"}],"output":{"name":"outputsubpixel"}}],[11,"clone","","",169,{"inputs":[{"name":"outputtransform"}],"output":{"name":"outputtransform"}}],[11,"eq","wayland_client::core::seat","",175,{"inputs":[{"name":"scrollaxis"},{"name":"scrollaxis"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"scrollaxis"},{"name":"scrollaxis"}],"output":{"name":"bool"}}],[11,"eq","","",176,{"inputs":[{"name":"buttonstate"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"buttonstate"},{"name":"buttonstate"}],"output":{"name":"bool"}}],[11,"eq","wayland_client::core::shell","",185,{"inputs":[{"name":"shellsurfaceresize"},{"name":"shellsurfaceresize"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"shellsurfaceresize"},{"name":"shellsurfaceresize"}],"output":{"name":"bool"}}],[11,"eq","wayland_client::core::shm","",188,{"inputs":[{"name":"shmformat"},{"name":"shmformat"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"shmformat"},{"name":"shmformat"}],"output":{"name":"bool"}}],[11,"hash","wayland_client::core::compositor","",201,null],[11,"clone","","",201,{"inputs":[{"name":"surfaceid"}],"output":{"name":"surfaceid"}}],[11,"eq","","",201,{"inputs":[{"name":"surfaceid"},{"name":"surfaceid"}],"output":{"name":"bool"}}],[11,"ne","","",201,{"inputs":[{"name":"surfaceid"},{"name":"surfaceid"}],"output":{"name":"bool"}}]],"paths":[[4,"Option"],[3,"Wrapping"],[3,"Big32x40"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[3,"Unpacked"],[4,"Sign"],[3,"Decimal"],[4,"ParseResult"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"Display"],[3,"Serial"],[3,"Registry"],[3,"Compositor"],[3,"Region"],[3,"WSurface"],[3,"OutputMode"],[4,"OutputTransform"],[4,"OutputSubpixel"],[3,"OutputId"],[3,"Output"],[4,"KeymapFormat"],[4,"KeyState"],[4,"ScrollAxis"],[4,"ButtonState"],[3,"KeyboardId"],[3,"Keyboard"],[3,"PointerId"],[3,"Pointer"],[3,"Seat"],[3,"TouchId"],[3,"Touch"],[4,"ShellFullscreenMethod"],[4,"ShellSurfaceResize"],[3,"Shell"],[3,"ShellSurface"],[4,"ShmFormat"],[3,"Buffer"],[3,"Shm"],[3,"ShmPool"],[4,"Stacking"],[3,"SubCompositor"],[3,"SubSurface"],[8,"Surface"],[3,"EGLSurface"],[3,"wl_interface"],[3,"wl_message"],[8,"FFI"],[8,"Bind"],[3,"SurfaceId"]]};
searchIndex['tempdir'] = {"items":[[0,"","tempdir","",null,null],[3,"TempDir","","A wrapper for a path to temporary directory implementing automatic\nscope-based deletion.",null,null],[11,"new_in","","Attempts to make a temporary directory inside of `tmpdir` whose name\nwill have the prefix `prefix`. The directory will be automatically\ndeleted once the returned wrapper is destroyed.",0,{"inputs":[{"name":"tempdir"},{"name":"p"},{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Attempts to make a temporary directory inside of `env::temp_dir()` whose\nname will have the prefix `prefix`. The directory will be automatically\ndeleted once the returned wrapper is destroyed.",0,{"inputs":[{"name":"tempdir"},{"name":"str"}],"output":{"name":"result"}}],[11,"into_path","","Unwrap the wrapped `std::path::Path` from the `TempDir` wrapper.\nThis discards the wrapper so that the automatic deletion of the\ntemporary directory is prevented.",0,{"inputs":[{"name":"tempdir"}],"output":{"name":"pathbuf"}}],[11,"path","","Access the wrapped `std::path::Path` to the temporary directory.",0,{"inputs":[{"name":"tempdir"}],"output":{"name":"path"}}],[11,"close","","Close and remove the temporary directory",0,{"inputs":[{"name":"tempdir"}],"output":{"name":"result"}}],[11,"drop","","",0,{"inputs":[{"name":"tempdir"}],"output":null}]],"paths":[[3,"TempDir"]]};
searchIndex['freetype'] = {"items":[[0,"","freetype","",null,null],[0,"ffi","","",null,null],[11,"clone","freetype_sys","",0,{"inputs":[{"name":"ft_vector"}],"output":{"name":"ft_vector"}}],[11,"clone","","",1,{"inputs":[{"name":"ft_bbox"}],"output":{"name":"ft_bbox"}}],[11,"clone","","",2,{"inputs":[{"name":"ft_matrix"}],"output":{"name":"ft_matrix"}}],[11,"clone","","",3,{"inputs":[{"name":"ft_unitvector"}],"output":{"name":"ft_unitvector"}}],[11,"clone","","",4,{"inputs":[{"name":"ft_size_metrics"}],"output":{"name":"ft_size_metrics"}}],[11,"clone","","",5,{"inputs":[{"name":"ft_glyph_metrics"}],"output":{"name":"ft_glyph_metrics"}}],[11,"clone","","",6,{"inputs":[{"name":"ft_parameter"}],"output":{"name":"ft_parameter"}}],[11,"clone","","",7,{"inputs":[{"name":"ft_bitmap_size"}],"output":{"name":"ft_bitmap_size"}}],[11,"clone","","",8,{"inputs":[{"name":"tt_os2"}],"output":{"name":"tt_os2"}}],[11,"clone","","",9,{"inputs":[{"name":"ft_charmaprec"}],"output":{"name":"ft_charmaprec"}}],[11,"clone","","",10,{"inputs":[{"name":"ft_listrec"}],"output":{"name":"ft_listrec"}}],[11,"clone","","",11,{"inputs":[{"name":"ft_size_requestrec"}],"output":{"name":"ft_size_requestrec"}}],[6,"FT_Byte","freetype::ffi","",null,null],[6,"FT_Bytes","","",null,null],[6,"FT_Char","","",null,null],[6,"FT_Int","","",null,null],[6,"FT_UInt","","",null,null],[6,"FT_Int16","","",null,null],[6,"FT_UInt16","","",null,null],[6,"FT_Int32","","",null,null],[6,"FT_UInt32","","",null,null],[6,"FT_Int64","","",null,null],[6,"FT_UInt64","","",null,null],[6,"FT_Short","","",null,null],[6,"FT_UShort","","",null,null],[6,"FT_Long","","",null,null],[6,"FT_ULong","","",null,null],[6,"FT_Bool","","",null,null],[6,"FT_Offset","","",null,null],[6,"FT_PtrDist","","",null,null],[6,"FT_String","","",null,null],[6,"FT_Tag","","",null,null],[6,"FT_Error","","",null,null],[6,"FT_Fixed","","",null,null],[6,"FT_Pointer","","",null,null],[6,"FT_Pos","","",null,null],[6,"FT_FWord","","",null,null],[6,"FT_UFWord","","",null,null],[6,"FT_F2Dot14","","",null,null],[6,"FT_F26Dot6","","",null,null],[6,"FT_Generic_Finalizer","","",null,null],[6,"FT_StreamDesc","","",null,null],[6,"FT_Stream_IoFunc","","",null,null],[6,"FT_Stream_CloseFunc","","",null,null],[6,"FT_Alloc_Func","","",null,null],[6,"FT_Free_Func","","",null,null],[6,"FT_Realloc_Func","","",null,null],[8,"FTErrorMethods","","",null,null],[10,"succeeded","","",12,{"inputs":[{"name":"fterrormethods"}],"output":{"name":"bool"}}],[3,"FT_Vector","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"FT_BBox","","",null,null],[12,"xMin","","",1,null],[12,"yMin","","",1,null],[12,"xMax","","",1,null],[12,"yMax","","",1,null],[3,"FT_Matrix","","",null,null],[12,"xx","","",2,null],[12,"xy","","",2,null],[12,"yx","","",2,null],[12,"yy","","",2,null],[3,"FT_UnitVector","","",null,null],[12,"x","","",3,null],[12,"y","","",3,null],[3,"FT_Bitmap","","",null,null],[12,"rows","","",13,null],[12,"width","","",13,null],[12,"pitch","","",13,null],[12,"buffer","","",13,null],[12,"num_grays","","",13,null],[12,"pixel_mode","","",13,null],[12,"palette_mode","","",13,null],[12,"palette","","",13,null],[3,"FT_Data","","",null,null],[12,"pointer","","",14,null],[12,"length","","",14,null],[3,"FT_Generic","","",null,null],[12,"data","","",15,null],[12,"finalizer","","",15,null],[3,"FT_Size_Metrics","","",null,null],[12,"x_ppem","","",4,null],[12,"y_ppem","","",4,null],[12,"x_scale","","",4,null],[12,"y_scale","","",4,null],[12,"ascender","","",4,null],[12,"descender","","",4,null],[12,"height","","",4,null],[12,"max_advance","","",4,null],[3,"FT_Outline","","",null,null],[12,"n_contours","","",16,null],[12,"n_points","","",16,null],[12,"points","","",16,null],[12,"tags","","",16,null],[12,"contours","","",16,null],[12,"flags","","",16,null],[3,"FT_Glyph_Metrics","","",null,null],[12,"width","","",5,null],[12,"height","","",5,null],[12,"horiBearingX","","",5,null],[12,"horiBearingY","","",5,null],[12,"horiAdvance","","",5,null],[12,"vertBearingX","","",5,null],[12,"vertBearingY","","",5,null],[12,"vertAdvance","","",5,null],[3,"FT_Parameter","","",null,null],[12,"tag","","",6,null],[12,"data","","",6,null],[3,"FT_Open_Args","","",null,null],[12,"flags","","",17,null],[12,"memory_base","","",17,null],[12,"memory_size","","",17,null],[12,"pathname","","",17,null],[12,"stream","","",17,null],[12,"driver","","",17,null],[12,"num_params","","",17,null],[12,"params","","",17,null],[3,"FT_Bitmap_Size","","",null,null],[12,"height","","",7,null],[12,"width","","",7,null],[12,"size","","",7,null],[12,"x_ppem","","",7,null],[12,"y_ppem","","",7,null],[3,"TT_OS2","","",null,null],[12,"version","","",8,null],[12,"xAvgCharWidth","","",8,null],[12,"usWeightClass","","",8,null],[12,"usWidthClass","","",8,null],[12,"fsType","","",8,null],[12,"ySubscriptXSize","","",8,null],[12,"ySubscriptYSize","","",8,null],[12,"ySubscriptXOffset","","",8,null],[12,"ySubscriptYOffset","","",8,null],[12,"ySuperscriptXSize","","",8,null],[12,"ySuperscriptYSize","","",8,null],[12,"ySuperscriptXOffset","","",8,null],[12,"ySuperscriptYOffset","","",8,null],[12,"yStrikeoutSize","","",8,null],[12,"yStrikeoutPosition","","",8,null],[12,"sFamilyClass","","",8,null],[12,"panose","","",8,null],[12,"ulUnicodeRange1","","",8,null],[12,"ulUnicodeRange2","","",8,null],[12,"ulUnicodeRange3","","",8,null],[12,"ulUnicodeRange4","","",8,null],[12,"ulCodePageRange1","","",8,null],[12,"ulCodePageRange2","","",8,null],[12,"sxHeight","","",8,null],[12,"sCapHeight","","",8,null],[12,"usDefaultChar","","",8,null],[12,"usBreakChar","","",8,null],[12,"usMaxContext","","",8,null],[6,"enum_FT_Sfnt_Tag_","","",null,null],[17,"ft_sfnt_head","","",null,null],[17,"ft_sfnt_maxp","","",null,null],[17,"ft_sfnt_os2","","",null,null],[17,"ft_sfnt_hhea","","",null,null],[17,"ft_sfnt_vhea","","",null,null],[17,"ft_sfnt_post","","",null,null],[17,"ft_sfnt_pclt","","",null,null],[17,"ft_sfnt_max","","",null,null],[6,"FT_Sfnt_Tag","","",null,null],[6,"FT_Pixel_Mode","","",null,null],[17,"FT_PIXEL_MODE_NONE","","",null,null],[17,"FT_PIXEL_MODE_MONO","","",null,null],[17,"FT_PIXEL_MODE_GRAY","","",null,null],[17,"FT_PIXEL_MODE_GRAY2","","",null,null],[17,"FT_PIXEL_MODE_GRAY4","","",null,null],[17,"FT_PIXEL_MODE_LCD","","",null,null],[17,"FT_PIXEL_MODE_LCD_V","","",null,null],[17,"FT_PIXEL_MODE_BGRA","","",null,null],[17,"FT_PIXEL_MODE_MAX","","",null,null],[6,"FT_Glyph_Format","","",null,null],[17,"FT_GLYPH_FORMAT_NONE","","",null,null],[17,"FT_GLYPH_FORMAT_COMPOSITE","","",null,null],[17,"FT_GLYPH_FORMAT_BITMAP","","",null,null],[17,"FT_GLYPH_FORMAT_OUTLINE","","",null,null],[17,"FT_GLYPH_FORMAT_PLOTTER","","",null,null],[6,"FT_Render_Mode","","",null,null],[17,"FT_RENDER_MODE_NORMAL","","",null,null],[17,"FT_RENDER_MODE_LIGHT","","",null,null],[17,"FT_RENDER_MODE_MONO","","",null,null],[17,"FT_RENDER_MODE_LCD","","",null,null],[17,"FT_RENDER_MODE_LCD_V","","",null,null],[17,"FT_RENDER_MODE_MAX","","",null,null],[6,"FT_Encoding","","",null,null],[17,"FT_ENCODING_NONE","","",null,null],[17,"FT_ENCODING_MS_SYMBOL","","",null,null],[17,"FT_ENCODING_UNICODE","","",null,null],[17,"FT_ENCODING_SJIS","","",null,null],[17,"FT_ENCODING_GB2312","","",null,null],[17,"FT_ENCODING_BIG5","","",null,null],[17,"FT_ENCODING_WANSUNG","","",null,null],[17,"FT_ENCODING_JOHAB","","",null,null],[17,"FT_ENCODING_MS_SJIS","","",null,null],[17,"FT_ENCODING_MS_GB2312","","",null,null],[17,"FT_ENCODING_MS_BIG5","","",null,null],[17,"FT_ENCODING_MS_WANSUNG","","",null,null],[17,"FT_ENCODING_MS_JOHAB","","",null,null],[17,"FT_ENCODING_ADOBE_STANDARD","","",null,null],[17,"FT_ENCODING_ADOBE_EXPERT","","",null,null],[17,"FT_ENCODING_ADOBE_CUSTOM","","",null,null],[17,"FT_ENCODING_ADOBE_LATIN_1","","",null,null],[17,"FT_ENCODING_OLD_LATIN_2","","",null,null],[17,"FT_ENCODING_APPLE_ROMAN","","",null,null],[6,"FT_Size_Request_Type","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_NOMINAL","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_REAL_DIM","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_BBOX","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_CELL","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_SCALES","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_MAX","","",null,null],[6,"FT_Kerning_Mode","","",null,null],[17,"FT_KERNING_DEFAULT","","",null,null],[17,"FT_KERNING_UNFITTED","","",null,null],[17,"FT_KERNING_UNSCALED","","",null,null],[6,"FT_Glyph_BBox_Mode","","",null,null],[17,"FT_GLYPH_BBOX_UNSCALED","","",null,null],[17,"FT_GLYPH_BBOX_SUBPIXELS","","",null,null],[17,"FT_GLYPH_BBOX_GRIDFIT","","",null,null],[17,"FT_GLYPH_BBOX_TRUNCATE","","",null,null],[17,"FT_GLYPH_BBOX_PIXELS","","",null,null],[17,"FT_FACE_FLAG_SCALABLE","","",null,null],[17,"FT_FACE_FLAG_FIXED_SIZES","","",null,null],[17,"FT_FACE_FLAG_FIXED_WIDTH","","",null,null],[17,"FT_FACE_FLAG_SFNT","","",null,null],[17,"FT_FACE_FLAG_HORIZONTAL","","",null,null],[17,"FT_FACE_FLAG_VERTICAL","","",null,null],[17,"FT_FACE_FLAG_KERNING","","",null,null],[17,"FT_FACE_FLAG_FAST_GLYPHS","","",null,null],[17,"FT_FACE_FLAG_MULTIPLE_MASTERS","","",null,null],[17,"FT_FACE_FLAG_GLYPH_NAMES","","",null,null],[17,"FT_FACE_FLAG_EXTERNAL_STREAM","","",null,null],[17,"FT_FACE_FLAG_HINTER","","",null,null],[17,"FT_FACE_FLAG_CID_KEYED","","",null,null],[17,"FT_FACE_FLAG_TRICKY","","",null,null],[17,"FT_FACE_FLAG_COLOR","","",null,null],[17,"FT_STYLE_FLAG_ITALIC","","",null,null],[17,"FT_STYLE_FLAG_BOLD","","",null,null],[17,"FT_OPEN_MEMORY","","",null,null],[17,"FT_OPEN_STREAM","","",null,null],[17,"FT_OPEN_PATHNAME","","",null,null],[17,"FT_OPEN_DRIVER","","",null,null],[17,"FT_OPEN_PARAMS","","",null,null],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS","","",null,null],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES","","",null,null],[17,"FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID","","",null,null],[17,"FT_SUBGLYPH_FLAG_SCALE","","",null,null],[17,"FT_SUBGLYPH_FLAG_XY_SCALE","","",null,null],[17,"FT_SUBGLYPH_FLAG_2X2","","",null,null],[17,"FT_SUBGLYPH_FLAG_USE_MY_METRICS","","",null,null],[17,"FT_LOAD_DEFAULT","","",null,null],[17,"FT_LOAD_NO_SCALE","","",null,null],[17,"FT_LOAD_NO_HINTING","","",null,null],[17,"FT_LOAD_RENDER","","",null,null],[17,"FT_LOAD_NO_BITMAP","","",null,null],[17,"FT_LOAD_VERTICAL_LAYOUT","","",null,null],[17,"FT_LOAD_FORCE_AUTOHINT","","",null,null],[17,"FT_LOAD_CROP_BITMAP","","",null,null],[17,"FT_LOAD_PEDANTIC","","",null,null],[17,"FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH","","",null,null],[17,"FT_LOAD_NO_RECURSE","","",null,null],[17,"FT_LOAD_IGNORE_TRANSFORM","","",null,null],[17,"FT_LOAD_MONOCHROME","","",null,null],[17,"FT_LOAD_LINEAR_DESIGN","","",null,null],[17,"FT_LOAD_NO_AUTOHINT","","",null,null],[17,"FT_LOAD_COLOR","","",null,null],[17,"FT_LOAD_TARGET_NORMAL","","",null,null],[17,"FT_LOAD_TARGET_LIGHT","","",null,null],[17,"FT_LOAD_TARGET_MONO","","",null,null],[17,"FT_LOAD_TARGET_LCD","","",null,null],[17,"FT_LOAD_TARGET_LCD_V","","",null,null],[17,"FT_FSTYPE_INSTALLABLE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING","","",null,null],[17,"FT_FSTYPE_EDITABLE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_NO_SUBSETTING","","",null,null],[17,"FT_FSTYPE_BITMAP_EMBEDDING_ONLY","","",null,null],[17,"FT_Err_Ok","","",null,null],[17,"FT_Err_Cannot_Open_Resource","","",null,null],[17,"FT_Err_Unknown_File_Format","","",null,null],[17,"FT_Err_Invalid_File_Format","","",null,null],[17,"FT_Err_Invalid_Version","","",null,null],[17,"FT_Err_Lower_Module_Version","","",null,null],[17,"FT_Err_Invalid_Argument","","",null,null],[17,"FT_Err_Unimplemented_Feature","","",null,null],[17,"FT_Err_Invalid_Table","","",null,null],[17,"FT_Err_Invalid_Offset","","",null,null],[17,"FT_Err_Array_Too_Large","","",null,null],[17,"FT_Err_Missing_Module","","",null,null],[17,"FT_Err_Missing_Property","","",null,null],[17,"FT_Err_Invalid_Glyph_Index","","",null,null],[17,"FT_Err_Invalid_Character_Code","","",null,null],[17,"FT_Err_Invalid_Glyph_Format","","",null,null],[17,"FT_Err_Cannot_Render_Glyph","","",null,null],[17,"FT_Err_Invalid_Outline","","",null,null],[17,"FT_Err_Invalid_Composite","","",null,null],[17,"FT_Err_Too_Many_Hints","","",null,null],[17,"FT_Err_Invalid_Pixel_Size","","",null,null],[17,"FT_Err_Invalid_Handle","","",null,null],[17,"FT_Err_Invalid_Library_Handle","","",null,null],[17,"FT_Err_Invalid_Driver_Handle","","",null,null],[17,"FT_Err_Invalid_Face_Handle","","",null,null],[17,"FT_Err_Invalid_Size_Handle","","",null,null],[17,"FT_Err_Invalid_Slot_Handle","","",null,null],[17,"FT_Err_Invalid_CharMap_Handle","","",null,null],[17,"FT_Err_Invalid_Cache_Handle","","",null,null],[17,"FT_Err_Invalid_Stream_Handle","","",null,null],[17,"FT_Err_Too_Many_Drivers","","",null,null],[17,"FT_Err_Too_Many_Extensions","","",null,null],[17,"FT_Err_Out_Of_Memory","","",null,null],[17,"FT_Err_Unlisted_Object","","",null,null],[17,"FT_Err_Cannot_Open_Stream","","",null,null],[17,"FT_Err_Invalid_Stream_Seek","","",null,null],[17,"FT_Err_Invalid_Stream_Skip","","",null,null],[17,"FT_Err_Invalid_Stream_Read","","",null,null],[17,"FT_Err_Invalid_Stream_Operation","","",null,null],[17,"FT_Err_Invalid_Frame_Operation","","",null,null],[17,"FT_Err_Nested_Frame_Access","","",null,null],[17,"FT_Err_Invalid_Frame_Read","","",null,null],[17,"FT_Err_Raster_Uninitialized","","",null,null],[17,"FT_Err_Raster_Corrupted","","",null,null],[17,"FT_Err_Raster_Overflow","","",null,null],[17,"FT_Err_Raster_Negative_Height","","",null,null],[17,"FT_Err_Too_Many_Caches","","",null,null],[17,"FT_Err_Invalid_Opcode","","",null,null],[17,"FT_Err_Too_Few_Arguments","","",null,null],[17,"FT_Err_Stack_Overflow","","",null,null],[17,"FT_Err_Code_Overflow","","",null,null],[17,"FT_Err_Bad_Argument","","",null,null],[17,"FT_Err_Divide_By_Zero","","",null,null],[17,"FT_Err_Invalid_Reference","","",null,null],[17,"FT_Err_Debug_OpCode","","",null,null],[17,"FT_Err_ENDF_In_Exec_Stream","","",null,null],[17,"FT_Err_Nested_DEFS","","",null,null],[17,"FT_Err_Invalid_CodeRange","","",null,null],[17,"FT_Err_Execution_Too_Long","","",null,null],[17,"FT_Err_Too_Many_Function_Defs","","",null,null],[17,"FT_Err_Too_Many_Instruction_Defs","","",null,null],[17,"FT_Err_Table_Missing","","",null,null],[17,"FT_Err_Horiz_Header_Missing","","",null,null],[17,"FT_Err_Locations_Missing","","",null,null],[17,"FT_Err_Name_Table_Missing","","",null,null],[17,"FT_Err_CMap_Table_Missing","","",null,null],[17,"FT_Err_Hmtx_Table_Missing","","",null,null],[17,"FT_Err_Post_Table_Missing","","",null,null],[17,"FT_Err_Invalid_Horiz_Metrics","","",null,null],[17,"FT_Err_Invalid_CharMap_Format","","",null,null],[17,"FT_Err_Invalid_PPem","","",null,null],[17,"FT_Err_Invalid_Vert_Metrics","","",null,null],[17,"FT_Err_Could_Not_Find_Context","","",null,null],[17,"FT_Err_Invalid_Post_Table_Format","","",null,null],[17,"FT_Err_Invalid_Post_Table","","",null,null],[17,"FT_Err_Syntax_Error","","",null,null],[17,"FT_Err_Stack_Underflow","","",null,null],[17,"FT_Err_Ignore","","",null,null],[17,"FT_Err_No_Unicode_Glyph_Name","","",null,null],[17,"FT_Err_Missing_Startfont_Field","","",null,null],[17,"FT_Err_Missing_Font_Field","","",null,null],[17,"FT_Err_Missing_Size_Field","","",null,null],[17,"FT_Err_Missing_Fontboundingbox_Field","","",null,null],[17,"FT_Err_Missing_Chars_Field","","",null,null],[17,"FT_Err_Missing_Startchar_Field","","",null,null],[17,"FT_Err_Missing_Encoding_Field","","",null,null],[17,"FT_Err_Missing_Bbx_Field","","",null,null],[17,"FT_Err_Bbx_Too_Big","","",null,null],[17,"FT_Err_Corrupted_Font_Header","","",null,null],[17,"FT_Err_Corrupted_Font_Glyphs","","",null,null],[17,"FT_Err_Max","","",null,null],[6,"FT_Library","","",null,null],[6,"FT_Face","","",null,null],[6,"FT_Size","","",null,null],[6,"FT_GlyphSlot","","",null,null],[6,"FT_CharMap","","",null,null],[6,"FT_Module","","",null,null],[6,"FT_Driver","","",null,null],[6,"FT_Renderer","","",null,null],[6,"FT_Size_Internal","","",null,null],[6,"FT_SubGlyph","","",null,null],[6,"FT_Slot_Internal","","",null,null],[6,"FT_Size_Request","","",null,null],[6,"FT_Face_Internal","","",null,null],[6,"FT_Stream","","",null,null],[6,"FT_Memory","","",null,null],[6,"FT_ListNode","","",null,null],[6,"FT_Glyph","","",null,null],[6,"FT_BitmapGlyph","","",null,null],[6,"FT_OutlineGlyph","","",null,null],[6,"TT_OS2_Internal","","",null,null],[6,"FT_LibraryRec","","",null,null],[6,"FT_ModuleRec","","",null,null],[6,"FT_DriverRec","","",null,null],[6,"FT_RendererRec","","",null,null],[6,"FT_Size_InternalRec","","",null,null],[6,"FT_SubGlyphRec","","",null,null],[6,"FT_Slot_InternalRec","","",null,null],[6,"FT_Face_InternalRec","","",null,null],[3,"FT_CharMapRec","","",null,null],[12,"face","","",9,null],[12,"encoding","","",9,null],[12,"platform_id","","",9,null],[12,"encoding_id","","",9,null],[3,"FT_FaceRec","","",null,null],[12,"num_faces","","",18,null],[12,"face_index","","",18,null],[12,"face_flags","","",18,null],[12,"style_flags","","",18,null],[12,"num_glyphs","","",18,null],[12,"family_name","","",18,null],[12,"style_name","","",18,null],[12,"num_fixed_sizes","","",18,null],[12,"available_sizes","","",18,null],[12,"num_charmaps","","",18,null],[12,"charmaps","","",18,null],[12,"generic","","",18,null],[12,"bbox","","",18,null],[12,"units_per_EM","","",18,null],[12,"ascender","","",18,null],[12,"descender","","",18,null],[12,"height","","",18,null],[12,"max_advance_width","","",18,null],[12,"max_advance_height","","",18,null],[12,"underline_position","","",18,null],[12,"underline_thickness","","",18,null],[12,"glyph","","",18,null],[12,"size","","",18,null],[12,"charmap","","",18,null],[12,"driver","","",18,null],[12,"memory","","",18,null],[12,"stream","","",18,null],[12,"sizes_list","","",18,null],[12,"autohint","","",18,null],[12,"extensions","","",18,null],[12,"internal","","",18,null],[3,"FT_GlyphSlotRec","","",null,null],[12,"library","","",19,null],[12,"face","","",19,null],[12,"next","","",19,null],[12,"reserved","","",19,null],[12,"generic","","",19,null],[12,"metrics","","",19,null],[12,"linearHoriAdvance","","",19,null],[12,"linearVertAdvance","","",19,null],[12,"advance","","",19,null],[12,"format","","",19,null],[12,"bitmap","","",19,null],[12,"bitmap_left","","",19,null],[12,"bitmap_top","","",19,null],[12,"outline","","",19,null],[12,"num_subglyphs","","",19,null],[12,"subglyphs","","",19,null],[12,"control_data","","",19,null],[12,"control_len","","",19,null],[12,"lsb_delta","","",19,null],[12,"rsb_delta","","",19,null],[12,"other","","",19,null],[12,"internal","","",19,null],[3,"FT_SizeRec","","",null,null],[12,"face","","",20,null],[12,"generic","","",20,null],[12,"metrics","","",20,null],[12,"internal","","",20,null],[3,"FT_StreamRec","","",null,null],[12,"base","","",21,null],[12,"size","","",21,null],[12,"pos","","",21,null],[12,"descriptor","","",21,null],[12,"pathname","","",21,null],[12,"read","","",21,null],[12,"close","","",21,null],[12,"memory","","",21,null],[12,"cursor","","",21,null],[12,"limit","","",21,null],[3,"FT_MemoryRec","","",null,null],[12,"user","","",22,null],[12,"alloc","","",22,null],[12,"free","","",22,null],[12,"realloc","","",22,null],[3,"FT_ListRec","","",null,null],[12,"head","","",10,null],[12,"tail","","",10,null],[3,"FT_ListNodeRec","","",null,null],[12,"prev","","",23,null],[12,"next","","",23,null],[12,"data","","",23,null],[3,"FT_Size_RequestRec","","",null,null],[12,"size_request_type","","",11,null],[12,"width","","",11,null],[12,"height","","",11,null],[12,"horiResolution","","",11,null],[12,"vertResolution","","",11,null],[3,"FT_GlyphRec","","",null,null],[12,"library","","",24,null],[12,"clazz","","",24,null],[12,"format","","",24,null],[12,"advance","","",24,null],[3,"FT_BitmapGlyphRec","","",null,null],[12,"root","","",25,null],[12,"left","","",25,null],[12,"top","","",25,null],[12,"bitmap","","",25,null],[3,"FT_OutlineGlyphRec","","",null,null],[12,"root","","",26,null],[12,"outline","","",26,null],[5,"FT_HAS_HORIZONTAL","","",null,null],[5,"FT_HAS_VERTICAL","","",null,null],[5,"FT_HAS_KERNING","","",null,null],[5,"FT_IS_SCALABLE","","",null,null],[5,"FT_IS_SFNT","","",null,null],[5,"FT_IS_FIXED_WIDTH","","",null,null],[5,"FT_HAS_FIXED_SIZES","","",null,null],[5,"FT_HAS_GLYPH_NAMES","","",null,null],[5,"FT_HAS_MULTIPLE_MASTERS","","",null,null],[5,"FT_IS_CID_KEYED","","",null,null],[5,"FT_IS_TRICKY","","",null,null],[5,"FT_HAS_COLOR","","",null,null],[5,"FT_Get_Sfnt_Table","","",null,null],[5,"FT_Init_FreeType","","",null,null],[5,"FT_Done_FreeType","","",null,null],[5,"FT_New_Library","","",null,null],[5,"FT_Done_Library","","",null,null],[5,"FT_Reference_Library","","",null,null],[5,"FT_Add_Default_Modules","","",null,null],[5,"FT_New_Face","","",null,null],[5,"FT_New_Memory_Face","","",null,null],[5,"FT_Open_Face","","",null,null],[5,"FT_Attach_File","","",null,null],[5,"FT_Attach_Stream","","",null,null],[5,"FT_Reference_Face","","",null,null],[5,"FT_Done_Face","","",null,null],[5,"FT_Select_Size","","",null,null],[5,"FT_Request_Size","","",null,null],[5,"FT_Set_Char_Size","","",null,null],[5,"FT_Set_Pixel_Sizes","","",null,null],[5,"FT_Load_Glyph","","",null,null],[5,"FT_Load_Char","","",null,null],[5,"FT_Set_Transform","","",null,null],[5,"FT_Render_Glyph","","",null,null],[5,"FT_Get_Kerning","","",null,null],[5,"FT_Get_Track_Kerning","","",null,null],[5,"FT_Get_Glyph_Name","","",null,null],[5,"FT_Get_Postscript_Name","","",null,null],[5,"FT_Select_CharMap","","",null,null],[5,"FT_Set_Charmap","","",null,null],[5,"FT_Get_Charmap_Index","","",null,null],[5,"FT_Get_Char_Index","","",null,null],[5,"FT_Get_First_Char","","",null,null],[5,"FT_Get_Next_Char","","",null,null],[5,"FT_Get_Name_Index","","",null,null],[5,"FT_Get_SubGlyph_Info","","",null,null],[5,"FT_Get_FSType_Flags","","",null,null],[5,"FT_Get_Glyph","","",null,null],[5,"FT_Glyph_Copy","","",null,null],[5,"FT_Glyph_Transform","","",null,null],[5,"FT_Glyph_Get_CBox","","",null,null],[5,"FT_Glyph_To_Bitmap","","",null,null],[5,"FT_Done_Glyph","","",null,null],[0,"bitmap","freetype","",null,null],[3,"Bitmap","freetype::bitmap","",null,null],[4,"PixelMode","","An enumeration type used to describe the format of pixels in a given bitmap. Note that\nadditional formats may be added in the future.",null,null],[13,"None","","This value is reserved.",27,null],[13,"Mono","","A monochrome bitmap, using 1 bit per pixel. Note that pixels are\nstored in most-significant order (MSB), which means that the left-most\npixel in a byte has value 128.",27,null],[13,"Gray","","An 8-bit bitmap, generally used to represent anti-aliased glyph images.\nEach pixel is stored in one byte. Note that the number of `gray`\nlevels is stored in the `num_grays` field of the FT_Bitmap structure\n(it generally is 256).",27,null],[13,"Gray2","","A 2-bit per pixel bitmap, used to represent embedded anti-aliased\nbitmaps in font files according to the OpenType specification. We\nhaven't found a single font using this format, however.",27,null],[13,"Gray4","","A 4-bit per pixel bitmap, representing embedded anti-aliased bitmaps in\nfont files according to the OpenType specification. We haven't found a\nsingle font using this format, however.",27,null],[13,"Lcd","","An 8-bit bitmap, representing RGB or BGR decimated glyph images used\nfor display on LCD displays; the bitmap is three times wider than the\noriginal glyph image. See also FT_RENDER_MODE_LCD.",27,null],[13,"LcdV","","An 8-bit bitmap, representing RGB or BGR decimated glyph images used for\ndisplay on rotated LCD displays; the bitmap is three times taller than\nthe original glyph image. See also FT_RENDER_MODE_LCD_V.",27,null],[13,"Bgra","","An image with four 8-bit channels per pixel, representing a color image\n(such as emoticons) with alpha channel. For each pixel, the format is\nBGRA, which means, the blue channel comes first in memory. The color\nchannels are pre-multiplied and in the sRGB colorspace. For example,\nfull red at half-translucent opacity will be represented as\n`00,00,80,80`, not `00,00,FF,80`. See also FT_LOAD_COLOR.",27,null],[11,"fmt","","",27,{"inputs":[{"name":"pixelmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"pixelmode"}],"output":{"name":"pixelmode"}}],[11,"from_raw","","",28,null],[11,"buffer","","A typeless pointer to the bitmap buffer. This value should be aligned\non 32-bit boundaries in most cases.",28,null],[11,"width","","The number of pixels in bitmap row.",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"i32"}}],[11,"rows","","The number of bitmap rows.",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"i32"}}],[11,"raw","","",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"ft_bitmap"}}],[11,"pixel_mode","","The pixel mode, i.e., how pixel bits are stored. See `PixelMode` for\npossible values.",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"ftresult"}}],[11,"pitch","","The pitch's absolute value is the number of bytes taken by one bitmap row, including\npadding. However, the pitch is positive when the bitmap has a ‘down’ flow, and negative\nwhen it has an ‘up’ flow. In all cases, the pitch is an offset to add to a bitmap pointer\nin order to go down one row.",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"i32"}}],[0,"bitmap_glyph","freetype","",null,null],[3,"BitmapGlyph","freetype::bitmap_glyph","",null,null],[11,"clone","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"bitmapglyph"}}],[11,"from_raw","","",29,{"inputs":[{"name":"bitmapglyph"},{"name":"ft_bitmapglyph"}],"output":{"name":"self"}}],[11,"left","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"i32"}}],[11,"top","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"i32"}}],[11,"bitmap","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"bitmap"}}],[11,"raw","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"ft_bitmapglyphrec"}}],[0,"error","freetype","",null,null],[4,"Error","freetype::error","",null,null],[13,"Ok","","",30,null],[13,"CannotOpenResource","","",30,null],[13,"UnknownFileFormat","","",30,null],[13,"InvalidFileFormat","","",30,null],[13,"InvalidVersion","","",30,null],[13,"LowerModuleVersion","","",30,null],[13,"InvalidArgument","","",30,null],[13,"UnimplementedFeature","","",30,null],[13,"InvalidTable","","",30,null],[13,"InvalidOffset","","",30,null],[13,"ArrayTooLarge","","",30,null],[13,"MissingModule","","",30,null],[13,"MissingProperty","","",30,null],[13,"InvalidGlyphIndex","","",30,null],[13,"InvalidCharacterCode","","",30,null],[13,"InvalidGlyphFormat","","",30,null],[13,"CannotRenderGlyph","","",30,null],[13,"InvalidOutline","","",30,null],[13,"InvalidComposite","","",30,null],[13,"TooManyHints","","",30,null],[13,"InvalidPixelSize","","",30,null],[13,"InvalidHandle","","",30,null],[13,"InvalidLibraryHandle","","",30,null],[13,"InvalidDriverHandle","","",30,null],[13,"InvalidFaceHandle","","",30,null],[13,"InvalidSizeHandle","","",30,null],[13,"InvalidSlotHandle","","",30,null],[13,"InvalidCharMapHandle","","",30,null],[13,"InvalidCacheHandle","","",30,null],[13,"InvalidStreamHandle","","",30,null],[13,"TooManyDrivers","","",30,null],[13,"TooManyExtensions","","",30,null],[13,"OutOfMemory","","",30,null],[13,"UnlistedObject","","",30,null],[13,"CannotOpenStream","","",30,null],[13,"InvalidStreamSeek","","",30,null],[13,"InvalidStreamSkip","","",30,null],[13,"InvalidStreamRead","","",30,null],[13,"InvalidStreamOperation","","",30,null],[13,"InvalidFrameOperation","","",30,null],[13,"NestedFrameAccess","","",30,null],[13,"InvalidFrameRead","","",30,null],[13,"RasterUninitialized","","",30,null],[13,"RasterCorrupted","","",30,null],[13,"RasterOverflow","","",30,null],[13,"RasterNegativeHeight","","",30,null],[13,"TooManyCaches","","",30,null],[13,"InvalidOpcode","","",30,null],[13,"TooFewArguments","","",30,null],[13,"StackOverflow","","",30,null],[13,"CodeOverflow","","",30,null],[13,"BadArgument","","",30,null],[13,"DivideByZero","","",30,null],[13,"InvalidReference","","",30,null],[13,"DebugOpCode","","",30,null],[13,"ENDFInExecStream","","",30,null],[13,"NestedDEFS","","",30,null],[13,"InvalidCodeRange","","",30,null],[13,"ExecutionTooLong","","",30,null],[13,"TooManyFunctionDefs","","",30,null],[13,"TooManyInstructionDefs","","",30,null],[13,"TableMissing","","",30,null],[13,"HorizHeaderMissing","","",30,null],[13,"LocationsMissing","","",30,null],[13,"NameTableMissing","","",30,null],[13,"CMapTableMissing","","",30,null],[13,"HmtxTableMissing","","",30,null],[13,"PostTableMissing","","",30,null],[13,"InvalidHorizMetrics","","",30,null],[13,"InvalidCharMapFormat","","",30,null],[13,"InvalidPPem","","",30,null],[13,"InvalidVertMetrics","","",30,null],[13,"CouldNotFindContext","","",30,null],[13,"InvalidPostTableFormat","","",30,null],[13,"InvalidPostTable","","",30,null],[13,"Syntax","","",30,null],[13,"StackUnderflow","","",30,null],[13,"Ignore","","",30,null],[13,"NoUnicodeGlyphName","","",30,null],[13,"MissingStartfontField","","",30,null],[13,"MissingFontField","","",30,null],[13,"MissingSizeField","","",30,null],[13,"MissingFontboundingboxField","","",30,null],[13,"MissingCharsField","","",30,null],[13,"MissingStartcharField","","",30,null],[13,"MissingEncodingField","","",30,null],[13,"MissingBbxField","","",30,null],[13,"BbxTooBig","","",30,null],[13,"CorruptedFontHeader","","",30,null],[13,"CorruptedFontGlyphs","","",30,null],[13,"Max","","",30,null],[13,"UnexpectedPixelMode","","",30,null],[13,"InvalidPath","","",30,null],[13,"Unknown","","",30,null],[6,"FtResult","","",null,null],[11,"fmt","","",30,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",30,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"self"}}],[11,"fmt","","",30,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[0,"face","freetype","",null,null],[3,"LoadFlag","freetype::face","",null,null],[3,"Face","","",null,null],[4,"KerningMode","","",null,null],[13,"KerningDefault","","",31,null],[13,"KerningUnfitted","","",31,null],[13,"KerningUnscaled","","",31,null],[17,"DEFAULT","","",null,null],[17,"NO_SCALE","","",null,null],[17,"NO_HINTING","","",null,null],[17,"RENDER","","",null,null],[17,"NO_BITMAP","","",null,null],[17,"VERTICAL_LAYOUT","","",null,null],[17,"FORCE_AUTOHINT","","",null,null],[17,"CROP_BITMAP","","",null,null],[17,"PEDANTIC","","",null,null],[17,"IGNORE_GLOBAL_ADVANCE_WITH","","",null,null],[17,"NO_RECURSE","","",null,null],[17,"IGNORE_TRANSFORM","","",null,null],[17,"MONOCHROME","","",null,null],[17,"LINEAR_DESIGN","","",null,null],[17,"NO_AUTOHINT","","",null,null],[17,"TARGET_NORMAL","","",null,null],[17,"TARGET_LIGHT","","",null,null],[17,"TARGET_MONO","","",null,null],[17,"TARGET_LCD","","",null,null],[17,"TARGET_LCD_V","","",null,null],[17,"COLOR","","",null,null],[11,"clone","","",31,{"inputs":[{"name":"kerningmode"}],"output":{"name":"kerningmode"}}],[11,"hash","","",32,null],[11,"cmp","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"eq","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"loadflag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"all","","Returns the set containing all flags.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",32,{"inputs":[{"name":"loadflag"},{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",32,{"inputs":[{"name":"loadflag"},{"name":"i32"}],"output":{"name":"loadflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"sub","","Returns the set difference of the two sets of flags.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"not","","Returns the complement of this set of flags.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"from_iter","","",32,{"inputs":[{"name":"loadflag"},{"name":"t"}],"output":{"name":"loadflag"}}],[11,"hash","","",33,null],[11,"eq","","",33,{"inputs":[{"name":"face"},{"name":"face"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"face"},{"name":"face"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"face"}],"output":{"name":"self"}}],[11,"from_raw","","",33,{"inputs":[{"name":"face"},{"name":"ft_library"},{"name":"ft_face"}],"output":{"name":"self"}}],[11,"attach_file","","",33,{"inputs":[{"name":"face"},{"name":"str"}],"output":{"name":"ftresult"}}],[11,"reference","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ftresult"}}],[11,"set_char_size","","",33,{"inputs":[{"name":"face"},{"name":"isize"},{"name":"isize"},{"name":"u32"},{"name":"u32"}],"output":{"name":"ftresult"}}],[11,"set_pixel_sizes","","",33,{"inputs":[{"name":"face"},{"name":"u32"},{"name":"u32"}],"output":{"name":"ftresult"}}],[11,"load_glyph","","",33,{"inputs":[{"name":"face"},{"name":"u32"},{"name":"loadflag"}],"output":{"name":"ftresult"}}],[11,"load_char","","",33,{"inputs":[{"name":"face"},{"name":"usize"},{"name":"loadflag"}],"output":{"name":"ftresult"}}],[11,"set_transform","","",33,{"inputs":[{"name":"face"},{"name":"matrix"},{"name":"vector"}],"output":null}],[11,"get_char_index","","",33,{"inputs":[{"name":"face"},{"name":"usize"}],"output":{"name":"u32"}}],[11,"get_kerning","","",33,{"inputs":[{"name":"face"},{"name":"u32"},{"name":"u32"},{"name":"kerningmode"}],"output":{"name":"ftresult"}}],[11,"glyph","","",33,{"inputs":[{"name":"face"}],"output":{"name":"glyphslot"}}],[11,"has_horizontal","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_vertical","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_kerning","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_scalable","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_sfnt","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_fixed_width","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_fixed_sizes","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_glyph_names","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_cid_keyed","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_tricky","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_color","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"raw","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_facerec"}}],[11,"raw_mut","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_facerec"}}],[11,"ascender","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"descender","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"em_size","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"height","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"max_advance_width","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"max_advance_height","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"underline_position","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"underline_thickness","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"family_name","","",33,{"inputs":[{"name":"face"}],"output":{"name":"option"}}],[11,"style_name","","",33,{"inputs":[{"name":"face"}],"output":{"name":"option"}}],[11,"size_metrics","","",33,{"inputs":[{"name":"face"}],"output":{"name":"option"}}],[11,"postscript_name","","",33,{"inputs":[{"name":"face"}],"output":{"name":"option"}}],[11,"fmt","","",33,{"inputs":[{"name":"face"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",33,{"inputs":[{"name":"face"}],"output":null}],[0,"glyph","freetype","",null,null],[3,"Glyph","freetype::glyph","",null,null],[11,"from_raw","","",34,{"inputs":[{"name":"glyph"},{"name":"ft_library"},{"name":"ft_glyph"}],"output":{"name":"self"}}],[11,"transform","","",34,{"inputs":[{"name":"glyph"},{"name":"option"},{"name":"option"}],"output":{"name":"ftresult"}}],[11,"get_cbox","","",34,{"inputs":[{"name":"glyph"},{"name":"ft_glyph_bbox_mode"}],"output":{"name":"bbox"}}],[11,"to_bitmap","","",34,{"inputs":[{"name":"glyph"},{"name":"rendermode"},{"name":"option"}],"output":{"name":"ftresult"}}],[11,"advance_x","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"isize"}}],[11,"advance_y","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"isize"}}],[11,"format","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"ft_glyph_format"}}],[11,"raw","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"ft_glyphrec"}}],[11,"clone","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"self"}}],[11,"drop","","",34,{"inputs":[{"name":"glyph"}],"output":null}],[0,"glyph_slot","freetype","",null,null],[3,"SubGlyphInfo","freetype::glyph_slot","A description of a given subglyph returned by `GlyphSlot::get_subglyph_info`\nfunction.",null,null],[12,"index","","The glyph index of the subglyph.",35,null],[12,"flags","","The subglyph flags, see FT_SUBGLYPH_FLAG_XXX.",35,null],[12,"arg1","","The subglyph's first argument (if any).",35,null],[12,"arg2","","The subglyph's second argument (if any).",35,null],[12,"transfrom","","The subglyph transformation (if any).",35,null],[3,"GlyphSlot","","",null,null],[11,"clone","","",35,{"inputs":[{"name":"subglyphinfo"}],"output":{"name":"subglyphinfo"}}],[11,"default","","",35,{"inputs":[{"name":"subglyphinfo"}],"output":{"name":"self"}}],[11,"hash","","",36,null],[11,"eq","","",36,{"inputs":[{"name":"glyphslot"},{"name":"glyphslot"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"glyphslot"},{"name":"glyphslot"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"glyphslot"}}],[11,"from_raw","","",36,{"inputs":[{"name":"glyphslot"},{"name":"ft_library"},{"name":"ft_glyphslot"}],"output":{"name":"self"}}],[11,"render_glyph","","",36,{"inputs":[{"name":"glyphslot"},{"name":"rendermode"}],"output":{"name":"ftresult"}}],[11,"get_subglyph_info","","",36,{"inputs":[{"name":"glyphslot"},{"name":"u32"}],"output":{"name":"ftresult"}}],[11,"get_glyph","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"ftresult"}}],[11,"outline","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"option"}}],[11,"bitmap","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"bitmap"}}],[11,"bitmap_left","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"i32"}}],[11,"bitmap_top","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"i32"}}],[11,"advance","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"vector"}}],[11,"linear_hori_advance","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"ft_fixed"}}],[11,"linear_vert_advance","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"ft_fixed"}}],[11,"metrics","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"glyphmetrics"}}],[11,"raw","","",36,{"inputs":[{"name":"glyphslot"}],"output":{"name":"ft_glyphslotrec"}}],[0,"library","freetype","",null,null],[3,"Library","freetype::library","",null,null],[11,"init","","",37,{"inputs":[{"name":"library"}],"output":{"name":"ftresult"}}],[11,"new_face","","",37,{"inputs":[{"name":"library"},{"name":"p"},{"name":"isize"}],"output":{"name":"ftresult"}}],[11,"new_memory_face","","",37,null],[11,"raw","","",37,{"inputs":[{"name":"library"}],"output":{"name":"ft_library"}}],[11,"get_memory","","",37,{"inputs":[{"name":"library"}],"output":{"name":"ft_memoryrec"}}],[11,"new_memory","","",37,{"inputs":[{"name":"library"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":null}],[11,"drop","","",37,{"inputs":[{"name":"library"}],"output":null}],[0,"outline","freetype","",null,null],[3,"Outline","freetype::outline","",null,null],[3,"CurveIterator","","",null,null],[3,"ContourIterator","","",null,null],[4,"Curve","","",null,null],[13,"Line","","",38,null],[13,"Bezier2","","",38,null],[13,"Bezier3","","",38,null],[11,"clone","","",38,{"inputs":[{"name":"curve"}],"output":{"name":"curve"}}],[11,"from_raw","","",39,{"inputs":[{"name":"outline"},{"name":"ft_outline"}],"output":{"name":"self"}}],[11,"points","","",39,null],[11,"tags","","",39,null],[11,"contours","","",39,null],[11,"contours_iter","","",39,{"inputs":[{"name":"outline"}],"output":{"name":"contouriterator"}}],[11,"from_raw","","",40,{"inputs":[{"name":"curveiterator"},{"name":"ft_outline"},{"name":"isize"},{"name":"isize"}],"output":{"name":"self"}}],[11,"start","","",40,{"inputs":[{"name":"curveiterator"}],"output":{"name":"vector"}}],[11,"next","","",40,{"inputs":[{"name":"curveiterator"}],"output":{"name":"option"}}],[11,"from_raw","","",41,{"inputs":[{"name":"contouriterator"},{"name":"ft_outline"}],"output":{"name":"self"}}],[11,"next","","",41,{"inputs":[{"name":"contouriterator"}],"output":{"name":"option"}}],[0,"render_mode","freetype","",null,null],[4,"RenderMode","freetype::render_mode","",null,null],[13,"Normal","","",42,null],[13,"Light","","",42,null],[13,"Mono","","",42,null],[13,"Lcd","","",42,null],[13,"LcdV","","",42,null],[13,"Max","","",42,null],[11,"clone","","",42,{"inputs":[{"name":"rendermode"}],"output":{"name":"rendermode"}}],[0,"tt_os2","freetype","",null,null],[3,"TrueTypeOS2Table","freetype::tt_os2","",null,null],[11,"clone","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"truetypeos2table"}}],[11,"from_face","","",43,{"inputs":[{"name":"truetypeos2table"},{"name":"face"}],"output":{"name":"option"}}],[11,"version","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_ushort"}}],[11,"avg_char_width","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"us_weight_class","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_ushort"}}],[11,"us_width_class","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_ushort"}}],[11,"fs_type","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_subscript_x_size","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_subscript_y_size","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_subscript_x_offset","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_subscript_y_offset","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_superscript_x_size","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_superscript_y_size","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_superscript_x_offset","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_superscript_y_offset","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_strikeout_size","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_strikeout_position","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"s_family_class","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"x_height","","",43,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[6,"BBox","freetype","",null,null],[6,"GlyphMetrics","","",null,null],[6,"Matrix","","",null,null],[6,"Vector","","",null,null]],"paths":[[3,"FT_Vector"],[3,"FT_BBox"],[3,"FT_Matrix"],[3,"FT_UnitVector"],[3,"FT_Size_Metrics"],[3,"FT_Glyph_Metrics"],[3,"FT_Parameter"],[3,"FT_Bitmap_Size"],[3,"TT_OS2"],[3,"FT_CharMapRec"],[3,"FT_ListRec"],[3,"FT_Size_RequestRec"],[8,"FTErrorMethods"],[3,"FT_Bitmap"],[3,"FT_Data"],[3,"FT_Generic"],[3,"FT_Outline"],[3,"FT_Open_Args"],[3,"FT_FaceRec"],[3,"FT_GlyphSlotRec"],[3,"FT_SizeRec"],[3,"FT_StreamRec"],[3,"FT_MemoryRec"],[3,"FT_ListNodeRec"],[3,"FT_GlyphRec"],[3,"FT_BitmapGlyphRec"],[3,"FT_OutlineGlyphRec"],[4,"PixelMode"],[3,"Bitmap"],[3,"BitmapGlyph"],[4,"Error"],[4,"KerningMode"],[3,"LoadFlag"],[3,"Face"],[3,"Glyph"],[3,"SubGlyphInfo"],[3,"GlyphSlot"],[3,"Library"],[4,"Curve"],[3,"Outline"],[3,"CurveIterator"],[3,"ContourIterator"],[4,"RenderMode"],[3,"TrueTypeOS2Table"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",3,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",4,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",5,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",7,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",8,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",9,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",11,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"clone","","",0,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"clone","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[11,"next_u32","alloc::boxed","",30,{"inputs":[{"name":"box"}],"output":{"name":"u32"}}],[11,"next_u64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"u64"}}],[11,"next_f32","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f32"}}],[11,"next_f64","","",30,{"inputs":[{"name":"box"}],"output":{"name":"f64"}}],[11,"fill_bytes","","",30,null],[11,"next","rand","",31,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[11,"next","","",32,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",33,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",33,null],[11,"rand","","",33,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",34,null],[11,"from_seed","","",34,null],[11,"clone","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",35,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",35,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Box"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['gif'] = {"items":[[0,"","gif","# GIF encoding and decoding library",null,null],[3,"Frame","","A GIF frame",null,null],[12,"delay","","Frame delay.",0,null],[12,"dispose","","Disposal method.",0,null],[12,"transparent","","Transparent index (if available).",0,null],[12,"needs_user_input","","True if the frame needs user input do be displayed.",0,null],[12,"top","","Offset from the top border of the canvas.",0,null],[12,"left","","Offset from the left border of the canvas.",0,null],[12,"width","","Width of the frame.",0,null],[12,"height","","Height of the frame.",0,null],[12,"interlaced","","True if the image is interlaced.",0,null],[12,"palette","","Frame local color palette if available.",0,null],[12,"buffer","","Buffer containing the image data.\nOnly indices unless configured differently.",0,null],[3,"MemoryLimit","","Memory limit in bytes. `MemoryLimit::Some(0)` means\nthat there is no memory limit set.",null,null],[3,"Reader","","GIF decoder",null,null],[3,"Decoder","","GIF decoder",null,null],[3,"Encoder","","GIF encoder.",null,null],[3,"Writer","","Wrapper for `Encoder` that indicates that the file headers have been written.",null,null],[4,"Block","","Known GIF block types",null,null],[13,"Image","","Image block.",1,null],[13,"Extension","","Extension block.",1,null],[13,"Trailer","","Image trailer.",1,null],[4,"Extension","","Known GIF extensions",null,null],[13,"Text","","Text extension.",2,null],[13,"Control","","Control extension.",2,null],[13,"Comment","","Comment extension.",2,null],[13,"Application","","Application extension.",2,null],[4,"DisposalMethod","","Disposal method",null,null],[13,"Any","","StreamingDecoder is not required to take any action.",3,null],[13,"Keep","","Do not dispose.",3,null],[13,"Background","","Restore to background color.",3,null],[13,"Previous","","Restore to previous.",3,null],[4,"ColorOutput","","Output mode for the image data",null,null],[13,"RGBA","","The decoder expands the image data to 32bit RGBA.\nThis affects:",4,null],[13,"Indexed","","The decoder returns the raw indexed data.",4,null],[4,"ExtensionData","","Extension data.",null,null],[13,"Control","","Control extension",5,null],[12,"flags","gif::ExtensionData","Flags.",5,null],[12,"delay","","Frame delay.",5,null],[12,"trns","","Transparent index.",5,null],[11,"clone","gif","",3,{"inputs":[{"name":"disposalmethod"}],"output":{"name":"disposalmethod"}}],[11,"fmt","","",3,{"inputs":[{"name":"disposalmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u8","","Converts `u8` to `Option<Self>`",3,{"inputs":[{"name":"disposalmethod"},{"name":"u8"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"block"}],"output":{"name":"block"}}],[11,"fmt","","",1,{"inputs":[{"name":"block"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u8","","Converts `u8` to `Option<Self>`",1,{"inputs":[{"name":"block"},{"name":"u8"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"extension"}],"output":{"name":"extension"}}],[11,"fmt","","",2,{"inputs":[{"name":"extension"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u8","","Converts `u8` to `Option<Self>`",2,{"inputs":[{"name":"extension"},{"name":"u8"}],"output":{"name":"option"}}],[11,"clone","","",0,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"fmt","","",0,{"inputs":[{"name":"frame"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"from_rgba","","Creates a frame from pixels in RGBA format.",0,null],[11,"from_rgb","","Creates a frame from pixels in RGB format.",0,null],[11,"fmt","","",4,{"inputs":[{"name":"coloroutput"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"coloroutput"},{"name":"coloroutput"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"coloroutput"},{"name":"coloroutput"}],"output":{"name":"bool"}}],[11,"set_param","","",4,{"inputs":[{"name":"coloroutput"},{"name":"decoder"}],"output":null}],[11,"fmt","","",6,{"inputs":[{"name":"memorylimit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set_param","","",6,{"inputs":[{"name":"memorylimit"},{"name":"decoder"}],"output":null}],[11,"new","","Creates a new decoder builder",7,{"inputs":[{"name":"decoder"},{"name":"r"}],"output":{"name":"decoder"}}],[11,"read_info","","Reads the logical screen descriptor including the global color palette",7,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[11,"next_frame_info","","Returns the next frame info",8,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"read_next_frame","","Reads the next frame from the image.",8,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"fill_buffer","","Reads data of the current frame into a pre-allocated buffer.",8,null],[11,"buffer_size","","Output buffer size",8,{"inputs":[{"name":"reader"}],"output":{"name":"usize"}}],[11,"line_length","","Line length of the current frame",8,{"inputs":[{"name":"reader"}],"output":{"name":"usize"}}],[11,"palette","","Returns the color palette relevant for the current (next) frame",8,{"inputs":[{"name":"reader"}],"output":{"name":"result"}}],[11,"global_palette","","The global color palette",8,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"width","","Width of the image",8,{"inputs":[{"name":"reader"}],"output":{"name":"u16"}}],[11,"height","","Height of the image",8,{"inputs":[{"name":"reader"}],"output":{"name":"u16"}}],[11,"bg_color","","Index of the background color in the global palette",8,{"inputs":[{"name":"reader"}],"output":{"name":"option"}}],[11,"new_control_ext","","Constructor for control extension data.",5,{"inputs":[{"name":"extensiondata"},{"name":"u16"},{"name":"disposalmethod"},{"name":"bool"},{"name":"option"}],"output":{"name":"extensiondata"}}],[11,"write_frame","","Writes a complete frame to the image",9,{"inputs":[{"name":"writer"},{"name":"frame"}],"output":{"name":"result"}}],[11,"write_extension","","Writes an extension to the image",9,{"inputs":[{"name":"writer"},{"name":"extensiondata"}],"output":{"name":"result"}}],[11,"write_raw_extension","","Writes a raw extension to the image",9,null],[11,"drop","","",9,{"inputs":[{"name":"writer"}],"output":null}],[11,"new","","Creates a new encoder.",10,{"inputs":[{"name":"encoder"},{"name":"w"},{"name":"u16"},{"name":"u16"}],"output":{"name":"self"}}],[11,"write_global_palette","","Writes the global color palette",10,null],[8,"SetParameter","","Implemented for objects that have parameters.",null,null],[11,"set","","Sets `value` as a parameter of `self`.",11,{"inputs":[{"name":"setparameter"},{"name":"t"}],"output":{"name":"self"}}],[8,"Parameter","","Configuration parameter trait.",null,null],[10,"set_param","","Sets `self` as a parameter of `Object`.",12,{"inputs":[{"name":"parameter"},{"name":"object"}],"output":null}],[11,"set","","Sets `value` as a parameter of `self`.",11,{"inputs":[{"name":"setparameter"},{"name":"t"}],"output":{"name":"self"}}]],"paths":[[3,"Frame"],[4,"Block"],[4,"Extension"],[4,"DisposalMethod"],[4,"ColorOutput"],[4,"ExtensionData"],[3,"MemoryLimit"],[3,"Decoder"],[3,"Reader"],[3,"Writer"],[3,"Encoder"],[8,"SetParameter"],[8,"Parameter"]]};
searchIndex['freetype_sys'] = {"items":[[0,"","freetype_sys","",null,null],[3,"FT_Vector","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"FT_BBox","","",null,null],[12,"xMin","","",1,null],[12,"yMin","","",1,null],[12,"xMax","","",1,null],[12,"yMax","","",1,null],[3,"FT_Matrix","","",null,null],[12,"xx","","",2,null],[12,"xy","","",2,null],[12,"yx","","",2,null],[12,"yy","","",2,null],[3,"FT_UnitVector","","",null,null],[12,"x","","",3,null],[12,"y","","",3,null],[3,"FT_Bitmap","","",null,null],[12,"rows","","",4,null],[12,"width","","",4,null],[12,"pitch","","",4,null],[12,"buffer","","",4,null],[12,"num_grays","","",4,null],[12,"pixel_mode","","",4,null],[12,"palette_mode","","",4,null],[12,"palette","","",4,null],[3,"FT_Data","","",null,null],[12,"pointer","","",5,null],[12,"length","","",5,null],[3,"FT_Generic","","",null,null],[12,"data","","",6,null],[12,"finalizer","","",6,null],[3,"FT_Size_Metrics","","",null,null],[12,"x_ppem","","",7,null],[12,"y_ppem","","",7,null],[12,"x_scale","","",7,null],[12,"y_scale","","",7,null],[12,"ascender","","",7,null],[12,"descender","","",7,null],[12,"height","","",7,null],[12,"max_advance","","",7,null],[3,"FT_Outline","","",null,null],[12,"n_contours","","",8,null],[12,"n_points","","",8,null],[12,"points","","",8,null],[12,"tags","","",8,null],[12,"contours","","",8,null],[12,"flags","","",8,null],[3,"FT_Glyph_Metrics","","",null,null],[12,"width","","",9,null],[12,"height","","",9,null],[12,"horiBearingX","","",9,null],[12,"horiBearingY","","",9,null],[12,"horiAdvance","","",9,null],[12,"vertBearingX","","",9,null],[12,"vertBearingY","","",9,null],[12,"vertAdvance","","",9,null],[3,"FT_Parameter","","",null,null],[12,"tag","","",10,null],[12,"data","","",10,null],[3,"FT_Open_Args","","",null,null],[12,"flags","","",11,null],[12,"memory_base","","",11,null],[12,"memory_size","","",11,null],[12,"pathname","","",11,null],[12,"stream","","",11,null],[12,"driver","","",11,null],[12,"num_params","","",11,null],[12,"params","","",11,null],[3,"FT_Bitmap_Size","","",null,null],[12,"height","","",12,null],[12,"width","","",12,null],[12,"size","","",12,null],[12,"x_ppem","","",12,null],[12,"y_ppem","","",12,null],[3,"TT_OS2","","",null,null],[12,"version","","",13,null],[12,"xAvgCharWidth","","",13,null],[12,"usWeightClass","","",13,null],[12,"usWidthClass","","",13,null],[12,"fsType","","",13,null],[12,"ySubscriptXSize","","",13,null],[12,"ySubscriptYSize","","",13,null],[12,"ySubscriptXOffset","","",13,null],[12,"ySubscriptYOffset","","",13,null],[12,"ySuperscriptXSize","","",13,null],[12,"ySuperscriptYSize","","",13,null],[12,"ySuperscriptXOffset","","",13,null],[12,"ySuperscriptYOffset","","",13,null],[12,"yStrikeoutSize","","",13,null],[12,"yStrikeoutPosition","","",13,null],[12,"sFamilyClass","","",13,null],[12,"panose","","",13,null],[12,"ulUnicodeRange1","","",13,null],[12,"ulUnicodeRange2","","",13,null],[12,"ulUnicodeRange3","","",13,null],[12,"ulUnicodeRange4","","",13,null],[12,"ulCodePageRange1","","",13,null],[12,"ulCodePageRange2","","",13,null],[12,"sxHeight","","",13,null],[12,"sCapHeight","","",13,null],[12,"usDefaultChar","","",13,null],[12,"usBreakChar","","",13,null],[12,"usMaxContext","","",13,null],[3,"FT_CharMapRec","","",null,null],[12,"face","","",14,null],[12,"encoding","","",14,null],[12,"platform_id","","",14,null],[12,"encoding_id","","",14,null],[3,"FT_FaceRec","","",null,null],[12,"num_faces","","",15,null],[12,"face_index","","",15,null],[12,"face_flags","","",15,null],[12,"style_flags","","",15,null],[12,"num_glyphs","","",15,null],[12,"family_name","","",15,null],[12,"style_name","","",15,null],[12,"num_fixed_sizes","","",15,null],[12,"available_sizes","","",15,null],[12,"num_charmaps","","",15,null],[12,"charmaps","","",15,null],[12,"generic","","",15,null],[12,"bbox","","",15,null],[12,"units_per_EM","","",15,null],[12,"ascender","","",15,null],[12,"descender","","",15,null],[12,"height","","",15,null],[12,"max_advance_width","","",15,null],[12,"max_advance_height","","",15,null],[12,"underline_position","","",15,null],[12,"underline_thickness","","",15,null],[12,"glyph","","",15,null],[12,"size","","",15,null],[12,"charmap","","",15,null],[12,"driver","","",15,null],[12,"memory","","",15,null],[12,"stream","","",15,null],[12,"sizes_list","","",15,null],[12,"autohint","","",15,null],[12,"extensions","","",15,null],[12,"internal","","",15,null],[3,"FT_GlyphSlotRec","","",null,null],[12,"library","","",16,null],[12,"face","","",16,null],[12,"next","","",16,null],[12,"reserved","","",16,null],[12,"generic","","",16,null],[12,"metrics","","",16,null],[12,"linearHoriAdvance","","",16,null],[12,"linearVertAdvance","","",16,null],[12,"advance","","",16,null],[12,"format","","",16,null],[12,"bitmap","","",16,null],[12,"bitmap_left","","",16,null],[12,"bitmap_top","","",16,null],[12,"outline","","",16,null],[12,"num_subglyphs","","",16,null],[12,"subglyphs","","",16,null],[12,"control_data","","",16,null],[12,"control_len","","",16,null],[12,"lsb_delta","","",16,null],[12,"rsb_delta","","",16,null],[12,"other","","",16,null],[12,"internal","","",16,null],[3,"FT_SizeRec","","",null,null],[12,"face","","",17,null],[12,"generic","","",17,null],[12,"metrics","","",17,null],[12,"internal","","",17,null],[3,"FT_StreamRec","","",null,null],[12,"base","","",18,null],[12,"size","","",18,null],[12,"pos","","",18,null],[12,"descriptor","","",18,null],[12,"pathname","","",18,null],[12,"read","","",18,null],[12,"close","","",18,null],[12,"memory","","",18,null],[12,"cursor","","",18,null],[12,"limit","","",18,null],[3,"FT_MemoryRec","","",null,null],[12,"user","","",19,null],[12,"alloc","","",19,null],[12,"free","","",19,null],[12,"realloc","","",19,null],[3,"FT_ListRec","","",null,null],[12,"head","","",20,null],[12,"tail","","",20,null],[3,"FT_ListNodeRec","","",null,null],[12,"prev","","",21,null],[12,"next","","",21,null],[12,"data","","",21,null],[3,"FT_Size_RequestRec","","",null,null],[12,"size_request_type","","",22,null],[12,"width","","",22,null],[12,"height","","",22,null],[12,"horiResolution","","",22,null],[12,"vertResolution","","",22,null],[3,"FT_GlyphRec","","",null,null],[12,"library","","",23,null],[12,"clazz","","",23,null],[12,"format","","",23,null],[12,"advance","","",23,null],[3,"FT_BitmapGlyphRec","","",null,null],[12,"root","","",24,null],[12,"left","","",24,null],[12,"top","","",24,null],[12,"bitmap","","",24,null],[3,"FT_OutlineGlyphRec","","",null,null],[12,"root","","",25,null],[12,"outline","","",25,null],[5,"FT_HAS_HORIZONTAL","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_VERTICAL","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_KERNING","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_SCALABLE","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_SFNT","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_FIXED_WIDTH","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_FIXED_SIZES","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_GLYPH_NAMES","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_MULTIPLE_MASTERS","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_CID_KEYED","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_TRICKY","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_COLOR","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_Get_Sfnt_Table","","",null,null],[5,"FT_Init_FreeType","","",null,null],[5,"FT_Done_FreeType","","",null,null],[5,"FT_New_Library","","",null,null],[5,"FT_Done_Library","","",null,null],[5,"FT_Reference_Library","","",null,null],[5,"FT_Add_Default_Modules","","",null,null],[5,"FT_New_Face","","",null,null],[5,"FT_New_Memory_Face","","",null,null],[5,"FT_Open_Face","","",null,null],[5,"FT_Attach_File","","",null,null],[5,"FT_Attach_Stream","","",null,null],[5,"FT_Reference_Face","","",null,null],[5,"FT_Done_Face","","",null,null],[5,"FT_Select_Size","","",null,null],[5,"FT_Request_Size","","",null,null],[5,"FT_Set_Char_Size","","",null,null],[5,"FT_Set_Pixel_Sizes","","",null,null],[5,"FT_Load_Glyph","","",null,null],[5,"FT_Load_Char","","",null,null],[5,"FT_Set_Transform","","",null,null],[5,"FT_Render_Glyph","","",null,null],[5,"FT_Get_Kerning","","",null,null],[5,"FT_Get_Track_Kerning","","",null,null],[5,"FT_Get_Glyph_Name","","",null,null],[5,"FT_Get_Postscript_Name","","",null,null],[5,"FT_Select_CharMap","","",null,null],[5,"FT_Set_Charmap","","",null,null],[5,"FT_Get_Charmap_Index","","",null,null],[5,"FT_Get_Char_Index","","",null,null],[5,"FT_Get_First_Char","","",null,null],[5,"FT_Get_Next_Char","","",null,null],[5,"FT_Get_Name_Index","","",null,null],[5,"FT_Get_SubGlyph_Info","","",null,null],[5,"FT_Get_FSType_Flags","","",null,null],[5,"FT_Get_Glyph","","",null,null],[5,"FT_Glyph_Copy","","",null,null],[5,"FT_Glyph_Transform","","",null,null],[5,"FT_Glyph_Get_CBox","","",null,null],[5,"FT_Glyph_To_Bitmap","","",null,null],[5,"FT_Done_Glyph","","",null,null],[6,"FT_Byte","","",null,null],[6,"FT_Bytes","","",null,null],[6,"FT_Char","","",null,null],[6,"FT_Int","","",null,null],[6,"FT_UInt","","",null,null],[6,"FT_Int16","","",null,null],[6,"FT_UInt16","","",null,null],[6,"FT_Int32","","",null,null],[6,"FT_UInt32","","",null,null],[6,"FT_Int64","","",null,null],[6,"FT_UInt64","","",null,null],[6,"FT_Short","","",null,null],[6,"FT_UShort","","",null,null],[6,"FT_Long","","",null,null],[6,"FT_ULong","","",null,null],[6,"FT_Bool","","",null,null],[6,"FT_Offset","","",null,null],[6,"FT_PtrDist","","",null,null],[6,"FT_String","","",null,null],[6,"FT_Tag","","",null,null],[6,"FT_Error","","",null,null],[6,"FT_Fixed","","",null,null],[6,"FT_Pointer","","",null,null],[6,"FT_Pos","","",null,null],[6,"FT_FWord","","",null,null],[6,"FT_UFWord","","",null,null],[6,"FT_F2Dot14","","",null,null],[6,"FT_F26Dot6","","",null,null],[6,"FT_Generic_Finalizer","","",null,null],[6,"FT_StreamDesc","","",null,null],[6,"FT_Stream_IoFunc","","",null,null],[6,"FT_Stream_CloseFunc","","",null,null],[6,"FT_Alloc_Func","","",null,null],[6,"FT_Free_Func","","",null,null],[6,"FT_Realloc_Func","","",null,null],[6,"enum_FT_Sfnt_Tag_","","",null,null],[6,"FT_Sfnt_Tag","","",null,null],[6,"FT_Pixel_Mode","","",null,null],[6,"FT_Glyph_Format","","",null,null],[6,"FT_Render_Mode","","",null,null],[6,"FT_Encoding","","",null,null],[6,"FT_Size_Request_Type","","",null,null],[6,"FT_Kerning_Mode","","",null,null],[6,"FT_Glyph_BBox_Mode","","",null,null],[6,"FT_Library","","",null,null],[6,"FT_Face","","",null,null],[6,"FT_Size","","",null,null],[6,"FT_GlyphSlot","","",null,null],[6,"FT_CharMap","","",null,null],[6,"FT_Module","","",null,null],[6,"FT_Driver","","",null,null],[6,"FT_Renderer","","",null,null],[6,"FT_Size_Internal","","",null,null],[6,"FT_SubGlyph","","",null,null],[6,"FT_Slot_Internal","","",null,null],[6,"FT_Size_Request","","",null,null],[6,"FT_Face_Internal","","",null,null],[6,"FT_Stream","","",null,null],[6,"FT_Memory","","",null,null],[6,"FT_ListNode","","",null,null],[6,"FT_Glyph","","",null,null],[6,"FT_BitmapGlyph","","",null,null],[6,"FT_OutlineGlyph","","",null,null],[6,"TT_OS2_Internal","","",null,null],[6,"FT_LibraryRec","","",null,null],[6,"FT_ModuleRec","","",null,null],[6,"FT_DriverRec","","",null,null],[6,"FT_RendererRec","","",null,null],[6,"FT_Size_InternalRec","","",null,null],[6,"FT_SubGlyphRec","","",null,null],[6,"FT_Slot_InternalRec","","",null,null],[6,"FT_Face_InternalRec","","",null,null],[17,"ft_sfnt_head","","",null,null],[17,"ft_sfnt_maxp","","",null,null],[17,"ft_sfnt_os2","","",null,null],[17,"ft_sfnt_hhea","","",null,null],[17,"ft_sfnt_vhea","","",null,null],[17,"ft_sfnt_post","","",null,null],[17,"ft_sfnt_pclt","","",null,null],[17,"ft_sfnt_max","","",null,null],[17,"FT_PIXEL_MODE_NONE","","",null,null],[17,"FT_PIXEL_MODE_MONO","","",null,null],[17,"FT_PIXEL_MODE_GRAY","","",null,null],[17,"FT_PIXEL_MODE_GRAY2","","",null,null],[17,"FT_PIXEL_MODE_GRAY4","","",null,null],[17,"FT_PIXEL_MODE_LCD","","",null,null],[17,"FT_PIXEL_MODE_LCD_V","","",null,null],[17,"FT_PIXEL_MODE_BGRA","","",null,null],[17,"FT_PIXEL_MODE_MAX","","",null,null],[17,"FT_GLYPH_FORMAT_NONE","","",null,null],[17,"FT_GLYPH_FORMAT_COMPOSITE","","",null,null],[17,"FT_GLYPH_FORMAT_BITMAP","","",null,null],[17,"FT_GLYPH_FORMAT_OUTLINE","","",null,null],[17,"FT_GLYPH_FORMAT_PLOTTER","","",null,null],[17,"FT_RENDER_MODE_NORMAL","","",null,null],[17,"FT_RENDER_MODE_LIGHT","","",null,null],[17,"FT_RENDER_MODE_MONO","","",null,null],[17,"FT_RENDER_MODE_LCD","","",null,null],[17,"FT_RENDER_MODE_LCD_V","","",null,null],[17,"FT_RENDER_MODE_MAX","","",null,null],[17,"FT_ENCODING_NONE","","",null,null],[17,"FT_ENCODING_MS_SYMBOL","","",null,null],[17,"FT_ENCODING_UNICODE","","",null,null],[17,"FT_ENCODING_SJIS","","",null,null],[17,"FT_ENCODING_GB2312","","",null,null],[17,"FT_ENCODING_BIG5","","",null,null],[17,"FT_ENCODING_WANSUNG","","",null,null],[17,"FT_ENCODING_JOHAB","","",null,null],[17,"FT_ENCODING_MS_SJIS","","",null,null],[17,"FT_ENCODING_MS_GB2312","","",null,null],[17,"FT_ENCODING_MS_BIG5","","",null,null],[17,"FT_ENCODING_MS_WANSUNG","","",null,null],[17,"FT_ENCODING_MS_JOHAB","","",null,null],[17,"FT_ENCODING_ADOBE_STANDARD","","",null,null],[17,"FT_ENCODING_ADOBE_EXPERT","","",null,null],[17,"FT_ENCODING_ADOBE_CUSTOM","","",null,null],[17,"FT_ENCODING_ADOBE_LATIN_1","","",null,null],[17,"FT_ENCODING_OLD_LATIN_2","","",null,null],[17,"FT_ENCODING_APPLE_ROMAN","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_NOMINAL","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_REAL_DIM","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_BBOX","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_CELL","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_SCALES","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_MAX","","",null,null],[17,"FT_KERNING_DEFAULT","","",null,null],[17,"FT_KERNING_UNFITTED","","",null,null],[17,"FT_KERNING_UNSCALED","","",null,null],[17,"FT_GLYPH_BBOX_UNSCALED","","",null,null],[17,"FT_GLYPH_BBOX_SUBPIXELS","","",null,null],[17,"FT_GLYPH_BBOX_GRIDFIT","","",null,null],[17,"FT_GLYPH_BBOX_TRUNCATE","","",null,null],[17,"FT_GLYPH_BBOX_PIXELS","","",null,null],[17,"FT_FACE_FLAG_SCALABLE","","",null,null],[17,"FT_FACE_FLAG_FIXED_SIZES","","",null,null],[17,"FT_FACE_FLAG_FIXED_WIDTH","","",null,null],[17,"FT_FACE_FLAG_SFNT","","",null,null],[17,"FT_FACE_FLAG_HORIZONTAL","","",null,null],[17,"FT_FACE_FLAG_VERTICAL","","",null,null],[17,"FT_FACE_FLAG_KERNING","","",null,null],[17,"FT_FACE_FLAG_FAST_GLYPHS","","",null,null],[17,"FT_FACE_FLAG_MULTIPLE_MASTERS","","",null,null],[17,"FT_FACE_FLAG_GLYPH_NAMES","","",null,null],[17,"FT_FACE_FLAG_EXTERNAL_STREAM","","",null,null],[17,"FT_FACE_FLAG_HINTER","","",null,null],[17,"FT_FACE_FLAG_CID_KEYED","","",null,null],[17,"FT_FACE_FLAG_TRICKY","","",null,null],[17,"FT_FACE_FLAG_COLOR","","",null,null],[17,"FT_STYLE_FLAG_ITALIC","","",null,null],[17,"FT_STYLE_FLAG_BOLD","","",null,null],[17,"FT_OPEN_MEMORY","","",null,null],[17,"FT_OPEN_STREAM","","",null,null],[17,"FT_OPEN_PATHNAME","","",null,null],[17,"FT_OPEN_DRIVER","","",null,null],[17,"FT_OPEN_PARAMS","","",null,null],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS","","",null,null],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES","","",null,null],[17,"FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID","","",null,null],[17,"FT_SUBGLYPH_FLAG_SCALE","","",null,null],[17,"FT_SUBGLYPH_FLAG_XY_SCALE","","",null,null],[17,"FT_SUBGLYPH_FLAG_2X2","","",null,null],[17,"FT_SUBGLYPH_FLAG_USE_MY_METRICS","","",null,null],[17,"FT_LOAD_DEFAULT","","",null,null],[17,"FT_LOAD_NO_SCALE","","",null,null],[17,"FT_LOAD_NO_HINTING","","",null,null],[17,"FT_LOAD_RENDER","","",null,null],[17,"FT_LOAD_NO_BITMAP","","",null,null],[17,"FT_LOAD_VERTICAL_LAYOUT","","",null,null],[17,"FT_LOAD_FORCE_AUTOHINT","","",null,null],[17,"FT_LOAD_CROP_BITMAP","","",null,null],[17,"FT_LOAD_PEDANTIC","","",null,null],[17,"FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH","","",null,null],[17,"FT_LOAD_NO_RECURSE","","",null,null],[17,"FT_LOAD_IGNORE_TRANSFORM","","",null,null],[17,"FT_LOAD_MONOCHROME","","",null,null],[17,"FT_LOAD_LINEAR_DESIGN","","",null,null],[17,"FT_LOAD_NO_AUTOHINT","","",null,null],[17,"FT_LOAD_COLOR","","",null,null],[17,"FT_LOAD_TARGET_NORMAL","","",null,null],[17,"FT_LOAD_TARGET_LIGHT","","",null,null],[17,"FT_LOAD_TARGET_MONO","","",null,null],[17,"FT_LOAD_TARGET_LCD","","",null,null],[17,"FT_LOAD_TARGET_LCD_V","","",null,null],[17,"FT_FSTYPE_INSTALLABLE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING","","",null,null],[17,"FT_FSTYPE_EDITABLE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_NO_SUBSETTING","","",null,null],[17,"FT_FSTYPE_BITMAP_EMBEDDING_ONLY","","",null,null],[17,"FT_Err_Ok","","",null,null],[17,"FT_Err_Cannot_Open_Resource","","",null,null],[17,"FT_Err_Unknown_File_Format","","",null,null],[17,"FT_Err_Invalid_File_Format","","",null,null],[17,"FT_Err_Invalid_Version","","",null,null],[17,"FT_Err_Lower_Module_Version","","",null,null],[17,"FT_Err_Invalid_Argument","","",null,null],[17,"FT_Err_Unimplemented_Feature","","",null,null],[17,"FT_Err_Invalid_Table","","",null,null],[17,"FT_Err_Invalid_Offset","","",null,null],[17,"FT_Err_Array_Too_Large","","",null,null],[17,"FT_Err_Missing_Module","","",null,null],[17,"FT_Err_Missing_Property","","",null,null],[17,"FT_Err_Invalid_Glyph_Index","","",null,null],[17,"FT_Err_Invalid_Character_Code","","",null,null],[17,"FT_Err_Invalid_Glyph_Format","","",null,null],[17,"FT_Err_Cannot_Render_Glyph","","",null,null],[17,"FT_Err_Invalid_Outline","","",null,null],[17,"FT_Err_Invalid_Composite","","",null,null],[17,"FT_Err_Too_Many_Hints","","",null,null],[17,"FT_Err_Invalid_Pixel_Size","","",null,null],[17,"FT_Err_Invalid_Handle","","",null,null],[17,"FT_Err_Invalid_Library_Handle","","",null,null],[17,"FT_Err_Invalid_Driver_Handle","","",null,null],[17,"FT_Err_Invalid_Face_Handle","","",null,null],[17,"FT_Err_Invalid_Size_Handle","","",null,null],[17,"FT_Err_Invalid_Slot_Handle","","",null,null],[17,"FT_Err_Invalid_CharMap_Handle","","",null,null],[17,"FT_Err_Invalid_Cache_Handle","","",null,null],[17,"FT_Err_Invalid_Stream_Handle","","",null,null],[17,"FT_Err_Too_Many_Drivers","","",null,null],[17,"FT_Err_Too_Many_Extensions","","",null,null],[17,"FT_Err_Out_Of_Memory","","",null,null],[17,"FT_Err_Unlisted_Object","","",null,null],[17,"FT_Err_Cannot_Open_Stream","","",null,null],[17,"FT_Err_Invalid_Stream_Seek","","",null,null],[17,"FT_Err_Invalid_Stream_Skip","","",null,null],[17,"FT_Err_Invalid_Stream_Read","","",null,null],[17,"FT_Err_Invalid_Stream_Operation","","",null,null],[17,"FT_Err_Invalid_Frame_Operation","","",null,null],[17,"FT_Err_Nested_Frame_Access","","",null,null],[17,"FT_Err_Invalid_Frame_Read","","",null,null],[17,"FT_Err_Raster_Uninitialized","","",null,null],[17,"FT_Err_Raster_Corrupted","","",null,null],[17,"FT_Err_Raster_Overflow","","",null,null],[17,"FT_Err_Raster_Negative_Height","","",null,null],[17,"FT_Err_Too_Many_Caches","","",null,null],[17,"FT_Err_Invalid_Opcode","","",null,null],[17,"FT_Err_Too_Few_Arguments","","",null,null],[17,"FT_Err_Stack_Overflow","","",null,null],[17,"FT_Err_Code_Overflow","","",null,null],[17,"FT_Err_Bad_Argument","","",null,null],[17,"FT_Err_Divide_By_Zero","","",null,null],[17,"FT_Err_Invalid_Reference","","",null,null],[17,"FT_Err_Debug_OpCode","","",null,null],[17,"FT_Err_ENDF_In_Exec_Stream","","",null,null],[17,"FT_Err_Nested_DEFS","","",null,null],[17,"FT_Err_Invalid_CodeRange","","",null,null],[17,"FT_Err_Execution_Too_Long","","",null,null],[17,"FT_Err_Too_Many_Function_Defs","","",null,null],[17,"FT_Err_Too_Many_Instruction_Defs","","",null,null],[17,"FT_Err_Table_Missing","","",null,null],[17,"FT_Err_Horiz_Header_Missing","","",null,null],[17,"FT_Err_Locations_Missing","","",null,null],[17,"FT_Err_Name_Table_Missing","","",null,null],[17,"FT_Err_CMap_Table_Missing","","",null,null],[17,"FT_Err_Hmtx_Table_Missing","","",null,null],[17,"FT_Err_Post_Table_Missing","","",null,null],[17,"FT_Err_Invalid_Horiz_Metrics","","",null,null],[17,"FT_Err_Invalid_CharMap_Format","","",null,null],[17,"FT_Err_Invalid_PPem","","",null,null],[17,"FT_Err_Invalid_Vert_Metrics","","",null,null],[17,"FT_Err_Could_Not_Find_Context","","",null,null],[17,"FT_Err_Invalid_Post_Table_Format","","",null,null],[17,"FT_Err_Invalid_Post_Table","","",null,null],[17,"FT_Err_Syntax_Error","","",null,null],[17,"FT_Err_Stack_Underflow","","",null,null],[17,"FT_Err_Ignore","","",null,null],[17,"FT_Err_No_Unicode_Glyph_Name","","",null,null],[17,"FT_Err_Missing_Startfont_Field","","",null,null],[17,"FT_Err_Missing_Font_Field","","",null,null],[17,"FT_Err_Missing_Size_Field","","",null,null],[17,"FT_Err_Missing_Fontboundingbox_Field","","",null,null],[17,"FT_Err_Missing_Chars_Field","","",null,null],[17,"FT_Err_Missing_Startchar_Field","","",null,null],[17,"FT_Err_Missing_Encoding_Field","","",null,null],[17,"FT_Err_Missing_Bbx_Field","","",null,null],[17,"FT_Err_Bbx_Too_Big","","",null,null],[17,"FT_Err_Corrupted_Font_Header","","",null,null],[17,"FT_Err_Corrupted_Font_Glyphs","","",null,null],[17,"FT_Err_Max","","",null,null],[8,"FTErrorMethods","","",null,null],[10,"succeeded","","",26,{"inputs":[{"name":"fterrormethods"}],"output":{"name":"bool"}}],[11,"succeeded","","",27,{"inputs":[{"name":"ft_error"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"ft_vector"}],"output":{"name":"ft_vector"}}],[11,"clone","","",1,{"inputs":[{"name":"ft_bbox"}],"output":{"name":"ft_bbox"}}],[11,"clone","","",2,{"inputs":[{"name":"ft_matrix"}],"output":{"name":"ft_matrix"}}],[11,"clone","","",3,{"inputs":[{"name":"ft_unitvector"}],"output":{"name":"ft_unitvector"}}],[11,"clone","","",7,{"inputs":[{"name":"ft_size_metrics"}],"output":{"name":"ft_size_metrics"}}],[11,"clone","","",9,{"inputs":[{"name":"ft_glyph_metrics"}],"output":{"name":"ft_glyph_metrics"}}],[11,"clone","","",10,{"inputs":[{"name":"ft_parameter"}],"output":{"name":"ft_parameter"}}],[11,"clone","","",12,{"inputs":[{"name":"ft_bitmap_size"}],"output":{"name":"ft_bitmap_size"}}],[11,"clone","","",13,{"inputs":[{"name":"tt_os2"}],"output":{"name":"tt_os2"}}],[11,"clone","","",14,{"inputs":[{"name":"ft_charmaprec"}],"output":{"name":"ft_charmaprec"}}],[11,"clone","","",20,{"inputs":[{"name":"ft_listrec"}],"output":{"name":"ft_listrec"}}],[11,"clone","","",22,{"inputs":[{"name":"ft_size_requestrec"}],"output":{"name":"ft_size_requestrec"}}]],"paths":[[3,"FT_Vector"],[3,"FT_BBox"],[3,"FT_Matrix"],[3,"FT_UnitVector"],[3,"FT_Bitmap"],[3,"FT_Data"],[3,"FT_Generic"],[3,"FT_Size_Metrics"],[3,"FT_Outline"],[3,"FT_Glyph_Metrics"],[3,"FT_Parameter"],[3,"FT_Open_Args"],[3,"FT_Bitmap_Size"],[3,"TT_OS2"],[3,"FT_CharMapRec"],[3,"FT_FaceRec"],[3,"FT_GlyphSlotRec"],[3,"FT_SizeRec"],[3,"FT_StreamRec"],[3,"FT_MemoryRec"],[3,"FT_ListRec"],[3,"FT_ListNodeRec"],[3,"FT_Size_RequestRec"],[3,"FT_GlyphRec"],[3,"FT_BitmapGlyphRec"],[3,"FT_OutlineGlyphRec"],[8,"FTErrorMethods"],[6,"FT_Error"]]};
searchIndex['osmesa_sys'] = {"items":[[0,"","osmesa_sys","",null,null],[3,"OsMesa","","Symbols loaded from a shared library.",null,null],[12,"OSMesaColorClamp","","",0,null],[12,"OSMesaCreateContext","","",0,null],[12,"OSMesaCreateContextExt","","",0,null],[12,"OSMesaDestroyContext","","",0,null],[12,"OSMesaGetColorBuffer","","",0,null],[12,"OSMesaGetCurrentContext","","",0,null],[12,"OSMesaGetDepthBuffer","","",0,null],[12,"OSMesaGetIntegerv","","",0,null],[12,"OSMesaGetProcAddress","","",0,null],[12,"OSMesaMakeCurrent","","",0,null],[12,"OSMesaPixelStore","","",0,null],[3,"osmesa_context","","",null,null],[5,"OSMesaColorClamp","","",null,null],[5,"OSMesaCreateContext","","",null,{"inputs":[{"name":"c_uint"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaCreateContextExt","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_int"},{"name":"c_int"},{"name":"c_int"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaDestroyContext","","",null,null],[5,"OSMesaGetColorBuffer","","",null,null],[5,"OSMesaGetCurrentContext","","",null,{"inputs":[],"output":{"name":"osmesacontext"}}],[5,"OSMesaGetDepthBuffer","","",null,null],[5,"OSMesaGetIntegerv","","",null,null],[5,"OSMesaGetProcAddress","","",null,null],[5,"OSMesaMakeCurrent","","",null,null],[5,"OSMesaPixelStore","","",null,null],[6,"OSMesaContext","","",null,null],[6,"OSMESAproc","","",null,null],[17,"OSMESA_BGRA","","",null,null],[17,"OSMESA_ARGB","","",null,null],[17,"OSMESA_BGR","","",null,null],[17,"OSMESA_RGB_565","","",null,null],[17,"OSMESA_COLOR_INDEX","","",null,null],[17,"OSMESA_RGB","","",null,null],[17,"OSMESA_RGBA","","",null,null],[17,"OSMESA_WIDTH","","",null,null],[17,"OSMESA_HEIGHT","","",null,null],[17,"OSMESA_FORMAT","","",null,null],[17,"OSMESA_TYPE","","",null,null],[17,"OSMESA_MAX_WIDTH","","",null,null],[17,"OSMESA_MAX_HEIGHT","","",null,null],[17,"OSMESA_ROW_LENGTH","","",null,null],[17,"OSMESA_Y_UP","","",null,null],[11,"open","","Tries to open the dynamic library.",0,{"inputs":[{"name":"osmesa"},{"name":"path"}],"output":{"name":"result"}}],[11,"try_loading","","Try loading the static symbols linked to this library.",0,{"inputs":[{"name":"osmesa"}],"output":{"name":"result"}}]],"paths":[[3,"OsMesa"]]};
searchIndex['shared_library'] = {"items":[[0,"","shared_library","",null,null],[4,"LoadingError","","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",1,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",4,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",5,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",6,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",8,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","shared_library::dynamic_library","Returns true if the boxed type is the same as `T`",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",11,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",11,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",11,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",12,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",13,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",13,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::imp","",14,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"get","","",14,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",15,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",15,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",15,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",16,{"inputs":[{"name":"keyinner"}],"output":{"name":"keyinner"}}],[11,"set","","",16,null],[11,"get","","",16,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",17,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",17,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",17,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",17,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",18,null],[11,"name","","Gets the thread's name.",18,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",18,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",18,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",19,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",20,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",22,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",22,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",21,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",21,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",21,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",21,null],[11,"next","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",24,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",24,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",23,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",23,null],[11,"take","","Removes this bucket's key and value from the hashtable.",23,null],[11,"replace","","",23,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",23,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",23,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",23,null],[11,"expect_full","","",25,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",26,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",27,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",28,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",29,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",30,null],[11,"len","","",30,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",31,null],[11,"len","","",31,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"len","","",32,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"len","","",33,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",33,null],[11,"clone","","",27,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",27,null],[11,"clone","std::collections::hash::map","",34,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",35,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",35,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",35,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",35,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",35,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",35,null],[11,"get","","Returns a reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",35,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",35,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",35,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",38,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",35,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"len","","",36,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"len","","",39,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"len","","",40,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"len","","",37,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",38,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"len","","",38,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"len","","",41,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",42,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",43,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",43,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",44,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",35,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",35,null],[11,"clone","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",45,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",46,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",46,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",46,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",46,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",46,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",46,null],[11,"contains","","Returns `true` if the set contains a value.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",46,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",46,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"eq","","",46,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",46,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",46,null],[11,"default","","",46,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",46,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"len","","",47,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"len","","",48,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"len","","",49,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",50,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"clone","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",51,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"clone","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",52,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"clone","","",53,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",53,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"hasher","std::collections::hash::state","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",54,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::linked_list","",55,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",57,{"inputs":[{"name":"rawlink"},{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",57,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",58,null],[11,"iter","","Provides a forward iterator.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",58,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",58,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",58,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",58,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",58,null],[11,"next","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",59,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",58,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",58,null],[11,"extend","","",58,null],[11,"eq","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",58,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",58,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",58,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",58,null],[11,"clone","collections::vec_deque","",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",60,null],[11,"default","","",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",60,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",60,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",60,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",60,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",60,null],[11,"iter","","Returns a front-to-back iterator.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",60,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",60,null],[11,"len","","Returns the number of elements in the `VecDeque`.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",60,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",60,null],[11,"push_back","","Appends an element to the back of a buffer",60,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",60,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",60,null],[11,"retain","","Retains only the elements specified by the predicate.",60,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",60,null],[11,"clone","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",62,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",64,null],[11,"next","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",60,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",60,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",60,null],[11,"index","","",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",60,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",60,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",60,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",60,null],[11,"extend","","",60,null],[11,"fmt","","",60,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","collections::binary_heap","",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"default","","",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",65,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",65,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",65,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",65,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",65,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",65,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",65,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",65,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",65,null],[11,"drop","","",66,null],[11,"clone","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",69,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from_iter","","",65,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",65,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",65,null],[11,"extend","","",65,null],[11,"drop","std::dynamic_lib","",70,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",70,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",70,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",70,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",70,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",70,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",70,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",71,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next","","",72,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"clone","","",73,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",73,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",73,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",74,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"fmt","","",75,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",75,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",76,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"len","","",76,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",77,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"len","","",77,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",78,null],[11,"cmp","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",79,null],[11,"fmt","","",80,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",78,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",78,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_ptr","","Retakes ownership of a CString that was transferred to C.",78,null],[11,"from_raw","","Retakes ownership of a CString that was transferred to C.",78,null],[11,"into_ptr","","Transfers ownership of the string to a C caller.",78,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",78,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",78,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",78,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",79,null],[11,"as_ptr","","Returns the inner pointer to this C string.",79,null],[11,"to_bytes","","Converts this C string to a byte slice.",79,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",79,null],[11,"to_str","","Yields a `&str` slice if the `CStr` contains valid UTF-8.",79,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow<str>`.",79,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",78,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",78,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",80,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",80,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",81,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"eq","std::ffi::c_str","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",79,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",79,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"clone","std::ffi::os_str","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",82,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",82,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",82,null],[11,"from","","",82,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",82,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",82,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",83,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",83,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",82,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",82,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",82,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",82,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",82,null],[11,"eq","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",83,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",83,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",83,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",83,null],[11,"fmt","","",83,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",83,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",83,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",85,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",86,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",87,null],[11,"eq","","",87,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",88,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",88,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",88,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",88,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",88,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",88,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",88,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",88,null],[11,"read_to_end","","",88,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",88,null],[11,"flush","","",88,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",88,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",85,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",85,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",85,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",89,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",89,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",89,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",89,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",89,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",86,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",86,null],[11,"is_dir","","Test whether this file type represents a directory.",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",90,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",91,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",91,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",91,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",91,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",92,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",93,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",93,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",93,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",93,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",93,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",93,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",93,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",93,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",94,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",94,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",94,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",95,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",95,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",95,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",95,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",95,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",95,null],[11,"fill_buf","","",95,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",95,null],[11,"fmt","","",95,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",95,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",97,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",97,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",97,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",97,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",97,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",97,null],[11,"flush","","",97,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",97,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",97,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",96,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",96,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",81,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",96,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",96,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",98,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",98,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",98,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",98,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",98,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",98,null],[11,"flush","","",98,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",99,null],[11,"fmt","std::io::cursor","",100,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",100,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",100,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",100,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",100,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",100,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",100,null],[11,"seek","","",100,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",100,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",100,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",100,null],[11,"read","","",100,null],[11,"read","","",100,null],[11,"fill_buf","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",100,null],[11,"fill_buf","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",100,null],[11,"fill_buf","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",100,null],[11,"write","","",100,null],[11,"flush","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",100,null],[11,"flush","","",100,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",81,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",102,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",81,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",81,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",81,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",81,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",103,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",81,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",81,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","","",2,null],[11,"flush","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",2,null],[11,"write_fmt","","",2,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",2,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",2,null],[11,"read_until","","",2,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",104,null],[11,"write_all","","",104,null],[11,"flush","","",104,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",105,null],[11,"get","","",105,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",106,null],[11,"fill_buf","","",106,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",106,null],[11,"read","","",107,null],[11,"write","","",108,null],[11,"flush","","",108,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",109,null],[11,"write","","",110,null],[11,"flush","","",110,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",111,null],[11,"flush","","",111,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",112,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",113,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",113,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",113,null],[11,"read_to_end","","",113,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",113,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",114,null],[11,"read_to_end","","",114,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",114,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",114,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",115,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",115,null],[11,"flush","","",115,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",115,null],[11,"write_fmt","","",115,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",116,null],[11,"flush","","",116,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",117,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",117,null],[11,"flush","","",117,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",117,null],[11,"write_fmt","","",117,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",118,null],[11,"flush","","",118,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",119,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",119,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",120,null],[11,"flush","","",120,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",121,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",122,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",122,null],[11,"fill_buf","","",122,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",122,null],[11,"read","","",123,null],[11,"next","","",124,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",125,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",126,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",125,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",125,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",125,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",127,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",128,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",129,null],[11,"fmt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",130,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",130,null],[11,"clone","","",130,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",130,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",131,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",131,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",129,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",131,null],[11,"partial_cmp","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",132,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",132,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",132,null],[11,"partial_cmp","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",133,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",133,null],[11,"eq","","",133,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",133,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",134,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",135,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",133,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",134,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",135,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",134,null],[11,"hash","","",135,null],[11,"to_socket_addrs","","",133,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",134,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",135,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",136,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",136,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",136,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",136,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",136,null],[11,"read_to_end","","",136,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",136,null],[11,"flush","","",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",137,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",138,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",137,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",139,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",139,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",139,null],[11,"local_addr","","Returns the socket address that this socket was created from.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",139,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",139,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",129,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",131,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",132,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",133,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",140,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",140,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::net","",141,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",141,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",142,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"as_raw_fd","std::fs","",88,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",88,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",88,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",136,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",137,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",139,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",136,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",137,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",139,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",82,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",83,null],[11,"as_bytes","","",83,null],[11,"mode","std::fs","",86,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",86,null],[11,"from_mode","","",86,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",85,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"dev","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"is_block_device","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",87,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",91,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",94,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",143,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",143,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",143,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"signal","","",144,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",145,{"inputs":[{"name":"stdio"},{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",146,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",147,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",148,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",146,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",147,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",148,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"eq","std::path","",149,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",149,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",149,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",149,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",149,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",149,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",149,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",149,null],[11,"fmt","","",149,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",149,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",150,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",150,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",150,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",150,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",150,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",150,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",150,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",151,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",151,null],[11,"clone","","",151,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",151,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",151,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",151,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",151,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",151,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",152,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",152,null],[11,"cmp","","",152,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",152,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",152,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",152,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",152,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",152,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",152,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",152,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",153,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",154,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",153,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",153,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",153,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",153,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",154,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",154,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",154,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",154,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",154,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",153,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",153,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",153,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",153,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",155,null],[11,"clone","","",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",155,null],[11,"pop","","Truncate `self` to `self.parent()`.",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",155,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",155,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",155,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",155,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",155,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",155,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",155,null],[11,"fmt","","",155,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",93,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",93,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",93,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",93,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",93,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",93,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",93,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",93,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",93,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",93,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",93,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",93,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",93,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",93,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",93,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",93,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",93,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",93,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",93,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",93,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",93,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",93,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"deref","","",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",93,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",155,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",155,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",93,null],[11,"as_ref","","",93,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",93,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",93,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",93,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",83,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",82,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",155,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",146,null],[11,"flush","","",146,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",147,null],[11,"read","","",148,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",143,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",143,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",143,null],[11,"env","","Inserts or updates an environment variable mapping.",143,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",143,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",143,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",143,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",143,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",143,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",143,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",143,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",143,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",143,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",143,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",157,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",145,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",145,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",145,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",144,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",144,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",144,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",144,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",144,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",158,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",158,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",158,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",158,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",159,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",159,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",159,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",159,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",160,null],[11,"new","std::sync::mpsc::oneshot","",161,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",161,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",161,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",161,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",161,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",161,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",161,null],[11,"drop_port","","",161,null],[11,"can_recv","","",161,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",161,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",161,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",161,null],[11,"eq","std::sync::mpsc::select","",162,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",163,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",163,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",163,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",164,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",164,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",164,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",164,null],[11,"drop","","",163,null],[11,"drop","","",164,null],[11,"next","","",165,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",166,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",166,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",166,null],[11,"send","","",166,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",166,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",166,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",166,null],[11,"drop_chan","","",166,null],[11,"drop_port","","",166,null],[11,"can_recv","","",166,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",166,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",166,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",166,null],[11,"new","std::sync::mpsc::stream","",167,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",167,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",167,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",167,null],[11,"drop_port","","",167,null],[11,"can_recv","","",167,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",167,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",167,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",167,null],[11,"fmt","std::sync::mpsc::sync","",168,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",169,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",169,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",169,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",169,null],[11,"drop_chan","","",169,null],[11,"drop_port","","",169,null],[11,"can_recv","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",169,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",169,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",169,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",170,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",170,null],[11,"pop","","Pops some data from this queue.",170,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",170,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",171,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",171,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",171,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",171,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",171,null],[11,"clone","std::sync::mpsc","",172,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",172,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",173,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",173,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",174,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",174,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",175,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",175,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",176,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",176,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",176,null],[11,"send","","Sends a value on this synchronous channel.",177,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",177,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",177,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",178,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",178,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",178,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",179,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",180,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",178,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",178,null],[11,"fmt","","",172,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",172,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",172,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",172,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",175,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",175,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",175,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",173,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",173,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",173,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",174,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",174,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",174,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",181,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",181,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",182,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",183,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",183,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",183,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",183,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",184,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",184,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",184,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",184,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",184,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",184,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",184,null],[11,"drop","","",184,null],[11,"new","","Creates a new condition variable",185,{"inputs":[{"name":"staticcondvar"}],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",185,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",185,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",185,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",185,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",185,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",185,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",185,null],[11,"drop","std::sync::mutex","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",186,{"inputs":[{"name":"staticmutex"}],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",186,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",186,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",186,null],[11,"deref","","",187,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",187,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",187,null],[11,"new","std::sync::once","Creates a new `Once` value.",188,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",188,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",189,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",189,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"drop","","",189,null],[11,"fmt","","",189,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",190,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",190,null],[11,"deref","","",191,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",192,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",192,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",191,null],[11,"drop","","",192,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",193,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",193,null],[11,"release","","Release a resource from this semaphore.",193,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",193,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",194,null],[11,"default","core::sync::atomic","",195,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",196,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",197,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",198,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",199,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",195,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",195,null],[11,"swap","","Stores a value into the bool, returning the old value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",195,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",196,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",196,null],[11,"swap","","Stores a value into the isize, returning the old value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",196,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",197,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",197,null],[11,"swap","","Stores a value into the usize, returning the old value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",197,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",198,null],[11,"load","","Loads a value from the pointer.",198,null],[11,"store","","Stores a value into the pointer.",198,null],[11,"swap","","Stores a value into the pointer, returning the old value.",198,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",198,null],[11,"fmt","","",197,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",196,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",195,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",198,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::time::duration","",200,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",200,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Crates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",200,{"inputs":[{"name":"duration"},{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",200,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",200,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",200,{"inputs":[{"name":"duration"},{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",200,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",200,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",200,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",200,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",200,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",201,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",201,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",201,null],[11,"wait","","Waits for a signal on the specified mutex.",201,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",201,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",201,null],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",202,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",202,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",202,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",202,null],[11,"destroy","","Deallocates all resources associated with this mutex.",202,null],[11,"next","std::sys_common::net","",203,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",203,null],[11,"connect","","",204,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",204,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",204,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",204,null],[11,"write","","",204,null],[11,"peer_addr","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",204,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",204,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",204,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",205,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",205,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",205,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",206,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",206,null],[11,"send_to","","",206,null],[11,"duplicate","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",206,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",206,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",206,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",206,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",207,{"inputs":[{"name":"flag"}],"output":{"name":"flag"}}],[11,"borrow","","",207,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",207,null],[11,"get","","",207,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",208,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",208,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",208,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",208,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",208,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",208,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",208,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",209,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",209,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",209,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",209,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",209,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",210,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",210,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",210,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",210,null],[11,"fmt","","",210,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",211,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",211,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",212,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",212,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",212,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",212,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",212,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",212,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",212,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",212,null],[11,"new","std::sys_common::thread_local","",213,{"inputs":[{"name":"statickey"},{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",213,null],[11,"set","","Sets this TLS key to a new value.",213,null],[11,"destroy","","Deallocates this OS TLS key.",213,null],[11,"new","","Creates a new managed OS TLS key.",214,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",214,null],[11,"set","","See StaticKey::set",214,null],[11,"drop","","",214,null],[11,"clone","std::sys_common::wtf8","",215,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",215,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",215,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",215,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",215,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",215,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",215,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",215,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",215,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",217,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",217,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an new, empty WTF-8 string.",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates an new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",216,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",216,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",216,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",216,null],[11,"as_slice","","",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",216,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",216,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",216,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",216,null],[11,"push","","Append a code point at the end of the string.",216,null],[11,"truncate","","Shortens a string to the specified length.",216,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",216,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",216,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",216,null],[11,"eq","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",217,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",217,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",217,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",217,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",217,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",218,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",218,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",218,null],[11,"clone","","",219,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",219,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",219,null],[11,"hash","","",215,null],[11,"hash","","",216,null],[11,"hash","","",217,null],[11,"is_ascii","","",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",217,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",217,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",217,null],[11,"make_ascii_lowercase","","",217,null],[11,"new","std::sys::condvar","",220,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",220,null],[11,"notify_all","","",220,null],[11,"wait","","",220,null],[11,"wait_timeout","","",220,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",220,null],[11,"new","std::sys::fd","",221,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",221,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",221,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",221,null],[11,"write","","",221,null],[11,"set_cloexec","","",221,null],[11,"drop","","",221,null],[11,"clone","std::sys::fs","",222,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",223,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",223,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",223,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",223,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",224,null],[11,"eq","","",224,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",224,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",224,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",225,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",225,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",225,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"as_raw_stat","std::fs","",89,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",223,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",223,null],[11,"mode","","",223,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",224,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",224,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",224,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",224,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",226,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",227,null],[11,"path","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",228,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",222,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",222,null],[11,"write","","",222,null],[11,"append","","",222,null],[11,"truncate","","",222,null],[11,"create","","",222,null],[11,"mode","","",222,null],[11,"open","","",229,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",229,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",229,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",229,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",229,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",229,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",229,null],[11,"write","","",229,null],[11,"flush","","",229,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",229,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",229,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",229,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",230,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",230,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",230,null],[11,"fmt","","",229,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",231,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",231,null],[11,"unlock","","",231,null],[11,"try_lock","","",231,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",231,null],[11,"uninitialized","","",232,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",232,null],[11,"lock","","",232,null],[11,"try_lock","","",232,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",232,null],[11,"destroy","","",232,null],[11,"new","std::sys::net","",233,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",233,null],[11,"duplicate","","",233,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",233,null],[11,"set_timeout","","",233,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",233,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"next","std::sys::os","",234,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",234,null],[11,"fmt","","",235,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",235,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",235,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",236,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",236,null],[11,"len","","",236,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",237,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"hash","std::sys::os_str","",238,null],[11,"clone","","",238,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",239,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",238,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",238,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",238,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",238,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",238,null],[11,"from_str","","",239,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",239,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",239,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",239,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",240,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",240,null],[11,"write","","",240,null],[11,"raw","","",240,{"inputs":[{"name":"anonpipe"}],"output":{"name":"i32"}}],[11,"fd","","",240,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",240,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",241,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",241,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",241,null],[11,"args","","",241,null],[11,"env","","",241,null],[11,"env_remove","","",241,null],[11,"env_clear","","",241,null],[11,"cwd","","",241,null],[11,"fmt","","",242,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",242,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",242,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",242,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",242,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",242,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",242,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",243,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",243,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"id","","",243,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"wait","","",243,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",243,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"new","std::sys::rwlock","",244,{"inputs":[{"name":"rwlock"}],"output":{"name":"rwlock"}}],[11,"read","","",244,null],[11,"try_read","","",244,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",244,null],[11,"try_write","","",244,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",244,null],[11,"write_unlock","","",244,null],[11,"destroy","","",244,null],[11,"new","std::sys::stack_overflow","",245,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",245,null],[11,"new","std::sys::thread","",246,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",246,null],[11,"set_name","","",246,null],[11,"sleep","","",246,null],[11,"join","","",246,null],[11,"drop","","",246,null],[11,"now","std::sys::time::inner","",247,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"new","std::sys::stdio","",248,{"inputs":[{"name":"stdin"}],"output":{"name":"result"}}],[11,"read","","",248,null],[11,"new","","",249,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write","","",249,null],[11,"new","","",250,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write","","",250,null],[11,"write","","",250,null],[11,"flush","","",250,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::rt::libunwind","",251,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",252,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"clone","std::rt::dwarf::eh","",253,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::rt::dwarf","",254,null],[11,"read","","",254,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",254,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",254,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",255,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",255,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",255,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",255,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",256,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",256,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",256,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",256,null],[11,"clone","std::rand","",257,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",257,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",257,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",257,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",257,null],[11,"from_seed","","",257,null],[11,"reseed","","",258,null],[11,"clone","","",259,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",259,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",259,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",259,null],[11,"new","core::ptr","Creates a new `Unique`.",260,null],[11,"get","","Dereferences the content.",260,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",260,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",260,null],[11,"fmt","","",260,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::ops","",261,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",261,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",261,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",261,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",262,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",262,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",262,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",262,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",263,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",263,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",263,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",263,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",264,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",264,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",264,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",264,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::result","",265,null],[11,"fmt","","",265,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",265,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",265,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",265,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",265,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",265,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",265,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",265,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",265,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",265,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",265,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",265,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",265,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",265,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",265,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",265,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",265,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",265,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",265,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",265,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",265,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",265,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",265,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",266,null],[11,"next_back","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",266,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",267,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",267,null],[11,"next_back","","",267,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",268,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",268,null],[11,"next_back","","",268,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",265,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",104,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",104,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",104,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",104,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",104,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",104,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",104,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",104,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",104,null],[11,"as_slice","","Extracts a slice containing the entire vector.",104,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",104,null],[11,"set_len","","Sets the length of a vector.",104,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",104,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",104,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",104,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",104,null],[11,"push","","Appends an element to the back of a collection.",104,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",104,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",104,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",104,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",104,null],[11,"len","","Returns the number of elements in the vector.",104,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",104,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",104,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",104,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",104,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",104,null],[11,"clone","","",104,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",104,null],[11,"hash","","",104,null],[11,"index","","",104,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",104,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",104,null],[11,"index","","",104,null],[11,"index","","",104,null],[11,"index","","",104,null],[11,"index_mut","","",104,null],[11,"index_mut","","",104,null],[11,"index_mut","","",104,null],[11,"index_mut","","",104,null],[11,"deref","","",104,null],[11,"deref_mut","","",104,null],[11,"from_iter","","",104,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",104,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",104,null],[11,"extend","","",104,null],[11,"eq","","",104,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","collections::borrow","",269,null],[11,"ne","","",269,null],[11,"eq","","",269,null],[11,"ne","","",269,null],[11,"eq","","",269,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",269,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"partial_cmp","","",104,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",104,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",104,null],[11,"default","","",104,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",104,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",104,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",104,null],[11,"from","","",104,null],[11,"from","","",104,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",269,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",104,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",270,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"count","","",270,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",270,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",270,null],[11,"next","","",271,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",271,null],[11,"next_back","","",271,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",271,null],[11,"clone","core::raw","",272,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",273,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"fmt","core::cmp","",274,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",274,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",274,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",274,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",274,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",274,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",274,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"borrow","alloc::boxed","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow","alloc::rc","",275,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",276,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",269,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",269,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",269,null],[11,"into_owned","","Extracts the owned data.",269,null],[11,"deref","","",269,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",269,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",269,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",269,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",269,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",269,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",269,null],[11,"into_cow","","",269,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",269,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"clone","core::fmt::rt::v1","",277,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",278,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",279,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",279,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",279,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",280,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",281,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"clone","collections::str","",282,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",282,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",282,null],[11,"borrow","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",283,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",283,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",283,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",285,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",286,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",287,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",288,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",289,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",290,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",291,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",291,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",289,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",292,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",292,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",293,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",293,null],[11,"matching","","",293,null],[11,"use_early_reject","","",294,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",294,null],[11,"matching","","",294,null],[11,"clone","alloc::boxed","",295,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",296,null],[11,"make_place","","",296,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",296,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",2,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",295,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",296,null],[11,"new","","Allocates memory on the heap and then moves `x` into it.",2,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",2,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",2,null],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",2,null],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",297,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",297,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",297,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",297,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",297,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",297,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",297,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",298,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",298,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",298,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",298,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",299,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",299,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",299,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",299,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",299,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",300,null],[11,"clone","","",300,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",301,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",301,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",301,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",301,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",302,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",302,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",303,null],[11,"deref","","",302,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",302,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",304,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",304,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",304,null],[11,"clone","core::iter","",305,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",305,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",305,null],[11,"next_back","","",305,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",306,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",306,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",306,null],[11,"next_back","","",306,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",307,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",307,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",307,null],[11,"clone","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",308,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",308,null],[11,"next_back","","",308,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",309,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",309,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",309,null],[11,"next_back","","",309,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",310,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",310,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",310,null],[11,"next_back","","",310,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",311,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",311,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",311,null],[11,"next_back","","",311,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",312,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",312,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",312,null],[11,"next_back","","",312,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",313,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",313,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",313,null],[11,"nth","","",313,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",313,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",313,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",314,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",314,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",314,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",314,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",314,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",314,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",314,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",314,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",315,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",315,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",315,null],[11,"clone","","",316,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",316,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",316,null],[11,"clone","","",317,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",317,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",317,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",317,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",317,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",317,null],[11,"clone","","",318,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",318,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",318,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",318,null],[11,"clone","","",319,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",319,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",319,null],[11,"clone","","",320,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",320,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",320,null],[11,"next_back","","",320,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",321,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",321,null],[11,"next_back","","",321,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",322,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",322,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",322,null],[11,"next_back","","",322,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",323,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",263,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",262,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",323,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",323,null],[11,"clone","","",324,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",324,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",324,null],[11,"next_back","","",324,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",323,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",323,null],[11,"next","core::ops","",262,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",262,null],[11,"next_back","","",262,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",263,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",325,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",325,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",325,null],[11,"next_back","","",325,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",326,null],[11,"next_back","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",326,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",327,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",327,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",327,null],[11,"next_back","","",327,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",327,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"fmt","core::simd","",328,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",328,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",329,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",329,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",330,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",330,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",331,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",331,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",332,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",332,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",333,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",333,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",334,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",334,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",335,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",335,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",336,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",336,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",337,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",337,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"add","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"add","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"add","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"add","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"add","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"add","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"add","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"add","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"add","","",336,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"add","","",337,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"sub","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"sub","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"sub","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"sub","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"sub","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"sub","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"sub","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"sub","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"sub","","",336,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"sub","","",337,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"mul","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"mul","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"mul","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"mul","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"mul","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"mul","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"mul","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"mul","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"mul","","",336,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"mul","","",337,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"div","","",336,{"inputs":[{"name":"f32x4"},{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"div","","",337,{"inputs":[{"name":"f64x2"},{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"shl","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shl","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shl","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shl","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shl","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shl","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shl","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shl","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"shr","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"shr","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"shr","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"shr","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"shr","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"shr","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"shr","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"shr","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitand","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitand","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitand","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitand","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitand","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitand","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitand","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitand","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitor","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitor","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitor","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitor","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitor","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitor","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitor","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitor","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"bitxor","","",332,{"inputs":[{"name":"u8x16"},{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"bitxor","","",333,{"inputs":[{"name":"u16x8"},{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"bitxor","","",334,{"inputs":[{"name":"u32x4"},{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"bitxor","","",335,{"inputs":[{"name":"u64x2"},{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"bitxor","","",328,{"inputs":[{"name":"i8x16"},{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"bitxor","","",329,{"inputs":[{"name":"i16x8"},{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"bitxor","","",330,{"inputs":[{"name":"i32x4"},{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"bitxor","","",331,{"inputs":[{"name":"i64x2"},{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"cmp","collections::string","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",84,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",84,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",84,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",84,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",84,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",84,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",84,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",84,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",84,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",84,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",84,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",84,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",84,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",84,null],[11,"push","","Adds the given character to the end of the string.",84,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",84,null],[11,"truncate","","Shortens a string to the specified length.",84,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",84,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",84,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",84,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",84,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",84,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",84,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",84,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",84,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts the string into `Box<str>`.",84,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_boxed_slice","","Converts the string into `Box<str>`.",84,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",84,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",84,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",84,null],[11,"extend","","",84,null],[11,"extend","","",84,null],[11,"eq","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",269,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",269,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",84,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",84,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",84,null],[11,"add","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",84,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",84,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",84,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",84,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",84,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",84,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",84,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",84,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"eq","","",338,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",338,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",338,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",338,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"from_str","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",84,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",84,null],[11,"from","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",269,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",269,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",84,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",84,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",84,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",84,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",339,null],[11,"next","","",339,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",339,null],[11,"next_back","","",339,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"fmt","shared_library::dynamic_library","",340,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",340,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",340,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",340,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",340,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",340,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",340,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",340,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",341,null],[11,"fmt","","",341,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",341,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",341,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",341,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"borrow","collections::vec","",104,null],[11,"borrow_mut","","",104,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",275,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",275,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",275,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",275,null],[11,"clone","","Makes a clone of the `Rc<T>`.",275,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",275,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",275,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",275,null],[11,"fmt","","",275,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",275,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",275,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",342,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",342,null],[11,"clone","","Makes a clone of the `Weak<T>`.",342,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",342,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",343,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",343,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",343,null],[11,"finish","","",343,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",343,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",343,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"hash","core::option","",344,null],[11,"fmt","","",344,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",344,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",344,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",344,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",344,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",344,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",344,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",344,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",344,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",344,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",344,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",344,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",344,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",344,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",344,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",344,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",344,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",344,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",345,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",345,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",345,null],[11,"next_back","","",345,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",346,null],[11,"next_back","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",346,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",347,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",347,null],[11,"next_back","","",347,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",348,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",348,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",348,null],[11,"next_back","","",348,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",344,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"hash","core::marker","",349,null],[11,"eq","","",349,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",349,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",349,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",349,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"next","rustc_unicode::char","",350,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",351,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",352,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"drop","shared_library::dynamic_library","",353,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",353,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",353,{"inputs":[{"name":"dynamiclibrary"},{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",353,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",353,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",353,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",353,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","shared_library","",0,{"inputs":[{"name":"loadingerror"}],"output":{"name":"loadingerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"loadingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"shared_library!","","",null,null]],"paths":[[4,"LoadingError"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"String"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"Metadata"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Vec"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"FileAttr"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"EHContext"],[3,"DwarfReader"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Unique"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"Slice"],[3,"TraitObject"],[4,"Ordering"],[3,"Rc"],[3,"Arc"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"ParseError"],[3,"Drain"],[8,"Any"],[3,"TypeId"],[3,"Weak"],[3,"SipHasher"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"PhantomData"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DynamicLibrary"]]};
searchIndex['libz_sys'] = {"items":[[0,"","libz_sys","",null,null],[3,"gz_header","","",null,null],[12,"text","","",0,null],[12,"time","","",0,null],[12,"xflags","","",0,null],[12,"os","","",0,null],[12,"extra","","",0,null],[12,"extra_len","","",0,null],[12,"extra_max","","",0,null],[12,"name","","",0,null],[12,"name_max","","",0,null],[12,"comment","","",0,null],[12,"comm_max","","",0,null],[12,"hcrc","","",0,null],[12,"done","","",0,null],[3,"z_stream","","",null,null],[12,"next_in","","",1,null],[12,"avail_in","","",1,null],[12,"total_in","","",1,null],[12,"next_out","","",1,null],[12,"avail_out","","",1,null],[12,"total_out","","",1,null],[12,"msg","","",1,null],[12,"state","","",1,null],[12,"zalloc","","",1,null],[12,"zfree","","",1,null],[12,"opaque","","",1,null],[12,"data_type","","",1,null],[12,"adler","","",1,null],[12,"reserved","","",1,null],[4,"gzFile_s","","",null,null],[4,"internal_state","","",null,null],[5,"adler32","","",null,null],[5,"adler32_combine","","",null,null],[5,"compress","","",null,null],[5,"compress2","","",null,null],[5,"compressBound","","",null,null],[5,"crc32","","",null,null],[5,"crc32_combine","","",null,null],[5,"deflate","","",null,null],[5,"deflateBound","","",null,null],[5,"deflateCopy","","",null,null],[5,"deflateEnd","","",null,null],[5,"deflateInit","","",null,null],[5,"deflateInit2","","",null,null],[5,"deflateParams","","",null,null],[5,"deflatePending","","",null,null],[5,"deflatePrime","","",null,null],[5,"deflateReset","","",null,null],[5,"deflateSetDictionary","","",null,null],[5,"deflateSetHeader","","",null,null],[5,"deflateTune","","",null,null],[5,"gzbuffer","","",null,null],[5,"gzdirect","","",null,null],[5,"gzdopen","","",null,null],[5,"gzclearerr","","",null,null],[5,"gzclose","","",null,null],[5,"gzclose_r","","",null,null],[5,"gzclose_w","","",null,null],[5,"gzeof","","",null,null],[5,"gzerror","","",null,null],[5,"gzflush","","",null,null],[5,"gzgetc","","",null,null],[5,"gzgets","","",null,null],[5,"gzoffset","","",null,null],[5,"gzopen","","",null,null],[5,"gzputc","","",null,null],[5,"gzputs","","",null,null],[5,"gzread","","",null,null],[5,"gzrewind","","",null,null],[5,"gzseek","","",null,null],[5,"gzsetparams","","",null,null],[5,"gztell","","",null,null],[5,"gzungetc","","",null,null],[5,"gzwrite","","",null,null],[5,"inflate","","",null,null],[5,"inflateBack","","",null,null],[5,"inflateBackEnd","","",null,null],[5,"inflateBackInit","","",null,null],[5,"inflateCopy","","",null,null],[5,"inflateEnd","","",null,null],[5,"inflateGetDictionary","","",null,null],[5,"inflateGetHeader","","",null,null],[5,"inflateInit","","",null,null],[5,"inflateInit2","","",null,null],[5,"inflateMark","","",null,null],[5,"inflatePrime","","",null,null],[5,"inflateReset","","",null,null],[5,"inflateReset2","","",null,null],[5,"inflateSetDictionary","","",null,null],[5,"inflateSync","","",null,null],[5,"uncompress","","",null,null],[5,"zlibCompileFlags","","",null,null],[5,"zlibVersion","","",null,null],[6,"alloc_func","","",null,null],[6,"Bytef","","",null,null],[6,"free_func","","",null,null],[6,"gzFile","","",null,null],[6,"in_func","","",null,null],[6,"out_func","","",null,null],[6,"uInt","","",null,null],[6,"uLong","","",null,null],[6,"uLongf","","",null,null],[6,"voidp","","",null,null],[6,"voidpc","","",null,null],[6,"voidpf","","",null,null],[6,"z_off_t","","",null,null],[6,"gz_headerp","","",null,null],[6,"z_streamp","","",null,null],[17,"Z_NO_FLUSH","","",null,null],[17,"Z_PARTIAL_FLUSH","","",null,null],[17,"Z_SYNC_FLUSH","","",null,null],[17,"Z_FULL_FLUSH","","",null,null],[17,"Z_FINISH","","",null,null],[17,"Z_BLOCK","","",null,null],[17,"Z_TREES","","",null,null],[17,"Z_OK","","",null,null],[17,"Z_STREAM_END","","",null,null],[17,"Z_NEED_DICT","","",null,null],[17,"Z_ERRNO","","",null,null],[17,"Z_STREAM_ERROR","","",null,null],[17,"Z_DATA_ERROR","","",null,null],[17,"Z_MEM_ERROR","","",null,null],[17,"Z_BUF_ERROR","","",null,null],[17,"Z_VERSION_ERROR","","",null,null],[17,"Z_NO_COMPRESSION","","",null,null],[17,"Z_BEST_SPEED","","",null,null],[17,"Z_BEST_COMPRESSION","","",null,null],[17,"Z_DEFAULT_COMPRESSION","","",null,null],[17,"Z_FILTERED","","",null,null],[17,"Z_HUFFMAN_ONLY","","",null,null],[17,"Z_RLE","","",null,null],[17,"Z_FIXED","","",null,null],[17,"Z_DEFAULT_STRATEGY","","",null,null],[17,"Z_BINARY","","",null,null],[17,"Z_TEXT","","",null,null],[17,"Z_ASCII","","",null,null],[17,"Z_UNKNOWN","","",null,null],[17,"Z_DEFLATED","","",null,null]],"paths":[[3,"gz_header"],[3,"z_stream"]]};
searchIndex['vecmath'] = {"items":[[0,"","vecmath","A simple and generic library for vector math.",null,null],[5,"col_mat3x2_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"col_mat3_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat4_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat2x3_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3x4_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat4_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat3x2_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"col_mat3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"col_mat4x3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"col_mat4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"row_mat2x3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"row_mat3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"row_mat3x4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"row_mat4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"mat2x3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix2x3"}}],[5,"mat3x2_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3x2"}}],[5,"mat3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3"}}],[5,"mat3x4_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3x4"}}],[5,"mat4x3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix4x3"}}],[5,"mat4_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix4"}}],[5,"vec2_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_add","","Adds two vectors.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_add","","Adds two vectors.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_add","","Adds two vectors.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_cross","","Computes the cross product.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_cross","","Computes the cross product.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec2_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector2"},{"name":"t"}],"output":{"name":"vector2"}}],[5,"vec3_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector3"},{"name":"t"}],"output":{"name":"vector3"}}],[5,"vec4_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector4"},{"name":"t"}],"output":{"name":"vector4"}}],[5,"vec2_neg","","Negates the vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_neg","","Negates the vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_neg","","Negates the vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec3_dot_vec2","","Computes transformed vector component.",null,{"inputs":[{"name":"vector3"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec4_dot_vec3","","Computes transformed vector component.",null,{"inputs":[{"name":"vector4"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec3_dot_pos2","","Computes transformed position component.",null,{"inputs":[{"name":"vector3"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec4_dot_pos3","","Computes transformed position component.",null,{"inputs":[{"name":"vector4"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"row_mat2x3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"col_mat2x3_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"row_mat3x2_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3x2_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3x4_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3x4_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat4x3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat4x3_row","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat4_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat4_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"mat2x3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix3x2"}}],[5,"mat3x2_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix2x3"}}],[5,"mat3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix4x3"}}],[5,"mat4x3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix3x4"}}],[5,"mat4_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"col_mat3_transform","","Transforms a 3D vector through a matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4_transform","","Transforms a 4D vector through a matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"row_mat3_transform","","Transforms a 3D vector through a matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"row_mat4_transform","","Transforms a 4D vector through a matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"row_mat2x3_transform_pos2","","Transforms a 2D position through matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3x2_transform_pos2","","Transforms a 2D position through matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3_transform_pos2","","Transforms a 2D position through row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3_transform_pos2","","Transforms a 2D position through column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3x4_transform_pos3","","Transforms a 3D position through matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_transform_pos3","","Transforms a 3D position through matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"row_mat2x3_transform_vec2","","Transforms a 2D vector through matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3x2_transform_vec2","","Transforms a 2D vector through matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3_transform_vec2","","Transforms a 2D vector through row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3_transform_vec2","","Transforms a 2D vector through column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3x4_transform_vec3","","Transforms a 3D vector through matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_transform_vec3","","Transforms a 3D vector through matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"mat2x3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"t"}}],[5,"mat3x2_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"t"}}],[5,"mat3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"t"}}],[5,"mat3x4_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"t"}}],[5,"mat4x3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"t"}}],[5,"mat4_det","","Computes the determinant of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"t"}}],[5,"mat2x3_inv_det","","Computes inverse determinant of a 2x3 matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"t"}}],[5,"mat3x2_inv_det","","Computes inverse determinant of a 3x2 matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"t"}}],[5,"mat3_inv_det","","Computes inverse determinant of a 3x3 matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"t"}}],[5,"mat3x4_inv_det","","Computes inverse determinant of a 3x4 matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"t"}}],[5,"mat4x3_inv_det","","Computes inverse determinant of a 4x3 matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"t"}}],[5,"mat4_inv_det","","Computes the inverse determinant of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"t"}}],[5,"mat2x3_inv","","Computes the inverse of a 2x3 matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_inv","","Computes the inverse of a 3x2 matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_inv","","Computes the inverse of a 3x3 matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_inv","","Computes the inverse of a 3x4 matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_inv","","Computes the inverse of a 4x3 matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_inv","","Computes the inverse of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[0,"traits","","Various useful traits",null,null],[6,"Vector2","","A 2D vector.",null,null],[6,"Vector3","","A 3D vector.",null,null],[6,"Vector4","","A 4D vector.",null,null],[6,"Matrix2x3","","A 2x3 matrix.",null,null],[6,"Matrix3x2","","A 3x2 matrix.",null,null],[6,"Matrix3","","A 3x3 matrix.",null,null],[6,"Matrix3x4","","A 3x4 matrix.",null,null],[6,"Matrix4x3","","A 4x3 matrix.",null,null],[6,"Matrix4","","A 4x4 matrix.",null,null]],"paths":[]};
searchIndex['xml'] = {"items":[[0,"","xml","This crate currently provides almost XML 1.0/1.1-compliant pull parser.",null,null],[0,"macros","","Contains several macros used in this crate.",null,null],[0,"name","","",null,null],[3,"Name","xml::name","Represents a qualified XML name.",null,null],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",0,null],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",0,null],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",0,null],[3,"OwnedName","","An owned variant of `Name`.",null,null],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",1,null],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",1,null],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",1,null],[11,"fmt","","",0,{"inputs":[{"name":"name"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"name"}],"output":{"name":"name"}}],[11,"fmt","","",0,{"inputs":[{"name":"name"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_owned","","Returns an owned variant of the qualified name.",0,{"inputs":[{"name":"name"}],"output":{"name":"ownedname"}}],[11,"local","","Returns a new `Name` instance representing plain local name.",0,{"inputs":[{"name":"name"},{"name":"str"}],"output":{"name":"name"}}],[11,"qualified","","Returns a new `Name` instance representing a qualified name with or without a prefix and\nwith a namespace URI.",0,{"inputs":[{"name":"name"},{"name":"str"},{"name":"str"},{"name":"option"}],"output":{"name":"name"}}],[11,"to_repr","","Returns correct XML representation of this local name and prefix.",0,{"inputs":[{"name":"name"}],"output":{"name":"string"}}],[11,"fmt","","",1,{"inputs":[{"name":"ownedname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"ownedname"},{"name":"ownedname"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"ownedname"},{"name":"ownedname"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"ownedname"}}],[11,"fmt","","",1,{"inputs":[{"name":"ownedname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","Constructs a borrowed `Name` based on this owned name.",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"name"}}],[11,"local","","Returns a new `OwnedName` instance representing a plain local name.",1,{"inputs":[{"name":"ownedname"},{"name":"s"}],"output":{"name":"ownedname"}}],[11,"qualified","","Returns a new `OwnedName` instance representing a qualified name with or without\na prefix and with a namespace URI.",1,{"inputs":[{"name":"ownedname"},{"name":"s1"},{"name":"s2"},{"name":"option"}],"output":{"name":"ownedname"}}],[11,"prefix_as_ref","","Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\nbut avoids extra work.",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"option"}}],[11,"namespace_as_ref","","Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\nbut avoids extra work.",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"option"}}],[11,"to_repr","","See `Name::to_repr()` for details.",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"string"}}],[11,"from_str","","Parses the given string slice into a qualified name.",1,{"inputs":[{"name":"ownedname"},{"name":"str"}],"output":{"name":"result"}}],[0,"attribute","xml","",null,null],[3,"Attribute","xml::attribute","A borrowed version of an XML attribute.",null,null],[12,"name","","Attribute name.",2,null],[12,"value","","Attribute value.",2,null],[3,"OwnedAttribute","","",null,null],[12,"name","","",3,null],[12,"value","","",3,null],[11,"fmt","","",2,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"eq","","",2,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"fmt","","",2,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_owned","","",2,{"inputs":[{"name":"attribute"}],"output":{"name":"ownedattribute"}}],[11,"new","","",2,{"inputs":[{"name":"attribute"},{"name":"name"},{"name":"str"}],"output":{"name":"attribute"}}],[11,"fmt","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"ownedattribute"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"ownedattribute"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"ownedattribute"}],"output":{"name":"ownedattribute"}}],[11,"borrow","","",3,{"inputs":[{"name":"ownedattribute"}],"output":{"name":"attribute"}}],[11,"new","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"ownedname"},{"name":"string"}],"output":{"name":"ownedattribute"}}],[11,"fmt","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"common","xml","Contains several types used throughout the library.",null,null],[3,"TextPosition","xml::common","Represents a position inside some textual document.",null,null],[12,"row","","Row, counting from 0",4,null],[12,"column","","Column, counting from 0",4,null],[3,"Error","","XML parsing error.",null,null],[4,"XmlVersion","","XML version enumeration.",null,null],[13,"Version10","","XML version 1.0.",5,null],[13,"Version11","","XML version 1.1.",5,null],[5,"is_whitespace_char","","Checks whether the given character is a white space character (`S`)\nas is defined by XML 1.1 specification, [section 2.3][1].",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[5,"is_name_start_char","","Checks whether the given character is a name start character (`NameStartChar`)\nas is defined by XML 1.1 specification, [section 2.3][1].",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[5,"is_name_char","","Checks whether the given character is a name character (`NameChar`)\nas is defined by XML 1.1 specification, [section 2.3][1].",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[8,"Position","","Get the position in the document corresponding to the object",null,null],[10,"position","","Returns the current position or a position corresponding to the object.",6,{"inputs":[{"name":"position"}],"output":{"name":"textposition"}}],[11,"eq","","",4,{"inputs":[{"name":"textposition"},{"name":"textposition"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"textposition"},{"name":"textposition"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"textposition"}],"output":{"name":"textposition"}}],[11,"new","","Creates a new position initialized to the beginning of the document",4,{"inputs":[{"name":"textposition"}],"output":{"name":"textposition"}}],[11,"advance","","Advances the position in a line",4,{"inputs":[{"name":"textposition"},{"name":"u8"}],"output":null}],[11,"advance_to_tab","","Advances the position in a line to the next tab position",4,{"inputs":[{"name":"textposition"},{"name":"u8"}],"output":null}],[11,"new_line","","Advances the position to the beginning of the next line",4,{"inputs":[{"name":"textposition"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"textposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"textposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"position","","",4,{"inputs":[{"name":"textposition"}],"output":{"name":"textposition"}}],[11,"fmt","","",7,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",7,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"position","","",7,{"inputs":[{"name":"error"}],"output":{"name":"textposition"}}],[11,"new","","Creates a new error using position information from the provided\n`Position` object and a message.",7,{"inputs":[{"name":"error"},{"name":"o"},{"name":"string"}],"output":{"name":"error"}}],[11,"msg","","Returns a reference to a message which is contained inside this error.",7,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"description","","",7,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"eq","","",5,{"inputs":[{"name":"xmlversion"},{"name":"xmlversion"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"xmlversion"},{"name":"xmlversion"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"xmlversion"}],"output":{"name":"xmlversion"}}],[11,"fmt","","",5,{"inputs":[{"name":"xmlversion"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"escape","xml","",null,null],[5,"escape_str","xml::escape","Performs escaping of common XML characters.",null,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[0,"namespace","xml","",null,null],[3,"Namespace","xml::namespace","Namespace is a map from prefixes to namespace URIs.",null,null],[3,"NamespaceMappings","","An iterator over mappings from prefixes to URIs in a namespace.",null,null],[3,"NamespaceStack","","Namespace stack is a sequence of namespaces.",null,null],[3,"NamespaceStackMappings","","An iterator over mappings from prefixes to URIs in a namespace stack.",null,null],[6,"UriMapping","","",null,null],[17,"NS_XMLNS_PREFIX","","",null,null],[17,"NS_XMLNS_URI","","",null,null],[17,"NS_XML_PREFIX","","",null,null],[17,"NS_XML_URI","","",null,null],[17,"NS_EMPTY_URI","","",null,null],[8,"NamespaceIterable","","Denotes something which contains namespace URI mappings.",null,null],[16,"Iter","","",8,null],[10,"uri_mappings","","",8,{"inputs":[{"name":"namespaceiterable"}],"output":{"name":"iter"}}],[11,"clone","","",9,{"inputs":[{"name":"namespace"}],"output":{"name":"namespace"}}],[11,"eq","","",9,{"inputs":[{"name":"namespace"},{"name":"namespace"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"namespace"},{"name":"namespace"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty namespace.",9,{"inputs":[{"name":"namespace"}],"output":{"name":"namespace"}}],[11,"is_empty","","Checks whether this namespace is empty.",9,{"inputs":[{"name":"namespace"}],"output":{"name":"bool"}}],[11,"is_essentially_empty","","Checks whether this namespace is essentially empty, that is, it does not contain\nanything but the default mappings.",9,{"inputs":[{"name":"namespace"}],"output":{"name":"bool"}}],[11,"put","","Puts a mapping into this namespace.",9,{"inputs":[{"name":"namespace"},{"name":"option"},{"name":"s2"}],"output":{"name":"bool"}}],[11,"force_put","","Puts a mapping into this namespace forcefully.",9,{"inputs":[{"name":"namespace"},{"name":"option"},{"name":"s2"}],"output":{"name":"option"}}],[11,"get","","Queries the namespace for the given prefix.",9,{"inputs":[{"name":"namespace"},{"name":"option"}],"output":{"name":"option"}}],[11,"next","","",10,{"inputs":[{"name":"namespacemappings"}],"output":{"name":"option"}}],[11,"uri_mappings","","",9,{"inputs":[{"name":"namespace"}],"output":{"name":"namespacemappings"}}],[11,"eq","","",11,{"inputs":[{"name":"namespacestack"},{"name":"namespacestack"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"namespacestack"},{"name":"namespacestack"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespacestack"}}],[11,"empty","","Returns an empty namespace stack.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespacestack"}}],[11,"default","","Returns a namespace stack with default items in it.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespacestack"}}],[11,"push_empty","","Adds an empty namespace to the top of this stack.",11,{"inputs":[{"name":"namespacestack"}],"output":null}],[11,"pop","","Removes a namespace at the top of the stack.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespace"}}],[11,"peek","","Returns a namespace at the top of the stack, leaving the stack intact.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespace"}}],[11,"put","","Puts a mapping into the topmost namespace in this stack.",11,{"inputs":[{"name":"namespacestack"},{"name":"option"},{"name":"string"}],"output":{"name":"bool"}}],[11,"get","","Performs a search for the given prefix in the whole stack.",11,{"inputs":[{"name":"namespacestack"},{"name":"option"}],"output":{"name":"option"}}],[11,"squash","","Combines this stack of namespaces into a single namespace.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespace"}}],[11,"next","","",12,{"inputs":[{"name":"namespacestackmappings"}],"output":{"name":"option"}}],[11,"uri_mappings","","",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespacestackmappings"}}],[0,"reader","xml","Contains high-level interface for a pull-based XML parser.",null,null],[3,"EventReader","xml::reader","Simple wrapper around an `std::io::BufReader` which provides pull-based XML parsing.",null,null],[3,"Events","","XML events iterator, created by `events()` method on `Parser`.",null,null],[0,"config","","Contains parser configuration structure.",null,null],[3,"ParserConfig","xml::reader::config","Parser configuration structure.",null,null],[12,"trim_whitespace","","Whether or not should whitespace be removed. Default is false.",13,null],[12,"whitespace_to_characters","","Whether or not should whitespace be converted to characters.\nDefault is false.",13,null],[12,"cdata_to_characters","","Whether or not should CDATA be converted to characters.\nDefault is false.",13,null],[12,"ignore_comments","","Whether or not should comments be omitted. Default is true.",13,null],[12,"coalesce_characters","","Whether or not should sequential `Characters` events be merged.\nDefault is true.",13,null],[11,"new","","Returns a new config with default values.",13,{"inputs":[{"name":"parserconfig"}],"output":{"name":"parserconfig"}}],[11,"trim_whitespace","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[11,"whitespace_to_characters","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[11,"ignore_comments","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[11,"coalesce_characters","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[0,"events","xml::reader","Contains `XmlEvent` datatype, instances of which are emitted by the parser.",null,null],[4,"XmlEvent","xml::reader::events","An element of an XML input stream.",null,null],[13,"StartDocument","","Corresponds to XML document declaration.",14,null],[12,"version","xml::reader::events::XmlEvent","XML version.",14,null],[12,"encoding","","XML document encoding.",14,null],[12,"standalone","","XML standalone declaration.",14,null],[13,"EndDocument","xml::reader::events","Denotes to the end of the document stream.",14,null],[13,"ProcessingInstruction","","Denotes an XML processing instruction.",14,null],[12,"name","xml::reader::events::XmlEvent","Processing instruction target.",14,null],[12,"data","","Processing instruction content.",14,null],[13,"StartElement","xml::reader::events","Denotes a beginning of an XML element.",14,null],[12,"name","xml::reader::events::XmlEvent","Qualified name of the element.",14,null],[12,"attributes","","A list of attributes associated with the element.",14,null],[12,"namespace","","Contents of the namespace mapping at this point of the document.",14,null],[13,"EndElement","xml::reader::events","Denotes an end of an XML document.",14,null],[12,"name","xml::reader::events::XmlEvent","Qualified name of the element.",14,null],[13,"CData","xml::reader::events","Denotes CDATA content.",14,null],[13,"Comment","","Denotes a comment.",14,null],[13,"Characters","","Denotes character data outside of tags.",14,null],[13,"Whitespace","","Denotes a chunk of whitespace outside of tags.",14,null],[13,"Error","","Denotes parsing error.",14,null],[11,"clone","","",14,{"inputs":[{"name":"xmlevent"}],"output":{"name":"xmlevent"}}],[11,"eq","","",14,{"inputs":[{"name":"xmlevent"},{"name":"xmlevent"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"xmlevent"},{"name":"xmlevent"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"xmlevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_writer_event","","",14,{"inputs":[{"name":"xmlevent"}],"output":{"name":"option"}}],[11,"new","xml::reader","Creates a new parser, consuming given stream.",15,{"inputs":[{"name":"eventreader"},{"name":"b"}],"output":{"name":"eventreader"}}],[11,"with_config","","Creates a new parser with the provded configuration, consuming given `Buffer`.",15,{"inputs":[{"name":"eventreader"},{"name":"b"},{"name":"parserconfig"}],"output":{"name":"eventreader"}}],[11,"next","","Pulls and returns next XML event from the stream.",15,{"inputs":[{"name":"eventreader"}],"output":{"name":"xmlevent"}}],[11,"events","","Returns an iterator over XML events.",15,{"inputs":[{"name":"eventreader"}],"output":{"name":"events"}}],[11,"position","","Returns the position of the last event produced by the parser",15,{"inputs":[{"name":"eventreader"}],"output":{"name":"textposition"}}],[11,"next","","",16,{"inputs":[{"name":"events"}],"output":{"name":"option"}}],[11,"from_str","","Convenience method to create a reader from a string slice.",15,{"inputs":[{"name":"eventreader"},{"name":"str"}],"output":{"name":"eventreader"}}],[0,"writer","xml","",null,null],[3,"EventWriter","xml::writer","",null,null],[0,"config","","Contains emitter configuration structure.",null,null],[3,"EmitterConfig","xml::writer::config","Emitter configuration structure.",null,null],[12,"line_separator","","Line separator used to separate lines in formatted output. Default is `\"\\n\"`.",17,null],[12,"indent_string","","A string which will be used for a single level of indentation. Default is `\"  \"`\n(two spaces).",17,null],[12,"perform_indent","","Whether or not the emitted document should be indented. Default is false.",17,null],[12,"write_document_declaration","","Whether or not to write XML document declaration at the beginning of a document.\nDefault is true.",17,null],[12,"normalize_empty_elements","","Whether or not to convert elements with empty content to empty elements. Default is true.",17,null],[12,"cdata_to_characters","","Whether or not to emit CDATA events as plain characters. Default is false.",17,null],[11,"new","","Creates an emitter configuration with default values.",17,{"inputs":[{"name":"emitterconfig"}],"output":{"name":"emitterconfig"}}],[11,"line_separator","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"string"}],"output":{"name":"emitterconfig"}}],[11,"indent_string","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"string"}],"output":{"name":"emitterconfig"}}],[11,"perform_indent","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"bool"}],"output":{"name":"emitterconfig"}}],[11,"write_document_declaration","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"bool"}],"output":{"name":"emitterconfig"}}],[11,"normalize_empty_elements","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"bool"}],"output":{"name":"emitterconfig"}}],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"bool"}],"output":{"name":"emitterconfig"}}],[0,"events","xml::writer","",null,null],[4,"XmlEvent","xml::writer::events","An element of an XML output stream.",null,null],[13,"StartDocument","","Corresponds to XML document declaration.",18,null],[12,"version","xml::writer::events::XmlEvent","XML version.",18,null],[12,"encoding","","XML document encoding.",18,null],[12,"standalone","","XML standalone declaration.",18,null],[13,"ProcessingInstruction","xml::writer::events","Denotes an XML processing instruction.",18,null],[12,"name","xml::writer::events::XmlEvent","Processing instruction target.",18,null],[12,"data","","Processing instruction content.",18,null],[13,"StartElement","xml::writer::events","Denotes a beginning of an XML element.",18,null],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",18,null],[12,"attributes","","A list of attributes associated with the element.",18,null],[12,"namespace","","Contents of the namespace mapping at this point of the document.",18,null],[13,"EndElement","xml::writer::events","Denotes an end of an XML document.",18,null],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",18,null],[13,"CData","xml::writer::events","Denotes CDATA content.",18,null],[13,"Comment","","Denotes a comment.",18,null],[13,"Characters","","Denotes character data outside of tags.",18,null],[6,"EventWriterResult","xml::writer","",null,null],[11,"new","","",19,{"inputs":[{"name":"eventwriter"},{"name":"w"}],"output":{"name":"eventwriter"}}],[11,"new_with_config","","",19,{"inputs":[{"name":"eventwriter"},{"name":"w"},{"name":"emitterconfig"}],"output":{"name":"eventwriter"}}],[11,"write","","",19,{"inputs":[{"name":"eventwriter"},{"name":"xmlevent"}],"output":{"name":"eventwriterresult"}}],[11,"new_into_mem","","",19,{"inputs":[{"name":"eventwriter"},{"name":"vec"}],"output":{"name":"eventwriter"}}],[11,"new_into_mem_config","","",19,{"inputs":[{"name":"eventwriter"},{"name":"vec"},{"name":"emitterconfig"}],"output":{"name":"eventwriter"}}],[0,"util","xml","",null,null],[3,"ClonedPairwise","xml::util","",null,null],[8,"OptionBorrowExt","","",null,null],[10,"borrow_internals","","",20,{"inputs":[{"name":"optionborrowext"}],"output":{"name":"option"}}],[8,"IteratorClonedPairwiseExt","","",null,null],[10,"cloned_pairwise","","",21,{"inputs":[{"name":"iteratorclonedpairwiseext"}],"output":{"name":"clonedpairwise"}}],[11,"borrow_internals","core::option","",22,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"next","xml::util","",23,{"inputs":[{"name":"clonedpairwise"}],"output":{"name":"option"}}]],"paths":[[3,"Name"],[3,"OwnedName"],[3,"Attribute"],[3,"OwnedAttribute"],[3,"TextPosition"],[4,"XmlVersion"],[8,"Position"],[3,"Error"],[8,"NamespaceIterable"],[3,"Namespace"],[3,"NamespaceMappings"],[3,"NamespaceStack"],[3,"NamespaceStackMappings"],[3,"ParserConfig"],[4,"XmlEvent"],[3,"EventReader"],[3,"Events"],[3,"EmitterConfig"],[4,"XmlEvent"],[3,"EventWriter"],[8,"OptionBorrowExt"],[8,"IteratorClonedPairwiseExt"],[4,"Option"],[3,"ClonedPairwise"]]};
searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade.",null,null],[3,"LogRecord","","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Trace` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[11,"from_str","","",0,{"inputs":[{"name":"loglevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",8,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",8,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",8,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",10,null],[11,"make_place","","",10,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"intermediatebox"}}],[11,"finalize","","",10,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",8,{"inputs":[{"name":"box"},{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",9,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",10,null],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",8,null],[11,"clone","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"fmt","alloc::arc","",11,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Arc<T>`.",12,{"inputs":[{"name":"arc"},{"name":"t"}],"output":{"name":"arc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Arc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"result"}}],[11,"downgrade","","Downgrades the `Arc<T>` to a `Weak<T>` reference.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"usize"}}],[11,"clone","","Makes a clone of the `Arc<T>`.",12,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"deref","","",12,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"make_unique","","",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Arc<T>` by cloning the inner\ndata if the `Arc<T>` doesn't have one strong reference and no weak\nreferences.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Arc<T>` has\none strong reference and no weak references.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Arc<T>`.",12,null],[11,"upgrade","","Upgrades a weak reference to a strong reference.",11,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"clone","","Makes a clone of the `Weak<T>`.",11,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"drop","","Drops the `Weak<T>`.",11,null],[11,"eq","","Equality for two `Arc<T>`s.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Arc<T>`s.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Arc<T>`s.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Arc<T>`s.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Arc<T>`s.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Arc<T>`s.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Arc<T>`s.",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"cmp","","",12,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"ordering"}}],[11,"fmt","","",12,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",12,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"hash","","",12,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",13,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc<T>` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak<T>` values that share\nthe same inner value.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc<T>` has\none strong reference and no weak references.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"make_unique","","",13,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Rc<T>` by cloning the inner\ndata if the `Rc<T>` doesn't have one strong reference and no weak\nreferences.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",13,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",13,null],[11,"clone","","Makes a clone of the `Rc<T>`.",13,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",13,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",13,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",14,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",14,null],[11,"clone","","Makes a clone of the `Weak<T>`.",14,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",14,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","alloc::raw_vec","Creates the biggest possible RawVec without allocating. If T has positive\nsize, then this makes a RawVec with capacity 0. If T has 0 size, then it\nit makes a RawVec with capacity `usize::MAX`. Useful for implementing\ndelayed allocation.",15,{"inputs":[{"name":"rawvec"}],"output":{"name":"rawvec"}}],[11,"with_capacity","","Creates a RawVec with exactly the capacity and alignment requirements\nfor a `[T; cap]`. This is equivalent to calling RawVec::new when `cap` is 0\nor T is zero-sized. Note that if `T` is zero-sized this means you will *not*\nget a RawVec with the requested capacity!",15,{"inputs":[{"name":"rawvec"},{"name":"usize"}],"output":{"name":"rawvec"}}],[11,"from_raw_parts","","Reconstitutes a RawVec from a pointer and capacity.",15,null],[11,"from_box","","Converts a `Box<[T]>` into a `RawVec<T>`.",15,{"inputs":[{"name":"rawvec"},{"name":"box"}],"output":{"name":"rawvec"}}],[11,"ptr","","Gets a raw pointer to the start of the allocation. Note that this is\nheap::EMPTY if `cap = 0` or T is zero-sized. In the former case, you must\nbe careful.",15,null],[11,"cap","","Gets the capacity of the allocation.",15,{"inputs":[{"name":"rawvec"}],"output":{"name":"usize"}}],[11,"double","","Doubles the size of the type's backing allocation. This is common enough\nto want to do that it's easiest to just have a dedicated method. Slightly\nmore efficient logic can be provided for this than the general case.",15,null],[11,"reserve_exact","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn't already,\nwill reallocate the minimum possible amount of memory necessary.\nGenerally this will be exactly the amount of memory necessary,\nbut in principle the allocator is free to give back more than\nwe asked for.",15,null],[11,"reserve","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn't already have\nenough capacity, will reallocate enough space plus comfortable slack\nspace to get amortized `O(1)` behaviour. Will limit this behaviour\nif it would needlessly cause itself to panic.",15,null],[11,"shrink_to_fit","","Shrinks the allocation down to the specified amount. If the given amount\nis 0, actually completely deallocates.",15,null],[11,"into_box","","Converts the entire buffer into `Box<[T]>`.",15,{"inputs":[{"name":"rawvec"}],"output":{"name":"box"}}],[11,"unsafe_no_drop_flag_needs_drop","","This is a stupid name in the hopes that someone will find this in the\nnot too distant future and remove it with the rest of\n#[unsafe_no_drop_flag]",15,{"inputs":[{"name":"rawvec"}],"output":{"name":"bool"}}],[11,"drop","","Frees the memory owned by the RawVec *without* trying to Drop its contents.",15,null],[14,"log!","log","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"Box"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Weak"],[3,"Arc"],[3,"Rc"],[3,"Weak"],[3,"RawVec"]]};
searchIndex['advapi32'] = {"items":[],"paths":[]};
searchIndex['dylib'] = {"items":[[0,"","dylib","Dynamic library facilities.",null,null],[3,"DynamicLibrary","","",null,null],[11,"drop","","",0,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",0,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",0,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",0,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"DynamicLibrary"]]};
searchIndex['dlib'] = {"items":[[0,"","dlib","",null,null],[4,"DlError","","",null,null],[13,"NotFound","","",0,null],[13,"MissingSymbol","","",0,null],[0,"ffi","","",null,null],[5,"dlopen","dlib::ffi","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[14,"ffi_dispatch!","dlib","",null,null],[14,"ffi_dispatch_static!","","",null,null],[14,"link_external_library!","","",null,null],[14,"dlopen_external_library!","","",null,null],[14,"external_library!","","",null,null]],"paths":[[4,"DlError"]]};
searchIndex['draw_state'] = {"items":[[0,"","draw_state","Graphics state blocks for gfx-rs",null,null],[3,"DrawState","","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",0,null],[12,"multi_sample","","Multi-sampling mode",0,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",0,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",0,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",0,null],[12,"blend","","Blend function to use. If None, no blending is done.",0,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",0,null],[4,"BlendPreset","","Blend function presets for ease of use.",null,null],[13,"Add","","When combining two fragments, add their values together, saturating at 1.0",1,null],[13,"Multiply","","When combining two fragments, multiply their values together.",1,null],[13,"Alpha","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",1,null],[13,"Invert","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",1,null],[0,"state","","Fixed-function hardware state.",null,null],[3,"Offset","draw_state::state","How to offset vertices in screen space, if at all.",null,null],[3,"Primitive","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",2,null],[12,"method","","How to rasterize this primitive.",2,null],[12,"offset","","Any polygon offset to apply.",2,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",3,null],[12,"value","","Reference value to compare the value in the stencil buffer with.",3,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",3,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",3,null],[12,"op_fail","","What operation to do if the stencil test fails.",3,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",3,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",3,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",4,null],[12,"back","","",4,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",5,null],[12,"write","","Specify whether to write to the depth buffer or not.",5,null],[3,"BlendChannel","","",null,null],[12,"equation","","",6,null],[12,"source","","",6,null],[12,"destination","","",6,null],[3,"Blend","","",null,null],[12,"color","","",7,null],[12,"alpha","","",7,null],[12,"value","","",7,null],[3,"ColorMask","","",null,null],[4,"FrontFace","","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",8,null],[13,"CounterClockwise","","Counter-clockwise winding order.",8,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",9,null],[13,"Front","","",9,null],[13,"Back","","",9,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",10,null],[13,"Line","","Rasterize as a line with the given width.",10,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",10,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",11,null],[13,"Less","","`x < y`",11,null],[13,"LessEqual","","`x <= y`",11,null],[13,"Equal","","`x == y`",11,null],[13,"GreaterEqual","","`x >= y`",11,null],[13,"Greater","","`x > y`",11,null],[13,"NotEqual","","`x != y`",11,null],[13,"Always","","`true`",11,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",12,null],[13,"Zero","","Set the value in the stencil buffer to zero.",12,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",12,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",12,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",12,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",12,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",12,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",12,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",13,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",13,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",13,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",13,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",13,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",14,null],[13,"SourceAlpha","","",14,null],[13,"DestColor","","",14,null],[13,"DestAlpha","","",14,null],[13,"ConstColor","","",14,null],[13,"ConstAlpha","","",14,null],[4,"Factor","","",null,null],[13,"Zero","","",15,null],[13,"One","","",15,null],[13,"SourceAlphaSaturated","","",15,null],[13,"ZeroPlus","","",15,null],[13,"OneMinus","","",15,null],[6,"LineWidth","","Width of a line.",null,null],[6,"OffsetFactor","","",null,null],[6,"OffsetUnits","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",8,null],[11,"partial_cmp","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"cmp","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",2,{"inputs":[{"name":"primitive"}],"output":{"name":"cullface"}}],[11,"default","","",2,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"cmp","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"fmt","","",17,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"cmp","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"cmp","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"cmp","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"default","","",3,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"cmp","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"cmp","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"default","","",5,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"cmp","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"cmp","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"cmp","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"fmt","","",6,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",6,null],[11,"partial_cmp","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"eq","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"default","","",7,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",7,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"cmp","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",18,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",18,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"from_iter","","",18,{"inputs":[{"name":"colormask"},{"name":"t"}],"output":{"name":"colormask"}}],[0,"target","draw_state","Render target specification.",null,null],[3,"Rect","draw_state::target","A screen space rectangle",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"w","","",19,null],[12,"h","","",19,null],[3,"Mask","","Output mask, used for blitting and clearing",null,null],[3,"Mirror","","Mirroring flags, used for blitting",null,null],[3,"ClearData","","How to clear a frame.",null,null],[12,"color","","The color to clear the frame with",20,null],[12,"depth","","The depth value to clear the frame with",20,null],[12,"stencil","","The stencil value to clear the frame with",20,null],[6,"Layer","","A depth value, specifying which plane to select out of a 3D texture.",null,null],[6,"Level","","Mipmap level to select in a texture.",null,null],[6,"Depth","","A single depth value from a depth buffer.",null,null],[6,"Stencil","","A single value from a stencil stencstencil buffer.",null,null],[6,"ColorValue","","A color with floating-point components.",null,null],[17,"COLOR","","",null,null],[17,"COLOR0","","",null,null],[17,"COLOR1","","",null,null],[17,"COLOR2","","",null,null],[17,"COLOR3","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[11,"partial_cmp","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",21,null],[11,"cmp","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"eq","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"mask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"all","","Returns the set containing all flags.",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",21,{"inputs":[{"name":"mask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",21,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",21,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"mask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",21,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",21,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"not","","Returns the complement of this set of flags.",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"from_iter","","",21,{"inputs":[{"name":"mask"},{"name":"t"}],"output":{"name":"mask"}}],[11,"hash","","",22,null],[11,"cmp","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",22,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",22,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"from_iter","","",22,{"inputs":[{"name":"mirror"},{"name":"t"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"eq","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"cleardata"}],"output":{"name":"cleardata"}}],[11,"fmt","","",20,{"inputs":[{"name":"cleardata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","draw_state","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"drawstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"cmp","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"blendpreset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"blendpreset"}],"output":{"name":"blendpreset"}}],[11,"new","","Create a default `DrawState`. Uses counter-clockwise winding, culls the backface of each\nprimitive, and does no scissor/stencil/depth/blend/color masking.",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"get_target_mask","","Return a target mask that contains all the planes required by this state.",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"mask"}}],[11,"multi_sample","","Enable multi-sampled rasterization",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"stencil","","Set the stencil test to a simple expression",0,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"stencil"}],"output":{"name":"drawstate"}}],[11,"depth","","Set the depth test with the mask",0,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"bool"}],"output":{"name":"drawstate"}}],[11,"scissor","","Set the scissor",0,{"inputs":[{"name":"drawstate"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"drawstate"}}],[11,"blend","","Set the blend mode to one of the presets",0,{"inputs":[{"name":"drawstate"},{"name":"blendpreset"}],"output":{"name":"drawstate"}}]],"paths":[[3,"DrawState"],[4,"BlendPreset"],[3,"Primitive"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[3,"BlendChannel"],[3,"Blend"],[4,"FrontFace"],[4,"CullFace"],[4,"RasterMethod"],[4,"Comparison"],[4,"StencilOp"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"Offset"],[3,"MultiSample"],[3,"ColorMask"],[3,"Rect"],[3,"ClearData"],[3,"Mask"],[3,"Mirror"]]};
searchIndex['glob'] = {"items":[[0,"","glob","Support for matching file paths against Unix shell style patterns.",null,null],[3,"Paths","","An iterator that yields `Path`s from the filesystem that match a particular\npattern.",null,null],[3,"GlobError","","A glob iteration error.",null,null],[3,"PatternError","","A pattern parsing error.",null,null],[12,"pos","","The approximate character index of where the error occurred.",0,null],[12,"msg","","A message describing the error.",0,null],[3,"Pattern","","A compiled Unix shell style pattern.",null,null],[3,"MatchOptions","","Configuration options to modify the behaviour of `Pattern::matches_with(..)`",null,null],[12,"case_sensitive","","Whether or not patterns should be matched in a case-sensitive manner.\nThis currently only considers upper/lower case relationships between\nASCII characters, but in future this might be extended to work with\nUnicode.",1,null],[12,"require_literal_separator","","If this is true then path-component separator characters (e.g. `/` on\nPosix) must be matched by a literal `/`, rather than by `*` or `?` or\n`[...]`",1,null],[12,"require_literal_leading_dot","","If this is true then paths that contain components that start with a `.`\nwill not match unless the `.` appears literally in the pattern: `*`, `?`\nor `[...]` will not match. This is useful because such files are\nconventionally considered hidden on Unix systems and it might be\ndesirable to skip them when listing files.",1,null],[5,"glob","","Return an iterator that produces all the Paths that match the given pattern,\nwhich may be absolute or relative to the current working directory.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"glob_with","","Return an iterator that produces all the Paths that match the given pattern,\nwhich may be absolute or relative to the current working directory.",null,{"inputs":[{"name":"str"},{"name":"matchoptions"}],"output":{"name":"result"}}],[6,"GlobResult","","An alias for a glob iteration result.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"globerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"path","","The Path that the error corresponds to.",2,{"inputs":[{"name":"globerror"}],"output":{"name":"path"}}],[11,"error","","The error in question.",2,{"inputs":[{"name":"globerror"}],"output":{"name":"error"}}],[11,"fmt","","",2,{"inputs":[{"name":"globerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",3,{"inputs":[{"name":"paths"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"patternerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"patternerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"pattern"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",4,{"inputs":[{"name":"pattern"}],"output":{"name":"pattern"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"pattern"},{"name":"pattern"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"pattern"}],"output":{"name":"pattern"}}],[11,"fmt","","",4,{"inputs":[{"name":"pattern"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",4,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"result"}}],[11,"new","","This function compiles Unix shell style patterns.",4,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"result"}}],[11,"escape","","Escape metacharacters within the given string by surrounding them in\nbrackets. The resulting string will, when compiled into a `Pattern`,\nmatch the input string and nothing else.",4,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"string"}}],[11,"matches","","Return if the given `str` matches this `Pattern` using the default\nmatch options (i.e. `MatchOptions::new()`).",4,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"bool"}}],[11,"matches_path","","Return if the given `Path`, when converted to a `str`, matches this\n`Pattern` using the default match options (i.e. `MatchOptions::new()`).",4,{"inputs":[{"name":"pattern"},{"name":"path"}],"output":{"name":"bool"}}],[11,"matches_with","","Return if the given `str` matches this `Pattern` using the specified\nmatch options.",4,{"inputs":[{"name":"pattern"},{"name":"str"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"matches_path_with","","Return if the given `Path`, when converted to a `str`, matches this\n`Pattern` using the specified match options.",4,{"inputs":[{"name":"pattern"},{"name":"path"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"as_str","","Access the original glob pattern.",4,{"inputs":[{"name":"pattern"}],"output":{"name":"str"}}],[11,"default","","",1,{"inputs":[{"name":"matchoptions"}],"output":{"name":"matchoptions"}}],[11,"hash","","",1,null],[11,"cmp","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"matchoptions"},{"name":"matchoptions"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"matchoptions"}],"output":{"name":"matchoptions"}}],[11,"new","","Constructs a new `MatchOptions` with default field values. This is used\nwhen calling functions that do not take an explicit `MatchOptions`\nparameter.",1,{"inputs":[{"name":"matchoptions"}],"output":{"name":"matchoptions"}}]],"paths":[[3,"PatternError"],[3,"MatchOptions"],[3,"GlobError"],[3,"Paths"],[3,"Pattern"]]};
searchIndex['clock_ticks'] = {"items":[[0,"","clock_ticks","",null,null],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"precise_time_ms","","Returns the current value of a high-resolution performance counter\nin milliseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}]],"paths":[]};
searchIndex['gl_common'] = {"items":[[0,"","gl_common","Defines everything used by `gl_generator`.",null,null],[8,"GlFunctionsSource","","",null,null],[10,"get_proc_addr","","",0,null]],"paths":[[8,"GlFunctionsSource"]]};
searchIndex['lzw'] = {"items":[[0,"","lzw","# LZW decoder and encoder",null,null],[3,"Decoder","","Decoder for a LZW compressed stream (this algorithm is used for GIF files).",null,null],[3,"DecoderEarlyChange","","Decoder for a LZW compressed stream using an “early change” algorithm (used in TIFF files).",null,null],[3,"Encoder","","LZW encoder using the algorithm of GIF files.",null,null],[3,"LsbReader","","Reads bits from a byte stream, LSB first.",null,null],[3,"LsbWriter","","Writes bits to a byte stream, LSB first.",null,null],[3,"MsbReader","","Reads bits from a byte stream, MSB first.",null,null],[3,"MsbWriter","","Writes bits to a byte stream, MSB first.",null,null],[4,"Bits","","Containes either the consumed bytes and reconstructed bits or\nonly the consumed bytes if the supplied buffer was not bit enough",null,null],[13,"Some","","Consumed bytes, reconstructed bits",0,null],[13,"None","","Consumed bytes",0,null],[5,"encode","","Convenience function that reads and compresses all bytes from `R`.",null,{"inputs":[{"name":"r"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"decoder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new LZW decoder.",1,{"inputs":[{"name":"decoder"},{"name":"r"},{"name":"u8"}],"output":{"name":"decoder"}}],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",1,null],[11,"fmt","","",2,{"inputs":[{"name":"decoderearlychange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new LZW decoder.",2,{"inputs":[{"name":"decoderearlychange"},{"name":"r"},{"name":"u8"}],"output":{"name":"decoderearlychange"}}],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",2,null],[11,"new","","Creates a new LZW encoder.",3,{"inputs":[{"name":"encoder"},{"name":"w"},{"name":"u8"}],"output":{"name":"result"}}],[11,"encode_bytes","","Compresses `bytes` and writes the result into the writer.",3,null],[11,"drop","","",3,{"inputs":[{"name":"encoder"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"lsbreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new bit reader",4,{"inputs":[{"name":"lsbreader"}],"output":{"name":"lsbreader"}}],[11,"fmt","","",5,{"inputs":[{"name":"msbreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new bit reader",5,{"inputs":[{"name":"msbreader"}],"output":{"name":"msbreader"}}],[11,"read_bits","","",4,null],[11,"read_bits","","",5,null],[11,"new","","Creates a new bit reader",6,{"inputs":[{"name":"lsbwriter"},{"name":"w"}],"output":{"name":"lsbwriter"}}],[11,"write","","",6,null],[11,"flush","","",6,{"inputs":[{"name":"lsbwriter"}],"output":{"name":"result"}}],[11,"new","","Creates a new bit reader",7,{"inputs":[{"name":"msbwriter"},{"name":"w"}],"output":{"name":"msbwriter"}}],[11,"write","","",7,null],[11,"flush","","",7,{"inputs":[{"name":"msbwriter"}],"output":{"name":"result"}}],[11,"write_bits","","",6,{"inputs":[{"name":"lsbwriter"},{"name":"u16"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_bits","","",7,{"inputs":[{"name":"msbwriter"},{"name":"u16"},{"name":"u8"}],"output":{"name":"result"}}],[8,"BitReader","","A bit reader.",null,null],[10,"read_bits","","Returns the next `n` bits.",8,null],[8,"BitWriter","","A bit writer.",null,null],[10,"write_bits","","Writes the next `n` bits.",9,{"inputs":[{"name":"bitwriter"},{"name":"u16"},{"name":"u8"}],"output":{"name":"result"}}]],"paths":[[4,"Bits"],[3,"Decoder"],[3,"DecoderEarlyChange"],[3,"Encoder"],[3,"LsbReader"],[3,"MsbReader"],[3,"LsbWriter"],[3,"MsbWriter"],[8,"BitReader"],[8,"BitWriter"]]};
searchIndex['viewport'] = {"items":[[0,"","viewport","A library for storing viewport information",null,null],[3,"Viewport","","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels.\n```[x, y, width height]``` where ```(x, y)``` is lower left corner.",0,null],[12,"draw_size","","The size of frame buffer in pixels.",0,null],[12,"window_size","","The size of window in points.",0,null],[11,"clone","","",0,{"inputs":[{"name":"viewport"}],"output":{"name":"viewport"}}],[11,"abs_transform","","Computes absolute transform for 2D graphics,\nwhich uses a row major 2x3 matrix.\nThe origin is in the upper left corner of the viewport rectangle.\nThe x axis points to the right, and the y axis points down.\nThe units are in points (window coordinates).",0,null]],"paths":[[3,"Viewport"]]};
searchIndex['kernel32'] = {"items":[],"paths":[]};
searchIndex['gcc'] = {"items":[[0,"","gcc","A library for build scripts to compile custom C code",null,null],[3,"Config","","Extra configuration to pass to gcc.",null,null],[5,"compile_library","","Compile a library from the given set of input C files.",null,null],[0,"windows_registry","","",null,null],[5,"find","gcc::windows_registry","Attempts to find a tool within an MSVC installation using the Windows\nregistry as a point to search from.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[11,"new","gcc","Construct a new instance of a blank set of configuration.",0,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"include","","Add a directory to the `-I` or include path for headers",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"define","","Specify a `-D` variable with an optional value.",0,{"inputs":[{"name":"config"},{"name":"str"},{"name":"option"}],"output":{"name":"config"}}],[11,"object","","Add an arbitrary object file to link in",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"flag","","Add an arbitrary flag to the invocation of the compiler",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"file","","Add a file which will be compiled",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"cpp","","Set C++ support.",0,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"cpp_link_stdlib","","Set the standard library to link against when compiling with C++\nsupport.",0,{"inputs":[{"name":"config"},{"name":"option"}],"output":{"name":"config"}}],[11,"cpp_set_stdlib","","Force the C++ compiler to use the specified standard library.",0,{"inputs":[{"name":"config"},{"name":"option"}],"output":{"name":"config"}}],[11,"compile","","Run the compiler, generating the file `output`",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":null}]],"paths":[[3,"Config"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"gl_pathv","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused1","","",1,null],[12,"__unused2","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_ifu","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_ino","","",17,null],[12,"st_nlink","","",17,null],[12,"st_mode","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"__pad0","","",17,null],[12,"st_rdev","","",17,null],[12,"st_size","","",17,null],[12,"st_blksize","","",17,null],[12,"st_blocks","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"__unused","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"sockaddr_ll","libc::types::os::arch::extra","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"AF_PACKET","libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"fdatasync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"getdtablesize","libc::funcs::bsd44","",null,null],[5,"ioctl","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null],[5,"flock","","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex['color_quant'] = {"items":[[0,"","color_quant","# Color quantization library\nThis library provides a color quantizer based on the [NEUQUANT](http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\nquantization algorithm by Anthony Dekker.\n### Usage\n```\nlet data = vec![0; 40];\nlet nq = color_quant::NeuQuant::new(10, 256, &data);\nlet indixes: Vec<u8> = data.chunks(4).map(|pix| nq.index_of(pix) as u8).collect();\nlet color_map = nq.color_map_rgba();\n```",null,null],[3,"NeuQuant","","Neural network based color quantizer.",null,null],[11,"new","","Creates a new neuronal network and trains it with the supplied data.",0,null],[11,"init","","Initializes the neuronal network and trains it with the supplied data.",0,null],[11,"map_pixel","","Maps the rgba-pixel in-place to the best-matching color in the color map.",0,null],[11,"index_of","","Finds the best-matching index in the color map.",0,null],[11,"color_map_rgba","","Returns the RGBA color map calculated from the sample.",0,{"inputs":[{"name":"neuquant"}],"output":{"name":"vec"}}],[11,"color_map_rgb","","Returns the RGBA color map calculated from the sample.",0,{"inputs":[{"name":"neuquant"}],"output":{"name":"vec"}}]],"paths":[[3,"NeuQuant"]]};
searchIndex['pkg_config'] = {"items":[[0,"","pkg_config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility.",null,null],[3,"Config","","",null,null],[3,"Library","","",null,null],[12,"libs","","",0,null],[12,"link_paths","","",0,null],[12,"frameworks","","",0,null],[12,"framework_paths","","",0,null],[12,"include_paths","","",0,null],[12,"version","","",0,null],[5,"target_supported","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"find_library","","Simple shortcut for using all default options for finding a library.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"fmt","","",0,{"inputs":[{"name":"library"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"statik","","Indicate whether the `--static` flag should be passed.",1,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"arg","","Add an argument to pass to pkg-config.",1,{"inputs":[{"name":"config"},{"name":"s"}],"output":{"name":"config"}}],[11,"find","","Run `pkg-config` to find the library `name`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_variable","","Run `pkg-config` to get the value of a variable from a package using\n--variable.",1,{"inputs":[{"name":"config"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Library"],[3,"Config"]]};
searchIndex['interpolation'] = {"items":[[0,"","interpolation","Interpolation algorithms.",null,null],[4,"EaseFunction","","",null,null],[13,"QuadraticIn","","",0,null],[13,"QuadraticOut","","",0,null],[13,"QuadraticInOut","","",0,null],[13,"CubicIn","","",0,null],[13,"CubicOut","","",0,null],[13,"CubicInOut","","",0,null],[13,"QuarticIn","","",0,null],[13,"QuarticOut","","",0,null],[13,"QuarticInOut","","",0,null],[13,"QuinticIn","","",0,null],[13,"QuinticOut","","",0,null],[13,"QuinticInOut","","",0,null],[13,"SineIn","","",0,null],[13,"SineOut","","",0,null],[13,"SineInOut","","",0,null],[13,"CircularIn","","",0,null],[13,"CircularOut","","",0,null],[13,"CircularInOut","","",0,null],[13,"ExponentialIn","","",0,null],[13,"ExponentialOut","","",0,null],[13,"ExponentialInOut","","",0,null],[13,"ElasticIn","","",0,null],[13,"ElasticOut","","",0,null],[13,"ElasticInOut","","",0,null],[13,"BackIn","","",0,null],[13,"BackOut","","",0,null],[13,"BackInOut","","",0,null],[13,"BounceIn","","",0,null],[13,"BounceOut","","",0,null],[13,"BounceInOut","","",0,null],[5,"lerp","","Performs linear interpolation.\nA linear interpolation consists of two states 'a' and 'b'.\nThe 't' variable is a factor between 0 and 1 that\ngives weight to 'a' or 'b'.\nWhen 't' is zero then 'a' has full weight.\nWhen 't' is one then 'b' has full weight.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"scalar"}],"output":{"name":"t"}}],[5,"quad_bez","","Performs quadratic beziér interpolation.\nThis is done by nesting linear interpolations.\nFor more information, see:",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"scalar"}],"output":{"name":"t"}}],[5,"cub_bez","","Performs cubic beziér interpolation.\nThis is done by interpolation between two quadratic beziér.\nFor more information, see:",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"scalar"}],"output":{"name":"t"}}],[11,"eq","","",0,{"inputs":[{"name":"easefunction"},{"name":"easefunction"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"easefunction"},{"name":"easefunction"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"easefunction"}],"output":{"name":"easefunction"}}],[8,"Ease","","",null,null],[10,"calc","","Calculate the eased value, normalized",1,{"inputs":[{"name":"ease"},{"name":"easefunction"}],"output":{"name":"self"}}],[10,"quadratic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quadratic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quadratic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"cubic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"cubic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"cubic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quartic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quartic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quartic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quintic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quintic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quintic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"sine_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"sine_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"sine_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"circular_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"circular_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"circular_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"exponential_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"exponential_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"exponential_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"elastic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"elastic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"elastic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"back_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"back_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"back_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"bounce_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"bounce_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"bounce_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[8,"Spatial","","Used for interpolation over spatial structures.",null,null],[16,"Scalar","","The scalar type.",2,null],[10,"add","","Add",2,{"inputs":[{"name":"spatial"},{"name":"self"}],"output":{"name":"self"}}],[10,"sub","","Subtract",2,{"inputs":[{"name":"spatial"},{"name":"self"}],"output":{"name":"self"}}],[10,"scale","","Scales with a scalar.",2,{"inputs":[{"name":"spatial"},{"name":"scalar"}],"output":{"name":"self"}}]],"paths":[[4,"EaseFunction"],[8,"Ease"],[8,"Spatial"]]};
searchIndex['float'] = {"items":[[0,"","float","Traits for generic floats in game programming",null,null],[8,"Float","","Convenience trait for floats.",null,null],[8,"Min","","Minimum value.",null,null],[10,"min","","Returns the minimum value of self or other.",0,{"inputs":[{"name":"min"},{"name":"self"}],"output":{"name":"self"}}],[8,"Max","","Maximum value.",null,null],[10,"max","","Returns the maximum value of self or other.",1,{"inputs":[{"name":"max"},{"name":"self"}],"output":{"name":"self"}}],[8,"Signum","","The sign of the number.",null,null],[10,"signum","","Returns number representing the sign of self",2,{"inputs":[{"name":"signum"}],"output":{"name":"self"}}],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_180","","Returns radians corresponding to 180 degrees.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_360","","Returns radians corresponding to 360 degrees.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"rad_to_deg","","Convert a value to degrees from radians.\nEquivalent to ```value * (180 / π)```.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[8,"One","","Number 1.",null,null],[10,"one","","Returns 1.",4,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Zero","","Number 0.",null,null],[10,"zero","","Returns 0.",5,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[8,"Sqrt","","Square root.",null,null],[10,"sqrt","","Returns square root.",6,{"inputs":[{"name":"sqrt"}],"output":{"name":"self"}}],[8,"Trig","","Basic trigonometry functions",null,null],[10,"sin","","Returns sine of self",7,{"inputs":[{"name":"trig"}],"output":{"name":"self"}}],[10,"cos","","Returns cosine of self",7,{"inputs":[{"name":"trig"}],"output":{"name":"self"}}],[10,"tan","","Returns tangent of self",7,{"inputs":[{"name":"trig"}],"output":{"name":"self"}}],[8,"Cast","","Casts into another type.",null,null],[10,"cast","","Casts into other type.",8,{"inputs":[{"name":"cast"}],"output":{"name":"t"}}],[8,"FromPrimitive","","Trait for converting from different numeric types",null,null],[10,"from_f64","","from a f64",9,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"self"}}],[10,"from_f32","","from a f32",9,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"self"}}],[10,"from_isize","","from a isze",9,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"self"}}]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex['build'] = {"items":[[0,"","build","",null,null],[5,"link","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":null}]],"paths":[]};
searchIndex['byteorder'] = {"items":[[0,"","byteorder","This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.",null,null],[4,"Error","","An error type for reading bytes.",null,null],[13,"UnexpectedEOF","","An unexpected EOF.",0,null],[13,"Io","","Any underlying IO error that occurs while reading bytes.",0,null],[4,"BigEndian","","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","std::io::error","",1,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","byteorder","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[6,"Result","","A short-hand for `result::Result<T, byteorder::Error>`.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",4,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",4,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",4,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",4,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",4,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",4,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",4,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",4,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",4,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",4,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",4,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",4,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",4,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",4,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",4,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",4,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",4,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",4,null],[11,"read_u16","","",5,null],[11,"read_u32","","",5,null],[11,"read_u64","","",5,null],[11,"read_uint","","",5,null],[11,"write_u16","","",5,null],[11,"write_u32","","",5,null],[11,"write_u64","","",5,null],[11,"read_u16","","",6,null],[11,"read_u32","","",6,null],[11,"read_u64","","",6,null],[11,"read_uint","","",6,null],[11,"write_u16","","",6,null],[11,"write_u32","","",6,null],[11,"write_u64","","",6,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f64"}],"output":{"name":"result"}}]],"paths":[[4,"Error"],[3,"Error"],[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex['read_color'] = {"items":[[0,"","read_color","A simple library for reading hex colors.",null,null],[5,"char_to_hex","","Converts a character into a u8 value.",null,{"inputs":[{"name":"char"}],"output":{"name":"option"}}],[5,"hex","","Reads a hex value from an iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"hex_pair","","Reads a pair of hex values, joining them in value range 0-255.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgb","","Reads RGB colors from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgba","","Reads RGBA colors from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgb_maybe_a","","Reads RGB with optional alpha from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}]],"paths":[]};
searchIndex['khronos_api'] = {"items":[[0,"","khronos_api","This crates contains the sources of the official OpenGL repository.",null,null],[7,"GL_XML","","Content of the official `gl.xml` file.",null,null],[7,"EGL_XML","","Content of the official `egl.xml` file.",null,null],[7,"WGL_XML","","Content of the official `wgl.xml` file.",null,null],[7,"GLX_XML","","Content of the official `glx.xml` file.",null,null]],"paths":[]};
searchIndex['winapi'] = {"items":[],"paths":[]};
searchIndex['lazy_static'] = {"items":[[0,"","lazy_static","A macro for declaring lazily evaluated statics.",null,null],[14,"lazy_static!","","",null,null]],"paths":[]};
searchIndex['texture'] = {"items":[[0,"","texture","A library for texture conventions.",null,null],[3,"TextureSettings","","Texture creation parameters.",null,null],[0,"ops","","Image operations for textures.",null,null],[5,"flip_vertical","texture::ops","Flips the image vertically.",null,null],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",null,null],[8,"ImageSize","texture","Implemented by all images to be used with generic algorithms.",null,null],[10,"get_size","","Get the image size.",0,null],[11,"get_width","","Gets the image width.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[11,"get_height","","Gets the image height.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[8,"Rgba8Texture","","Implemented by rgba8 textures.",null,null],[16,"Error","","The error when creating or updating texture.",1,null],[10,"create","","Create rgba8 texture from memory.",1,null],[10,"update","","Update rgba8 texture.",1,null],[11,"new","","Create default settings.",2,{"inputs":[{"name":"texturesettings"}],"output":{"name":"texturesettings"}}],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color space.",2,{"inputs":[{"name":"texturesettings"}],"output":{"name":"bool"}}],[11,"set_convert_gamma","","Sets convert gamma.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":null}],[11,"convert_gamma","","Sets convert gamma.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_compress","","Gets wheter compress on the GPU.",2,{"inputs":[{"name":"texturesettings"}],"output":{"name":"bool"}}],[11,"set_compress","","Sets compress.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":null}],[11,"compress","","Sets compress.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_generate_mipmap","","Gets generate mipmap.",2,{"inputs":[{"name":"texturesettings"}],"output":{"name":"bool"}}],[11,"set_generate_mipmap","","Sets generate mipmap.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":null}],[11,"generate_mipmap","","Sets generate mipmap.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":{"name":"self"}}]],"paths":[[8,"ImageSize"],[8,"Rgba8Texture"],[3,"TextureSettings"]]};
searchIndex['shaders_graphics2d'] = {"items":[[0,"","shaders_graphics2d","",null,null],[0,"colored","","",null,null],[17,"VERTEX_GLSL_120","shaders_graphics2d::colored","",null,null],[17,"VERTEX_GLSL_150_CORE","","",null,null],[17,"FRAGMENT_GLSL_120","","",null,null],[17,"FRAGMENT_GLSL_150_CORE","","",null,null],[0,"textured","shaders_graphics2d","",null,null],[17,"VERTEX_GLSL_120","shaders_graphics2d::textured","",null,null],[17,"VERTEX_GLSL_150_CORE","","",null,null],[17,"FRAGMENT_GLSL_120","","",null,null],[17,"FRAGMENT_GLSL_150_CORE","","",null,null]],"paths":[]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex['shader_version'] = {"items":[[0,"","shader_version","A helper library for detecting and picking compatible shaders.",null,null],[3,"Shaders","","Shader picker.",null,null],[0,"opengl","","Models versions of OpenGL",null,null],[4,"OpenGL","shader_version::opengl","",null,null],[13,"V2_0","","",0,null],[13,"V2_1","","",0,null],[13,"V3_0","","",0,null],[13,"V3_1","","",0,null],[13,"V3_2","","",0,null],[13,"V3_3","","",0,null],[13,"V4_0","","",0,null],[13,"V4_1","","",0,null],[13,"V4_2","","",0,null],[13,"V4_3","","",0,null],[13,"V4_4","","",0,null],[13,"V4_5","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"opengl"}],"output":{"name":"opengl"}}],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,null],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,{"inputs":[{"name":"opengl"}],"output":{"name":"glsl"}}],[0,"glsl","shader_version","Models versions of OpenGL Shader Language (GLSL)",null,null],[4,"GLSL","shader_version::glsl","For OpenGL version 3.3 and above,\nthe GLSL version is the same as the OpenGL version.",null,null],[13,"V1_10","","",1,null],[13,"V1_20","","",1,null],[13,"V1_30","","",1,null],[13,"V1_40","","",1,null],[13,"V1_50","","",1,null],[13,"V3_30","","",1,null],[13,"V4_00","","",1,null],[13,"V4_10","","",1,null],[13,"V4_20","","",1,null],[13,"V4_30","","",1,null],[13,"V4_40","","",1,null],[13,"V4_50","","",1,null],[11,"cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"glsl"}],"output":{"name":"glsl"}}],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,{"inputs":[{"name":"glsl"}],"output":{"name":"opengl"}}],[11,"pick_shader","","",1,{"inputs":[{"name":"glsl"},{"name":"shaders"}],"output":{"name":"option"}}],[8,"PickShader","shader_version","Implemented by shader enums.",null,null],[10,"pick_shader","","Pick shader.",2,{"inputs":[{"name":"pickshader"},{"name":"shaders"}],"output":{"name":"option"}}],[11,"new","","Creates a new shader picker.",3,{"inputs":[{"name":"shaders"}],"output":{"name":"self"}}],[11,"set","","Sets source for a shader version.",3,{"inputs":[{"name":"shaders"},{"name":"v"},{"name":"s"}],"output":{"name":"self"}}],[11,"get","","Get the closest shader to a shader version.",3,{"inputs":[{"name":"shaders"},{"name":"v"}],"output":{"name":"option"}}]],"paths":[[4,"OpenGL"],[4,"GLSL"],[8,"PickShader"],[3,"Shaders"]]};
initSearch(searchIndex);
