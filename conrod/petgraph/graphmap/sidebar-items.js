initSidebarItems({"struct":[["AllEdges",""],["Edges",""],["GraphMap","`GraphMap<N, E>` is an undirected graph, with generic node values `N` and edge weights `E`.It uses an combined adjacency list and sparse adjacency matrix representation, using **O(|V| + |E|)** space, and allows testing for edge existance in constant time.The node type `N` must implement `Copy` and will be used as node identifier, duplicated into several places in the data structure. It must be suitable as a hash table key (implementing `Eq + Hash`). The node type must also implement `Ord` so that the implementation can order the pair (`a`, `b`) for an edge connecting any two nodes `a` and `b`.`GraphMap` does not allow parallel edges, but self loops are allowed."],["Neighbors",""],["Nodes",""],["Ptr","A reference that is hashed and compared by its pointer value.`Ptr` is used for certain configurations of `GraphMap`, in particular in the combination where the node type for `GraphMap` is something of type for example `Ptr(&Cell<T>)`, with the `Cell<T>` being `TypedArena` allocated."]],"trait":[["NodeTrait","A trait group for `GraphMap`'s node identifier."]]});