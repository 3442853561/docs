initSidebarItems({"enum":[["Directed","Marker type for a directed graph."],["EdgeDirection","Edge direction"],["Undirected","Marker type for an undirected graph."]],"mod":[["algo","Graph algorithms.It is a goal to gradually migrate the algorithms to be based on graph traits so that they are generally applicable. For now, most of these use only the **Graph** type."],["dot","Simple graphviz dot file format output."],["graph","`Graph<N, E, Ty, Ix>` is a graph datastructure using an adjacency list representation."],["graphmap","`GraphMap<N, E>` is an undirected graph where node values are mapping keys."],["unionfind","`UnionFind<K>` is a disjoint-set data structure."],["visit","Graph visitor algorithms."]],"trait":[["EdgeType","A graph's edge type determines whether is has directed edges or not."],["IntoWeightedEdge","Convert an element like `(i, j)` or `(i, j, w)` into a triple of source, target, edge weight.For `Graph::from_edges` and `GraphMap::from_edges`."]]});