initSidebarItems({"mod":[["graphics","Conrod's generic graphics backend.**Note:** Conrod currently uses Piston's generic graphics crate (and specifically the **Graphics**) and **CharacterCache** traits to enable genericity over custom user backends. This dependency may change in the near future in favour of a simplified conrod-specific graphics and character caching backend trait."]],"trait":[["Backend","A trait to be implemented by all backends to conrod.This trait allows conrod to remain entirely backend agnostic so that users may use conrod with any window, graphics or font contexts.Conrod provides a blanket implementation for all `(T, C)` tuples, where `T` is some texture and `C` is some character cache and both satisfy the necessary bounds."],["CharacterCache","Stores characters in a buffer and loads them by demand."],["Graphics","Implemented by all graphics back-ends.An example back-end using raw OpenGLBy default, this design uses triangles as graphics primitives. This is supported by all GPUs and easy to implement in shader languages.Default trait methods can be overridden for better performance or higher quality.When drawing, use this trait as generic constraint:Color space is sRGB.Notice for back-end authorsWhen sRGB is enabled for a back-end shader, the gamma must be converted to linear space when used as vertex color or uniform parameter. To convert gamma, use `color::gamma_srgb_to_linear`.For more information, see https://github.com/PistonDevelopers/piston/issues/1014."]]});