initSidebarItems({"mod":[["global_input","Handles all of the global input events and state. The core of this module is the `GlobalInput` struct. It is responsible for aggregating and interpreting raw input events into high-level semantic events."],["input_provider","Contains the `InputProvider` trait, which is used to provide input events to widgets."],["input_state","Everything related to storing the state of user input. This includes the state of any buttons on either the keyboard or the mouse, as well as the position of the mouse. It also includes which widgets, if any, are capturing the keyboard and mouse. This module exists mostly to support the `events::InputProvider` trait."],["ui_event","Contains all the structs and enums to describe all of the input events that `Widget`s can handle. The core of this module is the `UiEvent` enum, which encapsulates all of those events."],["widget_input","Contains all the logic for filtering input events and making them relative to widgets. The core of this module is the `WidgetInput::for_widget` method, which creates an `InputProvider` that provides input events for a specific widget."]]});