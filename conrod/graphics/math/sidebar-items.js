initSidebarItems({"fn":[["abs_transform","Transforms from normalized to absolute coordinates.Computes absolute transform from width and height of viewport. In absolute coordinates, the x axis points to the right, and the y axis points down on the screen."],["add","Adds two vectors."],["area","Computes area of a simple polygon.A simple polygon is one that does not intersect itself."],["area_centroid","Computes the area and centroid of a simple polygon.A simple polygon is one that does not intersect itself. Source: http://en.wikipedia.org/wiki/Polygon_area#Simple_polygons"],["cast","Converts to another vector type."],["centroid","Computes centroid of a simple polygon.A simple polygon is one that does not intersect itself."],["cross","Computes the cross product."],["dot","Computes the dot product."],["from_barycentric","Transforms from barycentric coordinates to cartesian."],["get_scale","Extract scale information from matrix."],["hsv","Transform color with hue, saturation and value.Source: http://beesbuzz.biz/code/hsv_color_transforms.php"],["identity","Create an identity matrix."],["inside_triangle","Returns true if point is inside triangle.This is done by computing a `side` number for each edge. If the number is inside if it is on the same side for all edges. Might break for very small triangles."],["least_separation_4","Returns the least separation out of four. Each seperation can be computed using `separation` function. The separation returned can be used to solve collision of rectangles."],["line_side","Returns a number that tells which side it is relative to a line.Computes the cross product of the vector that gives the line with the vector between point and starting point of line. One side of the line has opposite sign of the other."],["margin_rectangle","Shrinks a rectangle by a factor on all sides."],["modular_offset","Computes modular offset safely for numbers."],["mul","Multiplies two vectors component wise."],["mul_scalar","Multiplies the vector with a scalar."],["multiply","Multiplies two matrices."],["orient","Orients x axis to look at point.Leaves x axis unchanged if the point to look at is the origin."],["overlap_rectangle","Computes overlap between two rectangles. The area of the overlapping rectangle is positive. A shared edge or corner is not considered overlap."],["perp","Creates a perpendicular vector."],["relative_rectangle","Computes a relative rectangle using the rectangle as a tile."],["relative_source_rectangle","Computes a relative source rectangle using the source rectangle as a tile."],["rotate_radians","Creates a rotation matrix."],["scale","Create a scale matrix."],["separation","Compute the shortest vector from point to ray. A ray stores starting point and directional vector."],["shear","Create a shear matrix."],["square_len","Computes the square length of a vector."],["sub","Subtracts 'b' from 'a'."],["to_barycentric","Transforms from cartesian coordinates to barycentric."],["transform_pos","Transforms a 2D position through matrix."],["transform_vec","Transforms a 2D vector through matrix."],["translate","Creates a translation matrix."],["triangle_face","Returns true if triangle is clockwise.This is done by computing which side the third vertex is relative to the line starting from the first vertex to second vertex.The triangle is considered clockwise if the third vertex is on the line between the two first vertices."]],"type":[["Matrix2d","The type used for matrices."],["Scalar","The type used for scalars."],["Vec2d","The type used for 2D vectors."],["Vec3d","The type used for 3D vectors."]]});