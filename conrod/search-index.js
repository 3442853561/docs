var searchIndex = {};
searchIndex["conrod"] = {"doc":"","items":[[8,"CharacterCache","conrod","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The textyre type associated with the character cache.",0,null],[10,"character","","Get reference to character.",0,null],[11,"width","","Return the width for some given text.",0,null],[8,"Graphics","","Implemented by all graphics back-ends.",null,null],[16,"Texture","","The texture type associated with the back-end.",1,null],[10,"clear_color","","Clears background with a color.",1,null],[10,"clear_stencil","","Clears stencil buffer with a value, usually 0.",1,null],[10,"tri_list","","Renders list of 2d triangles using a solid color.",1,null],[10,"tri_list_uv","","Renders list of 2d triangles using a color and a texture.",1,null],[11,"rectangle","","Draws a rectangle.",1,null],[11,"polygon","","Draws a polygon.",1,null],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",1,null],[11,"image","","Draws image.",1,null],[11,"ellipse","","Draws ellipse.",1,null],[11,"line","","Draws line.",1,null],[11,"circle_arc","","Draws circle arc.",1,null],[11,"deform_image","","Draws deformed image.",1,null],[3,"Line","","A simple, non-interactive widget for drawing a single straight Line.",null,null],[12,"start","","The start of the line.",2,null],[12,"end","","The end of the line.",2,null],[12,"common","","Data necessary and common for all widget builder types.",2,null],[12,"style","","Unique styling.",2,null],[12,"should_centre_points","","Whether or not the line should be automatically centred to the widget position.",2,null],[3,"Image","","A primitive and basic widget for drawing an `Image`.",null,null],[12,"common","","Data necessary and common for all widget builder types.",3,null],[12,"src_rect","","The rectangle area of the original source image that should be used.",3,null],[12,"style","","Unique styling.",3,null],[12,"src","","Where the `Image` data is stored.",3,null],[3,"PointPath","","A simple, non-interactive widget for drawing a series of lines and/or points.",null,null],[12,"points","","Some iterator yielding a series of Points.",4,null],[12,"common","","Data necessary and common for all widget builder types.",4,null],[12,"style","","Unique styling for the PointPath.",4,null],[12,"maybe_shift_to_centre_from","","Whether or not the points should be automatically centred to the widget position.",4,null],[3,"Circle","","A tiny wrapper around the **Oval** widget type.",null,null],[3,"FramedRectangle","","A filled rectangle widget that may or may not have some frame.",null,null],[12,"common","","Data necessary and common for all widget builder types.",5,null],[12,"style","","Unique styling for the **FramedRectangle**.",5,null],[3,"Polygon","","A basic, non-interactive, arbitarry **Polygon** widget.",null,null],[12,"points","","The points describing the corners of the **Polygon**.",6,null],[12,"common","","Data necessary and common for all widget builder types.",6,null],[12,"style","","Unique styling for the **Polygon**.",6,null],[12,"maybe_shift_to_centre_from","","Whether or not the points should be automatically centred to the widget position.",6,null],[3,"Oval","","A simple, non-interactive widget for drawing a single **Oval**.",null,null],[12,"common","","Data necessary and common for all widget builder types.",7,null],[12,"style","","Unique styling.",7,null],[3,"Rectangle","","A basic, non-interactive rectangle shape widget.",null,null],[12,"common","","Data necessary and common for all widget builder types.",8,null],[12,"style","","Unique styling for the **Rectangle**.",8,null],[3,"Text","","Displays some given text centred within a rectangular area.",null,null],[12,"common","","Data necessary and common for all widget builder types.",9,null],[12,"text","","The text to be drawn by the **Text**.",9,null],[12,"style","","Unique styling for the **Text**.",9,null],[3,"Button","","A pressable button widget whose reaction is triggered upon release.",null,null],[12,"style","","Unique styling for the Button.",10,null],[3,"Canvas","","**Canvas** is designed to be a &quot;container&quot;-like &quot;parent&quot; widget that simplifies placement of\n&quot;children&quot; widgets.",null,null],[12,"common","","Data necessary and common for all widget builder types.",11,null],[12,"style","","The builder data related to the style of the Canvas.",11,null],[12,"maybe_title_bar_label","","The label for the **Canvas**&#39; **TitleBar** if there is one.",11,null],[12,"maybe_splits","","A list of child **Canvas**ses as splits of this **Canvas** flowing in the given direction.",11,null],[3,"DropDownList","","Displays a given `Vec&lt;String&gt;` as a selectable drop down menu. It&#39;s reaction is triggered upon\nselection of a list item.",null,null],[3,"EnvelopeEditor","","Used for editing a series of 2D Points on a cartesian (X, Y) plane within some given range.",null,null],[12,"skew_y_range","","The value skewing for the envelope&#39;s y-axis. This is useful for displaying exponential\nranges such as frequency.",12,null],[3,"FileNavigator","","A widget for navigating and interacting with a file system.",null,null],[12,"style","","Unique styling for the widget.",13,null],[12,"starting_directory","","The first directory shown for the `FileNavigator`.",13,null],[12,"types","","Only display files of the given type.",13,null],[3,"WidgetMatrix","","Draw a matrix of any rectangular widget type, where the matrix will provide a function with\nthe widget number, it&#39;s `rows` and `cols` position, the width and height for the widget and\nthe location at which the widget should be drawn.",null,null],[3,"NumberDialer","","A widget for precision control over any digit within a value.",null,null],[3,"PlotPath","","A widget that plots a series of lines using the given function *x -&gt; y*.",null,null],[3,"RangeSlider","","Linear range selection.",null,null],[12,"maybe_react","","Set the reaction for the Slider.",14,null],[3,"Scrollbar","","A widget that allows for scrolling via dragging the mouse.",null,null],[3,"Slider","","Linear value selection.",null,null],[12,"skew","","The amount in which the slider&#39;s display should be skewed.",15,null],[12,"maybe_react","","Set the reaction for the Slider.",15,null],[12,"enabled","","Whether or not user input is enabled for the Slider.",15,null],[3,"Tabs","","A wrapper around a list of canvasses that displays thema s a list of selectable tabs.",null,null],[3,"TextBox","","A widget for displaying and mutating a small, one-line field of text, given by the user in the\nform of a `String`.",null,null],[12,"maybe_react","","The reaction for the TextBox.",16,null],[3,"TextEdit","","A widget for displaying and mutating multi-line text, given as a `String`.",null,null],[12,"maybe_react","","The reaction for the TextEdit.",17,null],[3,"TitleBar","","A simple title bar widget that automatically sizes itself to the top of some other widget.",null,null],[12,"common","","Data necessary and common for all widget builder types.",18,null],[12,"style","","Unique styling for the **FramedRectangle**.",18,null],[12,"label","","A label displayed in the middle of the TitleBar.",18,null],[3,"Toggle","","A pressable widget for toggling the state of a bool.",null,null],[12,"maybe_react","","Set the reaction for the Toggle. It will be triggered upon release of the button.",19,null],[12,"enabled","","If true, will allow user inputs. If false, will disallow user inputs.",19,null],[3,"XYPad","","Used for displaying and controlling a 2D point on a cartesian plane within a given range.",null,null],[12,"maybe_react","","The reaction function for the XYPad.",20,null],[12,"enabled","","Indicates whether the XYPad will respond to user input.",20,null],[3,"LineStyle","","Unique styling for a Line widget.",null,null],[12,"maybe_pattern","","The patter for the line.",21,null],[12,"maybe_color","","Color of the Button&#39;s pressable area.",21,null],[12,"maybe_thickness","","The thickness of the line.",21,null],[12,"maybe_cap","","The style with which the ends of the line are drawn.",21,null],[3,"ImageStyle","","Unique styling for the `Image` widget.",null,null],[12,"maybe_color","","Optionally specify a single colour to use for the image.",22,null],[3,"FramedRectangleStyle","","Unique styling for the **FramedRectangle** widget.",null,null],[12,"color","","Shape styling for the inner rectangle.",23,null],[12,"frame","","The thickness of the frame.",23,null],[12,"frame_color","","The color of the frame.",23,null],[3,"TextStyle","","The styling for a **Text**&#39;s graphics.",null,null],[12,"font_size","","The font size for the **Text**.",24,null],[12,"color","","The color of the **Text**.",24,null],[12,"maybe_wrap","","Whether or not the text should wrap around the width.",24,null],[12,"line_spacing","","The spacing between consecutive lines.",24,null],[12,"text_align","","Alignment of the text along the *x* axis.",24,null],[3,"ButtonStyle","","Unique styling for the Button.",null,null],[12,"color","","Color of the Button&#39;s pressable area.",25,null],[12,"frame","","Width of the frame surrounding the button",25,null],[12,"frame_color","","The color of the frame.",25,null],[12,"label_color","","The color of the Button&#39;s label.",25,null],[12,"label_font_size","","The font size of the Button&#39;s label.",25,null],[3,"CanvasStyle","","Unique styling for the Canvas.",null,null],[12,"color","","The color of the Canvas&#39; rectangle surface.",26,null],[12,"frame","","The width of the frame surrounding the Canvas&#39; rectangle.",26,null],[12,"frame_color","","The color of the Canvas&#39; frame.",26,null],[12,"length","","If this Canvas is a split of some parent Canvas, this is the length of the split.",26,null],[12,"pad_left","","Padding for the left edge of the Canvas&#39; kid area.",26,null],[12,"pad_right","","Padding for the right edge of the Canvas&#39; kid area.",26,null],[12,"pad_bottom","","Padding for the bottom edge of the Canvas&#39; kid area.",26,null],[12,"pad_top","","Padding for the top edge of the Canvas&#39; kid area.",26,null],[12,"title_bar_color","","The color of the title bar. Defaults to the color of the Canvas.",26,null],[12,"title_bar_text_color","","The color of the title bar&#39;s text.",26,null],[12,"title_bar_font_size","","The font size for the title bar&#39;s text.",26,null],[12,"title_bar_maybe_wrap","","The way in which the title bar&#39;s text should wrap.",26,null],[12,"title_bar_line_spacing","","The distance between lines for multi-line title bar text.",26,null],[12,"title_bar_text_align","","The horizontal alignment of the title bar text.",26,null],[3,"DropDownListStyle","","Styling for the DropDownList, necessary for constructing its renderable Element.",null,null],[12,"color","","Color of the widget.",27,null],[12,"frame","","Width of the widget&#39;s frame.",27,null],[12,"frame_color","","Color of the widget&#39;s frame.",27,null],[12,"label_color","","Color of the item labels.",27,null],[12,"label_font_size","","Font size for the item labels.",27,null],[12,"maybe_max_visible_height","","Maximum height of the Open menu before the scrollbar appears.",27,null],[3,"EnvelopeEditorStyle","","Styling for the EnvelopeEditor, necessary for constructing its renderable Element.",null,null],[12,"color","","Coloring for the EnvelopeEditor&#39;s **FramedRectangle**.",28,null],[12,"frame","","Thickness of the **FramedRectangle**&#39;s frame.",28,null],[12,"frame_color","","Color of the frame.",28,null],[12,"label_color","","Color of the label.",28,null],[12,"label_font_size","","The font size of the **EnvelopeEditor**&#39;s label if one was given.",28,null],[12,"value_font_size","","The font size of the value label.",28,null],[12,"point_radius","","The radius of the envelope points.",28,null],[12,"line_thickness","","The thickness of the envelope lines.",28,null],[3,"FileNavigatorStyle","","Unique styling for the widget.",null,null],[12,"color","","Color of the selected entries.",29,null],[12,"unselected_color","","The color of the unselected entries.",29,null],[12,"text_color","","The color of the directory and file names.",29,null],[12,"font_size","","The font size for the directory and file names.",29,null],[12,"column_width","","The default width of a single directory view.",29,null],[12,"resize_handle_width","","The width of the bar that separates each directory in the stack and allows for\nre-sizing.",29,null],[3,"NumberDialerStyle","","Unique graphical styling for the NumberDialer.",null,null],[12,"color","","Color of the NumberDialer&#39;s rectangle.",30,null],[12,"frame","","The color of the rectangle frame.",30,null],[12,"frame_color","","The color of the rectangle frame.",30,null],[12,"label_color","","The color of the NumberDialer&#39;s label.",30,null],[12,"label_font_size","","The font size for the NumberDialer&#39;s label.",30,null],[3,"PlotPathStyle","","Unique styling parameters for the `PlotPath` widget.",null,null],[12,"thickness","","The thickness of the plotted line.",31,null],[12,"color","","The color of the line.",31,null],[3,"RangeSliderStyle","","Graphical styling unique to the RangeSlider widget.",null,null],[12,"color","","The color of the slidable rectangle.",32,null],[12,"frame","","The length of the frame around the edges of the slidable rectangle.",32,null],[12,"frame_color","","The color of the Slider&#39;s frame.",32,null],[12,"label_color","","The color of the Slider&#39;s label.",32,null],[12,"label_font_size","","The font-size for the Slider&#39;s label.",32,null],[3,"ScrollbarStyle","","Styling for the DropDownList, necessary for constructing its renderable Element.",null,null],[12,"color","","Color of the widget.",33,null],[12,"thickness","","The &quot;thickness&quot; of the scrollbar&#39;s track and handle `Rect`s.",33,null],[12,"auto_hide","","When true, the `Scrollbar` will only be visible when:",33,null],[3,"SliderStyle","","Graphical styling unique to the Slider widget.",null,null],[12,"color","","The color of the slidable rectangle.",34,null],[12,"frame","","The length of the frame around the edges of the slidable rectangle.",34,null],[12,"frame_color","","The color of the Slider&#39;s frame.",34,null],[12,"label_color","","The color of the Slider&#39;s label.",34,null],[12,"label_font_size","","The font-size for the Slider&#39;s label.",34,null],[3,"TabsStyle","","The styling for Canvas Tabs.",null,null],[12,"maybe_layout","","The direction in which the tabs will be laid out.",35,null],[12,"maybe_bar_width","","The width of the tab bar.",35,null],[12,"maybe_label_color","","The color of the tabs&#39; labels.",35,null],[12,"maybe_label_font_size","","The font size for the tabs&#39; labels.",35,null],[12,"canvas","","Styling for each of the canvasses passed to the Canvas.",35,null],[3,"TextBoxStyle","","Unique graphical styling for the TextBox.",null,null],[12,"text_padding","","The length of the gap between the bounding rectangle&#39;s frame and the edge of the text.",36,null],[12,"color","","Color of the rectangle behind the text.",36,null],[12,"frame","","The width of the bounding `FramedRectangle` frame.",36,null],[12,"frame_color","","The color of the `FramedRecangle`&#39;s frame.",36,null],[12,"text_color","","The color of the `TextEdit` widget.",36,null],[12,"font_size","","The font size for the text.",36,null],[12,"x_align","","The horizontal alignment of the text.",36,null],[3,"TextEditStyle","","Unique graphical styling for the TextEdit.",null,null],[12,"color","","The color of the text (this includes cursor and selection color).",37,null],[12,"font_size","","The font size for the text.",37,null],[12,"x_align","","The horizontal alignment of the text.",37,null],[12,"y_align","","The vertical alignment of the text.",37,null],[12,"line_spacing","","The vertical space between each line of text.",37,null],[12,"line_wrap","","The way in which text is wrapped at the end of a line.",37,null],[12,"restrict_to_height","","Do not allow to enter text that would exceed the bounds of the `TextEdit`&#39;s `Rect`.",37,null],[3,"TitleBarStyle","","Unique styling for the **TitleBar** widget.",null,null],[12,"color","","The color of the TitleBar&#39;s rectangle surface.",38,null],[12,"frame","","The width of the frame surrounding the TitleBar&#39;s rectangle.",38,null],[12,"frame_color","","The color of the TitleBar&#39;s frame.",38,null],[12,"text_color","","The color of the title bar&#39;s text.",38,null],[12,"font_size","","The font size for the title bar&#39;s text.",38,null],[12,"maybe_wrap","","The way in which the title bar&#39;s text should wrap.",38,null],[12,"line_spacing","","The distance between lines for multi-line title bar text.",38,null],[12,"text_align","","The horizontal alignment of the title bar text.",38,null],[3,"ToggleStyle","","Styling for the Toggle including coloring, framing and labelling.",null,null],[12,"color","","Color of the Toggle&#39;s pressable area.",39,null],[12,"frame","","The width of the rectangular frame surrounding the Toggle.",39,null],[12,"frame_color","","The color of the Toggle&#39;s frame.",39,null],[12,"label_color","","The color of the Toggle&#39;s Text label.",39,null],[12,"label_font_size","","The font size for the Toggle&#39;s Text label.",39,null],[3,"XYPadStyle","","Unique graphical styling for the XYPad.",null,null],[12,"color","","The color of the XYPad&#39;s rectangle.",40,null],[12,"frame","","The width of the frame surrounding the rectangle.",40,null],[12,"frame_color","","The color of the surrounding rectangle frame.",40,null],[12,"label_color","","The color of the XYPad&#39;s label and value label text.",40,null],[12,"label_font_size","","The font size for the XYPad&#39;s label.",40,null],[12,"value_font_size","","The font size for the XYPad&#39;s *value* label.",40,null],[12,"line_thickness","","The thickness of the XYPad&#39;s crosshair lines.",40,null],[3,"Background","","A type for drawing a colored window background.",null,null],[3,"Padding","","The distance between the inner edge of a frame and the outer edge of the inner content.",null,null],[12,"x","","Padding on the start and end of the *x* axis.",41,null],[12,"y","","Padding on the start and end of the *y* axis.",41,null],[3,"Range","","Some start and end position along a single axis.",null,null],[12,"start","","The start of some `Range` along an axis.",42,null],[12,"end","","The end of some `Range` along an axis.",42,null],[3,"Rect","","Defines a Rectangle&#39;s bounds across the x and y axes.",null,null],[12,"x","","The start and end positions of the Rectangle on the x axis.",43,null],[12,"y","","The start and end positions of the Rectangle on the y axis.",43,null],[3,"Ui","","`Ui` is the most important type within Conrod and is necessary for rendering and maintaining\nwidget state.\n# Ui Handles the following:\n* Contains the state of all widgets which can be indexed via their widget::Index.\n* Stores rendering state for each widget until the end of each render cycle.\n* Contains the theme used for default styling of the widgets.\n* Maintains the latest user input state (for mouse and keyboard).\n* Maintains the latest window dimensions.",null,null],[12,"theme","","The theme used to set default styling for widgets.",44,null],[12,"glyph_cache","","Cache for character textures, used for label width calculation and glyph rendering.",44,null],[12,"window","","An index into the root widget of the graph, representing the entire window.",44,null],[12,"global_input","","Handles aggregation of events and providing them to Widgets",44,null],[12,"win_w","","Window width.",44,null],[12,"win_h","","Window height.",44,null],[3,"UiCell","","A wrapper around the `Ui` that restricts the user from mutating the `Ui` in certain ways while\nin the scope of the `Ui::set_widgets` function and within `Widget`s&#39; `update` methods. Using\nthe `UiCell`, users may access the `Ui` immutably (via `Deref`) however they wish, however they\nmay only mutate the `Ui` via the `&amp;mut self` methods provided by the `UiCell`.",null,null],[3,"CommonBuilder","","A struct containing builder data common to all **Widget** types.",null,null],[12,"style","","Styling and positioning data that is common between all widget types.",45,null],[12,"maybe_parent_idx","","The parent widget of the Widget.",45,null],[12,"is_floating","","Whether or not the Widget is a &quot;floating&quot; Widget.",45,null],[12,"crop_kids","","Whether or not the children of this **Widget** should be cropped to its `kid_area`.",45,null],[12,"maybe_x_scroll","","Arguments to the scrolling of the widget&#39;s *x* axis.",45,null],[12,"maybe_y_scroll","","Arguments to the scrolling of the widget&#39;s *y* axis.",45,null],[12,"place_on_kid_area","","Whether or not the **Widget** should be placed on the kid_area.",45,null],[12,"maybe_graphics_for","","Describes whether or not the **Widget** is instantiated as a graphical element for some\nother **Widget**.",45,null],[3,"CommonState","","A wrapper around state that is common to all **Widget** types.",null,null],[12,"rect","","The rectangle describing the `Widget`&#39;s area.",46,null],[12,"depth","","The rendering depth for the Widget (the default is 0.0).",46,null],[12,"maybe_floating","","Floating state for the widget if it is floating.",46,null],[12,"kid_area","","The area of the widget upon which kid widgets are placed.",46,null],[3,"CommonStyle","","Styling and positioning data that is common between all widget types.",null,null],[12,"maybe_x_dimension","","The width of a Widget.",47,null],[12,"maybe_y_dimension","","The height of a Widget.",47,null],[12,"maybe_x_position","","The position of a Widget along the *x* axis.",47,null],[12,"maybe_y_position","","The position of a Widget along the *y* axis.",47,null],[12,"maybe_depth","","The rendering Depth of the Widget.",47,null],[3,"Floating","","State necessary for &quot;floating&quot; (pop-up style) widgets.",null,null],[12,"time_last_clicked","","The time the **Widget** was last clicked (used for depth sorting in the widget **Graph**).",48,null],[3,"IndexSlot","","A small cache for a single unique **NodeIndex**.",null,null],[3,"UpdateArgs","","Arguments for the [**Widget::update**](./trait.Widget#method.update) method in a struct to\nsimplify the method signature.",null,null],[12,"idx","","The **Widget**&#39;s unique index.",49,null],[12,"maybe_parent_idx","","The **Widget**&#39;s parent unique index, if there is one.",49,null],[12,"prev","","The **Widget**&#39;s previous state. Specifically, the state that is common between all widgets,\nsuch as positioning, floatability, draggability, etc.",49,null],[12,"state","","A wrapper around the **Widget**&#39;s unique state, providing methods for both immutably viewing\nand mutably updating the state.",49,null],[12,"rect","","The rectangle describing the **Widget**&#39;s area.",49,null],[12,"style","","The **Widget**&#39;s current **Widget::Style**.",49,null],[12,"ui","","Restricted access to the `Ui`.",49,null],[3,"KidArea","","The area upon which a **Widget**&#39;s child widgets will be placed.",null,null],[12,"rect","","The **Rect** bounds describing the position and area.",50,null],[12,"pad","","The distance between the edge of the area and where the widgets will be placed.",50,null],[3,"KidAreaArgs","","Arguments to the [**Widget::kid_area**](./trait.Widget#method.kid_area) method in a struct to\nsimplify the method signature.",null,null],[12,"rect","","The **Rect** describing the **Widget**&#39;s position and dimensions.",51,null],[12,"style","","Current **Widget::Style** of the **Widget**.",51,null],[12,"theme","","The active **Theme** within the **Ui**.",51,null],[12,"glyph_cache","","The **Ui**&#39;s **GlyphCache** (for determining text width).",51,null],[3,"WidgetCommonState","","A wrapper around state that is common to all **Widget** types.",null,null],[12,"rect","","The rectangle describing the `Widget`&#39;s area.",46,null],[12,"depth","","The rendering depth for the Widget (the default is 0.0).",46,null],[12,"maybe_floating","","Floating state for the widget if it is floating.",46,null],[12,"kid_area","","The area of the widget upon which kid widgets are placed.",46,null],[3,"WidgetId","","Unique, public widget identifier. Each widget must use a unique `WidgetId` so that it&#39;s state\ncan be cached within the `Ui` type. The reason we use a usize is because widgets are cached\nwithin a `Graph` whose max number of `Node`s is indexed by usize.",null,null],[12,"0","","",52,null],[3,"WidgetState","","A wrapper around a **Widget**&#39;s unique **Widget::State**.",null,null],[4,"TextWrap","","The way in which text should wrap around the width.",null,null],[13,"Character","","Wrap at the first character that exceeds the width.",53,null],[13,"Whitespace","","Wrap at the first word that exceeds the width.",53,null],[4,"FileNavigatorEvent","","The kinds of events that the `FileNavigator` may `react` to.",null,null],[13,"ChangeDirectory","","The directory at the top of the stack has changed.",54,null],[13,"ChangeSelection","","The selection of files in the top of the stack has changed.",54,null],[13,"DoubleClick","","A file was double clicked.",54,null],[13,"KeyPress","","A key was pressed over a selection of entries.",54,null],[4,"RangeSliderEdge","","Either the `Start` or `End` `Edge` of the `RangeSlider`&#39;s bar.",null,null],[13,"Start","","The start edge of the scrollbar handle.",55,null],[13,"End","","The end edge of the scrollbar handle.",55,null],[4,"ShapeStyle","","The style for some 2D shape.",null,null],[13,"Outline","","The outline of the shape with this style.",56,null],[13,"Fill","","A rectangle filled with this color.",56,null],[4,"Framing","","To be used as a parameter for defining the aesthetic\nof the widget frame.",null,null],[13,"Frame","","Frame width and color.",57,null],[13,"NoFrame","","No frame.",57,null],[4,"Align","","The orientation of **Align**ment along some **Axis**.",null,null],[13,"Start","","**Align** our **Start** with the **Start** of some other widget along the **Axis**.",58,null],[13,"Middle","","**Align** our **Middle** with the **Middle** of some other widget along the **Axis**.",58,null],[13,"End","","**Align** our **End** with the **End** of some other widget along the **Axis**.",58,null],[4,"Axis","","Represents either **Axis** in the 2-dimensional plane.",null,null],[13,"X","","The horizontal plane&#39;s Axis.",59,null],[13,"Y","","The vertical plane&#39;s Axis.",59,null],[4,"Corner","","Either of the four corners of a **Rect**.",null,null],[13,"TopLeft","","The top left corner of a **Rect**.",60,null],[13,"TopRight","","The top right corner of a **Rect**.",60,null],[13,"BottomLeft","","The bottom left corner of a **Rect**.",60,null],[13,"BottomRight","","The bottom right corner of a **Rect**.",60,null],[4,"Direction","","Directionally positioned, normally relative to some other widget.",null,null],[13,"Forwards","","Positioned forwards (*positive* **Scalar**) along some **Axis**.",61,null],[13,"Backwards","","Positioned backwards (*negative* **Scalar**) along some **Axis**.",61,null],[4,"Dimension","","The length of a **Widget** over either the *x* or *y* axes.",null,null],[13,"Absolute","","Some specific length has been given.",62,null],[13,"Of","","The dimension should match that of the widget at the given index.",62,null],[13,"KidAreaOf","","The dimension should match that of the `kid_area` of the widget at the given index.",62,null],[4,"Edge","","Represents either the **Start** or **End** **Edge** of a **Range**.",null,null],[13,"Start","","The beginning of a **Range**.",63,null],[13,"End","","The end of a **Range**.",63,null],[4,"Place","","Place the widget at a position on some other widget.",null,null],[13,"Start","","Place upon the **Start** of the Widget&#39;s `kid_area`.",64,null],[13,"Middle","","Place upon the **Middle** of the Widget&#39;s `kid_area`.",64,null],[13,"End","","Place upon the **End** of the Widget&#39;s `kid_area`.",64,null],[4,"Position","","Some **Position** of some **Widget** along a single axis.",null,null],[13,"Absolute","","A specific position.",65,null],[13,"Relative","","A position relative to some other Widget.",65,null],[13,"Align","","A position aligned with some other Widget.",65,null],[13,"Direction","","A direction relative to some other Widget.",65,null],[13,"Place","","A position at a place on some other Widget.",65,null],[4,"MaybeParent","","The builder argument for the **Widget**&#39;s parent.",null,null],[13,"None","","The user specified the widget should not have any parents, so the Root will be used.",66,null],[13,"Some","","The user gave a specific parent widget.",66,null],[13,"Unspecified","","No parent widget was specified, so we will assume they want the last parent.",66,null],[4,"WidgetIndex","","An index either given in the form of a publicly instantiated `Widget`&#39;s `WidgetId`, or an\ninternally instantiated `Widget`&#39;s `NodeIndex`,",null,null],[13,"Public","","A public identifier given by a user of a conrod library/widget, usually generated by the\n`widget_ids` macro.",67,null],[13,"Internal","","An index to an internal widget, usually used to construct some other widget.",67,null],[5,"default_x_dimension","","Determines the default **Dimension** for a **Widget**.",null,{"inputs":[{"name":"w"},{"name":"ui"}],"output":{"name":"dimension"}}],[5,"default_y_dimension","","Determines the default **Dimension** for a **Widget**.",null,{"inputs":[{"name":"w"},{"name":"ui"}],"output":{"name":"dimension"}}],[0,"scroll","","Scroll related types and logic.",null,null],[3,"Scroll","conrod::scroll","Arguments given via a scrollable `Widget`&#39;s builder methods for the scrolling along a single\naxis.",null,null],[3,"State","","Scroll state calculated for a single axis.",null,null],[12,"offset","","The distance that has been scrolled from the origin.",68,null],[12,"offset_bounds","","The start and end bounds for the offset along the axis.",68,null],[12,"scrollable_range_len","","The total range which may be &quot;offset&quot; from the &quot;root&quot; range (aka the `kid_area`).",68,null],[12,"is_scrolling","","Whether or not the this axis is currently scrolling.",68,null],[4,"X","","Behaviour for scrolling across the `X` axis.",null,null],[4,"Y","","Behaviour for scrolling across the `Y` axis.",null,null],[6,"StateX","","State for scrolling along the **X** axis.",null,null],[6,"StateY","","State for scrolling along the **Y** axis.",null,null],[8,"Axis","","Methods for distinguishing behaviour between both scroll axes at compile-time.",null,null],[10,"parallel_range","","The range of the given `Rect` that is parallel with this `Axis`.",69,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[10,"perpendicular_range","","The range of the given `Rect` that is perpendicular with this `Axis`.",69,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[10,"padding_range","","Given some rectangular `Padding`, return the `Range` that corresponds with this `Axis`.",69,{"inputs":[{"name":"padding"}],"output":{"name":"range"}}],[10,"mouse_scalar","","The coordinate of the given mouse position that corresponds with this `Axis`.",69,{"inputs":[{"name":"point"}],"output":{"name":"scalar"}}],[10,"offset_direction","","A `Scalar` multiplier representing the direction in which positive offset shifts the\n`scrollable_range` (either `-1.0` or `1.0).",69,{"inputs":[],"output":{"name":"scalar"}}],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"fmt","","",70,null],[11,"clone","","",70,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"fmt","","",68,null],[11,"clone","","",68,null],[11,"eq","","",71,null],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"eq","","",72,null],[11,"fmt","","",72,null],[11,"clone","","",72,null],[11,"new","","The default `Scroll` args.",70,{"inputs":[],"output":{"name":"self"}}],[11,"update","","Calculate the new scroll state for the single axis of a `Widget`.",68,{"inputs":[{"name":"ui"},{"name":"index"},{"name":"kidarea"},{"name":"option"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"parallel_range","","",71,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[11,"perpendicular_range","","",71,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[11,"padding_range","","",71,{"inputs":[{"name":"padding"}],"output":{"name":"range"}}],[11,"mouse_scalar","","",71,{"inputs":[{"name":"point"}],"output":{"name":"scalar"}}],[11,"offset_direction","","",71,{"inputs":[],"output":{"name":"scalar"}}],[11,"parallel_range","","",72,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[11,"perpendicular_range","","",72,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[11,"padding_range","","",72,{"inputs":[{"name":"padding"}],"output":{"name":"range"}}],[11,"mouse_scalar","","",72,{"inputs":[{"name":"point"}],"output":{"name":"scalar"}}],[11,"offset_direction","","",72,{"inputs":[],"output":{"name":"scalar"}}],[0,"backend","conrod","Traits and functionality related to Conrod&#39;s generic backend.",null,null],[8,"CharacterCache","conrod::backend","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The textyre type associated with the character cache.",0,null],[10,"character","","Get reference to character.",0,null],[11,"width","","Return the width for some given text.",0,null],[8,"Graphics","","Implemented by all graphics back-ends.",null,null],[16,"Texture","","The texture type associated with the back-end.",1,null],[10,"clear_color","","Clears background with a color.",1,null],[10,"clear_stencil","","Clears stencil buffer with a value, usually 0.",1,null],[10,"tri_list","","Renders list of 2d triangles using a solid color.",1,null],[10,"tri_list_uv","","Renders list of 2d triangles using a color and a texture.",1,null],[11,"rectangle","","Draws a rectangle.",1,null],[11,"polygon","","Draws a polygon.",1,null],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",1,null],[11,"image","","Draws image.",1,null],[11,"ellipse","","Draws ellipse.",1,null],[11,"line","","Draws line.",1,null],[11,"circle_arc","","Draws circle arc.",1,null],[11,"deform_image","","Draws deformed image.",1,null],[0,"event","","The backend for conrod&#39;s event system.",null,null],[4,"Button","conrod::backend::event","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",73,null],[13,"Mouse","","A mouse button.",73,null],[13,"Controller","","A controller button.",73,null],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not guaranteed consistent across\nbackends.",null,null],[12,"id","","Which controller moved.",74,null],[12,"axis","","The axis that moved.",74,null],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though backends may use\na different range for various devices.",74,null],[3,"ControllerButton","","Components of a controller button event. Not guaranteed consistent across\nbackends.",null,null],[12,"id","","Which controller was the button on.",75,null],[12,"button","","Which button was pressed.",75,null],[4,"Key","","Represent a keyboard key.\nKeycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",null,null],[13,"Unknown","","",76,null],[13,"Backspace","","",76,null],[13,"Tab","","",76,null],[13,"Return","","",76,null],[13,"Escape","","",76,null],[13,"Space","","",76,null],[13,"Exclaim","","",76,null],[13,"Quotedbl","","",76,null],[13,"Hash","","",76,null],[13,"Dollar","","",76,null],[13,"Percent","","",76,null],[13,"Ampersand","","",76,null],[13,"Quote","","",76,null],[13,"LeftParen","","",76,null],[13,"RightParen","","",76,null],[13,"Asterisk","","",76,null],[13,"Plus","","",76,null],[13,"Comma","","",76,null],[13,"Minus","","",76,null],[13,"Period","","",76,null],[13,"Slash","","",76,null],[13,"D0","","",76,null],[13,"D1","","",76,null],[13,"D2","","",76,null],[13,"D3","","",76,null],[13,"D4","","",76,null],[13,"D5","","",76,null],[13,"D6","","",76,null],[13,"D7","","",76,null],[13,"D8","","",76,null],[13,"D9","","",76,null],[13,"Colon","","",76,null],[13,"Semicolon","","",76,null],[13,"Less","","",76,null],[13,"Equals","","",76,null],[13,"Greater","","",76,null],[13,"Question","","",76,null],[13,"At","","",76,null],[13,"LeftBracket","","",76,null],[13,"Backslash","","",76,null],[13,"RightBracket","","",76,null],[13,"Caret","","",76,null],[13,"Underscore","","",76,null],[13,"Backquote","","",76,null],[13,"A","","",76,null],[13,"B","","",76,null],[13,"C","","",76,null],[13,"D","","",76,null],[13,"E","","",76,null],[13,"F","","",76,null],[13,"G","","",76,null],[13,"H","","",76,null],[13,"I","","",76,null],[13,"J","","",76,null],[13,"K","","",76,null],[13,"L","","",76,null],[13,"M","","",76,null],[13,"N","","",76,null],[13,"O","","",76,null],[13,"P","","",76,null],[13,"Q","","",76,null],[13,"R","","",76,null],[13,"S","","",76,null],[13,"T","","",76,null],[13,"U","","",76,null],[13,"V","","",76,null],[13,"W","","",76,null],[13,"X","","",76,null],[13,"Y","","",76,null],[13,"Z","","",76,null],[13,"Delete","","",76,null],[13,"CapsLock","","",76,null],[13,"F1","","",76,null],[13,"F2","","",76,null],[13,"F3","","",76,null],[13,"F4","","",76,null],[13,"F5","","",76,null],[13,"F6","","",76,null],[13,"F7","","",76,null],[13,"F8","","",76,null],[13,"F9","","",76,null],[13,"F10","","",76,null],[13,"F11","","",76,null],[13,"F12","","",76,null],[13,"PrintScreen","","",76,null],[13,"ScrollLock","","",76,null],[13,"Pause","","",76,null],[13,"Insert","","",76,null],[13,"Home","","",76,null],[13,"PageUp","","",76,null],[13,"End","","",76,null],[13,"PageDown","","",76,null],[13,"Right","","",76,null],[13,"Left","","",76,null],[13,"Down","","",76,null],[13,"Up","","",76,null],[13,"NumLockClear","","",76,null],[13,"NumPadDivide","","",76,null],[13,"NumPadMultiply","","",76,null],[13,"NumPadMinus","","",76,null],[13,"NumPadPlus","","",76,null],[13,"NumPadEnter","","",76,null],[13,"NumPad1","","",76,null],[13,"NumPad2","","",76,null],[13,"NumPad3","","",76,null],[13,"NumPad4","","",76,null],[13,"NumPad5","","",76,null],[13,"NumPad6","","",76,null],[13,"NumPad7","","",76,null],[13,"NumPad8","","",76,null],[13,"NumPad9","","",76,null],[13,"NumPad0","","",76,null],[13,"NumPadPeriod","","",76,null],[13,"Application","","",76,null],[13,"Power","","",76,null],[13,"NumPadEquals","","",76,null],[13,"F13","","",76,null],[13,"F14","","",76,null],[13,"F15","","",76,null],[13,"F16","","",76,null],[13,"F17","","",76,null],[13,"F18","","",76,null],[13,"F19","","",76,null],[13,"F20","","",76,null],[13,"F21","","",76,null],[13,"F22","","",76,null],[13,"F23","","",76,null],[13,"F24","","",76,null],[13,"Execute","","",76,null],[13,"Help","","",76,null],[13,"Menu","","",76,null],[13,"Select","","",76,null],[13,"Stop","","",76,null],[13,"Again","","",76,null],[13,"Undo","","",76,null],[13,"Cut","","",76,null],[13,"Copy","","",76,null],[13,"Paste","","",76,null],[13,"Find","","",76,null],[13,"Mute","","",76,null],[13,"VolumeUp","","",76,null],[13,"VolumeDown","","",76,null],[13,"NumPadComma","","",76,null],[13,"NumPadEqualsAS400","","",76,null],[13,"AltErase","","",76,null],[13,"Sysreq","","",76,null],[13,"Cancel","","",76,null],[13,"Clear","","",76,null],[13,"Prior","","",76,null],[13,"Return2","","",76,null],[13,"Separator","","",76,null],[13,"Out","","",76,null],[13,"Oper","","",76,null],[13,"ClearAgain","","",76,null],[13,"CrSel","","",76,null],[13,"ExSel","","",76,null],[13,"NumPad00","","",76,null],[13,"NumPad000","","",76,null],[13,"ThousandsSeparator","","",76,null],[13,"DecimalSeparator","","",76,null],[13,"CurrencyUnit","","",76,null],[13,"CurrencySubUnit","","",76,null],[13,"NumPadLeftParen","","",76,null],[13,"NumPadRightParen","","",76,null],[13,"NumPadLeftBrace","","",76,null],[13,"NumPadRightBrace","","",76,null],[13,"NumPadTab","","",76,null],[13,"NumPadBackspace","","",76,null],[13,"NumPadA","","",76,null],[13,"NumPadB","","",76,null],[13,"NumPadC","","",76,null],[13,"NumPadD","","",76,null],[13,"NumPadE","","",76,null],[13,"NumPadF","","",76,null],[13,"NumPadXor","","",76,null],[13,"NumPadPower","","",76,null],[13,"NumPadPercent","","",76,null],[13,"NumPadLess","","",76,null],[13,"NumPadGreater","","",76,null],[13,"NumPadAmpersand","","",76,null],[13,"NumPadDblAmpersand","","",76,null],[13,"NumPadVerticalBar","","",76,null],[13,"NumPadDblVerticalBar","","",76,null],[13,"NumPadColon","","",76,null],[13,"NumPadHash","","",76,null],[13,"NumPadSpace","","",76,null],[13,"NumPadAt","","",76,null],[13,"NumPadExclam","","",76,null],[13,"NumPadMemStore","","",76,null],[13,"NumPadMemRecall","","",76,null],[13,"NumPadMemClear","","",76,null],[13,"NumPadMemAdd","","",76,null],[13,"NumPadMemSubtract","","",76,null],[13,"NumPadMemMultiply","","",76,null],[13,"NumPadMemDivide","","",76,null],[13,"NumPadPlusMinus","","",76,null],[13,"NumPadClear","","",76,null],[13,"NumPadClearEntry","","",76,null],[13,"NumPadBinary","","",76,null],[13,"NumPadOctal","","",76,null],[13,"NumPadDecimal","","",76,null],[13,"NumPadHexadecimal","","",76,null],[13,"LCtrl","","",76,null],[13,"LShift","","",76,null],[13,"LAlt","","",76,null],[13,"LGui","","",76,null],[13,"RCtrl","","",76,null],[13,"RShift","","",76,null],[13,"RAlt","","",76,null],[13,"RGui","","",76,null],[13,"Mode","","",76,null],[13,"AudioNext","","",76,null],[13,"AudioPrev","","",76,null],[13,"AudioStop","","",76,null],[13,"AudioPlay","","",76,null],[13,"AudioMute","","",76,null],[13,"MediaSelect","","",76,null],[13,"Www","","",76,null],[13,"Mail","","",76,null],[13,"Calculator","","",76,null],[13,"Computer","","",76,null],[13,"AcSearch","","",76,null],[13,"AcHome","","",76,null],[13,"AcBack","","",76,null],[13,"AcForward","","",76,null],[13,"AcStop","","",76,null],[13,"AcRefresh","","",76,null],[13,"AcBookmarks","","",76,null],[13,"BrightnessDown","","",76,null],[13,"BrightnessUp","","",76,null],[13,"DisplaySwitch","","",76,null],[13,"KbdIllumToggle","","",76,null],[13,"KbdIllumDown","","",76,null],[13,"KbdIllumUp","","",76,null],[13,"Eject","","",76,null],[13,"Sleep","","",76,null],[0,"keyboard","","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","conrod::backend::event::keyboard","",null,null],[17,"NO_MODIFIER","","No modifier.",null,null],[17,"CTRL","","Ctrl.",null,null],[17,"SHIFT","","Shift.",null,null],[17,"ALT","","Alt.",null,null],[17,"GUI","","Gui.",null,null],[17,"CTRL_SHIFT","","Ctrl + Shift.",null,null],[17,"CTRL_ALT","","Ctrl + Alt.",null,null],[17,"CTRL_GUI","","Ctrl + Gui.",null,null],[17,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",null,null],[17,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",null,null],[17,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",null,null],[17,"SHIFT_ALT","","Shift + Alt.",null,null],[17,"SHIFT_GUI","","Shift + Gui.",null,null],[17,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",null,null],[17,"ALT_GUI","","Alt + Gui.",null,null],[4,"Key","","Represent a keyboard key.\nKeycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",null,null],[13,"Unknown","","",76,null],[13,"Backspace","","",76,null],[13,"Tab","","",76,null],[13,"Return","","",76,null],[13,"Escape","","",76,null],[13,"Space","","",76,null],[13,"Exclaim","","",76,null],[13,"Quotedbl","","",76,null],[13,"Hash","","",76,null],[13,"Dollar","","",76,null],[13,"Percent","","",76,null],[13,"Ampersand","","",76,null],[13,"Quote","","",76,null],[13,"LeftParen","","",76,null],[13,"RightParen","","",76,null],[13,"Asterisk","","",76,null],[13,"Plus","","",76,null],[13,"Comma","","",76,null],[13,"Minus","","",76,null],[13,"Period","","",76,null],[13,"Slash","","",76,null],[13,"D0","","",76,null],[13,"D1","","",76,null],[13,"D2","","",76,null],[13,"D3","","",76,null],[13,"D4","","",76,null],[13,"D5","","",76,null],[13,"D6","","",76,null],[13,"D7","","",76,null],[13,"D8","","",76,null],[13,"D9","","",76,null],[13,"Colon","","",76,null],[13,"Semicolon","","",76,null],[13,"Less","","",76,null],[13,"Equals","","",76,null],[13,"Greater","","",76,null],[13,"Question","","",76,null],[13,"At","","",76,null],[13,"LeftBracket","","",76,null],[13,"Backslash","","",76,null],[13,"RightBracket","","",76,null],[13,"Caret","","",76,null],[13,"Underscore","","",76,null],[13,"Backquote","","",76,null],[13,"A","","",76,null],[13,"B","","",76,null],[13,"C","","",76,null],[13,"D","","",76,null],[13,"E","","",76,null],[13,"F","","",76,null],[13,"G","","",76,null],[13,"H","","",76,null],[13,"I","","",76,null],[13,"J","","",76,null],[13,"K","","",76,null],[13,"L","","",76,null],[13,"M","","",76,null],[13,"N","","",76,null],[13,"O","","",76,null],[13,"P","","",76,null],[13,"Q","","",76,null],[13,"R","","",76,null],[13,"S","","",76,null],[13,"T","","",76,null],[13,"U","","",76,null],[13,"V","","",76,null],[13,"W","","",76,null],[13,"X","","",76,null],[13,"Y","","",76,null],[13,"Z","","",76,null],[13,"Delete","","",76,null],[13,"CapsLock","","",76,null],[13,"F1","","",76,null],[13,"F2","","",76,null],[13,"F3","","",76,null],[13,"F4","","",76,null],[13,"F5","","",76,null],[13,"F6","","",76,null],[13,"F7","","",76,null],[13,"F8","","",76,null],[13,"F9","","",76,null],[13,"F10","","",76,null],[13,"F11","","",76,null],[13,"F12","","",76,null],[13,"PrintScreen","","",76,null],[13,"ScrollLock","","",76,null],[13,"Pause","","",76,null],[13,"Insert","","",76,null],[13,"Home","","",76,null],[13,"PageUp","","",76,null],[13,"End","","",76,null],[13,"PageDown","","",76,null],[13,"Right","","",76,null],[13,"Left","","",76,null],[13,"Down","","",76,null],[13,"Up","","",76,null],[13,"NumLockClear","","",76,null],[13,"NumPadDivide","","",76,null],[13,"NumPadMultiply","","",76,null],[13,"NumPadMinus","","",76,null],[13,"NumPadPlus","","",76,null],[13,"NumPadEnter","","",76,null],[13,"NumPad1","","",76,null],[13,"NumPad2","","",76,null],[13,"NumPad3","","",76,null],[13,"NumPad4","","",76,null],[13,"NumPad5","","",76,null],[13,"NumPad6","","",76,null],[13,"NumPad7","","",76,null],[13,"NumPad8","","",76,null],[13,"NumPad9","","",76,null],[13,"NumPad0","","",76,null],[13,"NumPadPeriod","","",76,null],[13,"Application","","",76,null],[13,"Power","","",76,null],[13,"NumPadEquals","","",76,null],[13,"F13","","",76,null],[13,"F14","","",76,null],[13,"F15","","",76,null],[13,"F16","","",76,null],[13,"F17","","",76,null],[13,"F18","","",76,null],[13,"F19","","",76,null],[13,"F20","","",76,null],[13,"F21","","",76,null],[13,"F22","","",76,null],[13,"F23","","",76,null],[13,"F24","","",76,null],[13,"Execute","","",76,null],[13,"Help","","",76,null],[13,"Menu","","",76,null],[13,"Select","","",76,null],[13,"Stop","","",76,null],[13,"Again","","",76,null],[13,"Undo","","",76,null],[13,"Cut","","",76,null],[13,"Copy","","",76,null],[13,"Paste","","",76,null],[13,"Find","","",76,null],[13,"Mute","","",76,null],[13,"VolumeUp","","",76,null],[13,"VolumeDown","","",76,null],[13,"NumPadComma","","",76,null],[13,"NumPadEqualsAS400","","",76,null],[13,"AltErase","","",76,null],[13,"Sysreq","","",76,null],[13,"Cancel","","",76,null],[13,"Clear","","",76,null],[13,"Prior","","",76,null],[13,"Return2","","",76,null],[13,"Separator","","",76,null],[13,"Out","","",76,null],[13,"Oper","","",76,null],[13,"ClearAgain","","",76,null],[13,"CrSel","","",76,null],[13,"ExSel","","",76,null],[13,"NumPad00","","",76,null],[13,"NumPad000","","",76,null],[13,"ThousandsSeparator","","",76,null],[13,"DecimalSeparator","","",76,null],[13,"CurrencyUnit","","",76,null],[13,"CurrencySubUnit","","",76,null],[13,"NumPadLeftParen","","",76,null],[13,"NumPadRightParen","","",76,null],[13,"NumPadLeftBrace","","",76,null],[13,"NumPadRightBrace","","",76,null],[13,"NumPadTab","","",76,null],[13,"NumPadBackspace","","",76,null],[13,"NumPadA","","",76,null],[13,"NumPadB","","",76,null],[13,"NumPadC","","",76,null],[13,"NumPadD","","",76,null],[13,"NumPadE","","",76,null],[13,"NumPadF","","",76,null],[13,"NumPadXor","","",76,null],[13,"NumPadPower","","",76,null],[13,"NumPadPercent","","",76,null],[13,"NumPadLess","","",76,null],[13,"NumPadGreater","","",76,null],[13,"NumPadAmpersand","","",76,null],[13,"NumPadDblAmpersand","","",76,null],[13,"NumPadVerticalBar","","",76,null],[13,"NumPadDblVerticalBar","","",76,null],[13,"NumPadColon","","",76,null],[13,"NumPadHash","","",76,null],[13,"NumPadSpace","","",76,null],[13,"NumPadAt","","",76,null],[13,"NumPadExclam","","",76,null],[13,"NumPadMemStore","","",76,null],[13,"NumPadMemRecall","","",76,null],[13,"NumPadMemClear","","",76,null],[13,"NumPadMemAdd","","",76,null],[13,"NumPadMemSubtract","","",76,null],[13,"NumPadMemMultiply","","",76,null],[13,"NumPadMemDivide","","",76,null],[13,"NumPadPlusMinus","","",76,null],[13,"NumPadClear","","",76,null],[13,"NumPadClearEntry","","",76,null],[13,"NumPadBinary","","",76,null],[13,"NumPadOctal","","",76,null],[13,"NumPadDecimal","","",76,null],[13,"NumPadHexadecimal","","",76,null],[13,"LCtrl","","",76,null],[13,"LShift","","",76,null],[13,"LAlt","","",76,null],[13,"LGui","","",76,null],[13,"RCtrl","","",76,null],[13,"RShift","","",76,null],[13,"RAlt","","",76,null],[13,"RGui","","",76,null],[13,"Mode","","",76,null],[13,"AudioNext","","",76,null],[13,"AudioPrev","","",76,null],[13,"AudioStop","","",76,null],[13,"AudioPlay","","",76,null],[13,"AudioMute","","",76,null],[13,"MediaSelect","","",76,null],[13,"Www","","",76,null],[13,"Mail","","",76,null],[13,"Calculator","","",76,null],[13,"Computer","","",76,null],[13,"AcSearch","","",76,null],[13,"AcHome","","",76,null],[13,"AcBack","","",76,null],[13,"AcForward","","",76,null],[13,"AcStop","","",76,null],[13,"AcRefresh","","",76,null],[13,"AcBookmarks","","",76,null],[13,"BrightnessDown","","",76,null],[13,"BrightnessUp","","",76,null],[13,"DisplaySwitch","","",76,null],[13,"KbdIllumToggle","","",76,null],[13,"KbdIllumDown","","",76,null],[13,"KbdIllumUp","","",76,null],[13,"Eject","","",76,null],[13,"Sleep","","",76,null],[4,"Motion","conrod::backend::event","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",77,null],[13,"MouseRelative","","x and y in relative coordinates.",77,null],[13,"MouseScroll","","x and y in scroll ticks.",77,null],[13,"ControllerAxis","","controller axis move event.",77,null],[13,"Touch","","touch event.",77,null],[4,"MouseButton","","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",78,null],[13,"Left","","Left mouse button.",78,null],[13,"Right","","Right mouse button.",78,null],[13,"Middle","","Middle mouse button.",78,null],[13,"X1","","Extra mouse button number 1.",78,null],[13,"X2","","Extra mouse button number 2.",78,null],[13,"Button6","","Mouse button number 6.",78,null],[13,"Button7","","Mouse button number 7.",78,null],[13,"Button8","","Mouse button number 8.",78,null],[4,"Input","","Models input events.",null,null],[13,"Press","","Pressed a button.",79,null],[13,"Release","","Released a button.",79,null],[13,"Move","","Moved mouse cursor.",79,null],[13,"Text","","Text (usually from keyboard).",79,null],[13,"Resize","","Window got resized.",79,null],[13,"Focus","","Window gained or lost focus.",79,null],[13,"Cursor","","Window gained or lost cursor.",79,null],[3,"ModifierKey","","",null,null],[4,"Event","","Adds render and update events to input events",null,null],[13,"Render","","Render graphics.",80,null],[13,"AfterRender","","After rendering and swapping buffers.",80,null],[13,"Update","","Update the state of the application.",80,null],[13,"Idle","","Do background tasks that can be done incrementally.",80,null],[13,"Input","","Input event.",80,null],[6,"RawEvent","","The event type that is used by conrod to track inputs from the world. This can be thought of as\nthe event type which is supplied by the window backend to drive the state of the `Ui` forward.",null,null],[8,"ToRawEvent","","Types that may be converted to the `RawEvent` type used by conrod to track events happening in\nthe world.",null,null],[10,"to_raw_event","","Convert self into an `RawEvent`.",81,null],[0,"graphics","conrod::backend","Conrod&#39;s generic graphics backend.",null,null],[3,"Context","conrod::backend::graphics","Drawing 2d context.",null,null],[12,"viewport","","Viewport information.",82,null],[12,"view","","View transformation.",82,null],[12,"transform","","Current transformation.",82,null],[12,"draw_state","","Current draw state settings.",82,null],[3,"DrawState","","Graphics draw state used for blending, clipping and stencil rendering.",null,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this\nrectangle (in screen space) will be written to as a result of rendering.",83,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",83,null],[12,"blend","","Blend function to use. If None, blending is disabled.",83,null],[8,"Graphics","","Implemented by all graphics back-ends.",null,null],[16,"Texture","","The texture type associated with the back-end.",1,null],[10,"clear_color","","Clears background with a color.",1,null],[10,"clear_stencil","","Clears stencil buffer with a value, usually 0.",1,null],[10,"tri_list","","Renders list of 2d triangles using a solid color.",1,null],[10,"tri_list_uv","","Renders list of 2d triangles using a color and a texture.",1,null],[11,"rectangle","","Draws a rectangle.",1,null],[11,"polygon","","Draws a polygon.",1,null],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",1,null],[11,"image","","Draws image.",1,null],[11,"ellipse","","Draws ellipse.",1,null],[11,"line","","Draws line.",1,null],[11,"circle_arc","","Draws circle arc.",1,null],[11,"deform_image","","Draws deformed image.",1,null],[8,"ImageSize","","Implemented by all images to be used with generic algorithms.",null,null],[10,"get_size","","Get the image size.",84,null],[11,"get_width","","Gets the image width.",84,null],[11,"get_height","","Gets the image height.",84,null],[8,"Transformed","","Implemented by contexts that can transform.",null,null],[10,"append_transform","","Appends transform to the current one.",85,null],[10,"prepend_transform","","Prepends transform to the current one.",85,null],[10,"trans","","Translate x an y in local coordinates.",85,null],[11,"rot_deg","","Rotates degrees in local coordinates.",85,null],[10,"rot_rad","","Rotate radians in local coordinates.",85,null],[10,"orient","","Orients x axis to look at point locally.",85,null],[10,"scale","","Scales in local coordinates.",85,null],[11,"zoom","","Scales in both directions in local coordinates.",85,null],[11,"flip_v","","Flips vertically in local coordinates.",85,null],[11,"flip_h","","Flips horizontally in local coordinates.",85,null],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",85,null],[10,"shear","","Shears in local coordinates.",85,null],[3,"Character","","Holds rendered character data.",null,null],[12,"offset","","The offset of character.",86,null],[12,"size","","The size of character, including space.",86,null],[12,"texture","","The texture of the character.",86,null],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The textyre type associated with the character cache.",0,null],[10,"character","","Get reference to character.",0,null],[11,"width","","Return the width for some given text.",0,null],[5,"draw_from_graph","","Draw the given **Graph** using the given **CharacterCache** and **Graphics** backends.",null,null],[5,"draw_from_container","","Use the given **CharacterCache** and **Graphics** backends to draw the given widget.",null,{"inputs":[{"name":"context"},{"name":"g"},{"name":"charactercache"},{"name":"container"},{"name":"theme"}],"output":null}],[5,"conrod_rect_to_graphics_rect","","Converts a conrod `Rect` to a `piston_graphics::types::Rectangle` expected by the Graphics\nbackend.",null,{"inputs":[{"name":"rect"}],"output":{"name":"rectangle"}}],[5,"draw_rectangle","","Draw a rectangle at the given Rect.",null,{"inputs":[{"name":"context"},{"name":"g"},{"name":"rect"},{"name":"color"}],"output":null}],[5,"draw_lines","","Draw a series of lines between the given **Point**s using the given style.",null,{"inputs":[{"name":"context"},{"name":"g"},{"name":"theme"},{"name":"i"},{"name":"style"}],"output":null}],[8,"Backend","conrod::backend","A trait to be implemented by all backends to conrod.",null,null],[16,"Texture","","The `Texture` type used by the `Graphics` and `CharacterCache` backends.",87,null],[16,"CharacterCache","","The character cache used by the backend.",87,null],[11,"clone","conrod","",88,null],[11,"new","","Construct a background.",88,{"inputs":[],"output":{"name":"background"}}],[11,"set","","Set the color used clear the background with before drawing widgets.",88,null],[11,"color","","",88,null],[0,"color","","",null,null],[3,"Hsla","conrod::color","The parts of HSL along with an alpha for transparency.",null,null],[12,"0","","",89,null],[12,"1","","",89,null],[12,"2","","",89,null],[12,"3","","",89,null],[3,"Rgba","","The parts of RGB along with an alpha for transparency.",null,null],[12,"0","","",90,null],[12,"1","","",90,null],[12,"2","","",90,null],[12,"3","","",90,null],[4,"Color","","Color supporting RGB and HSL variants.",null,null],[13,"Rgba","","Red, Green, Blue, Alpha - All values&#39; scales represented between 0.0 and 1.0.",91,null],[13,"Hsla","","Hue, Saturation, Lightness, Alpha - all valuess scales represented between 0.0 and 1.0.",91,null],[4,"Gradient","","Linear or Radial Gradient.",null,null],[13,"Linear","","Takes a start and end point and then a series of color stops that indicate how to\ninterpolate between the start and end points.",92,null],[13,"Radial","","First takes a start point and inner radius. Then takes an end point and outer radius.\nIt then takes a series of color stops that indicate how to interpolate between the\ninner and outer circles.",92,null],[5,"rgba","","Create RGB colors with an alpha component for transparency.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb","","Create RGB colors from numbers between 0.0 and 1.0.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgba_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[5,"hsla","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV) with an alpha component for\ntransparency.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"hsl","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV). This gives you access to colors\nmore like a color wheel, where all hues are arranged in a circle that you specify with radians.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"grayscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"greyscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"f32_to_byte","","Convert an f32 color to a byte.",null,{"inputs":[{"name":"f32"}],"output":{"name":"u8"}}],[5,"rgb_to_hsl","","Pure function for converting rgb to hsl.",null,null],[5,"hsl_to_rgb","","Pure function for converting hsl to rgb.",null,null],[5,"linear","","Create a linear gradient.",null,null],[5,"radial","","Create a radial gradient.",null,null],[6,"Colour","","Regional spelling alias.",null,null],[17,"LIGHT_RED","","Scarlet Red - Light - #EF2929",null,null],[17,"RED","","Scarlet Red - Regular - #CC0000",null,null],[17,"DARK_RED","","Scarlet Red - Dark - #A30000",null,null],[17,"LIGHT_ORANGE","","Orange - Light - #FCAF3E",null,null],[17,"ORANGE","","Orange - Regular - #F57900",null,null],[17,"DARK_ORANGE","","Orange - Dark - #CE5C00",null,null],[17,"LIGHT_YELLOW","","Butter - Light - #FCE94F",null,null],[17,"YELLOW","","Butter - Regular - #EDD400",null,null],[17,"DARK_YELLOW","","Butter - Dark - #C4A000",null,null],[17,"LIGHT_GREEN","","Chameleon - Light - #8AE234",null,null],[17,"GREEN","","Chameleon - Regular - #73D216",null,null],[17,"DARK_GREEN","","Chameleon - Dark - #4E9A06",null,null],[17,"LIGHT_BLUE","","Sky Blue - Light - #729FCF",null,null],[17,"BLUE","","Sky Blue - Regular - #3465A4",null,null],[17,"DARK_BLUE","","Sky Blue - Dark - #204A87",null,null],[17,"LIGHT_PURPLE","","Plum - Light - #AD7FA8",null,null],[17,"PURPLE","","Plum - Regular - #75507B",null,null],[17,"DARK_PURPLE","","Plum - Dark - #5C3566",null,null],[17,"LIGHT_BROWN","","Chocolate - Light - #E9B96E",null,null],[17,"BROWN","","Chocolate - Regular - #C17D11",null,null],[17,"DARK_BROWN","","Chocolate - Dark - #8F5902",null,null],[17,"BLACK","","Straight Black.",null,null],[17,"WHITE","","Straight White.",null,null],[17,"LIGHT_GRAY","","Alluminium - Light",null,null],[17,"GRAY","","Alluminium - Regular",null,null],[17,"DARK_GRAY","","Alluminium - Dark",null,null],[17,"LIGHT_GREY","","Aluminium - Light - #EEEEEC",null,null],[17,"GREY","","Aluminium - Regular - #D3D7CF",null,null],[17,"DARK_GREY","","Aluminium - Dark - #BABDB6",null,null],[17,"LIGHT_CHARCOAL","","Charcoal - Light - #888A85",null,null],[17,"CHARCOAL","","Charcoal - Regular - #555753",null,null],[17,"DARK_CHARCOAL","","Charcoal - Dark - #2E3436",null,null],[17,"TRANSPARENT","","Transparent",null,null],[8,"Colorable","","Types that can be colored.",null,null],[10,"color","","Set the color of the widget.",93,null],[11,"rgba","","Set the color of the widget from rgba values.",93,null],[11,"rgb","","Set the color of the widget from rgb values.",93,null],[11,"hsla","","Set the color of the widget from hsla values.",93,null],[11,"hsl","","Set the color of the widget from hsl values.",93,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"complement","","Produce a complementary color. The two colors will accent each other. This is the same as\nrotating the hue by 180 degrees.",91,null],[11,"luminance","","Calculate and return the luminance of the Color.",91,null],[11,"plain_contrast","","Return either black or white, depending which contrasts the Color the most. This will be\nuseful for determining a readable color for text on any given background Color.",91,null],[11,"to_hsl","","Extract the components of a color in the HSL format.",91,null],[11,"to_rgb","","Extract the components of a color in the RGB format.",91,null],[11,"to_fsa","","Extract the components of a color in the RGB format within a fixed-size array.",91,null],[11,"to_byte_fsa","","Same as `to_fsa`, except r, g, b and a are represented in byte form.",91,null],[11,"with_luminance","","Return the same color but with the given luminance.",91,null],[11,"alpha","","Return the same color but with the alpha multiplied by the given alpha.",91,null],[11,"with_alpha","","Return the same color but with the given alpha.",91,null],[11,"highlighted","","Return a highlighted version of the current Color.",91,null],[11,"clicked","","Return a clicked version of the current Color.",91,null],[11,"invert","","Return the Color&#39;s invert.",91,null],[11,"red","","Return the red value.",91,null],[11,"green","","Return the green value.",91,null],[11,"blue","","Return the blue value.",91,null],[11,"set_red","","Set the red value.",91,null],[11,"set_green","","Set the green value.",91,null],[11,"set_blue","","Set the blue value.",91,null],[11,"fmt","","",89,null],[11,"clone","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[0,"event","conrod","Contains all the structs and enums to describe all of the input events that `Widget`s\ncan handle.",null,null],[4,"Input","conrod::event","Models input events.",null,null],[13,"Press","","Pressed a button.",79,null],[13,"Release","","Released a button.",79,null],[13,"Move","","Moved mouse cursor.",79,null],[13,"Text","","Text (usually from keyboard).",79,null],[13,"Resize","","Window got resized.",79,null],[13,"Focus","","Window gained or lost focus.",79,null],[13,"Cursor","","Window gained or lost cursor.",79,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",77,null],[13,"MouseRelative","","x and y in relative coordinates.",77,null],[13,"MouseScroll","","x and y in scroll ticks.",77,null],[13,"ControllerAxis","","controller axis move event.",77,null],[13,"Touch","","touch event.",77,null],[3,"Text","","Contains all relevant information for a Text event.",null,null],[12,"string","","All text that was entered as a part of the event.",94,null],[12,"modifiers","","The modifier keys that were down at the time.",94,null],[3,"Move","","Contains all relevant information for a Motion event.",null,null],[12,"motion","","The type of `Motion` that occurred.",95,null],[12,"modifiers","","The modifier keys that were down at the time.",95,null],[3,"Press","","Contains all relevant information for a Press event.",null,null],[12,"button","","The `Button` that was pressed.",96,null],[12,"modifiers","","The modifier keys that were down at the time.",96,null],[3,"MousePress","","Contains all relevant information for the event where a mouse button was pressed.",null,null],[12,"button","","The mouse button that was pressed.",97,null],[12,"xy","","The location at which the mouse was pressed.",97,null],[12,"modifiers","","The modifier keys that were down at the time.",97,null],[3,"KeyPress","","Contains all relevant information for the event where a keyboard button was pressed.",null,null],[12,"key","","The key that was pressed.",98,null],[12,"modifiers","","The modifier keys that were down at the time.",98,null],[3,"Release","","Contains all relevant information for a Release event.",null,null],[12,"button","","The `Button` that was released.",99,null],[12,"modifiers","","The modifier keys that were down at the time.",99,null],[3,"MouseRelease","","Contains all relevant information for the event where a mouse button was released.",null,null],[12,"button","","The mouse button that was released.",100,null],[12,"xy","","The location at which the mouse was released.",100,null],[12,"modifiers","","The modifier keys that were down at the time.",100,null],[3,"KeyRelease","","Contains all relevant information for the event where a keyboard button was release.",null,null],[12,"key","","The key that was release.",101,null],[12,"modifiers","","The modifier keys that were down at the time.",101,null],[3,"Drag","","Contains all the relevant information for a mouse drag.",null,null],[12,"button","","Which mouse button was being held during the drag",102,null],[12,"origin","","The point from which the current series of drag events began.",102,null],[12,"from","","The point from which this drag event began.",102,null],[12,"to","","The point at which this drag event ended.",102,null],[12,"delta_xy","","The magnitude of the vector between `from` and `to`.",102,null],[12,"total_delta_xy","","The magnitude of the vector between `origin` and `to`.",102,null],[12,"modifiers","","Which modifier keys are being held during the mouse drag.",102,null],[3,"Click","","Contains all the relevant information for a mouse click.",null,null],[12,"button","","Which mouse button was clicked",103,null],[12,"xy","","The position at which the mouse was released.",103,null],[12,"modifiers","","Which modifier keys, if any, that were being held down when the user clicked",103,null],[3,"DoubleClick","","Contains all the relevant information for a double click.",null,null],[12,"button","","Which mouse button was clicked",104,null],[12,"xy","","The position at which the mouse was released.",104,null],[12,"modifiers","","Which modifier keys, if any, that were being held down when the user clicked",104,null],[3,"Scroll","","Holds all the relevant information about a scroll event",null,null],[12,"x","","The amount of scroll along the x axis.",105,null],[12,"y","","The amount of scroll along the y axis.",105,null],[12,"modifiers","","Which modifier keys, if any, that were being held down while the scroll occured",105,null],[4,"Event","","Enum containing all the events that the `Ui` may provide.",null,null],[13,"Raw","","Represents a raw `input::Input` event.",106,null],[13,"Ui","","Events that have been interpreted from `backend::RawEvent`s by the `Ui`.",106,null],[4,"Ui","","Represents all events interpreted by the `Ui`.",null,null],[13,"Text","","Entered text, along with the widget that was capturing the keyboard at the time.",107,null],[13,"Press","","Some button was pressed, along with the widget that was capturing the device whose button\nwhich was pressed.",107,null],[13,"Release","","Some button was released, along with the widget that was capturing the device whose button\nwhich was released.",107,null],[13,"Move","","Represents all forms of motion input, alongside with the widget that was capturing the\nmouse at the time.",107,null],[13,"WindowResized","","The window&#39;s dimensions were resized.",107,null],[13,"Click","","Represents a pointing device being pressed and subsequently released while over the same\nlocation.",107,null],[13,"DoubleClick","","Two `Click` events with the same `button` and `xy` occurring within a duration that is less\nthat the `theme.double_click_threshold`.",107,null],[13,"Drag","","Represents a pointing device button being pressed and a subsequent movement of the mouse.",107,null],[13,"Scroll","","A generic scroll event.",107,null],[13,"WidgetCapturesMouse","","Indicates that the given widget has captured the mouse.",107,null],[13,"WidgetUncapturesMouse","","Indicates that the given widget has released the mouse from capturing.",107,null],[13,"WidgetCapturesKeyboard","","Indicates that the given widget has captured the keyboard.",107,null],[13,"WidgetUncapturesKeyboard","","Indicates that the given widget has released the keyboard from capturing.",107,null],[4,"Widget","","Events that apply to a specific widget.",null,null],[13,"Text","","Entered text.",108,null],[13,"Move","","Represents all forms of motion input.",108,null],[13,"Press","","Some button was pressed.",108,null],[13,"Release","","Some button was released.",108,null],[13,"Click","","Represents a pointing device being pressed and subsequently released while over the same\nlocation.",108,null],[13,"DoubleClick","","Two `Click` events with the same `button` and `xy` occurring within a duration that is less\nthat the `theme.double_click_threshold`.",108,null],[13,"Drag","","Represents a pointing device button being pressed and a subsequent movement of the mouse.",108,null],[13,"Scroll","","Represents the amount of scroll that has been applied to this widget.",108,null],[13,"WindowResized","","The window&#39;s dimensions were resized.",108,null],[13,"CapturesMouse","","The widget has captured the mouse.",108,null],[13,"UncapturesMouse","","The widget has released the mouse from capturing.",108,null],[13,"CapturesKeyboard","","The widget has captured the keyboard.",108,null],[13,"UncapturesKeyboard","","Indicates that the given widget has released the keyboard from capturing.",108,null],[4,"Button","","The different kinds of `Button`s that may be `Press`ed or `Release`d.",null,null],[13,"Keyboard","","A keyboard button.",109,null],[13,"Mouse","","A mouse button along with the location at which it was `Press`ed/`Release`d.",109,null],[13,"Controller","","A controller button.",109,null],[11,"fmt","","",106,null],[11,"eq","","",106,null],[11,"ne","","",106,null],[11,"clone","","",106,null],[11,"fmt","","",107,null],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"clone","","",107,null],[11,"fmt","","",108,null],[11,"eq","","",108,null],[11,"ne","","",108,null],[11,"clone","","",108,null],[11,"fmt","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"clone","","",94,null],[11,"fmt","","",95,null],[11,"eq","","",95,null],[11,"ne","","",95,null],[11,"clone","","",95,null],[11,"fmt","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"clone","","",109,null],[11,"fmt","","",96,null],[11,"eq","","",96,null],[11,"ne","","",96,null],[11,"clone","","",96,null],[11,"fmt","","",97,null],[11,"eq","","",97,null],[11,"ne","","",97,null],[11,"clone","","",97,null],[11,"fmt","","",98,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"eq","","",99,null],[11,"ne","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"eq","","",100,null],[11,"ne","","",100,null],[11,"clone","","",100,null],[11,"fmt","","",101,null],[11,"eq","","",101,null],[11,"ne","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",102,null],[11,"eq","","",102,null],[11,"ne","","",102,null],[11,"clone","","",102,null],[11,"fmt","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"clone","","",103,null],[11,"fmt","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"clone","","",104,null],[11,"fmt","","",105,null],[11,"eq","","",105,null],[11,"ne","","",105,null],[11,"clone","","",105,null],[11,"relative_to","","Returns a copy of the `Move` relative to the given `xy`",95,null],[11,"relative_to","","Returns a copy of the Button relative to the given `xy`",109,null],[11,"relative_to","","Returns a copy of the Press relative to the given `xy`",96,null],[11,"mouse","","If the `Press` event represents the pressing of a mouse button, return `Some`.",96,null],[11,"key","","If the `Press` event represents the pressing of keyboard button, return `Some`.",96,null],[11,"relative_to","","Returns a copy of the Release relative to the given `xy`",99,null],[11,"mouse","","If the `Release` event represents the releasing of a mouse button, return `Some`.",99,null],[11,"key","","If the `Release` event represents the release of keyboard button, return `Some`.",99,null],[11,"relative_to","","Returns a copy of the Click relative to the given `xy`",103,null],[11,"relative_to","","Returns a copy of the DoubleClick relative to the given `xy`",104,null],[11,"relative_to","","Returns a copy of the Drag relative to the given `xy`",102,null],[11,"from","","",106,{"inputs":[{"name":"ui"}],"output":{"name":"self"}}],[11,"from","","",106,{"inputs":[{"name":"input"}],"output":{"name":"self"}}],[11,"from","","",108,{"inputs":[{"name":"text"}],"output":{"name":"self"}}],[11,"from","","",108,{"inputs":[{"name":"move"}],"output":{"name":"self"}}],[11,"from","","",108,{"inputs":[{"name":"press"}],"output":{"name":"self"}}],[11,"from","","",108,{"inputs":[{"name":"release"}],"output":{"name":"self"}}],[11,"from","","",108,{"inputs":[{"name":"click"}],"output":{"name":"self"}}],[11,"from","","",108,{"inputs":[{"name":"doubleclick"}],"output":{"name":"self"}}],[11,"from","","",108,{"inputs":[{"name":"scroll"}],"output":{"name":"self"}}],[11,"from","","",108,{"inputs":[{"name":"drag"}],"output":{"name":"self"}}],[11,"clone","conrod","",57,null],[0,"glyph_cache","","Conrod&#39;s character caching API.",null,null],[3,"GlyphCache","conrod::glyph_cache","A wrapper over some CharacterCache, exposing it&#39;s functionality via a RefCell.",null,null],[11,"new","","Construct a new **GlyphCache**.",110,{"inputs":[{"name":"c"}],"output":{"name":"self"}}],[11,"char_width","","The width of a single character with the given size.",110,null],[11,"char_widths","","Converts the given sequence of `char`s into their Scalar widths.",110,null],[11,"width","","Return the width of the given text.",110,null],[11,"deref","","",110,null],[11,"deref_mut","","",110,null],[0,"graph","conrod","Conrod uses a directed acyclic graph to manage both storing widgets and describing their\nrelationships.",null,null],[8,"Walker","conrod::graph","A trait providing a variety of useful methods for traversing some graph type **G**.",null,null],[16,"Index","","The unsigned integer type used for node and edge indices.",111,null],[10,"next","","Fetch the `EdgeIndex` and `NodeIndex` to the next neighbour in our walk through the given\n**Graph**.",111,null],[11,"next_edge","","The next edge in our walk for the given **Graph**.",111,null],[11,"next_node","","The next node in our walk for the given **Graph**.",111,null],[11,"count","","Counts all the steps in the entire walk of the given graph.",111,null],[11,"last","","Walks the whole walk until reaching and returning the last edge node pair.",111,null],[11,"last_edge","","Walks the whole walk until reaching and returning the last edge.",111,null],[11,"last_node","","Walks the whole walk until reaching and returning the last node.",111,null],[11,"nth","","Walks &quot;n&quot; number of steps and produces the resulting edge node pair.",111,null],[11,"nth_edge","","Walks &quot;n&quot; number of steps and produces the resulting edge.",111,null],[11,"nth_node","","Walks &quot;n&quot; number of steps and produces the resulting node.",111,null],[11,"chain","","Produces a walker that will walk the entirey of `self` before walking the entirey of other.",111,null],[11,"filter","","Creates a walker that applies the predicate to each element returned by this walker.\nThe only elements that will be yielded are those that make the predicate evaluate to true.",111,null],[11,"peekable","","Creates a walker that has a `.peek(&amp;graph)` method that returns an optional next neighbor.",111,null],[11,"skip_while","","Creates a walker that invokes the predicate on elements until it returns false. Once the\npredicate returns false, that element and all further elements are yielded.",111,null],[11,"take_while","","Creates a walker that yields elements so long as the predicate returns true. After the\npredicate returns false for the first time, no further elements will be yielded.",111,null],[11,"skip","","Creates a walker that skips the first n steps of this walk, and then yields all further\nsteps.",111,null],[11,"take","","Creates a walker that yields the first n steps of this walk.",111,null],[11,"all","","Tests whether the predicate holds true for all steps in the walk.",111,null],[11,"any","","Tests whether any step in the walk satisfies the given predicate.",111,null],[11,"find","","Returns the first edge node index pair satisfying the specified predicate.",111,null],[11,"find_edge","","Returns the edge index satisfying the specified predicate.",111,null],[11,"find_node","","Returns the node index satisfying the specified predicate.",111,null],[11,"cycle","","Repeats the walker endlessly.",111,null],[11,"fold","","Performs a fold operation over the entire walker, returning the eventual state at the end\nof the walk.",111,null],[11,"inspect","","Creates a walker that calls a function with a reference to each index pair before yielding\nthem. This is often useful for debugging a walker pipeline.",111,null],[11,"iter","","Converts the walker into an iterator yielding index pairs.",111,null],[11,"iter_weights","","Converts the walker into an iterator yielding `(&amp;e, &amp;n)`, where `e` is the edge weight for\nthe next `EdgeIndex` and `n` is the node weight for the next `NodeIndex`.",111,null],[3,"UniqueWidgetState","","The state type that we&#39;ll dynamically cast to and from `Any` for storage within the cache.",null,null],[12,"state","","A **Widget**&#39;s unique &quot;State&quot;.",112,null],[12,"style","","A **Widget**&#39;s unique &quot;Style&quot;.",112,null],[3,"Container","","A container for caching a Widget&#39;s state inside a Graph Node.",null,null],[12,"maybe_state","","Dynamically stored widget state.",113,null],[12,"kind","","A unique widget kind identifier.",113,null],[12,"rect","","The rectangle describing the Widget&#39;s area.",113,null],[12,"depth","","The depth at which the widget will be rendered comparatively to its siblings.",113,null],[12,"kid_area","","The area in which child widgets are placed.",113,null],[12,"maybe_floating","","Whether or not the widget is a &quot;Floating&quot; widget.",113,null],[12,"crop_kids","","Whether or not children widgets should be cropped to the `kid_area`.",113,null],[12,"maybe_x_scroll_state","","Scroll related state (is only `Some` if this axis is scrollable).",113,null],[12,"maybe_y_scroll_state","","Scroll related state (is only `Some` if this axis is scrollable).",113,null],[12,"instantiation_order_idx","","Represents the Widget&#39;s position within the overall instantiation ordering of the widgets.",113,null],[3,"Graph","","Stores the dynamic state of a UI tree of Widgets.",null,null],[4,"Node","","A node for use within the **Graph**.",null,null],[13,"Widget","","A widget constructed by a user.",114,null],[13,"Placeholder","","A placeholder node - used when reserving a place for a **Widget** within the **Graph**.",114,null],[4,"Edge","","An edge between nodes within the UI Graph.",null,null],[13,"Position","","Describes the relative positioning of widgets.",115,null],[13,"Depth","","Describes the rendering order of the widgets.",115,null],[13,"Graphic","","Describes when a widget is used solely as a graphical element for another widget.",115,null],[0,"algo","","This module was created in order to keep the `graph` module clean and focused upon the\n**Graph** data structure behaviour.",null,null],[3,"PickWidgets","conrod::graph::algo","A node &quot;walker&quot; that yields all widgets under the given `xy` position in order from top to\nbottom.",null,null],[3,"PickScrollableWidgets","","A node &quot;walker&quot; that yields all scrollable widgets under the given `xy` position in order from\ntop to bottom.",null,null],[5,"pick_widgets","","Produces a graph node &quot;walker&quot; that yields all widgets under the given `xy` position in order\nfrom top to bottom.",null,null],[5,"pick_scrollable_widgets","","Produces a graph node &quot;walker&quot; that yields all scrollable widgets under the given `xy` position\nin order from top to bottom.",null,null],[5,"cropped_area_of_widget","","The rectangle that represents the maximum visible area for the widget with the given index.",null,{"inputs":[{"name":"graph"},{"name":"i"}],"output":{"name":"option"}}],[5,"cropped_area_of_widget_within_depth","","The rectangle that represents the maximum visible area for the widget with the given index.",null,{"inputs":[{"name":"graph"},{"name":"i"},{"name":"nodeindex"}],"output":{"name":"option"}}],[5,"kids_bounding_box","","Find the absolute `Rect` that bounds all widgets that are `Depth` children of the widget at the\ngiven `idx`.",null,{"inputs":[{"name":"graph"},{"name":"hashset"},{"name":"i"}],"output":{"name":"option"}}],[5,"scroll_offset","","Return the `scroll_offset` for the widget at the given index.",null,{"inputs":[{"name":"graph"},{"name":"i"}],"output":{"name":"point"}}],[11,"clone","","",116,null],[11,"clone","","",117,null],[11,"next_node_index","","The next `NodeIndex` under the `xy` location.",116,null],[11,"next","","The `widget::Index` of the next `Widget` under the `xy` location.",116,null],[11,"next","","The `widget::Index` of the next scrollable `Widget` under the `xy` location.",117,null],[0,"depth_order","conrod::graph","Types and functionality related to the calculation of a **Graph**&#39;s rendering depth order.",null,null],[3,"DepthOrder","conrod::graph::depth_order","Contains Node indices in order of depth, starting with the deepest.",null,null],[12,"indices","","The primary **Vec** storing the **DepthOrder**&#39;s ordered indices.",118,null],[11,"new","","Construct a new empty **DepthOrder**.",118,{"inputs":[],"output":{"name":"depthorder"}}],[11,"with_node_capacity","","Construct a new empty **DepthOrder**.",118,{"inputs":[{"name":"usize"}],"output":{"name":"depthorder"}}],[11,"update","","Update the **DepthOrder** (starting with the deepest) for all nodes in the given **Graph**.",118,null],[11,"to_widget_id","conrod","",52,null],[11,"to_node_index","","",52,null],[11,"from_idx","","",52,{"inputs":[{"name":"i"},{"name":"indexmap"}],"output":{"name":"option"}}],[11,"to_node_index","","Coerce a widget::Index into an Option&lt;NodeIndex&gt;.\nIf the Index is the Internal variant, that idx will be used directly.\nIf the Index is the Public variant, the index_map will be used to find the matching\nNodeIndex.",67,null],[11,"to_widget_id","","Coerce a widget::Index into an Option&lt;WidgetId&gt;.\nIf the Index is the Public variant, that id will be used directly.\nIf the Index is the Internal variant, the index_map will be used to find the matching\nWidgetId.",67,null],[11,"from_idx","","Construct a widget::Index from some GraphIndex.\nFirst tries to construct a Public variant by checking the IndexMap for a matching WidgetId.\nIf not WidgetId is found, then tries to find a matching NodeIndex.",67,{"inputs":[{"name":"i"},{"name":"indexmap"}],"output":{"name":"option"}}],[6,"NodeIndex","conrod::graph","An alias for our Graph&#39;s Node Index.",null,null],[6,"EdgeIndex","","An alias for our Graph&#39;s Edge Index.",null,null],[6,"IndexPair","","An alias for a tuple containing an associated `Edge/NodeIndex` pair.",null,null],[6,"Parents","","A **Walker** over some node&#39;s parent nodes.",null,null],[6,"Children","","A **Walker** over some node&#39;s child nodes.",null,null],[6,"PositionParents","","An alias for the iterator yielding both **X** and **Y** **Position** parents.",null,null],[6,"FilteredChildren","","An alias for some filtered children walker.",null,null],[6,"DepthChildren","","An alias for a **Walker** over a node&#39;s **Depth** children.",null,null],[6,"XPositionChildren","","An alias for a **Walker** over a node&#39;s **X Position** children.",null,null],[6,"YPositionChildren","","An alias for a **Walker** over a node&#39;s **Y Position** children.",null,null],[6,"PositionChildren","","An alias for a **Walker** over a node&#39;s **X** and **Y** **Position** children respectively.",null,null],[6,"GraphicChildren","","An alias for a **Walker** over a node&#39;s **Graphic** children.",null,null],[6,"RecursiveWalk","","An alias for our Graph&#39;s recursive walker.",null,null],[6,"WouldCycle","","An alias for our Graph&#39;s **WouldCycle** error type.",null,null],[17,"NUM_EDGE_VARIANTS","","The number of different variants within the **Edge** enum.",null,null],[8,"GraphIndex","","A trait for being generic over both WidgetId and NodeIndex.\nEach method should only return `Some` if they are contained as a key within the given IndexMap.",null,null],[10,"to_widget_id","","If not one already, convert Self to a WidgetId if it exists within the IndexMap.",119,null],[10,"to_node_index","","If not one already, convert Self to a NodeIndex if it exists within the IndexMap.",119,null],[10,"from_idx","","Convert some GraphIndex type to Self.",119,{"inputs":[{"name":"i"},{"name":"indexmap"}],"output":{"name":"option"}}],[11,"fmt","","",112,null],[11,"fmt","","",113,null],[11,"fmt","","",114,null],[11,"eq","","",115,null],[11,"ne","","",115,null],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"fmt","","",120,null],[11,"state_and_style","","Borrow the **Container**&#39;s unique widget State and Style if there is any.",113,null],[11,"unique_widget_state","","Same as [**Container::state_and_style**](./struct.Container#method.state_and_style) but\naccessed using a **Widget** type parameter instead of the unique State and Style types.",113,null],[11,"take_unique_widget_state","","A method for taking only the unique state from the container.",113,null],[11,"take_widget_state","","Take the widget state from the container and cast it to type W.",113,null],[11,"is_widget","","Whether or not the **Node** is of the **Widget** variant.",114,null],[11,"new","","A new empty **Graph**.",120,{"inputs":[],"output":{"name":"self"}}],[11,"with_node_capacity","","A new **Graph** with the given node capacity.",120,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"clear","","Removes all **Node**s and **Edge**s from the **Graph**.",120,null],[11,"node_count","","The total number of **Node**s in the **Graph**.",120,null],[11,"widget_count","","The total number of **Node::Widget**s in the **Graph**.",120,null],[11,"edge_count","","The total number of **Edge**s in the **Graph**.",120,null],[11,"node_capacity","","The current capacity for the **Graph**&#39;s internal node `Vec`.",120,null],[11,"convert_idx","","Converts the given **GraphIndex** into an index of type **J**.",120,null],[11,"node_index","","Get the **NodeIndex** for the given **GraphIndex**.",120,null],[11,"widget_id","","Get the **WidgetId** for the given **GraphIndex**.",120,null],[11,"widget_index","","Get the **widget::Index** for the given **GraphIndex**.",120,null],[11,"add_placeholder","","Add a new placeholder node and return it&#39;s `NodeIndex` into the `Graph`.",120,null],[11,"node","","Borrow the node at the given **GraphIndex** if there is one.",120,null],[11,"node_mut","","Mutably borrow the node at the given **GraphIndex** if there is one.",120,null],[11,"edge","","Borrow the edge at the given **EdgeIndex** if there is one.",120,null],[11,"edge_mut","","Mutably borrow the edge at the given **EdgeIndex** if there is one.",120,null],[11,"edge_endpoints","","Return the parent and child nodes on either end of the **Edge** at the given index.",120,null],[11,"widget","","If there is a Widget for the given index, return a reference to it.",120,null],[11,"widget_mut","","If there is a Widget for the given Id, return a mutable reference to it.",120,null],[11,"parents","","A **Walker** type that may be used to step through the parents of the given child node.",120,null],[11,"recursive_walk","","A **Walker** type that recursively walks the **Graph** using the given `recursive_fn`.",120,null],[11,"edge_parent","","If the widget at the given index has some parent along an **Edge** of the given variant,\nreturn an index to it.",120,null],[11,"depth_parent","","Return the index of the parent along the given widget&#39;s **Depth** **Edge**.",120,null],[11,"x_position_parent","","Return the index of the parent along the given widget&#39;s **Position** **Edge**.",120,null],[11,"y_position_parent","","Return the index of the parent along the given widget&#39;s **Position** **Edge**.",120,null],[11,"position_parents","","Produces an iterator yielding the parents along both the **X** and **Y** **Position**\n**Edge**s respectively.",120,null],[11,"graphic_parent","","Return the index of the parent along the given widget&#39;s **Graphic** **Edge**.",120,null],[11,"depth_parent_recursion","","A **Walker** type that recursively walks **Depth** parents starting from the given node.",120,null],[11,"x_position_parent_recursion","","A **Walker** type that recursively walks **X** **Position** parents starting from the given\nnode.",120,null],[11,"y_position_parent_recursion","","A **Walker** type that recursively walks **Y** **Position** parents starting from the given\nnode.",120,null],[11,"graphic_parent_recursion","","A **Walker** type that recursively walks **Graphic** parents starting from the given node.",120,null],[11,"children","","A **Walker** type that may be used to step through the children of the given parent node.",120,null],[11,"depth_children","","For walking the **Depth** children of the given parent node.",120,null],[11,"x_position_children","","For walking the **Position(X)** children of the given parent node.",120,null],[11,"y_position_children","","For walking the **Position(Y)** children of the given parent node.",120,null],[11,"position_children","","For walking the **Position** children of the given parent node.",120,null],[11,"graphic_children","","For walking the **Graphic** children of the given parent node.",120,null],[11,"does_edge_exist","","Does the given edge type exist between the nodes `parent` -&gt; `child`.",120,null],[11,"does_depth_edge_exist","","Does a **Edge::Depth** exist between the nodes `parent` -&gt; `child`.",120,null],[11,"does_position_edge_exist","","Does a **Edge::Position** exist between the nodes `parent` -&gt; `child`.",120,null],[11,"does_graphic_edge_exist","","Does a **Edge::Graphic** exist between the nodes `parent` -&gt; `child`.",120,null],[11,"does_recursive_edge_exist","","Are the given `parent` and `child` nodes connected by a single chain of edges of the given\nkind?",120,null],[11,"does_recursive_depth_edge_exist","","Are the given `parent` and `child` nodes connected by a single chain of **Depth** edges?",120,null],[11,"does_recursive_graphic_edge_exist","","Are the given `parent` and `child` nodes connected by a single chain of **Graphic** edges?",120,null],[11,"pre_update_cache","","Cache some `PreUpdateCache` widget data into the graph.",120,null],[11,"post_update_cache","","Cache some `PostUpdateCache` widget data into the graph.",120,null],[11,"next","","",121,null],[11,"next","","",122,null],[11,"index","","",120,null],[11,"index_mut","","",120,null],[11,"index","","",120,null],[11,"index_mut","","",120,null],[0,"guide","conrod","**The Conrod Guide**",null,null],[0,"chapter_1","conrod::guide","**What is Conrod?**",null,null],[0,"chapter_2","","**Getting Started**",null,null],[0,"input","conrod","This module contains all the logic for handling input events and providing them to widgets.",null,null],[4,"Button","conrod::input","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",73,null],[13,"Mouse","","A mouse button.",73,null],[13,"Controller","","A controller button.",73,null],[3,"ControllerButton","","Components of a controller button event. Not guaranteed consistent across\nbackends.",null,null],[12,"id","","Which controller was the button on.",75,null],[12,"button","","Which button was pressed.",75,null],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not guaranteed consistent across\nbackends.",null,null],[12,"id","","Which controller moved.",74,null],[12,"axis","","The axis that moved.",74,null],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though backends may use\na different range for various devices.",74,null],[0,"keyboard","","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","conrod::input::keyboard","",null,null],[17,"NO_MODIFIER","","No modifier.",null,null],[17,"CTRL","","Ctrl.",null,null],[17,"SHIFT","","Shift.",null,null],[17,"ALT","","Alt.",null,null],[17,"GUI","","Gui.",null,null],[17,"CTRL_SHIFT","","Ctrl + Shift.",null,null],[17,"CTRL_ALT","","Ctrl + Alt.",null,null],[17,"CTRL_GUI","","Ctrl + Gui.",null,null],[17,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",null,null],[17,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",null,null],[17,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",null,null],[17,"SHIFT_ALT","","Shift + Alt.",null,null],[17,"SHIFT_GUI","","Shift + Gui.",null,null],[17,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",null,null],[17,"ALT_GUI","","Alt + Gui.",null,null],[4,"Key","","Represent a keyboard key.\nKeycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",null,null],[13,"Unknown","","",76,null],[13,"Backspace","","",76,null],[13,"Tab","","",76,null],[13,"Return","","",76,null],[13,"Escape","","",76,null],[13,"Space","","",76,null],[13,"Exclaim","","",76,null],[13,"Quotedbl","","",76,null],[13,"Hash","","",76,null],[13,"Dollar","","",76,null],[13,"Percent","","",76,null],[13,"Ampersand","","",76,null],[13,"Quote","","",76,null],[13,"LeftParen","","",76,null],[13,"RightParen","","",76,null],[13,"Asterisk","","",76,null],[13,"Plus","","",76,null],[13,"Comma","","",76,null],[13,"Minus","","",76,null],[13,"Period","","",76,null],[13,"Slash","","",76,null],[13,"D0","","",76,null],[13,"D1","","",76,null],[13,"D2","","",76,null],[13,"D3","","",76,null],[13,"D4","","",76,null],[13,"D5","","",76,null],[13,"D6","","",76,null],[13,"D7","","",76,null],[13,"D8","","",76,null],[13,"D9","","",76,null],[13,"Colon","","",76,null],[13,"Semicolon","","",76,null],[13,"Less","","",76,null],[13,"Equals","","",76,null],[13,"Greater","","",76,null],[13,"Question","","",76,null],[13,"At","","",76,null],[13,"LeftBracket","","",76,null],[13,"Backslash","","",76,null],[13,"RightBracket","","",76,null],[13,"Caret","","",76,null],[13,"Underscore","","",76,null],[13,"Backquote","","",76,null],[13,"A","","",76,null],[13,"B","","",76,null],[13,"C","","",76,null],[13,"D","","",76,null],[13,"E","","",76,null],[13,"F","","",76,null],[13,"G","","",76,null],[13,"H","","",76,null],[13,"I","","",76,null],[13,"J","","",76,null],[13,"K","","",76,null],[13,"L","","",76,null],[13,"M","","",76,null],[13,"N","","",76,null],[13,"O","","",76,null],[13,"P","","",76,null],[13,"Q","","",76,null],[13,"R","","",76,null],[13,"S","","",76,null],[13,"T","","",76,null],[13,"U","","",76,null],[13,"V","","",76,null],[13,"W","","",76,null],[13,"X","","",76,null],[13,"Y","","",76,null],[13,"Z","","",76,null],[13,"Delete","","",76,null],[13,"CapsLock","","",76,null],[13,"F1","","",76,null],[13,"F2","","",76,null],[13,"F3","","",76,null],[13,"F4","","",76,null],[13,"F5","","",76,null],[13,"F6","","",76,null],[13,"F7","","",76,null],[13,"F8","","",76,null],[13,"F9","","",76,null],[13,"F10","","",76,null],[13,"F11","","",76,null],[13,"F12","","",76,null],[13,"PrintScreen","","",76,null],[13,"ScrollLock","","",76,null],[13,"Pause","","",76,null],[13,"Insert","","",76,null],[13,"Home","","",76,null],[13,"PageUp","","",76,null],[13,"End","","",76,null],[13,"PageDown","","",76,null],[13,"Right","","",76,null],[13,"Left","","",76,null],[13,"Down","","",76,null],[13,"Up","","",76,null],[13,"NumLockClear","","",76,null],[13,"NumPadDivide","","",76,null],[13,"NumPadMultiply","","",76,null],[13,"NumPadMinus","","",76,null],[13,"NumPadPlus","","",76,null],[13,"NumPadEnter","","",76,null],[13,"NumPad1","","",76,null],[13,"NumPad2","","",76,null],[13,"NumPad3","","",76,null],[13,"NumPad4","","",76,null],[13,"NumPad5","","",76,null],[13,"NumPad6","","",76,null],[13,"NumPad7","","",76,null],[13,"NumPad8","","",76,null],[13,"NumPad9","","",76,null],[13,"NumPad0","","",76,null],[13,"NumPadPeriod","","",76,null],[13,"Application","","",76,null],[13,"Power","","",76,null],[13,"NumPadEquals","","",76,null],[13,"F13","","",76,null],[13,"F14","","",76,null],[13,"F15","","",76,null],[13,"F16","","",76,null],[13,"F17","","",76,null],[13,"F18","","",76,null],[13,"F19","","",76,null],[13,"F20","","",76,null],[13,"F21","","",76,null],[13,"F22","","",76,null],[13,"F23","","",76,null],[13,"F24","","",76,null],[13,"Execute","","",76,null],[13,"Help","","",76,null],[13,"Menu","","",76,null],[13,"Select","","",76,null],[13,"Stop","","",76,null],[13,"Again","","",76,null],[13,"Undo","","",76,null],[13,"Cut","","",76,null],[13,"Copy","","",76,null],[13,"Paste","","",76,null],[13,"Find","","",76,null],[13,"Mute","","",76,null],[13,"VolumeUp","","",76,null],[13,"VolumeDown","","",76,null],[13,"NumPadComma","","",76,null],[13,"NumPadEqualsAS400","","",76,null],[13,"AltErase","","",76,null],[13,"Sysreq","","",76,null],[13,"Cancel","","",76,null],[13,"Clear","","",76,null],[13,"Prior","","",76,null],[13,"Return2","","",76,null],[13,"Separator","","",76,null],[13,"Out","","",76,null],[13,"Oper","","",76,null],[13,"ClearAgain","","",76,null],[13,"CrSel","","",76,null],[13,"ExSel","","",76,null],[13,"NumPad00","","",76,null],[13,"NumPad000","","",76,null],[13,"ThousandsSeparator","","",76,null],[13,"DecimalSeparator","","",76,null],[13,"CurrencyUnit","","",76,null],[13,"CurrencySubUnit","","",76,null],[13,"NumPadLeftParen","","",76,null],[13,"NumPadRightParen","","",76,null],[13,"NumPadLeftBrace","","",76,null],[13,"NumPadRightBrace","","",76,null],[13,"NumPadTab","","",76,null],[13,"NumPadBackspace","","",76,null],[13,"NumPadA","","",76,null],[13,"NumPadB","","",76,null],[13,"NumPadC","","",76,null],[13,"NumPadD","","",76,null],[13,"NumPadE","","",76,null],[13,"NumPadF","","",76,null],[13,"NumPadXor","","",76,null],[13,"NumPadPower","","",76,null],[13,"NumPadPercent","","",76,null],[13,"NumPadLess","","",76,null],[13,"NumPadGreater","","",76,null],[13,"NumPadAmpersand","","",76,null],[13,"NumPadDblAmpersand","","",76,null],[13,"NumPadVerticalBar","","",76,null],[13,"NumPadDblVerticalBar","","",76,null],[13,"NumPadColon","","",76,null],[13,"NumPadHash","","",76,null],[13,"NumPadSpace","","",76,null],[13,"NumPadAt","","",76,null],[13,"NumPadExclam","","",76,null],[13,"NumPadMemStore","","",76,null],[13,"NumPadMemRecall","","",76,null],[13,"NumPadMemClear","","",76,null],[13,"NumPadMemAdd","","",76,null],[13,"NumPadMemSubtract","","",76,null],[13,"NumPadMemMultiply","","",76,null],[13,"NumPadMemDivide","","",76,null],[13,"NumPadPlusMinus","","",76,null],[13,"NumPadClear","","",76,null],[13,"NumPadClearEntry","","",76,null],[13,"NumPadBinary","","",76,null],[13,"NumPadOctal","","",76,null],[13,"NumPadDecimal","","",76,null],[13,"NumPadHexadecimal","","",76,null],[13,"LCtrl","","",76,null],[13,"LShift","","",76,null],[13,"LAlt","","",76,null],[13,"LGui","","",76,null],[13,"RCtrl","","",76,null],[13,"RShift","","",76,null],[13,"RAlt","","",76,null],[13,"RGui","","",76,null],[13,"Mode","","",76,null],[13,"AudioNext","","",76,null],[13,"AudioPrev","","",76,null],[13,"AudioStop","","",76,null],[13,"AudioPlay","","",76,null],[13,"AudioMute","","",76,null],[13,"MediaSelect","","",76,null],[13,"Www","","",76,null],[13,"Mail","","",76,null],[13,"Calculator","","",76,null],[13,"Computer","","",76,null],[13,"AcSearch","","",76,null],[13,"AcHome","","",76,null],[13,"AcBack","","",76,null],[13,"AcForward","","",76,null],[13,"AcStop","","",76,null],[13,"AcRefresh","","",76,null],[13,"AcBookmarks","","",76,null],[13,"BrightnessDown","","",76,null],[13,"BrightnessUp","","",76,null],[13,"DisplaySwitch","","",76,null],[13,"KbdIllumToggle","","",76,null],[13,"KbdIllumDown","","",76,null],[13,"KbdIllumUp","","",76,null],[13,"Eject","","",76,null],[13,"Sleep","","",76,null],[4,"Key","conrod::input","Represent a keyboard key.\nKeycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",null,null],[13,"Unknown","","",76,null],[13,"Backspace","","",76,null],[13,"Tab","","",76,null],[13,"Return","","",76,null],[13,"Escape","","",76,null],[13,"Space","","",76,null],[13,"Exclaim","","",76,null],[13,"Quotedbl","","",76,null],[13,"Hash","","",76,null],[13,"Dollar","","",76,null],[13,"Percent","","",76,null],[13,"Ampersand","","",76,null],[13,"Quote","","",76,null],[13,"LeftParen","","",76,null],[13,"RightParen","","",76,null],[13,"Asterisk","","",76,null],[13,"Plus","","",76,null],[13,"Comma","","",76,null],[13,"Minus","","",76,null],[13,"Period","","",76,null],[13,"Slash","","",76,null],[13,"D0","","",76,null],[13,"D1","","",76,null],[13,"D2","","",76,null],[13,"D3","","",76,null],[13,"D4","","",76,null],[13,"D5","","",76,null],[13,"D6","","",76,null],[13,"D7","","",76,null],[13,"D8","","",76,null],[13,"D9","","",76,null],[13,"Colon","","",76,null],[13,"Semicolon","","",76,null],[13,"Less","","",76,null],[13,"Equals","","",76,null],[13,"Greater","","",76,null],[13,"Question","","",76,null],[13,"At","","",76,null],[13,"LeftBracket","","",76,null],[13,"Backslash","","",76,null],[13,"RightBracket","","",76,null],[13,"Caret","","",76,null],[13,"Underscore","","",76,null],[13,"Backquote","","",76,null],[13,"A","","",76,null],[13,"B","","",76,null],[13,"C","","",76,null],[13,"D","","",76,null],[13,"E","","",76,null],[13,"F","","",76,null],[13,"G","","",76,null],[13,"H","","",76,null],[13,"I","","",76,null],[13,"J","","",76,null],[13,"K","","",76,null],[13,"L","","",76,null],[13,"M","","",76,null],[13,"N","","",76,null],[13,"O","","",76,null],[13,"P","","",76,null],[13,"Q","","",76,null],[13,"R","","",76,null],[13,"S","","",76,null],[13,"T","","",76,null],[13,"U","","",76,null],[13,"V","","",76,null],[13,"W","","",76,null],[13,"X","","",76,null],[13,"Y","","",76,null],[13,"Z","","",76,null],[13,"Delete","","",76,null],[13,"CapsLock","","",76,null],[13,"F1","","",76,null],[13,"F2","","",76,null],[13,"F3","","",76,null],[13,"F4","","",76,null],[13,"F5","","",76,null],[13,"F6","","",76,null],[13,"F7","","",76,null],[13,"F8","","",76,null],[13,"F9","","",76,null],[13,"F10","","",76,null],[13,"F11","","",76,null],[13,"F12","","",76,null],[13,"PrintScreen","","",76,null],[13,"ScrollLock","","",76,null],[13,"Pause","","",76,null],[13,"Insert","","",76,null],[13,"Home","","",76,null],[13,"PageUp","","",76,null],[13,"End","","",76,null],[13,"PageDown","","",76,null],[13,"Right","","",76,null],[13,"Left","","",76,null],[13,"Down","","",76,null],[13,"Up","","",76,null],[13,"NumLockClear","","",76,null],[13,"NumPadDivide","","",76,null],[13,"NumPadMultiply","","",76,null],[13,"NumPadMinus","","",76,null],[13,"NumPadPlus","","",76,null],[13,"NumPadEnter","","",76,null],[13,"NumPad1","","",76,null],[13,"NumPad2","","",76,null],[13,"NumPad3","","",76,null],[13,"NumPad4","","",76,null],[13,"NumPad5","","",76,null],[13,"NumPad6","","",76,null],[13,"NumPad7","","",76,null],[13,"NumPad8","","",76,null],[13,"NumPad9","","",76,null],[13,"NumPad0","","",76,null],[13,"NumPadPeriod","","",76,null],[13,"Application","","",76,null],[13,"Power","","",76,null],[13,"NumPadEquals","","",76,null],[13,"F13","","",76,null],[13,"F14","","",76,null],[13,"F15","","",76,null],[13,"F16","","",76,null],[13,"F17","","",76,null],[13,"F18","","",76,null],[13,"F19","","",76,null],[13,"F20","","",76,null],[13,"F21","","",76,null],[13,"F22","","",76,null],[13,"F23","","",76,null],[13,"F24","","",76,null],[13,"Execute","","",76,null],[13,"Help","","",76,null],[13,"Menu","","",76,null],[13,"Select","","",76,null],[13,"Stop","","",76,null],[13,"Again","","",76,null],[13,"Undo","","",76,null],[13,"Cut","","",76,null],[13,"Copy","","",76,null],[13,"Paste","","",76,null],[13,"Find","","",76,null],[13,"Mute","","",76,null],[13,"VolumeUp","","",76,null],[13,"VolumeDown","","",76,null],[13,"NumPadComma","","",76,null],[13,"NumPadEqualsAS400","","",76,null],[13,"AltErase","","",76,null],[13,"Sysreq","","",76,null],[13,"Cancel","","",76,null],[13,"Clear","","",76,null],[13,"Prior","","",76,null],[13,"Return2","","",76,null],[13,"Separator","","",76,null],[13,"Out","","",76,null],[13,"Oper","","",76,null],[13,"ClearAgain","","",76,null],[13,"CrSel","","",76,null],[13,"ExSel","","",76,null],[13,"NumPad00","","",76,null],[13,"NumPad000","","",76,null],[13,"ThousandsSeparator","","",76,null],[13,"DecimalSeparator","","",76,null],[13,"CurrencyUnit","","",76,null],[13,"CurrencySubUnit","","",76,null],[13,"NumPadLeftParen","","",76,null],[13,"NumPadRightParen","","",76,null],[13,"NumPadLeftBrace","","",76,null],[13,"NumPadRightBrace","","",76,null],[13,"NumPadTab","","",76,null],[13,"NumPadBackspace","","",76,null],[13,"NumPadA","","",76,null],[13,"NumPadB","","",76,null],[13,"NumPadC","","",76,null],[13,"NumPadD","","",76,null],[13,"NumPadE","","",76,null],[13,"NumPadF","","",76,null],[13,"NumPadXor","","",76,null],[13,"NumPadPower","","",76,null],[13,"NumPadPercent","","",76,null],[13,"NumPadLess","","",76,null],[13,"NumPadGreater","","",76,null],[13,"NumPadAmpersand","","",76,null],[13,"NumPadDblAmpersand","","",76,null],[13,"NumPadVerticalBar","","",76,null],[13,"NumPadDblVerticalBar","","",76,null],[13,"NumPadColon","","",76,null],[13,"NumPadHash","","",76,null],[13,"NumPadSpace","","",76,null],[13,"NumPadAt","","",76,null],[13,"NumPadExclam","","",76,null],[13,"NumPadMemStore","","",76,null],[13,"NumPadMemRecall","","",76,null],[13,"NumPadMemClear","","",76,null],[13,"NumPadMemAdd","","",76,null],[13,"NumPadMemSubtract","","",76,null],[13,"NumPadMemMultiply","","",76,null],[13,"NumPadMemDivide","","",76,null],[13,"NumPadPlusMinus","","",76,null],[13,"NumPadClear","","",76,null],[13,"NumPadClearEntry","","",76,null],[13,"NumPadBinary","","",76,null],[13,"NumPadOctal","","",76,null],[13,"NumPadDecimal","","",76,null],[13,"NumPadHexadecimal","","",76,null],[13,"LCtrl","","",76,null],[13,"LShift","","",76,null],[13,"LAlt","","",76,null],[13,"LGui","","",76,null],[13,"RCtrl","","",76,null],[13,"RShift","","",76,null],[13,"RAlt","","",76,null],[13,"RGui","","",76,null],[13,"Mode","","",76,null],[13,"AudioNext","","",76,null],[13,"AudioPrev","","",76,null],[13,"AudioStop","","",76,null],[13,"AudioPlay","","",76,null],[13,"AudioMute","","",76,null],[13,"MediaSelect","","",76,null],[13,"Www","","",76,null],[13,"Mail","","",76,null],[13,"Calculator","","",76,null],[13,"Computer","","",76,null],[13,"AcSearch","","",76,null],[13,"AcHome","","",76,null],[13,"AcBack","","",76,null],[13,"AcForward","","",76,null],[13,"AcStop","","",76,null],[13,"AcRefresh","","",76,null],[13,"AcBookmarks","","",76,null],[13,"BrightnessDown","","",76,null],[13,"BrightnessUp","","",76,null],[13,"DisplaySwitch","","",76,null],[13,"KbdIllumToggle","","",76,null],[13,"KbdIllumDown","","",76,null],[13,"KbdIllumUp","","",76,null],[13,"Eject","","",76,null],[13,"Sleep","","",76,null],[4,"MouseButton","","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",78,null],[13,"Left","","Left mouse button.",78,null],[13,"Right","","Right mouse button.",78,null],[13,"Middle","","Middle mouse button.",78,null],[13,"X1","","Extra mouse button number 1.",78,null],[13,"X2","","Extra mouse button number 2.",78,null],[13,"Button6","","Mouse button number 6.",78,null],[13,"Button7","","Mouse button number 7.",78,null],[13,"Button8","","Mouse button number 8.",78,null],[0,"state","","Everything related to storing the state of user input.",null,null],[3,"State","conrod::input::state","Holds the current state of user input.",null,null],[12,"mouse","","Mouse position and button state.",123,null],[12,"widget_capturing_keyboard","","Which widget, if any, is currently capturing the keyboard",123,null],[12,"widget_capturing_mouse","","Which widget, if any, is currently capturing the mouse",123,null],[12,"widget_under_mouse","","The widget that is currently under the mouse cursor.",123,null],[12,"modifiers","","Which modifier keys are being held down.",123,null],[0,"mouse","","Mouse specific state.",null,null],[4,"Button","conrod::input::state::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",78,null],[13,"Left","","Left mouse button.",78,null],[13,"Right","","Right mouse button.",78,null],[13,"Middle","","Middle mouse button.",78,null],[13,"X1","","Extra mouse button number 1.",78,null],[13,"X2","","Extra mouse button number 2.",78,null],[13,"Button6","","Mouse button number 6.",78,null],[13,"Button7","","Mouse button number 7.",78,null],[13,"Button8","","Mouse button number 8.",78,null],[3,"Mouse","","The state of the `Mouse`, including it&#39;s position and button states.",null,null],[12,"buttons","","A map that stores the up/down state of each button.",124,null],[12,"xy","","The current position of the mouse.",124,null],[3,"ButtonMap","","Stores the state of all mouse buttons.",null,null],[3,"PressedButtons","","An iterator yielding all pressed buttons.",null,null],[4,"ButtonPosition","","Whether the button is up or down.",null,null],[13,"Up","","The button is up (i.e. pressed).",125,null],[13,"Down","","The button is down and was originally pressed down at the given `Point` over the widget\nat the given widget::Index.",125,null],[17,"NUM_BUTTONS","","The max total number of buttons on a mouse.",null,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"fmt","","",124,null],[11,"clone","","",124,null],[11,"eq","","",125,null],[11,"ne","","",125,null],[11,"fmt","","",125,null],[11,"clone","","",125,null],[11,"eq","","",126,null],[11,"ne","","",126,null],[11,"fmt","","",126,null],[11,"clone","","",126,null],[11,"clone","","",127,null],[11,"new","","Construct a new default `Mouse`.",124,{"inputs":[],"output":{"name":"self"}}],[11,"relative_to","","If the mouse button is down, return a new one with position relative to the given `xy`.",125,null],[11,"is_down","","Is the `ButtonPosition` down.",125,null],[11,"is_up","","Is the `ButtonPosition` up.",125,null],[11,"if_down","","Returns the position at which the button was pressed along with the widget that was\nunder the mouse at the time of pressing if the position is `Down`.",125,null],[11,"xy_if_down","","Returns the position at which the button was pressed if it&#39;s down.",125,null],[11,"new","","Returns a new button map with all states set to `None`",126,{"inputs":[],"output":{"name":"self"}}],[11,"relative_to","","Returns a copy of the ButtonMap relative to the given `Point`",126,null],[11,"left","","The state of the left mouse button.",126,null],[11,"middle","","The state of the middle mouse button.",126,null],[11,"right","","The state of the right mouse button.",126,null],[11,"press","","Sets the `Button` in the `Down` position.",126,null],[11,"release","","Set&#39;s the `Button` in the `Up` position.",126,null],[11,"pressed","","An iterator yielding all pressed mouse buttons along with the location at which they\nwere originally pressed.",126,null],[11,"index","","",126,null],[11,"next","","",127,null],[11,"eq","conrod::input::state","",123,null],[11,"ne","","",123,null],[11,"fmt","","",123,null],[11,"clone","","",123,null],[11,"new","","Returns a fresh new input state",123,{"inputs":[],"output":{"name":"state"}}],[11,"relative_to","","Returns a copy of the input::State relative to the given `position::Point`",123,null],[0,"widget","conrod::input","Contains all the logic for filtering input events and making them relative to widgets.",null,null],[3,"Widget","conrod::input::widget","Provides only events and input state that are relevant to a specific widget.",null,null],[3,"Mouse","","A view of the `input::state::Mouse` that is specific to a single widget.",null,null],[12,"buttons","","The state of each `MouseButton`.",128,null],[3,"Events","","An iterator yielding all events that are relevant to a specific widget.",null,null],[3,"Presses","","An `Iterator` yielding all button presses occuring within the given sequence of\n`widget::Event`s.",null,null],[3,"MousePresses","","An `Iterator` yielding all mouse button presses occuring within the given sequence of `Presses`.",null,null],[3,"MouseButtonPresses","","An `Iterator` yielding all mouse button presses occuring within the given sequence of\n`Presses` for some specific mouse button.",null,null],[3,"KeyPresses","","An `Iterator` yielding all keyboard button presses occuring within the given sequence of\n`Presses`.",null,null],[3,"Releases","","An `Iterator` yielding all button releases occuring within the given sequence of\n`widget::Event`s.",null,null],[3,"MouseButtonReleases","","An `Iterator` yielding all mouse button releases occuring within the given sequence of\n`Releases` for some specific mouse button.",null,null],[3,"MouseReleases","","An `Iterator` yielding all mouse button releases occuring within the given sequence of\n`Releases`.",null,null],[3,"KeyReleases","","An `Iterator` yielding all keyboard button releases occuring within the given sequence of\n`Releases`.",null,null],[3,"Clicks","","An `Iterator` yielding all mouse clicks occuring within the given sequence of `widget::Event`s.",null,null],[3,"ButtonClicks","","An `Iterator` yielding all mouse `button` clicks occuring within the given sequence of\n`widget::Click`s.",null,null],[3,"Drags","","An iterator that yields all `event::Drag` events yielded by the `Events` iterator.",null,null],[3,"ButtonDrags","","An `Iterator` yielding all mouse `button` drags occuring within the given sequence of\n`widget::Drag`s.",null,null],[3,"Texts","","An iterator that yields all `Input::Text` events yielded by the `Events` iterator.",null,null],[3,"Scrolls","","An iterator that yields all `Scroll` events yielded by the given `Events` iterator.",null,null],[11,"clone","","",129,null],[11,"fmt","","",128,null],[11,"clone","","",128,null],[11,"clone","","",130,null],[11,"clone","","",131,null],[11,"clone","","",132,null],[11,"clone","","",133,null],[11,"clone","","",134,null],[11,"clone","","",135,null],[11,"clone","","",136,null],[11,"clone","","",137,null],[11,"clone","","",138,null],[11,"clone","","",139,null],[11,"clone","","",140,null],[11,"clone","","",141,null],[11,"clone","","",142,null],[11,"clone","","",143,null],[11,"clone","","",144,null],[11,"for_widget","","Returns a `Widget` with events specifically for the given widget.",129,{"inputs":[{"name":"index"},{"name":"rect"},{"name":"global"}],"output":{"name":"self"}}],[11,"mouse","","If the widget is currently capturing the mouse, this returns the state of the mouse.",129,null],[11,"events","","Produces an iterator yielding all events that are relevant to a specific widget.",129,null],[11,"presses","","Filters all events yielded by `Self::events` other than `event::Press`es.",129,null],[11,"releases","","Filters all events yielded by `Self::events` other than `event::Release`es.",129,null],[11,"clicks","","Filters all events yielded by `Self::events` for all `event::Click`s.",129,null],[11,"drags","","Produces an iterator that yields all `event::Drag` events yielded by the `Events` iterator.",129,null],[11,"texts","","Produces an iterator that yields all `Input::Text` events that have occurred as `&amp;str`s\nsince the last time `Ui::set_widgets` was called.",129,null],[11,"scrolls","","Produce an iterator that yields only the `Scroll` events yielded by the `Events` iterator.",129,null],[11,"abs_xy","","The absolute position of the mouse within the window.",128,null],[11,"rel_xy","","The position of the mouse relative to the middle of the widget&#39;s `Rect`.",128,null],[11,"is_over","","Is the mouse currently over the widget.",128,null],[11,"mouse","","Produces an `Iterator` that yields only the press events that correspond with mouse buttons.",131,null],[11,"key","","Produces an `Iterator` that yields only the press events that correspond with keyboard\nbuttons.",131,null],[11,"button","","Produces an `Iterator` that yields only events associated with the given mouse button.",132,null],[11,"left","","Produces an `Iterator` that yields only the left mouse button press events.",132,null],[11,"middle","","Produces an `Iterator` that yields only the middle mouse button press events.",132,null],[11,"right","","Produces an `Iterator` that yields only the right mouse button press events.",132,null],[11,"mouse","","Produces an `Iterator` that yields only the release events that correspond with mouse\nbuttons.",135,null],[11,"key","","Produces an `Iterator` that yields only the release events that correspond with keyboard\nbuttons.",135,null],[11,"button","","Produces an `Iterator` that yields only events associated with the given mouse button.",137,null],[11,"left","","Produces an `Iterator` that yields only the left mouse button release events.",137,null],[11,"middle","","Produces an `Iterator` that yields only the middle mouse button release events.",137,null],[11,"right","","Produces an `Iterator` that yields only the right mouse button release events.",137,null],[11,"button","","Yield only the `Click`s that occurred from the given button.",139,null],[11,"left","","Yield only left mouse button `Click`s.",139,null],[11,"middle","","Yields only middle mouse button `Click`s.",139,null],[11,"right","","Yield only right mouse button `Click`s.",139,null],[11,"button","","Yield only the `Drag`s that occurred from the given button.",141,null],[11,"left","","Yield only left mouse button `Drag`s.",141,null],[11,"middle","","Yields only middle mouse button `Drag`s.",141,null],[11,"right","","Yield only right mouse button `Drag`s.",141,null],[11,"next","","",130,null],[11,"next","","",131,null],[11,"next","","",132,null],[11,"next","","",133,null],[11,"next","","",134,null],[11,"next","","",135,null],[11,"next","","",137,null],[11,"next","","",136,null],[11,"next","","",138,null],[11,"next","","",139,null],[11,"next","","",140,null],[11,"next","","",141,null],[11,"next","","",142,null],[11,"next","","",143,null],[11,"next","","",144,null],[0,"global","conrod::input","Handles all of the global input events and state.\nThe core of this module is the `Global` struct. It is responsible for aggregating\nand interpreting raw input events into high-level semantic events.",null,null],[3,"Global","conrod::input::global","Global input event handler that also implements `input::Provider`. The `Ui` passes all events\nto it&#39;s `Global` instance, which aggregates and interprets the events to provide so-called\n&#39;high-level&#39; events to widgets. This input gets reset after every update by the `Ui`.",null,null],[12,"start","","The `input::State` as it was at the end of the last update cycle.",145,null],[12,"current","","The most recent `input::State`, with updates from handling all the events\nthis update cycle",145,null],[12,"last_click","","Tracks the last click that occurred and the time at which it occurred in order to create\ndouble-click events.",145,null],[3,"Events","","Iterator over all global `event::Event`s that have occurred since the last time\n`Ui::set_widgets` was called.",null,null],[3,"UiEvents","","An iterator yielding all `event::Ui`s that have occurred since the last time `Ui::set_widgets`\nwas called.",null,null],[11,"clone","","",146,null],[11,"clone","","",147,null],[11,"new","","Returns a fresh new `Global`",145,{"inputs":[],"output":{"name":"global"}}],[11,"events","","Returns an iterator yielding all events that have occurred since the last time\n`Ui::set_widgets` was called.",145,null],[11,"push_event","","Add the new event to the stack.",145,null],[11,"clear_events_and_update_start_state","","Called at the end of every update cycle in order to prepare the `Global` to\nhandle events for the next one.",145,null],[11,"ui","","Converts the `Events` into a `UiEvents`, yielding only the `event::Ui`s that have occurred\nsince the last time `Ui::set_widgets` was called.",146,null],[11,"next","","",146,null],[11,"next","","",147,null],[11,"eq","conrod","",42,null],[11,"ne","","",42,null],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"eq","","",63,null],[11,"fmt","","",63,null],[11,"clone","","",63,null],[11,"new","","Construct a new `Range` from a given range, i.e. `Range::new(start, end)`.",42,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"range"}}],[11,"from_pos_and_len","","Construct a new `Range` from a given length and its centered position.",42,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"range"}}],[11,"magnitude","","The `start` value subtracted from the `end` value.",42,null],[11,"len","","The absolute length of the Range aka the absolute magnitude.",42,null],[11,"middle","","Return the value directly between the start and end values.",42,null],[11,"invert","","The current range with its start and end values swapped.",42,null],[11,"map_value_to","","Map the given Scalar from `Self` to some other given `Range`.",42,null],[11,"shift","","Shift the `Range` start and end points by a given `Scalar`.",42,null],[11,"direction","","The direction of the Range represented as a normalised scalar.",42,null],[11,"undirected","","Converts the Range to an undirected Range. By ensuring that `start` &lt;= `end`.",42,null],[11,"max","","The Range that encompasses both self and the given Range.",42,null],[11,"overlap","","The Range that represents the range of the overlap between two Ranges if there is some.",42,null],[11,"max_directed","","The Range that encompasses both self and the given Range.",42,null],[11,"is_over","","Is the given scalar within our range.",42,null],[11,"round","","Round the values at both ends of the Range and return the result.",42,null],[11,"floor","","Floor the values at both ends of the Range and return the result.",42,null],[11,"pad_start","","The Range with some padding given to the `start` value.",42,null],[11,"pad_end","","The Range with some padding given to the `end` value.",42,null],[11,"pad","","The Range with some given padding to be applied to each end.",42,null],[11,"pad_ends","","The Range with some padding given for each end.",42,null],[11,"clamp_value","","Clamp the given value to the range.",42,null],[11,"stretch_to_value","","Stretch the end that is closest to the given value only if it lies outside the Range.",42,null],[11,"has_same_direction","","Does `self` have the same direction as `other`.",42,null],[11,"align_start_of","","Align the `start` of `self` to the `start` of the `other` **Range**.",42,null],[11,"align_end_of","","Align the `end` of `self` to the `end` of the `other` **Range**.",42,null],[11,"align_middle_of","","Align the middle of `self` to the middle of the `other` **Range**.",42,null],[11,"align_after","","Aligns the `start` of `self` with the `end` of `other`.",42,null],[11,"align_before","","Aligns the `end` of `self` with the `start` of `other`.",42,null],[11,"align_to","","Align `self` to `other` along the *x* axis in accordance with the given `Align` variant.",42,null],[11,"closest_edge","","The closest **Edge** of `self` to the given `scalar`.",42,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"eq","","",60,null],[11,"fmt","","",60,null],[11,"clone","","",60,null],[11,"from_xy_dim","","Construct a Rect from a given `Point` and `Dimensions`.",43,{"inputs":[{"name":"point"},{"name":"dimensions"}],"output":{"name":"self"}}],[11,"from_corners","","Construct a Rect from the coordinates of two points.",43,{"inputs":[{"name":"point"},{"name":"point"}],"output":{"name":"self"}}],[11,"overlap","","The Rect representing the area in which two Rects overlap.",43,null],[11,"max","","The Rect that encompass the two given sets of Rect.",43,null],[11,"x","","The position in the middle of the x bounds.",43,null],[11,"y","","The position in the middle of the y bounds.",43,null],[11,"xy","","The xy position in the middle of the bounds.",43,null],[11,"x_y","","The centered x and y coordinates as a tuple.",43,null],[11,"w","","The width of the Rect.",43,null],[11,"h","","The height of the Rect.",43,null],[11,"dim","","The total dimensions of the Rect.",43,null],[11,"w_h","","The width and height of the Rect as a tuple.",43,null],[11,"xy_dim","","Convert the Rect to a `Point` and `Dimensions`.",43,null],[11,"x_y_w_h","","The Rect&#39;s centered coordinates and dimensions in a tuple.",43,null],[11,"len","","The length of the longest side of the rectangle.",43,null],[11,"bottom","","The Rect&#39;s lowest y value.",43,null],[11,"top","","The Rect&#39;s highest y value.",43,null],[11,"left","","The Rect&#39;s lowest x value.",43,null],[11,"right","","The Rect&#39;s highest x value.",43,null],[11,"top_left","","The top left corner **Point**.",43,null],[11,"bottom_left","","The bottom left corner **Point**.",43,null],[11,"top_right","","The top right corner **Point**.",43,null],[11,"bottom_right","","The bottom right corner **Point**.",43,null],[11,"l_r_b_t","","The edges of the **Rect** in a tuple (top, bottom, left, right).",43,null],[11,"l_t_w_h","","The left and top edges of the **Rect** along with the width and height.",43,null],[11,"l_b_w_h","","The left and bottom edges of the **Rect** along with the width and height.",43,null],[11,"shift_x","","Shift the Rect along the x axis.",43,null],[11,"shift_y","","Shift the Rect along the y axis.",43,null],[11,"shift","","Shift the Rect by the given Point.",43,null],[11,"relative_to_x","","Returns a `Rect` with a position relative to the given position on the *x* axis.",43,null],[11,"relative_to_y","","Returns a `Rect` with a position relative to the given position on the *y* axis.",43,null],[11,"relative_to","","Returns a `Rect` with a position relative to the given position.",43,null],[11,"is_over","","Does the given point touch the Rectangle.",43,null],[11,"pad_left","","The Rect with some padding applied to the left edge.",43,null],[11,"pad_right","","The Rect with some padding applied to the right edge.",43,null],[11,"pad_bottom","","The rect with some padding applied to the bottom edge.",43,null],[11,"pad_top","","The Rect with some padding applied to the top edge.",43,null],[11,"pad","","The Rect with some padding amount applied to each edge.",43,null],[11,"padding","","The Rect with some padding applied.",43,null],[11,"stretch_to_point","","Stretches the closest edge(s) to the given point if the point lies outside of the Rect area.",43,null],[11,"left_of","","Align `self`&#39;s right edge with the left edge of the `other` **Rect**.",43,null],[11,"right_of","","Align `self`&#39;s left edge with the right dge of the `other` **Rect**.",43,null],[11,"below","","Align `self`&#39;s top edge with the bottom edge of the `other` **Rect**.",43,null],[11,"above","","Align `self`&#39;s bottom edge with the top edge of the `other` **Rect**.",43,null],[11,"align_x_of","","Align `self` to `other` along the *x* axis in accordance with the given `Align` variant.",43,null],[11,"align_y_of","","Align `self` to `other` along the *y* axis in accordance with the given `Align` variant.",43,null],[11,"align_left_of","","Align `self`&#39;s left edge with the left edge of the `other` **Rect**.",43,null],[11,"align_middle_x_of","","Align the middle of `self` with the middle of the `other` **Rect** along the *x* axis.",43,null],[11,"align_right_of","","Align `self`&#39;s right edge with the right edge of the `other` **Rect**.",43,null],[11,"align_bottom_of","","Align `self`&#39;s bottom edge with the bottom edge of the `other` **Rect**.",43,null],[11,"align_middle_y_of","","Align the middle of `self` with the middle of the `other` **Rect** along the *y* axis.",43,null],[11,"align_top_of","","Align `self`&#39;s top edge with the top edge of the `other` **Rect**.",43,null],[11,"top_left_of","","Place `self` along the top left edges of the `other` **Rect**.",43,null],[11,"top_right_of","","Place `self` along the top right edges of the `other` **Rect**.",43,null],[11,"bottom_left_of","","Place `self` along the bottom left edges of the `other` **Rect**.",43,null],[11,"bottom_right_of","","Place `self` along the bottom right edges of the `other` **Rect**.",43,null],[11,"mid_top_of","","Place `self` in the middle of the top edge of the `other` **Rect**.",43,null],[11,"mid_bottom_of","","Place `self` in the middle of the bottom edge of the `other` **Rect**.",43,null],[11,"mid_left_of","","Place `self` in the middle of the left edge of the `other` **Rect**.",43,null],[11,"mid_right_of","","Place `self` in the middle of the right edge of the `other` **Rect**.",43,null],[11,"middle_of","","Place `self` directly in the middle of the `other` **Rect**.",43,null],[11,"closest_corner","","Return the **Corner** of `self` that is closest to the given **Point**.",43,null],[11,"eq","","",59,null],[11,"fmt","","",59,null],[11,"clone","","",59,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"fmt","","",65,null],[11,"clone","","",65,null],[11,"eq","","",61,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"eq","","",58,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"fmt","","",64,null],[11,"clone","","",64,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"fmt","","",62,null],[11,"clone","","",62,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"fmt","","",41,null],[11,"clone","","",41,null],[11,"none","","No padding.",41,{"inputs":[],"output":{"name":"padding"}}],[0,"text","","Text layout logic.",null,null],[3,"Lines","conrod::text","An iterator yielding each line within the given `text` as a new `&amp;str`, where the start and end\nindices into each line are provided by the given iterator.",null,null],[5,"height","","Determine the total height of a block of text with the given number of lines, font size and\n`line_spacing` (the space that separates each line of text).",null,{"inputs":[{"name":"usize"},{"name":"fontsize"},{"name":"scalar"}],"output":{"name":"scalar"}}],[5,"lines","","Produce an iterator yielding each line within the given `text` as a new `&amp;str`, where the\nstart and end indices into each line are provided by the given iterator.",null,{"inputs":[{"name":"str"},{"name":"i"}],"output":{"name":"lines"}}],[0,"char","","Logic and types specific to individual character layout.",null,null],[3,"Widths","conrod::text::char","An iterator yielding the widths of each consecutive character in some sequence.",null,null],[3,"Rects","","An iterator yielding the `Rect` for each `char` in the given `text`.",null,null],[3,"RectsPerLine","","An iterator that, for every `(line, line_rect)` pair yielded by the given iterator,\nproduces an iterator that yields a `Rect` for every character in that line.",null,null],[3,"SelectedRectsPerLine","","Yields an iteraor yielding `Rect`s for each selected character in each line of text within\nthe given iterator yielding char `Rect`s.",null,null],[3,"SelectedRects","","Yields a `Rect` for each selected character in a single line of text.",null,null],[5,"index_after_cursor","","Find the index of the character that directly follows the cursor at the given `cursor_idx`.",null,{"inputs":[{"name":"i"},{"name":"index"}],"output":{"name":"option"}}],[5,"widths","","Converts the given sequence of `char`s into their Scalar widths.",null,{"inputs":[{"name":"i"},{"name":"glyphcache"},{"name":"fontsize"}],"output":{"name":"widths"}}],[5,"rects_per_line","","Produce an iterator that, for every `(line, line_rect)` pair yielded by the given iterator,\nproduces an iterator that yields a `Rect` for every character in that line.",null,{"inputs":[{"name":"i"},{"name":"glyphcache"},{"name":"fontsize"}],"output":{"name":"rectsperline"}}],[5,"selected_rects_per_line","","Produces an iterator that yields iteraors yielding `Rect`s for each selected character in\neach line of text within the given iterator yielding char `Rect`s.",null,{"inputs":[{"name":"i"},{"name":"glyphcache"},{"name":"fontsize"},{"name":"index"},{"name":"index"}],"output":{"name":"selectedrectsperline"}}],[6,"X","","Some position along the X axis (used within `CharXs`).",null,null],[6,"HalfW","","The half of the width of some character (used within `CharXs`).",null,null],[11,"clone","","",148,null],[11,"clone","","",149,null],[11,"clone","","",150,null],[11,"clone","","",151,null],[11,"clone","","",152,null],[11,"next","","",148,null],[11,"next","","",150,null],[11,"next","","",151,null],[11,"next","","",149,null],[11,"next","","",152,null],[0,"cursor","conrod::text","Logic related to the positioning of the cursor within text.",null,null],[3,"XysPerLine","conrod::text::cursor","Every possible cursor position within each line of text yielded by the given iterator.",null,null],[3,"Xs","","Each possible cursor position along the *x* axis within a line of text.",null,null],[3,"Index","","An index representing the position of a cursor within some text.",null,null],[12,"line","","The index of the line upon which the cursor is situated.",153,null],[12,"char","","The index within all possible cursor positions for the line.",153,null],[5,"xys_per_line","","Every possible cursor position within each line of text yielded by the given iterator.",null,{"inputs":[{"name":"i"},{"name":"glyphcache"},{"name":"fontsize"}],"output":{"name":"xysperline"}}],[5,"index_before_char","","Convert the given character index into a cursor `Index`.",null,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"option"}}],[5,"xy_at","","Determine the *xy* location of the cursor at the given cursor `Index`.",null,{"inputs":[{"name":"i"},{"name":"index"}],"output":{"name":"option"}}],[11,"clone","","",154,null],[11,"clone","","",155,null],[11,"cmp","","",153,null],[11,"partial_cmp","","",153,null],[11,"lt","","",153,null],[11,"le","","",153,null],[11,"gt","","",153,null],[11,"ge","","",153,null],[11,"eq","","",153,null],[11,"ne","","",153,null],[11,"fmt","","",153,null],[11,"clone","","",153,null],[11,"previous","","The cursor index that comes before `self`.",153,null],[11,"next","","The cursor index that follows `self`.",153,null],[11,"next","","",154,null],[11,"next","","",155,null],[0,"line","conrod::text","Text handling logic related to individual lines of text.",null,null],[3,"Info","conrod::text::line","Information about a single line of text within a `&amp;str`.",null,null],[12,"start_byte","","The index into the `&amp;str` that represents the first character within the line.",156,null],[12,"start_char","","The character index of the first character in the line.",156,null],[12,"end_break","","The index within the `&amp;str` at which this line breaks into a new line, along with the\nindex at which the following line begins. The variant describes whether the break is\ncaused by a `Newline` character or a `Wrap` by the given wrap function.",156,null],[12,"width","","The total width of all characters within the line.",156,null],[3,"Infos","","An iterator yielding an `Info` struct for each line in the given `text` wrapped by the\ngiven `next_break_fn`.",null,null],[3,"Rects","","An iterator yielding a `Rect` for each line in",null,null],[3,"SelectedRects","","An iterator yielding a `Rect` for each selected line in a block of text.",null,null],[4,"Break","","The two types of **Break** indices returned by the **WrapIndicesBy** iterators.",null,null],[13,"Wrap","","A break caused by the text exceeding some maximum width.",157,null],[12,"byte","conrod::text::line::Break","The byte index at which the break occurs.",157,null],[12,"char","","The char index at which the string should wrap due to exceeding a maximum width.",157,null],[12,"len_bytes","","The byte length which should be skipped in order to reach the first non-whitespace\ncharacter to use as the beginning of the next line.",157,null],[13,"Newline","conrod::text::line","A break caused by a newline character.",157,null],[12,"byte","conrod::text::line::Break","The byte index at which the string should wrap due to exceeding a maximum width.",157,null],[12,"char","","The char index at which the string should wrap due to exceeding a maximum width.",157,null],[12,"len_bytes","","The width of the &quot;newline&quot; token in bytes.",157,null],[13,"End","conrod::text::line","The end of the string has been reached, with the given length.",157,null],[12,"byte","conrod::text::line::Break","The ending byte index.",157,null],[12,"char","","The ending char index.",157,null],[5,"infos_wrapped_by","conrod::text::line","Produce an `Infos` iterator wrapped by the given `next_break_fn`.",null,{"inputs":[{"name":"str"},{"name":"glyphcache"},{"name":"fontsize"},{"name":"scalar"},{"name":"f"}],"output":{"name":"infos"}}],[5,"infos","","Produce an `Infos` iterator that yields an `Info` for every line in the given text.",null,{"inputs":[{"name":"str"},{"name":"glyphcache"},{"name":"fontsize"}],"output":{"name":"infos"}}],[5,"rects","","Produce an iterator yielding the bounding `Rect` for each line in the text.",null,{"inputs":[{"name":"i"},{"name":"fontsize"},{"name":"rect"},{"name":"align"},{"name":"align"},{"name":"scalar"}],"output":{"name":"rects"}}],[5,"selected_rects","","Produces an iterator yielding a `Rect` for the selected range in each selected line in a block\nof text.",null,{"inputs":[{"name":"i"},{"name":"glyphcache"},{"name":"fontsize"},{"name":"index"},{"name":"index"}],"output":{"name":"selectedrects"}}],[6,"NextBreakFnPtr","","An alias for function pointers that are compatible with the `Block`&#39;s required text\nwrapping function.",null,null],[11,"eq","","",157,null],[11,"ne","","",157,null],[11,"fmt","","",157,null],[11,"clone","","",157,null],[11,"eq","","",156,null],[11,"ne","","",156,null],[11,"fmt","","",156,null],[11,"clone","","",156,null],[11,"clone","","",158,null],[11,"clone","","",159,null],[11,"byte_index","","Return the index at which the break occurs.",157,null],[11,"char_index","","Return the index of the `char` at which the break occurs.",157,null],[11,"clone","","",160,null],[11,"end_byte","","The end of the byte index range for indexing into the slice.",156,null],[11,"end_char","","The end of the index range for indexing into the slice.",156,null],[11,"byte_range","","The index range for indexing (via bytes) into the original str slice.",156,null],[11,"char_range","","The index range for indexing into a `char` iterator over the original str slice.",156,null],[11,"wrap_by_character","","Converts `Self` into an `Infos` whose lines are wrapped at the character that first\ncauses the line width to exceed the given `max_width`.",160,null],[11,"wrap_by_whitespace","","Converts `Self` into an `Infos` whose lines are wrapped at the whitespace prior to the\ncharacter that causes the line width to exceed the given `max_width`.",160,null],[11,"next","","",160,null],[11,"next","","",158,null],[11,"next","","",159,null],[11,"clone","conrod::text","",161,null],[11,"next","","",161,null],[0,"theme","conrod","",null,null],[3,"Theme","conrod::theme","A serializable collection of canvas and widget styling defaults.",null,null],[12,"name","","A name for the theme used for identification.",162,null],[12,"padding","","Padding for Canvas layout and positioning.",162,null],[12,"x_position","","A default widget position along the *x* axis.",162,null],[12,"y_position","","A default widget position along the *y* axis.",162,null],[12,"background_color","","A default background for the theme.",162,null],[12,"shape_color","","A default color for widget shapes.",162,null],[12,"frame_color","","A default color for widget frames.",162,null],[12,"frame_width","","A default width for widget frames.",162,null],[12,"label_color","","A default color for widget labels.",162,null],[12,"font_size_large","","A default &quot;large&quot; font size.",162,null],[12,"font_size_medium","","A default &quot;medium&quot; font size.",162,null],[12,"font_size_small","","A default &quot;small&quot; font size.",162,null],[12,"widget_styling","","Unique styling for each widget, index-able by the **Widget::kind**.",162,null],[12,"mouse_drag_threshold","","Mouse Drag distance threshold determines the minimum distance from the mouse-down point\nthat the mouse must move before starting a drag operation.",162,null],[12,"double_click_threshold","","Once the `Duration` that separates two consecutive `Click`s is greater than this value, a\n`DoubleClick` event will no longer be generated.",162,null],[3,"WidgetDefault","","The defaults for a specific widget.",null,null],[12,"style","","The unique style of a widget.",163,null],[12,"common","","The attributes commonly shared between widgets.",163,null],[3,"UniqueDefault","","A **WidgetDefault** downcast to a **Widget**&#39;s unique **Style** type.",null,null],[12,"style","","The unique style for the widget.",164,null],[12,"common","","Attributes that are common to all widgets.",164,null],[11,"fmt","","",164,null],[11,"clone","","",164,null],[11,"new","","Constructor for a WidgetDefault.",163,{"inputs":[{"name":"box"}],"output":{"name":"widgetdefault"}}],[11,"default","","The default theme if not loading from file.",162,{"inputs":[],"output":{"name":"theme"}}],[11,"widget_style","","Retrieve the unique default styling for a widget.",162,null],[11,"new","conrod","A new, empty **Ui**.",44,{"inputs":[{"name":"charactercache"},{"name":"theme"}],"output":{"name":"self"}}],[11,"with_capacity","","A new **Ui** with the capacity given as a number of widgets.",44,{"inputs":[{"name":"charactercache"},{"name":"theme"},{"name":"usize"}],"output":{"name":"self"}}],[11,"widget_input","","Returns a `input::Widget` for the given widget",44,null],[11,"rect_of","","The **Rect** for the widget at the given index.",44,null],[11,"w_of","","The absolute width of the widget at the given index.",44,null],[11,"h_of","","The absolute height of the widget at the given index.",44,null],[11,"wh_of","","The absolute dimensions for the widget at the given index.",44,null],[11,"xy_of","","The coordinates for the widget at the given index.",44,null],[11,"kid_area_of","","The `kid_area` of the widget at the given index.",44,null],[11,"maybe_prev_widget","","An index to the previously updated widget if there is one.",44,null],[11,"widget_graph","","Borrow the **Ui**&#39;s `widget_graph`.",44,null],[11,"updated_widgets","","Borrow the **Ui**&#39;s set of updated widgets.",44,null],[11,"prev_updated_widgets","","Borrow the **Ui**&#39;s set of updated widgets.",44,null],[11,"scroll_widget","","Scroll the widget at the given index by the given offset amount.",44,null],[11,"handle_event","","Handle raw window events and update the `Ui` state accordingly.",44,null],[11,"calc_xy","","Get the centred xy coords for some given `Dimension`s, `Position` and alignment.",44,null],[11,"set_widgets","","A function within which all widgets are instantiated by the user, normally situated within\nthe &quot;update&quot; stage of an event loop.",44,null],[11,"set_num_redraw_frames","","Set the number of frames that the `Ui` should draw in the case that `needs_redraw` is\ncalled. The default is `3` (see the SAFE_REDRAW_COUNT docs for details).",44,null],[11,"needs_redraw","","Tells the `Ui` that it needs to be re-draw everything. It does this by setting the redraw\ncount to `num_redraw_frames`. See the docs for `set_num_redraw_frames`, SAFE_REDRAW_COUNT\nor `draw_if_changed` for more info on how/why the redraw count is used.",44,null],[11,"draw","","Draw the `Ui` in it&#39;s current state.",44,null],[11,"draw_if_changed","","Same as the `Ui::draw` method, but *only* draws if the `redraw_count` is greater than 0.",44,null],[11,"kids_bounding_box","","The **Rect** that bounds the kids of the widget with the given index.",44,null],[11,"visible_area","","The **Rect** that represents the maximum fully visible area for the widget with the given\nindex, including consideration of cropped scroll area.",44,null],[11,"theme","","A reference to the `Theme` that is currently active within the `Ui`.",165,null],[11,"glyph_cache","","A reference to the `Ui`&#39;s `GlyphCache`.",165,null],[11,"window_dim","","Returns the dimensions of the window",165,null],[11,"global_input","","Returns an immutable reference to the `input::Global` of the `Ui`.",165,null],[11,"widget_input","","Returns a `input::Widget` with input events for the widget.",165,null],[11,"new_unique_node_index","","Generate a new, unique NodeIndex into a Placeholder node within the `Ui`&#39;s widget graph.\nThis should only be called once for each unique widget needed to avoid unnecessary bloat\nwithin the `Ui`&#39;s widget graph.",165,null],[11,"kids_bounding_box","","The **Rect** that bounds the kids of the widget with the given index.",165,null],[11,"scroll_widget","","Scroll the widget at the given index by the given offset amount.",165,null],[11,"deref","","",165,null],[11,"as_ref","","",165,null],[0,"utils","","",null,null],[4,"IterDiff","conrod::utils","A type returned by the `iter_diff` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with the iterator&#39;s remaining elements\nstarting with the first mis-matched element.",166,null],[13,"Longer","","The remaining elements of the iterator.",166,null],[13,"Shorter","","The total number of elements that were in the iterator.",166,null],[5,"partial_min","","Compare to PartialOrd values and return the min.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"partial_max","","Compare to PartialOrd values and return the min.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"clamp","","Clamp a value between some range.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"degrees","","Convert degrees to radians.",null,{"inputs":[{"name":"f"}],"output":{"name":"f"}}],[5,"fmod","","Modulo float.",null,{"inputs":[{"name":"f32"},{"name":"i32"}],"output":{"name":"f32"}}],[5,"modulo","","The modulo function.",null,{"inputs":[{"name":"i"},{"name":"i"}],"output":{"name":"i"}}],[5,"map_range","","Map a value from a given range to a new given range.",null,{"inputs":[{"name":"x"},{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"}],"output":{"name":"y"}}],[5,"percentage","","Get value percentage between max and min.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"f32"}}],[5,"turns","","Convert turns to radians.",null,{"inputs":[{"name":"f"}],"output":{"name":"f"}}],[5,"value_from_perc","","Adjust the value to the given percentage.",null,{"inputs":[{"name":"f32"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"val_to_string","","Get a suitable string from the value, its max and the pixel range.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"usize"}],"output":{"name":"string"}}],[5,"vec2_add","","Add `a` and `b`.",null,null],[5,"vec2_sub","","Subtract `b` from `a`.",null,null],[5,"bounding_box_for_points","","Find the bounding rect for the given series of points.",null,{"inputs":[{"name":"i"}],"output":{"name":"rect"}}],[5,"iter_diff","","Compares every element yielded by both elems and new_elems in lock-step.",null,{"inputs":[{"name":"a"},{"name":"b"}],"output":{"name":"option"}}],[5,"write_if_different","","Returns `Borrowed` `elems` if `elems` contains the same elements as yielded by `new_elems`.",null,null],[5,"iter_eq","","Compares two iterators to see if they yield the same thing.",null,{"inputs":[{"name":"a"},{"name":"b"}],"output":{"name":"bool"}}],[11,"cmp","conrod","",52,null],[11,"partial_cmp","","",52,null],[11,"lt","","",52,null],[11,"le","","",52,null],[11,"gt","","",52,null],[11,"ge","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"hash","","",52,null],[11,"fmt","","",52,null],[11,"clone","","",52,null],[11,"from","","",52,{"inputs":[{"name":"usize"}],"output":{"name":"id"}}],[11,"add","","",52,null],[11,"cmp","","",67,null],[11,"partial_cmp","","",67,null],[11,"lt","","",67,null],[11,"le","","",67,null],[11,"gt","","",67,null],[11,"ge","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"from","","",67,{"inputs":[{"name":"widgetid"}],"output":{"name":"index"}}],[11,"from","","",67,{"inputs":[{"name":"nodeindex"}],"output":{"name":"index"}}],[11,"eq","conrod::scroll","",70,null],[11,"ne","","",70,null],[11,"fmt","","",70,null],[11,"clone","","",70,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"fmt","","",68,null],[11,"clone","","",68,null],[11,"eq","","",71,null],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"eq","","",72,null],[11,"fmt","","",72,null],[11,"clone","","",72,null],[11,"new","","The default `Scroll` args.",70,{"inputs":[],"output":{"name":"self"}}],[11,"update","","Calculate the new scroll state for the single axis of a `Widget`.",68,{"inputs":[{"name":"ui"},{"name":"index"},{"name":"kidarea"},{"name":"option"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"parallel_range","","",71,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[11,"perpendicular_range","","",71,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[11,"padding_range","","",71,{"inputs":[{"name":"padding"}],"output":{"name":"range"}}],[11,"mouse_scalar","","",71,{"inputs":[{"name":"point"}],"output":{"name":"scalar"}}],[11,"offset_direction","","",71,{"inputs":[],"output":{"name":"scalar"}}],[11,"parallel_range","","",72,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[11,"perpendicular_range","","",72,{"inputs":[{"name":"rect"}],"output":{"name":"range"}}],[11,"padding_range","","",72,{"inputs":[{"name":"padding"}],"output":{"name":"range"}}],[11,"mouse_scalar","","",72,{"inputs":[{"name":"point"}],"output":{"name":"scalar"}}],[11,"offset_direction","","",72,{"inputs":[],"output":{"name":"scalar"}}],[11,"fmt","conrod","",2,null],[11,"clone","","",2,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"styled","","Build a new **Line** widget with the given style.",2,{"inputs":[{"name":"point"},{"name":"point"},{"name":"style"}],"output":{"name":"self"}}],[11,"new","","Build a new default **Line** widget.",2,{"inputs":[{"name":"point"},{"name":"point"}],"output":{"name":"self"}}],[11,"abs","","Build a new **Line** whose bounding box is fit to the absolute co-ordinates of the line\npoints.",2,{"inputs":[{"name":"point"},{"name":"point"}],"output":{"name":"self"}}],[11,"abs_styled","","The same as [**Line::abs**](./struct.Line#method.abs) but with the given style.",2,{"inputs":[{"name":"point"},{"name":"point"},{"name":"style"}],"output":{"name":"self"}}],[11,"centred","","Build a new **Line** and shift the location of the start and end points so that the centre\nof their bounding rectangle lies at the position determined by the layout for the **Line**\nwidget.",2,{"inputs":[{"name":"point"},{"name":"point"}],"output":{"name":"self"}}],[11,"centred_styled","","The same as [**Line::centred**](./struct.Line#method.centred) but with the given style.",2,{"inputs":[{"name":"point"},{"name":"point"},{"name":"style"}],"output":{"name":"self"}}],[11,"thickness","","The thickness or width of the Line.",2,null],[11,"solid","","Make a solid line.",2,null],[11,"dashed","","Make a line with a Dashed pattern.",2,null],[11,"dotted","","Make a line with a Dotted pattern.",2,null],[11,"new","","Constructor for a default Line Style.",21,{"inputs":[],"output":{"name":"self"}}],[11,"solid","","Make a solid line.",21,{"inputs":[],"output":{"name":"self"}}],[11,"dashed","","Make a line with a Dashed pattern.",21,{"inputs":[],"output":{"name":"self"}}],[11,"dotted","","Make a line with a Dotted pattern.",21,{"inputs":[],"output":{"name":"self"}}],[11,"pattern","","The style with some given pattern.",21,null],[11,"color","","The style with some given color.",21,null],[11,"thickness","","The style with some given thickness.",21,null],[11,"cap","","The style for the ends of the Line.",21,null],[11,"set_pattern","","Set the pattern for the line.",21,null],[11,"set_color","","Set the color for the line.",21,null],[11,"set_thickness","","Set the thickness for the line.",21,null],[11,"set_cap","","Set the **Cap** for the line.",21,null],[11,"get_pattern","","The Pattern for the Line.",21,null],[11,"get_color","","The Color for the Line.",21,null],[11,"get_thickness","","The width or thickness of the Line.",21,null],[11,"get_cap","","The styling for the ends of the Line.",21,null],[11,"common","","",2,null],[11,"common_mut","","",2,null],[11,"unique_kind","","",2,null],[11,"init_state","","",2,null],[11,"style","","",2,null],[11,"update","","Update the state of the Line.",2,null],[11,"color","","",2,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",22,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",22,{"inputs":[],"output":{"name":"self"}}],[11,"maybe_color","","Retrieves the value from the `Style`.",22,null],[11,"from_texture","","Construct a new `Image` from a texture.",3,{"inputs":[{"name":"arc"}],"output":{"name":"self"}}],[11,"source_rectangle","","Build the type&#39;s self.$($assignee).+ with the given $Type.",3,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",3,null],[11,"common","","",3,null],[11,"common_mut","","",3,null],[11,"unique_kind","","",3,null],[11,"init_state","","",3,null],[11,"style","","",3,null],[11,"default_x_dimension","","",3,null],[11,"default_y_dimension","","",3,null],[11,"update","","",3,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"styled","","The same as [**PointPath::new**](./struct.PointPath#method.new) but with th given style.",4,{"inputs":[{"name":"i"},{"name":"style"}],"output":{"name":"self"}}],[11,"new","","Build a new default PointPath widget.",4,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"abs","","Build a new PointPath whose bounding box is fit to the absolute co-ordinates of the points.",4,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"abs_styled","","The same as [**PointPath::abs**](./struct.PointPath#method.abs) but constructs the\n**PointPath** with the given style.",4,{"inputs":[{"name":"i"},{"name":"style"}],"output":{"name":"self"}}],[11,"centred","","Build a new **PointPath** and shift the location of the points so that the centre of their\nbounding rectangle lies at the position determined for the **PointPath** widget.",4,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"centred_styled","","The same as [**PointPath::centred**](./struct.PointPath#method.centred) but constructs the\n**PointPath** with the given style.",4,{"inputs":[{"name":"i"},{"name":"style"}],"output":{"name":"self"}}],[11,"thickness","","The thickness or width of the **PointPath**&#39;s lines.",4,null],[11,"solid","","Make a Solid line.",4,null],[11,"dashed","","Make a line with a Dashed pattern.",4,null],[11,"dotted","","Make a line with a Dotted pattern.",4,null],[11,"common","","",4,null],[11,"common_mut","","",4,null],[11,"unique_kind","","",4,null],[11,"init_state","","",4,null],[11,"style","","",4,null],[11,"update","","Update the state of the Line.",4,null],[11,"color","","",4,null],[11,"fmt","","",167,null],[11,"clone","","",167,null],[11,"styled","","Build a circular **Oval** with the given dimensions and style.",167,{"inputs":[{"name":"scalar"},{"name":"style"}],"output":{"name":"oval"}}],[11,"fill","","Build a new **Fill**ed circular **Oval**.",167,{"inputs":[{"name":"scalar"}],"output":{"name":"oval"}}],[11,"fill_with","","Build a new circular **Oval** **Fill**ed with the given color.",167,{"inputs":[{"name":"scalar"},{"name":"color"}],"output":{"name":"oval"}}],[11,"outline","","Build a new circular **Outline**d **Oval** widget.",167,{"inputs":[{"name":"scalar"}],"output":{"name":"oval"}}],[11,"outline_styled","","Build a new circular **Oval** **Outline**d with the given style.",167,{"inputs":[{"name":"scalar"},{"name":"linestyle"}],"output":{"name":"oval"}}],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"styled","","Build an **Oval** with the given dimensions and style.",7,{"inputs":[{"name":"dimensions"},{"name":"style"}],"output":{"name":"self"}}],[11,"fill","","Build a new **Fill**ed **Oval**.",7,{"inputs":[{"name":"dimensions"}],"output":{"name":"self"}}],[11,"fill_with","","Build a new **Oval** **Fill**ed with the given color.",7,{"inputs":[{"name":"dimensions"},{"name":"color"}],"output":{"name":"self"}}],[11,"outline","","Build a new **Outline**d **Oval** widget.",7,{"inputs":[{"name":"dimensions"}],"output":{"name":"self"}}],[11,"outline_styled","","Build a new **Oval** **Outline**d with the given style.",7,{"inputs":[{"name":"dimensions"},{"name":"linestyle"}],"output":{"name":"self"}}],[11,"common","","",7,null],[11,"common_mut","","",7,null],[11,"unique_kind","","",7,null],[11,"init_state","","",7,null],[11,"style","","",7,null],[11,"update","","Update the state of the Oval.",7,null],[11,"color","","",7,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"styled","","Build a polygon with the given points and style.",6,{"inputs":[{"name":"i"},{"name":"style"}],"output":{"name":"self"}}],[11,"fill","","Build a **Polygon** with the default **Fill** style.",6,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"fill_with","","Build a **Polygon** **Fill**ed with the given **Color**.",6,{"inputs":[{"name":"i"},{"name":"color"}],"output":{"name":"self"}}],[11,"outline","","Build a **Polygon** with the default **Outline** style.",6,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"outline_styled","","Build a **Polygon** **Outline**ed with the given line style.",6,{"inputs":[{"name":"i"},{"name":"linestyle"}],"output":{"name":"self"}}],[11,"abs_styled","","Build a new filled **Polygon** whose bounding box is fit to the absolute co-ordinates of\nthe points.",6,{"inputs":[{"name":"i"},{"name":"style"}],"output":{"name":"self"}}],[11,"abs_fill","","The same as [**Polygon::abs_styled**](./struct.Polygon#method.abs_styled) but builds the\n**Polygon** with the default **Fill** style.",6,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"abs_fill_with","","The same as [**Polygon::abs_styled**](./struct.Polygon#method.abs_styled) but builds the\n**Polygon** **Fill**ed with the given **Color**.",6,{"inputs":[{"name":"i"},{"name":"color"}],"output":{"name":"self"}}],[11,"abs_outline","","The same as [**Polygon::abs_styled**](./struct.Polygon#method.abs_styled) but builds the\n**Polygon** with the default **Outline** style.",6,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"abs_outline_styled","","The same as [**Polygon::abs_styled**](./struct.Polygon#method.abs_styled) but builds the\n**Polygon** with the given **Outline** styling.",6,{"inputs":[{"name":"i"},{"name":"linestyle"}],"output":{"name":"self"}}],[11,"centred_styled","","Build a new **Polygon** and shift the location of the points so that the centre of their\nbounding rectangle lies at the position determined for the **Polygon** widget.",6,{"inputs":[{"name":"i"},{"name":"style"}],"output":{"name":"self"}}],[11,"centred_fill","","The same as [**Polygon::centred_styled**](./struct.Polygon#method.centred_styled) but\nconstructs the **Polygon** with the default **Fill** style.",6,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"centred_fill_with","","The same as [**Polygon::centred_styled**](./struct.Polygon#method.centred_styled) but\nconstructs the **Polygon** **Fill**ed with the given color.",6,{"inputs":[{"name":"i"},{"name":"color"}],"output":{"name":"self"}}],[11,"centred_outline","","The same as [**Polygon::centred_styled**](./struct.Polygon#method.centred_styled) but\nconstructs the **Polygon** with the default **Outline** style.",6,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"centred_outline_styled","","The same as [**Polygon::centred_styled**](./struct.Polygon#method.centred_styled) but\nconstructs the **Polygon** **Outline**d with the given styling.",6,{"inputs":[{"name":"i"},{"name":"linestyle"}],"output":{"name":"self"}}],[11,"common","","",6,null],[11,"common_mut","","",6,null],[11,"unique_kind","","",6,null],[11,"init_state","","",6,null],[11,"style","","",6,null],[11,"update","","Update the state of the Polygon.",6,null],[11,"color","","",6,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"styled","","Build a rectangle with the dimensions and style.",8,{"inputs":[{"name":"dimensions"},{"name":"style"}],"output":{"name":"self"}}],[11,"fill","","Build a new filled rectangle.",8,{"inputs":[{"name":"dimensions"}],"output":{"name":"self"}}],[11,"fill_with","","Build a new filled rectangle widget filled with the given color.",8,{"inputs":[{"name":"dimensions"},{"name":"color"}],"output":{"name":"self"}}],[11,"outline","","Build a new outlined rectangle widget.",8,{"inputs":[{"name":"dimensions"}],"output":{"name":"self"}}],[11,"outline_styled","","Build an outlined rectangle rather than a filled one.",8,{"inputs":[{"name":"dimensions"},{"name":"linestyle"}],"output":{"name":"self"}}],[11,"common","","",8,null],[11,"common_mut","","",8,null],[11,"unique_kind","","",8,null],[11,"init_state","","",8,null],[11,"style","","",8,null],[11,"update","","Update the state of the Rectangle.",8,null],[11,"color","","",8,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",23,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",23,null],[11,"frame","","Retrieves the value from the `Style`.",23,null],[11,"frame_color","","Retrieves the value from the `Style`.",23,null],[11,"new","","Build a new **FramedRectangle**.",5,{"inputs":[{"name":"dimensions"}],"output":{"name":"self"}}],[11,"with_style","","Build the type&#39;s self.$($assignee).+ with the given $Type.",5,null],[11,"common","","",5,null],[11,"common_mut","","",5,null],[11,"unique_kind","","",5,null],[11,"init_state","","",5,null],[11,"style","","",5,null],[11,"update","","Update the state of the Rectangle.",5,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",5,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",5,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",5,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"fmt","","",56,null],[11,"clone","","",56,null],[11,"fill","","A default `Fill` style.",56,{"inputs":[],"output":{"name":"self"}}],[11,"fill_with","","A `Fill` style with some given `Color`.",56,{"inputs":[{"name":"color"}],"output":{"name":"self"}}],[11,"outline","","A default `Outline` style.",56,{"inputs":[],"output":{"name":"self"}}],[11,"outline_styled","","A default `Outline` style.",56,{"inputs":[{"name":"linestyle"}],"output":{"name":"self"}}],[11,"color","","The style with some given Color.",56,null],[11,"set_color","","Set the color for the style.",56,null],[11,"get_color","","Get the color of the Rectangle.",56,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",24,{"inputs":[],"output":{"name":"self"}}],[11,"font_size","","Retrieves the value from the `Style`.",24,null],[11,"color","","Retrieves the value from the `Style`.",24,null],[11,"maybe_wrap","","Retrieves the value from the `Style`.",24,null],[11,"line_spacing","","Retrieves the value from the `Style`.",24,null],[11,"text_align","","Retrieves the value from the `Style`.",24,null],[11,"eq","","",53,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"new","","Build a new **Text** widget.",9,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"no_line_wrap","","Specify that the **Text** should not wrap lines around the width.",9,null],[11,"wrap_by_word","","Line wrap the **Text** at the beginning of the first word that exceeds the width.",9,null],[11,"wrap_by_character","","Line wrap the **Text** at the beginning of the first character that exceeds the width.",9,null],[11,"with_style","","Build the **Text** with the given **Style**.",9,null],[11,"align_text_left","","Align the text to the left of its bounding **Rect**&#39;s *x* axis range.",9,null],[11,"align_text_middle","","Align the text to the middle of its bounding **Rect**&#39;s *x* axis range.",9,null],[11,"align_text_right","","Align the text to the right of its bounding **Rect**&#39;s *x* axis range.",9,null],[11,"font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",9,null],[11,"align_text_to","","Build the type&#39;s self.$($assignee).+ with the given $Type.",9,null],[11,"line_spacing","","Build the type&#39;s self.$($assignee).+ with the given $Type.",9,null],[11,"common","","",9,null],[11,"common_mut","","",9,null],[11,"unique_kind","","",9,null],[11,"init_state","","",9,null],[11,"style","","",9,null],[11,"default_x_dimension","","If no specific width was given, we&#39;ll use the width of the widest line as a default.",9,null],[11,"default_y_dimension","","If no specific height was given, we&#39;ll use the total height of the text as a default.",9,null],[11,"update","","Update the state of the Text.",9,null],[11,"color","","",9,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",25,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",25,null],[11,"frame","","Retrieves the value from the `Style`.",25,null],[11,"frame_color","","Retrieves the value from the `Style`.",25,null],[11,"label_color","","Retrieves the value from the `Style`.",25,null],[11,"label_font_size","","Retrieves the value from the `Style`.",25,null],[11,"new","","Create a button context to be built upon.",10,{"inputs":[],"output":{"name":"self"}}],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",10,null],[11,"enabled","","Build the type&#39;s self.$($assignee).+ with the given $Type.",10,null],[11,"common","","",10,null],[11,"common_mut","","",10,null],[11,"unique_kind","","",10,null],[11,"init_state","","",10,null],[11,"style","","",10,null],[11,"update","","Update the state of the Button.",10,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",10,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",10,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",10,null],[11,"label","","Build the type&#39;s self.$($assignee).+ with the given $Type.",10,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",10,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",10,null],[11,"fmt","","",11,null],[11,"clone","","",11,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",26,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",26,null],[11,"frame","","Retrieves the value from the `Style`.",26,null],[11,"frame_color","","Retrieves the value from the `Style`.",26,null],[11,"length","","Retrieves the value from the `Style`.",26,null],[11,"pad_left","","Retrieves the value from the `Style`.",26,null],[11,"pad_right","","Retrieves the value from the `Style`.",26,null],[11,"pad_bottom","","Retrieves the value from the `Style`.",26,null],[11,"pad_top","","Retrieves the value from the `Style`.",26,null],[11,"title_bar_color","","Retrieves the value from the `Style`.",26,null],[11,"title_bar_text_color","","Retrieves the value from the `Style`.",26,null],[11,"title_bar_font_size","","Retrieves the value from the `Style`.",26,null],[11,"title_bar_maybe_wrap","","Retrieves the value from the `Style`.",26,null],[11,"title_bar_line_spacing","","Retrieves the value from the `Style`.",26,null],[11,"title_bar_text_align","","Retrieves the value from the `Style`.",26,null],[11,"new","","Construct a new Canvas builder.",11,{"inputs":[],"output":{"name":"self"}}],[11,"title_bar","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"pad_left","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"pad_right","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"pad_bottom","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"pad_top","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"with_style","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"length","","Set the length of the Split as an absolute scalar.",11,null],[11,"length_weight","","Set the length of the Split as a weight.",11,null],[11,"flow_right","","Set the child Canvasses flowing to the right.",11,null],[11,"flow_left","","Set the child Canvasses flowing to the left.",11,null],[11,"flow_up","","Set the child Canvasses flowing upwards.",11,null],[11,"flow_down","","Set the child Canvasses flowing downwards.",11,null],[11,"pad","","Set the padding for all edges of the area where child widgets will be placed.",11,null],[11,"padding","","Set the padding of the area where child widgets will be placed.",11,null],[11,"title_bar_color","","Set the color of the `Canvas`&#39; `TitleBar` if it is visible.",11,null],[11,"common","","",11,null],[11,"common_mut","","",11,null],[11,"unique_kind","","",11,null],[11,"init_state","","",11,null],[11,"style","","",11,null],[11,"default_x_position","","",11,null],[11,"default_y_position","","",11,null],[11,"drag_area","","The title bar area at which the Canvas can be clicked and dragged.",11,null],[11,"kid_area","","The area of the widget below the title bar, upon which child widgets will be placed.",11,null],[11,"update","","Update the state of the Canvas.",11,null],[11,"padding","","Get the Padding for the Canvas&#39; kid area.",26,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"label","","",11,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",11,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",27,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",27,null],[11,"frame","","Retrieves the value from the `Style`.",27,null],[11,"frame_color","","Retrieves the value from the `Style`.",27,null],[11,"label_color","","Retrieves the value from the `Style`.",27,null],[11,"label_font_size","","Retrieves the value from the `Style`.",27,null],[11,"maybe_max_visible_height","","Retrieves the value from the `Style`.",27,null],[11,"new","","Construct a new DropDownList.",168,{"inputs":[{"name":"vec"},{"name":"option"}],"output":{"name":"self"}}],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",168,null],[11,"enabled","","Build the type&#39;s self.$($assignee).+ with the given $Type.",168,null],[11,"max_visible_items","","Set the maximum height of the DropDownList (before the scrollbar appears) as a number of\nitems.",168,null],[11,"max_visible_height","","Set the maximum height of the DropDownList (before the scrollbar appears) as a scalar\nheight.",168,null],[11,"common","","",168,null],[11,"common_mut","","",168,null],[11,"unique_kind","","",168,null],[11,"init_state","","",168,null],[11,"style","","",168,null],[11,"update","","Update the state of the DropDownList.",168,null],[11,"button_style","","Style for a `Button` given this `Style`&#39;s current state.",27,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",168,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",168,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",168,null],[11,"label","","Build the type&#39;s self.$($assignee).+ with the given $Type.",168,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",168,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",168,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",28,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",28,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",28,null],[11,"frame","","Retrieves the value from the `Style`.",28,null],[11,"frame_color","","Retrieves the value from the `Style`.",28,null],[11,"label_color","","Retrieves the value from the `Style`.",28,null],[11,"label_font_size","","Retrieves the value from the `Style`.",28,null],[11,"value_font_size","","Retrieves the value from the `Style`.",28,null],[11,"point_radius","","Retrieves the value from the `Style`.",28,null],[11,"line_thickness","","Retrieves the value from the `Style`.",28,null],[11,"new","","Construct an EnvelopeEditor widget.",12,{"inputs":[{"name":"vec"},{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"}],"output":{"name":"envelopeeditor"}}],[11,"point_radius","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"line_thickness","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"value_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"skew_y","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"enabled","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"common","","",12,null],[11,"common_mut","","",12,null],[11,"unique_kind","","",12,null],[11,"init_state","","",12,null],[11,"style","","",12,null],[11,"update","","Update the `EnvelopeEditor` in accordance to the latest input and call the given `react`\nfunction if necessary.",12,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"label","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",12,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",29,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",29,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",29,null],[11,"unselected_color","","Retrieves the value from the `Style`.",29,null],[11,"text_color","","Retrieves the value from the `Style`.",29,null],[11,"font_size","","Retrieves the value from the `Style`.",29,null],[11,"column_width","","Retrieves the value from the `Style`.",29,null],[11,"resize_handle_width","","Retrieves the value from the `Style`.",29,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"new","","Begin building a `FileNavigator` widget that displays only files of the given types.",13,{"inputs":[{"name":"path"},{"name":"types"}],"output":{"name":"self"}}],[11,"all","","Begin building a `FileNavigator` that will display all file types.",13,{"inputs":[{"name":"path"}],"output":{"name":"self"}}],[11,"with_extension","","Begin building a `FileNavigator` that will only display files whose extensions match one\nof those within the given extension list.",13,null],[11,"unselected_color","","The color of the unselected entries within each `DirectoryView`.",13,null],[11,"text_color","","The color of the `Text` used to display the file names.",13,null],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",13,null],[11,"font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",13,null],[11,"common","","",13,null],[11,"common_mut","","",13,null],[11,"unique_kind","","",13,null],[11,"init_state","","",13,null],[11,"style","","",13,null],[11,"update","","Update the state of the Button.",13,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",13,null],[11,"clone","","",169,null],[11,"new","","Create a widget matrix context.",169,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"matrix"}}],[11,"each_widget","","The function that will be called for each and every element in the Matrix.\nThe function should return the widget that will be displayed in the element associated with\nthe given row and column number.\nNote that the returned Widget&#39;s position and dimensions will be overridden with the\ndimensions and position of the matrix element&#39;s rectangle.",169,null],[11,"cell_padding","","A builder method for adding padding to the cell.",169,null],[11,"common","","",169,null],[11,"common_mut","","",169,null],[11,"unique_kind","","",169,null],[11,"init_state","","",169,null],[11,"style","","",169,null],[11,"update","","Update the state of the Matrix.",169,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",30,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",30,null],[11,"frame","","Retrieves the value from the `Style`.",30,null],[11,"frame_color","","Retrieves the value from the `Style`.",30,null],[11,"label_color","","Retrieves the value from the `Style`.",30,null],[11,"label_font_size","","Retrieves the value from the `Style`.",30,null],[11,"new","","Construct a new NumberDialer widget.",170,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"u8"}],"output":{"name":"self"}}],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",170,null],[11,"enabled","","Build the type&#39;s self.$($assignee).+ with the given $Type.",170,null],[11,"common","","",170,null],[11,"common_mut","","",170,null],[11,"unique_kind","","",170,null],[11,"init_state","","",170,null],[11,"style","","",170,null],[11,"update","","Update the state of the NumberDialer.",170,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",170,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",170,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",170,null],[11,"label","","Build the type&#39;s self.$($assignee).+ with the given $Type.",170,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",170,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",170,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",31,{"inputs":[],"output":{"name":"self"}}],[11,"thickness","","Retrieves the value from the `Style`.",31,null],[11,"color","","Retrieves the value from the `Style`.",31,null],[11,"new","","Begin building a new `PlotPath` widget instance.",171,{"inputs":[{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"},{"name":"f"}],"output":{"name":"self"}}],[11,"common","","",171,null],[11,"common_mut","","",171,null],[11,"unique_kind","","",171,null],[11,"init_state","","",171,null],[11,"style","","",171,null],[11,"update","","Update the state of the PlotPath.",171,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",171,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",32,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",32,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",32,null],[11,"frame","","Retrieves the value from the `Style`.",32,null],[11,"frame_color","","Retrieves the value from the `Style`.",32,null],[11,"label_color","","Retrieves the value from the `Style`.",32,null],[11,"label_font_size","","Retrieves the value from the `Style`.",32,null],[11,"eq","","",55,null],[11,"fmt","","",55,null],[11,"clone","","",55,null],[11,"new","","Construct a new RangeSlider widget.",14,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"self"}}],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",14,null],[11,"common","","",14,null],[11,"common_mut","","",14,null],[11,"unique_kind","","",14,null],[11,"init_state","","",14,null],[11,"style","","",14,null],[11,"kid_area","","",14,null],[11,"update","","Update the state of the Slider.",14,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",14,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",14,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",14,null],[11,"label","","Build the type&#39;s self.$($assignee).+ with the given $Type.",14,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",14,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",14,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",33,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",33,null],[11,"thickness","","Retrieves the value from the `Style`.",33,null],[11,"auto_hide","","Retrieves the value from the `Style`.",33,null],[11,"auto_hide","","By default, this is set to `false`.",172,null],[11,"thickness","","Build the widget with the given `thickness`.",172,null],[11,"x_axis","","Begin building a new scrollbar widget that scrolls along the *X* axis along the range of\nthe scrollable widget at the given index.",172,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"y_axis","","Begin building a new scrollbar widget that scrolls along the *Y* axis along the range of\nthe scrollable widget at the given index.",172,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"common","","",172,null],[11,"common_mut","","",172,null],[11,"unique_kind","","",172,null],[11,"init_state","","",172,null],[11,"style","","",172,null],[11,"default_x_dimension","","",172,null],[11,"default_y_dimension","","",172,null],[11,"update","","",172,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",172,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"fmt","","",34,null],[11,"clone","","",34,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",34,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",34,null],[11,"frame","","Retrieves the value from the `Style`.",34,null],[11,"frame_color","","Retrieves the value from the `Style`.",34,null],[11,"label_color","","Retrieves the value from the `Style`.",34,null],[11,"label_font_size","","Retrieves the value from the `Style`.",34,null],[11,"new","","Construct a new Slider widget.",15,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"self"}}],[11,"skew","","Build the type&#39;s self.$($assignee).+ with the given $Type.",15,null],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",15,null],[11,"enabled","","Build the type&#39;s self.$($assignee).+ with the given $Type.",15,null],[11,"common","","",15,null],[11,"common_mut","","",15,null],[11,"unique_kind","","",15,null],[11,"init_state","","",15,null],[11,"style","","",15,null],[11,"kid_area","","",15,null],[11,"update","","Update the state of the Slider.",15,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",15,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",15,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",15,null],[11,"label","","Build the type&#39;s self.$($assignee).+ with the given $Type.",15,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",15,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",15,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"fmt","","",35,null],[11,"clone","","",35,null],[11,"new","","Construct some new Canvas Tabs.",173,null],[11,"starting_canvas","","Set the initially selected tab with a Canvas via its widget::Id.",173,null],[11,"pad","","Set the padding for all edges.",173,null],[11,"layout_horizontally","","Layout the tabs horizontally.",173,null],[11,"layout_vertically","","Layout the tabs vertically.",173,null],[11,"bar_width","","Build the type&#39;s self.$($assignee).+ with the given $Type.",173,null],[11,"starting_tab_idx","","Build the type&#39;s self.$($assignee).+ with the given $Type.",173,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",173,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",173,null],[11,"canvas_style","","Build the type&#39;s self.$($assignee).+ with the given $Type.",173,null],[11,"pad_left","","Build the type&#39;s self.$($assignee).+ with the given $Type.",173,null],[11,"pad_right","","Build the type&#39;s self.$($assignee).+ with the given $Type.",173,null],[11,"pad_bottom","","Build the type&#39;s self.$($assignee).+ with the given $Type.",173,null],[11,"pad_top","","Build the type&#39;s self.$($assignee).+ with the given $Type.",173,null],[11,"common","","",173,null],[11,"common_mut","","",173,null],[11,"unique_kind","","",173,null],[11,"init_state","","",173,null],[11,"style","","",173,null],[11,"kid_area","","The area on which child widgets will be placed when using the `Place` Positionable methods.",173,null],[11,"update","","Update the state of the Tabs.",173,null],[11,"new","","Construct the default `Tabs` style.",35,{"inputs":[],"output":{"name":"style"}}],[11,"layout","","Get the layout of the tabs for the `Tabs` widget.",35,null],[11,"label_color","","Get the color for the tab labels.",35,null],[11,"font_size","","Get the font size for the tab labels.",35,null],[11,"color","","",173,null],[11,"frame","","",173,null],[11,"frame_color","","",173,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"fmt","","",36,null],[11,"clone","","",36,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",36,{"inputs":[],"output":{"name":"self"}}],[11,"text_padding","","Retrieves the value from the `Style`.",36,null],[11,"color","","Retrieves the value from the `Style`.",36,null],[11,"frame","","Retrieves the value from the `Style`.",36,null],[11,"frame_color","","Retrieves the value from the `Style`.",36,null],[11,"text_color","","Retrieves the value from the `Style`.",36,null],[11,"font_size","","Retrieves the value from the `Style`.",36,null],[11,"x_align","","Retrieves the value from the `Style`.",36,null],[11,"new","","Construct a TextBox widget.",16,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"align_text_left","","Align the text to the left of its bounding **Rect**&#39;s *x* axis range.",16,null],[11,"align_text_middle","","Align the text to the middle of its bounding **Rect**&#39;s *x* axis range.",16,null],[11,"align_text_right","","Align the text to the right of its bounding **Rect**&#39;s *x* axis range.",16,null],[11,"text_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",16,null],[11,"font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",16,null],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",16,null],[11,"x_align_text","","Build the type&#39;s self.$($assignee).+ with the given $Type.",16,null],[11,"pad_text","","Build the type&#39;s self.$($assignee).+ with the given $Type.",16,null],[11,"common","","",16,null],[11,"common_mut","","",16,null],[11,"unique_kind","","",16,null],[11,"init_state","","",16,null],[11,"style","","",16,null],[11,"update","","Update the state of the TextEdit.",16,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",16,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",16,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",16,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"fmt","","",37,null],[11,"clone","","",37,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",37,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",37,null],[11,"font_size","","Retrieves the value from the `Style`.",37,null],[11,"x_align","","Retrieves the value from the `Style`.",37,null],[11,"y_align","","Retrieves the value from the `Style`.",37,null],[11,"line_spacing","","Retrieves the value from the `Style`.",37,null],[11,"line_wrap","","Retrieves the value from the `Style`.",37,null],[11,"restrict_to_height","","Retrieves the value from the `Style`.",37,null],[11,"new","","Construct a TextEdit widget.",17,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"wrap_by_whitespace","","The `TextEdit` will wrap text via the whitespace that precedes the first width-exceeding\ncharacter.",17,null],[11,"wrap_by_character","","By default, the `TextEdit` will wrap text via the whitespace that precedes the first\nwidth-exceeding character.",17,null],[11,"align_text_left","","Align the text to the left of its bounding **Rect**&#39;s *x* axis range.",17,null],[11,"align_text_x_middle","","Align the text to the middle of its bounding **Rect**&#39;s *x* axis range.",17,null],[11,"align_text_right","","Align the text to the right of its bounding **Rect**&#39;s *x* axis range.",17,null],[11,"align_text_bottom","","Align the text to the left of its bounding **Rect**&#39;s *y* axis range.",17,null],[11,"align_text_y_middle","","Align the text to the middle of its bounding **Rect**&#39;s *y* axis range.",17,null],[11,"align_text_top","","Align the text to the right of its bounding **Rect**&#39;s *y* axis range.",17,null],[11,"align_text_middle","","Align the text to the middle of its bounding **Rect**.",17,null],[11,"font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",17,null],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",17,null],[11,"x_align_text","","Build the type&#39;s self.$($assignee).+ with the given $Type.",17,null],[11,"y_align_text","","Build the type&#39;s self.$($assignee).+ with the given $Type.",17,null],[11,"line_wrap","","Build the type&#39;s self.$($assignee).+ with the given $Type.",17,null],[11,"line_spacing","","Build the type&#39;s self.$($assignee).+ with the given $Type.",17,null],[11,"restrict_to_height","","Build the type&#39;s self.$($assignee).+ with the given $Type.",17,null],[11,"common","","",17,null],[11,"common_mut","","",17,null],[11,"unique_kind","","",17,null],[11,"init_state","","",17,null],[11,"style","","",17,null],[11,"update","","Update the state of the TextEdit.",17,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",17,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",38,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",38,null],[11,"frame","","Retrieves the value from the `Style`.",38,null],[11,"frame_color","","Retrieves the value from the `Style`.",38,null],[11,"text_color","","Retrieves the value from the `Style`.",38,null],[11,"font_size","","Retrieves the value from the `Style`.",38,null],[11,"maybe_wrap","","Retrieves the value from the `Style`.",38,null],[11,"line_spacing","","Retrieves the value from the `Style`.",38,null],[11,"text_align","","Retrieves the value from the `Style`.",38,null],[11,"new","","Construct a new TitleBar widget and attach it to the widget at the given index.",18,{"inputs":[{"name":"str"},{"name":"i"}],"output":{"name":"self"}}],[11,"align_text_left","","Align the text to the left of its bounding **Rect**&#39;s *x* axis range.",18,null],[11,"align_text_middle","","Align the text to the middle of its bounding **Rect**&#39;s *x* axis range.",18,null],[11,"align_text_right","","Align the text to the right of its bounding **Rect**&#39;s *x* axis range.",18,null],[11,"line_spacing","","Build the type&#39;s self.$($assignee).+ with the given $Type.",18,null],[11,"common","","",18,null],[11,"common_mut","","",18,null],[11,"unique_kind","","",18,null],[11,"init_state","","",18,null],[11,"style","","",18,null],[11,"default_y_dimension","","",18,null],[11,"update","","",18,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",18,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",18,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",18,null],[11,"label","","Build the type&#39;s self.$($assignee).+ with the given $Type.",18,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",18,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",18,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",39,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",39,null],[11,"frame","","Retrieves the value from the `Style`.",39,null],[11,"frame_color","","Retrieves the value from the `Style`.",39,null],[11,"label_color","","Retrieves the value from the `Style`.",39,null],[11,"label_font_size","","Retrieves the value from the `Style`.",39,null],[11,"new","","Construct a new Toggle widget.",19,{"inputs":[{"name":"bool"}],"output":{"name":"toggle"}}],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",19,null],[11,"enabled","","Build the type&#39;s self.$($assignee).+ with the given $Type.",19,null],[11,"common","","",19,null],[11,"common_mut","","",19,null],[11,"unique_kind","","",19,null],[11,"init_state","","",19,null],[11,"style","","",19,null],[11,"update","","Update the state of the Toggle.",19,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",19,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",19,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",19,null],[11,"label","","Build the type&#39;s self.$($assignee).+ with the given $Type.",19,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",19,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",19,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",40,null],[11,"new","","Construct the default `Style`, initialising all fields to `None`.",40,{"inputs":[],"output":{"name":"self"}}],[11,"color","","Retrieves the value from the `Style`.",40,null],[11,"frame","","Retrieves the value from the `Style`.",40,null],[11,"frame_color","","Retrieves the value from the `Style`.",40,null],[11,"label_color","","Retrieves the value from the `Style`.",40,null],[11,"label_font_size","","Retrieves the value from the `Style`.",40,null],[11,"value_font_size","","Retrieves the value from the `Style`.",40,null],[11,"line_thickness","","Retrieves the value from the `Style`.",40,null],[11,"new","","Build a new XYPad widget.",20,{"inputs":[{"name":"x"},{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"},{"name":"y"}],"output":{"name":"self"}}],[11,"line_thickness","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"value_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"react","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"enabled","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"common","","",20,null],[11,"common_mut","","",20,null],[11,"unique_kind","","",20,null],[11,"init_state","","",20,null],[11,"style","","",20,null],[11,"update","","Update the XYPad&#39;s cached state.",20,null],[11,"color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"frame","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"frame_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"label","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"label_color","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"label_font_size","","Build the type&#39;s self.$($assignee).+ with the given $Type.",20,null],[11,"eq","","",174,null],[11,"ne","","",174,null],[11,"fmt","","",174,null],[11,"clone","","",174,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"get_unchecked","","Convert the **MaybeParent** into an **Option&lt;Index&gt;**.",66,null],[11,"get","","The same as `get_unchecked`, but checks whether or not the widget that we&#39;re inferring the\nparent for is the `Ui`&#39;s window (which cannot have a parent, without creating a cycle).",66,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"fmt","","",175,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"new","","Construct a new empty **IndexSlot**.",174,{"inputs":[],"output":{"name":"self"}}],[11,"get","","Returns the **NodeIndex** held by the **IndexSlot**.",174,null],[11,"update","","Mutate the internal widget state and set a flag notifying us that there has been a mutation.",175,null],[11,"deref","","",175,null],[11,"new","","Construct an empty, initialised CommonBuilder.",45,{"inputs":[],"output":{"name":"commonbuilder"}}],[11,"new","","A new default CommonStyle.",47,{"inputs":[],"output":{"name":"self"}}],[6,"FontSize","","Font size used throughout Conrod.",null,null],[6,"Depth","","The depth at which the widget will be rendered.",null,null],[6,"Dimensions","","General use 2D spatial dimensions.",null,null],[6,"Margin","","The margin for some `Place`ment on either end of an axis.",null,null],[6,"Point","","General use 2D spatial point.",null,null],[6,"Scalar","","An alias over the Scalar type used throughout Conrod.",null,null],[6,"WidgetKind","","A unique identifier for a **Widget** type.",null,null],[8,"EnvelopePoint","","`EnvPoint` must be implemented for any type that is used as a 2D point within the\nEnvelopeEditor.",null,null],[16,"X","","A value on the X-axis of the envelope.",176,null],[16,"Y","","A value on the Y-axis of the envelope.",176,null],[10,"get_x","","Return the X value.",176,null],[10,"get_y","","Return the Y value.",176,null],[10,"set_x","","Set the X value.",176,null],[10,"set_y","","Set the Y value.",176,null],[11,"get_curve","","Return the bezier curve depth (-1. to 1.) for the next interpolation.",176,null],[11,"set_curve","","Set the bezier curve depth (-1. to 1.) for the next interpolation.",176,null],[10,"new","","Create a new EnvPoint.",176,{"inputs":[{"name":"x"},{"name":"y"}],"output":{"name":"self"}}],[8,"Frameable","","Widgets that may display a frame.",null,null],[10,"frame","","Set the width of the widget&#39;s frame.",177,null],[10,"frame_color","","Set the color of the widget&#39;s frame.",177,null],[11,"frame_rgba","","Set the color of the widget&#39;s frame with rgba values.",177,null],[11,"frame_rgb","","Set the color of the widget&#39;s frame with rgb values.",177,null],[11,"frame_hsla","","Set the color of the widget&#39;s frame with hsla values.",177,null],[11,"frame_hsl","","Set the color of the widget&#39;s frame with hsl values.",177,null],[8,"Labelable","","Widgets that may display some label.",null,null],[10,"label","","Set the label for the widget.",178,null],[10,"label_color","","Set the color of the widget&#39;s label.",178,null],[11,"label_rgba","","Set the color of the widget&#39;s label from rgba values.",178,null],[11,"label_rgb","","Set the color of the widget&#39;s label from rgb values.",178,null],[11,"label_hsla","","Set the color of the widget&#39;s label from hsla values.",178,null],[11,"label_hsl","","Set the color of the widget&#39;s label from hsl values.",178,null],[10,"label_font_size","","Set the font size for the widget&#39;s label.",178,null],[11,"small_font","","Set a &quot;small&quot; font size for the widget&#39;s label.",178,null],[11,"medium_font","","Set a &quot;medium&quot; font size for the widget&#39;s label.",178,null],[11,"large_font","","Set a &quot;large&quot; font size for the widget&#39;s label.",178,null],[8,"Positionable","","Widgets that are positionable.",null,null],[10,"x_position","","Build with the given **Position** along the *x* axis.",179,null],[10,"y_position","","Build with the given **Position** along the *y* axis.",179,null],[10,"get_x_position","","Get the **Position** along the *x* axis.",179,null],[10,"get_y_position","","Get the **Position** along the *y* axis.",179,null],[11,"x","","Build with the given **Absolute** **Position** along the *x* axis.",179,null],[11,"y","","Build with the given **Absolute** **Position** along the *y* axis.",179,null],[11,"xy","","Set the **Position** with some Point.",179,null],[11,"x_y","","Set the **Position** with *x* *y* coordinates.",179,null],[11,"x_relative","","Set the **Position** along the *x* axis **Relative** to the previous widget.",179,null],[11,"y_relative","","Set the **Position** along the *y* axis **Relative** to the previous widget.",179,null],[11,"xy_relative","","Set the **Position** **Relative** to the previous widget.",179,null],[11,"x_y_relative","","Set the **Position** **Relative** to the previous widget.",179,null],[11,"x_relative_to","","Set the position relative to the widget with the given widget::Index.",179,null],[11,"y_relative_to","","Set the position relative to the widget with the given widget::Index.",179,null],[11,"xy_relative_to","","Set the position relative to the widget with the given widget::Index.",179,null],[11,"x_y_relative_to","","Set the position relative to the widget with the given widget::Index.",179,null],[11,"x_direction","","Build with the **Position** along the *x* axis as some distance from another widget.",179,null],[11,"y_direction","","Build with the **Position** along the *y* axis as some distance from another widget.",179,null],[11,"down","","Build with the **Position** as some distance below another widget.",179,null],[11,"up","","Build with the **Position** as some distance above another widget.",179,null],[11,"left","","Build with the **Position** as some distance to the left of another widget.",179,null],[11,"right","","Build with the **Position** as some distance to the right of another widget.",179,null],[11,"x_direction_from","","Build with the **Position** along the *x* axis as some distance from the given widget.",179,null],[11,"y_direction_from","","Build with the **Position** along the *y* axis as some distance from the given widget.",179,null],[11,"down_from","","Build with the **Position** as some distance below the given widget.",179,null],[11,"up_from","","Build with the **Position** as some distance above the given widget.",179,null],[11,"left_from","","Build with the **Position** as some distance to the left of the given widget.",179,null],[11,"right_from","","Build with the **Position** as some distance to the right of the given widget.",179,null],[11,"x_align","","Align the **Position** of the widget along the *x* axis.",179,null],[11,"y_align","","Align the **Position** of the widget along the *y* axis.",179,null],[11,"align_left","","Align the position to the left (only effective for Up or Down `Direction`s).",179,null],[11,"align_middle_x","","Align the position to the middle (only effective for Up or Down `Direction`s).",179,null],[11,"align_right","","Align the position to the right (only effective for Up or Down `Direction`s).",179,null],[11,"align_top","","Align the position to the top (only effective for Left or Right `Direction`s).",179,null],[11,"align_middle_y","","Align the position to the middle (only effective for Left or Right `Direction`s).",179,null],[11,"align_bottom","","Align the position to the bottom (only effective for Left or Right `Direction`s).",179,null],[11,"x_align_to","","Align the **Position** of the widget with the given widget along the *x* axis.",179,null],[11,"y_align_to","","Align the **Position** of the widget with the given widget along the *y* axis.",179,null],[11,"align_left_of","","Align the position to the left (only effective for Up or Down `Direction`s).",179,null],[11,"align_middle_x_of","","Align the position to the middle (only effective for Up or Down `Direction`s).",179,null],[11,"align_right_of","","Align the position to the right (only effective for Up or Down `Direction`s).",179,null],[11,"align_top_of","","Align the position to the top (only effective for Left or Right `Direction`s).",179,null],[11,"align_middle_y_of","","Align the position to the middle (only effective for Left or Right `Direction`s).",179,null],[11,"align_bottom_of","","Align the position to the bottom (only effective for Left or Right `Direction`s).",179,null],[11,"x_place_on","","Place the widget at some position on the `other` Widget along the *x* axis.",179,null],[11,"y_place_on","","Place the widget at some position on the `other` Widget along the *y* axis.",179,null],[11,"middle_of","","Place the widget in the middle of the given Widget.",179,null],[11,"top_left_of","","Place the widget in the top left corner of the given Widget.",179,null],[11,"top_left_with_margin_on","","Place the widget in the top left corner of the given Widget with the given margin between\nboth edges.",179,null],[11,"top_left_with_margins_on","","Place the widget in the top left corner of the given Widget with the given margins between\neach respective edge.",179,null],[11,"top_right_of","","Place the widget in the top right corner of the given Widget.",179,null],[11,"top_right_with_margin_on","","Place the widget in the top right corner of the given Widget with the given margin\nbetween both edges.",179,null],[11,"top_right_with_margins_on","","Place the widget in the top right corner of the given Widget with the given margins between\neach respective edge.",179,null],[11,"bottom_left_of","","Place the widget in the bottom left corner of the given Widget.",179,null],[11,"bottom_left_with_margin_on","","Place the widget in the bottom left corner of the given Widget with the given margin\nbetween both edges.",179,null],[11,"bottom_left_with_margins_on","","Place the widget in the bottom left corner of the given Widget with the given margins\nbetween each respective edge.",179,null],[11,"bottom_right_of","","Place the widget in the bottom right corner of the given Widget.",179,null],[11,"bottom_right_with_margin_on","","Place the widget in the bottom right corner of the given Widget with the given margin\nbetween both edges.",179,null],[11,"bottom_right_with_margins_on","","Place the widget in the bottom right corner of the given Widget with the given margins\nbetween each respective edge.",179,null],[11,"mid_top_of","","Place the widget in the middle of the top edge of the given Widget.",179,null],[11,"mid_top_with_margin_on","","Place the widget in the middle of the top edge of the given Widget with the given margin\nbetween the edges.",179,null],[11,"mid_bottom_of","","Place the widget in the middle of the bottom edge of the given Widget.",179,null],[11,"mid_bottom_with_margin_on","","Place the widget in the middle of the bottom edge of the given Widget with the given margin\nbetween the edges.",179,null],[11,"mid_left_of","","Place the widget in the middle of the left edge of the given Widget.",179,null],[11,"mid_left_with_margin_on","","Place the widget in the middle of the left edge of the given Widget with the given margin\nbetween the edges.",179,null],[11,"mid_right_of","","Place the widget in the middle of the right edge of the given Widget.",179,null],[11,"mid_right_with_margin_on","","Place the widget in the middle of the right edge of the given Widget with the given margin\nbetween the edges.",179,null],[11,"x_place","","Place the widget at some position on the Widget along the *x* axis.",179,null],[11,"y_place","","Place the widget at some position on the Widget along the *y* axis.",179,null],[11,"middle","","Place the widget in the middle of the current parent Widget.",179,null],[11,"top_left","","Place the widget in the top left corner of the current parent Widget.",179,null],[11,"top_left_with_margin","","Place the widget in the top left corner of the current parent Widget with the given margin\nbetween both edges.",179,null],[11,"top_left_with_margins","","Place the widget in the top left corner of the current parent Widget with the given margins\nbetween each respective edge.",179,null],[11,"top_right","","Place the widget in the top right corner of the current parent Widget.",179,null],[11,"top_right_with_margin","","Place the widget in the top right corner of the current parent Widget with the given margin\nbetween both edges.",179,null],[11,"top_right_with_margins","","Place the widget in the top right corner of the current parent Widget with the given margins\nbetween each respective edge.",179,null],[11,"bottom_left","","Place the widget in the bottom left corner of the current parent Widget.",179,null],[11,"bottom_left_with_margin","","Place the widget in the bottom left corner of the current parent Widget with the given\nmargin between both edges.",179,null],[11,"bottom_left_with_margins","","Place the widget in the bottom left corner of the current parent Widget with the given\nmargins between each respective edge.",179,null],[11,"bottom_right","","Place the widget in the bottom right corner of the current parent Widget.",179,null],[11,"bottom_right_with_margin","","Place the widget in the bottom right corner of the current parent Widget with the given\nmargin between both edges.",179,null],[11,"bottom_right_with_margins","","Place the widget in the bottom right corner of the current parent Widget with the given\nmargins between each respective edge.",179,null],[11,"mid_top","","Place the widget in the middle of the top edge of the current parent Widget.",179,null],[11,"mid_top_with_margin","","Place the widget in the middle of the top edge of the current parent Widget with the given\nmargin from the edge.",179,null],[11,"mid_bottom","","Place the widget in the middle of the bottom edge of the current parent Widget.",179,null],[11,"mid_bottom_with_margin","","Place the widget in the middle of the bottom edge of the current parent Widget with the\ngiven margin from the edge.",179,null],[11,"mid_left","","Place the widget in the middle of the left edge of the current parent Widget.",179,null],[11,"mid_left_with_margin","","Place the widget in the middle of the left edge of the current parent Widget with the\ngiven margin from the edge.",179,null],[11,"mid_right","","Place the widget in the middle of the right edge of the current parent Widget.",179,null],[11,"mid_right_with_margin","","Place the widget in the middle of the right edge of the current parent Widget with the\ngiven margin from the edge.",179,null],[10,"depth","","The depth at which the widget should be rendered relatively to its sibling widgets.",179,null],[10,"get_depth","","Return the depth.",179,null],[8,"Sizeable","","Widgets that support different dimensions.",null,null],[10,"x_dimension","","Set the length along the x axis.",180,null],[10,"y_dimension","","Set the length along the y axis.",180,null],[10,"get_x_dimension","","The widget&#39;s length along the x axis as a Dimension.",180,null],[10,"get_y_dimension","","The widget&#39;s length along the y axis as a Dimension.",180,null],[11,"w","","Set the absolute width for the widget.",180,null],[11,"h","","Set the absolute height for the widget.",180,null],[11,"wh","","Set the dimensions for the widget.",180,null],[11,"w_h","","Set the width and height for the widget.",180,null],[11,"w_of","","Set the width as the width of the widget at the given index.",180,null],[11,"padded_w_of","","Set the width as the width of the widget at the given index padded at both ends by the\ngiven Scalar.",180,null],[11,"h_of","","Set the height as the height of the widget at the given index.",180,null],[11,"padded_h_of","","Set the height as the height of the widget at the given index padded at both ends by the\ngiven Scalar.",180,null],[11,"wh_of","","Set the dimensions as the dimensions of the widget at the given index.",180,null],[11,"padded_wh_of","","Set the dimensions as the dimensions of the widget at the given index with all four edges\npadded by the given scalar.",180,null],[11,"kid_area_w_of","","Set the width as the width of the padded area of the widget at the given index.",180,null],[11,"padded_kid_area_w_of","","Set the width as the `KidArea` width for the widget at the given index, padded at both ends\nby the given scalar.",180,null],[11,"kid_area_h_of","","Set the height as the `KidArea` height of the widget at the given index.",180,null],[11,"padded_kid_area_h_of","","Set the height as the `KidArea` height of the widget at the given index, padded at both\nends by the given scalar.",180,null],[11,"kid_area_wh_of","","Set the dimensions as the `KidArea` dimensions of the widget at the given index.",180,null],[11,"padded_kid_area_wh_of","","Set the dimensions as the `KidArea` dimensions of the widget at the given index, padded at\nall four edges by the given scalar.",180,null],[11,"get_w","","Get the absolute width of the widget as a Scalar value.",180,null],[11,"get_h","","Get the height of the widget.",180,null],[11,"get_wh","","The dimensions for the widget.",180,null],[8,"Widget","","A trait to be implemented by all **Widget** types.",null,null],[16,"State","","State to be stored within the `Ui`s widget cache.",181,null],[16,"Style","","Every widget is required to have its own associated `Style` type. This type is intended to\ncontain high-level styling information for the widget that can be *optionally specified* by\na user of the widget.",181,null],[10,"common","","Return a reference to a **CommonBuilder** struct owned by the Widget.\nThis method allows us to do a blanket impl of Positionable and Sizeable for T: Widget.",181,null],[10,"common_mut","","Return a mutable reference to a CommonBuilder struct owned by the Widget.\nThis method allows us to do a blanket impl of Positionable and Sizeable for T: Widget.",181,null],[10,"unique_kind","","Return the kind of the widget as a &amp;&#39;static str.",181,null],[10,"init_state","","Return the initial **State** of the Widget.",181,null],[10,"style","","Return the styling of the widget.",181,null],[10,"update","","Update our **Widget**&#39;s unique **Widget::State** via the **State** wrapper type (the\n`state` field within the [**UpdateArgs**](./struct.UpdateArgs)).",181,null],[11,"default_x_position","","The default **Position** for the widget along the *x* axis.",181,null],[11,"default_y_position","","The default **Position** for the widget along the *y* axis.",181,null],[11,"default_x_dimension","","The default width for the **Widget**.",181,null],[11,"default_y_dimension","","The default height of the widget.",181,null],[11,"drag_area","","If the widget is draggable, implement this method and return the position and dimensions of\nthe draggable space. The position should be relative to the center of the widget.",181,null],[11,"kid_area","","The area on which child widgets will be placed when using the `Place` `Position` methods.",181,null],[11,"parent","","Set the parent widget for this Widget by passing the WidgetId of the parent.",181,null],[11,"no_parent","","Specify that this widget has no parent widgets.",181,null],[11,"place_on_kid_area","","Set whether or not the **Widget** should be placed on the kid_area.",181,null],[11,"graphics_for","","Indicates that the **Widget** is used as a non-interactive graphical element for some other\nwidget.",181,null],[11,"floating","","Set whether or not the widget is floating (the default is `false`).\nA typical example of a floating widget would be a pop-up or alert window.",181,null],[11,"crop_kids","","Indicates that all widgets who are children of this widget should be cropped to the\n`kid_area` of this widget.",181,null],[11,"scroll_kids","","Makes the widget&#39;s `KidArea` scrollable.",181,null],[11,"scroll_kids_vertically","","Makes the widget&#39;s `KidArea` scrollable.",181,null],[11,"scroll_kids_horizontally","","Set whether or not the widget&#39;s `KidArea` is scrollable (the default is false).",181,null],[11,"and","","A builder method that &quot;lifts&quot; the **Widget** through the given `build` function.",181,null],[11,"and_mut","","A builder method that mutates the **Widget** with the given `mutate` function.",181,null],[11,"and_if","","A method that conditionally builds the **Widget** with the given `build` function.",181,null],[11,"and_then","","A method that optionally builds the the **Widget** with the given `build` function.",181,null],[11,"set","","Note: There should be no need to override this method.",181,null],[14,"builder_method!","","A macro for simplifying implementation of methods for the `builder pattern`.",null,null],[14,"builder_methods!","","A macro to simplify implementation of\n[&quot;builder-pattern&quot;](https://en.wikipedia.org/wiki/Builder_pattern) methods.",null,null],[14,"widget_style!","","A macro for vastly simplifying the definition and implementation of a widget&#39;s associated\n`Style` type.",null,null],[14,"widget_ids!","","Generate a list of unique IDs given a list of identifiers.",null,null],[11,"append_transform","conrod::backend::graphics","",82,null],[11,"prepend_transform","","",82,null],[11,"trans","","",82,null],[11,"rot_rad","","",82,null],[11,"orient","","",82,null],[11,"scale","","",82,null],[11,"shear","","",82,null],[11,"partial_cmp","","",83,null],[11,"lt","","",83,null],[11,"le","","",83,null],[11,"gt","","",83,null],[11,"ge","","",83,null],[11,"fmt","","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"default","","",83,{"inputs":[],"output":{"name":"drawstate"}}],[11,"new_alpha","","Uses alpha blending.",83,{"inputs":[],"output":{"name":"drawstate"}}],[11,"new_clip","","Draws to stencil buffer with value 255.\nThis can be used for clipping.",83,{"inputs":[],"output":{"name":"drawstate"}}],[11,"new_inside","","Tests against stencil buffer with value 255.\nDraws inside the shape defined by stencil buffer.",83,{"inputs":[],"output":{"name":"drawstate"}}],[11,"new_outside","","Tests against stencil buffer with value 255.\nDraws outside the shape defined by stencil buffer.",83,{"inputs":[],"output":{"name":"drawstate"}}],[11,"blend","","Sets blending.",83,null],[11,"scissor","","Sets scissor `[x, y, w, h]`.",83,null],[11,"clone","","",86,null],[11,"left","","The left offset.",86,null],[11,"top","","The top offset.",86,null],[11,"width","","Gets width of character, including space to the next one.",86,null],[11,"height","","Sets height of character, including space to the next one.",86,null],[11,"clone","","",82,null],[11,"new","","Creates a new drawing context.",82,{"inputs":[],"output":{"name":"context"}}],[11,"new_viewport","","Creates a new context with absolute transform in point coordinates.",82,{"inputs":[{"name":"viewport"}],"output":{"name":"context"}}],[11,"new_abs","","Creates a new drawing context in absolute coordinates.",82,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"context"}}],[11,"view","","Moves the current transform to the view coordinate system.",82,null],[11,"reset","","Moves the current transform to the default coordinate system.",82,null],[11,"store_view","","Stores the current transform as new view.",82,null],[11,"get_view_size","","Computes the current view size.",82,null],[11,"hash","conrod::input","",75,null],[11,"fmt","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"encode","","",75,null],[11,"decode","","",75,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",75,null],[11,"new","","Create a new ControllerButton object. Intended for use by backends when\nemitting events.",75,{"inputs":[{"name":"i32"},{"name":"u8"}],"output":{"name":"controllerbutton"}}],[11,"fmt","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"encode","","",74,null],[11,"decode","","",74,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",74,null],[11,"new","","Create a new ControllerAxisArgs object. Intended for use by backends when\nemitting events.",74,{"inputs":[{"name":"i32"},{"name":"u8"},{"name":"f64"}],"output":{"name":"controlleraxisargs"}}],[11,"hash","conrod::input::keyboard","",182,null],[11,"cmp","","",182,null],[11,"partial_cmp","","",182,null],[11,"lt","","",182,null],[11,"le","","",182,null],[11,"gt","","",182,null],[11,"ge","","",182,null],[11,"clone","","",182,null],[11,"eq","","",182,null],[11,"ne","","",182,null],[11,"encode","","",182,null],[11,"decode","","",182,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",182,null],[11,"empty","","Returns an empty set of flags.",182,{"inputs":[],"output":{"name":"modifierkey"}}],[11,"all","","Returns the set containing all flags.",182,{"inputs":[],"output":{"name":"modifierkey"}}],[11,"bits","","Returns the raw value of the flags currently stored.",182,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",182,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",182,{"inputs":[{"name":"u8"}],"output":{"name":"modifierkey"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",182,null],[11,"is_all","","Returns `true` if all flags are currently set.",182,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",182,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",182,null],[11,"insert","","Inserts the specified flags in-place.",182,null],[11,"remove","","Removes the specified flags in-place.",182,null],[11,"toggle","","Toggles the specified flags in-place.",182,null],[11,"bitor","","Returns the union of the two sets of flags.",182,null],[11,"bitor_assign","","Adds the set of flags.",182,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",182,null],[11,"bitxor_assign","","Toggles the set of flags.",182,null],[11,"bitand","","Returns the intersection between the two sets of flags.",182,null],[11,"bitand_assign","","Disables all flags disabled in the set.",182,null],[11,"sub","","Returns the set difference of the two sets of flags.",182,null],[11,"sub_assign","","Disables all flags enabled in the set.",182,null],[11,"not","","Returns the complement of this set of flags.",182,null],[11,"extend","","",182,null],[11,"from_iter","","",182,{"inputs":[{"name":"t"}],"output":{"name":"modifierkey"}}],[11,"event","","Change modifier key state depending on input.",182,null],[11,"default","","",182,{"inputs":[],"output":{"name":"modifierkey"}}],[11,"hash","conrod::input","",76,null],[11,"fmt","","",76,null],[11,"encode","","",76,null],[11,"decode","","",76,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",76,null],[11,"from","","",76,{"inputs":[{"name":"u32"}],"output":{"name":"key"}}],[11,"eq","","",76,null],[11,"partial_cmp","","",76,null],[11,"cmp","","",76,null],[11,"code","","Returns an id of the key",76,null],[11,"fmt","conrod::input::state::mouse","",78,null],[11,"hash","","",78,null],[11,"partial_cmp","","",78,null],[11,"cmp","","",78,null],[11,"eq","","",78,null],[11,"encode","","",78,null],[11,"decode","","",78,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",78,null],[11,"from","","",78,{"inputs":[{"name":"u32"}],"output":{"name":"mousebutton"}}],[11,"event_id","conrod::event","",79,null],[11,"with_args","","",79,null],[11,"from_args","","",79,{"inputs":[{"name":"eventid"},{"name":"any"},{"name":"input"}],"output":{"name":"option"}}],[11,"event_id","conrod::backend::event","",80,null],[11,"with_args","","",80,null],[11,"from_args","","",80,{"inputs":[{"name":"eventid"},{"name":"any"},{"name":"event"}],"output":{"name":"option"}}],[11,"fmt","","",80,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"from","","",80,{"inputs":[{"name":"renderargs"}],"output":{"name":"event"}}],[11,"from","","",80,{"inputs":[{"name":"afterrenderargs"}],"output":{"name":"event"}}],[11,"from","","",80,{"inputs":[{"name":"updateargs"}],"output":{"name":"event"}}],[11,"from","","",80,{"inputs":[{"name":"idleargs"}],"output":{"name":"event"}}],[11,"from","","",80,{"inputs":[{"name":"input"}],"output":{"name":"event"}}],[11,"fmt","conrod::input","",73,null],[11,"hash","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"encode","","",73,null],[11,"decode","","",73,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",73,null],[11,"fmt","conrod::event","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"encode","","",77,null],[11,"decode","","",77,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",77,null],[11,"fmt","","",79,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"encode","","",79,null],[11,"decode","","",79,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",79,null],[11,"from","conrod::input","",73,{"inputs":[{"name":"key"}],"output":{"name":"button"}}],[11,"from","","",73,{"inputs":[{"name":"mousebutton"}],"output":{"name":"button"}}],[11,"from","","",73,{"inputs":[{"name":"controllerbutton"}],"output":{"name":"button"}}],[11,"from","conrod::event","",77,{"inputs":[{"name":"controlleraxisargs"}],"output":{"name":"motion"}}],[11,"from","","",79,{"inputs":[{"name":"motion"}],"output":{"name":"input"}}],[11,"frame_rgba","conrod","Set the color of the widget&#39;s frame with rgba values.",177,null],[11,"frame_rgb","","Set the color of the widget&#39;s frame with rgb values.",177,null],[11,"frame_hsla","","Set the color of the widget&#39;s frame with hsla values.",177,null],[11,"frame_hsl","","Set the color of the widget&#39;s frame with hsl values.",177,null],[11,"to_widget_id","conrod::graph","",183,null],[11,"to_node_index","","",183,null],[11,"from_idx","","",183,{"inputs":[{"name":"i"},{"name":"indexmap"}],"output":{"name":"option"}}],[11,"label_rgba","conrod","Set the color of the widget&#39;s label from rgba values.",178,null],[11,"label_rgb","","Set the color of the widget&#39;s label from rgb values.",178,null],[11,"label_hsla","","Set the color of the widget&#39;s label from hsla values.",178,null],[11,"label_hsl","","Set the color of the widget&#39;s label from hsl values.",178,null],[11,"small_font","","Set a &quot;small&quot; font size for the widget&#39;s label.",178,null],[11,"medium_font","","Set a &quot;medium&quot; font size for the widget&#39;s label.",178,null],[11,"large_font","","Set a &quot;large&quot; font size for the widget&#39;s label.",178,null],[11,"x","","Build with the given **Absolute** **Position** along the *x* axis.",179,null],[11,"y","","Build with the given **Absolute** **Position** along the *y* axis.",179,null],[11,"xy","","Set the **Position** with some Point.",179,null],[11,"x_y","","Set the **Position** with *x* *y* coordinates.",179,null],[11,"x_relative","","Set the **Position** along the *x* axis **Relative** to the previous widget.",179,null],[11,"y_relative","","Set the **Position** along the *y* axis **Relative** to the previous widget.",179,null],[11,"xy_relative","","Set the **Position** **Relative** to the previous widget.",179,null],[11,"x_y_relative","","Set the **Position** **Relative** to the previous widget.",179,null],[11,"x_relative_to","","Set the position relative to the widget with the given widget::Index.",179,null],[11,"y_relative_to","","Set the position relative to the widget with the given widget::Index.",179,null],[11,"xy_relative_to","","Set the position relative to the widget with the given widget::Index.",179,null],[11,"x_y_relative_to","","Set the position relative to the widget with the given widget::Index.",179,null],[11,"x_direction","","Build with the **Position** along the *x* axis as some distance from another widget.",179,null],[11,"y_direction","","Build with the **Position** along the *y* axis as some distance from another widget.",179,null],[11,"down","","Build with the **Position** as some distance below another widget.",179,null],[11,"up","","Build with the **Position** as some distance above another widget.",179,null],[11,"left","","Build with the **Position** as some distance to the left of another widget.",179,null],[11,"right","","Build with the **Position** as some distance to the right of another widget.",179,null],[11,"x_direction_from","","Build with the **Position** along the *x* axis as some distance from the given widget.",179,null],[11,"y_direction_from","","Build with the **Position** along the *y* axis as some distance from the given widget.",179,null],[11,"down_from","","Build with the **Position** as some distance below the given widget.",179,null],[11,"up_from","","Build with the **Position** as some distance above the given widget.",179,null],[11,"left_from","","Build with the **Position** as some distance to the left of the given widget.",179,null],[11,"right_from","","Build with the **Position** as some distance to the right of the given widget.",179,null],[11,"x_align","","Align the **Position** of the widget along the *x* axis.",179,null],[11,"y_align","","Align the **Position** of the widget along the *y* axis.",179,null],[11,"align_left","","Align the position to the left (only effective for Up or Down `Direction`s).",179,null],[11,"align_middle_x","","Align the position to the middle (only effective for Up or Down `Direction`s).",179,null],[11,"align_right","","Align the position to the right (only effective for Up or Down `Direction`s).",179,null],[11,"align_top","","Align the position to the top (only effective for Left or Right `Direction`s).",179,null],[11,"align_middle_y","","Align the position to the middle (only effective for Left or Right `Direction`s).",179,null],[11,"align_bottom","","Align the position to the bottom (only effective for Left or Right `Direction`s).",179,null],[11,"x_align_to","","Align the **Position** of the widget with the given widget along the *x* axis.",179,null],[11,"y_align_to","","Align the **Position** of the widget with the given widget along the *y* axis.",179,null],[11,"align_left_of","","Align the position to the left (only effective for Up or Down `Direction`s).",179,null],[11,"align_middle_x_of","","Align the position to the middle (only effective for Up or Down `Direction`s).",179,null],[11,"align_right_of","","Align the position to the right (only effective for Up or Down `Direction`s).",179,null],[11,"align_top_of","","Align the position to the top (only effective for Left or Right `Direction`s).",179,null],[11,"align_middle_y_of","","Align the position to the middle (only effective for Left or Right `Direction`s).",179,null],[11,"align_bottom_of","","Align the position to the bottom (only effective for Left or Right `Direction`s).",179,null],[11,"x_place_on","","Place the widget at some position on the `other` Widget along the *x* axis.",179,null],[11,"y_place_on","","Place the widget at some position on the `other` Widget along the *y* axis.",179,null],[11,"middle_of","","Place the widget in the middle of the given Widget.",179,null],[11,"top_left_of","","Place the widget in the top left corner of the given Widget.",179,null],[11,"top_left_with_margin_on","","Place the widget in the top left corner of the given Widget with the given margin between\nboth edges.",179,null],[11,"top_left_with_margins_on","","Place the widget in the top left corner of the given Widget with the given margins between\neach respective edge.",179,null],[11,"top_right_of","","Place the widget in the top right corner of the given Widget.",179,null],[11,"top_right_with_margin_on","","Place the widget in the top right corner of the given Widget with the given margin\nbetween both edges.",179,null],[11,"top_right_with_margins_on","","Place the widget in the top right corner of the given Widget with the given margins between\neach respective edge.",179,null],[11,"bottom_left_of","","Place the widget in the bottom left corner of the given Widget.",179,null],[11,"bottom_left_with_margin_on","","Place the widget in the bottom left corner of the given Widget with the given margin\nbetween both edges.",179,null],[11,"bottom_left_with_margins_on","","Place the widget in the bottom left corner of the given Widget with the given margins\nbetween each respective edge.",179,null],[11,"bottom_right_of","","Place the widget in the bottom right corner of the given Widget.",179,null],[11,"bottom_right_with_margin_on","","Place the widget in the bottom right corner of the given Widget with the given margin\nbetween both edges.",179,null],[11,"bottom_right_with_margins_on","","Place the widget in the bottom right corner of the given Widget with the given margins\nbetween each respective edge.",179,null],[11,"mid_top_of","","Place the widget in the middle of the top edge of the given Widget.",179,null],[11,"mid_top_with_margin_on","","Place the widget in the middle of the top edge of the given Widget with the given margin\nbetween the edges.",179,null],[11,"mid_bottom_of","","Place the widget in the middle of the bottom edge of the given Widget.",179,null],[11,"mid_bottom_with_margin_on","","Place the widget in the middle of the bottom edge of the given Widget with the given margin\nbetween the edges.",179,null],[11,"mid_left_of","","Place the widget in the middle of the left edge of the given Widget.",179,null],[11,"mid_left_with_margin_on","","Place the widget in the middle of the left edge of the given Widget with the given margin\nbetween the edges.",179,null],[11,"mid_right_of","","Place the widget in the middle of the right edge of the given Widget.",179,null],[11,"mid_right_with_margin_on","","Place the widget in the middle of the right edge of the given Widget with the given margin\nbetween the edges.",179,null],[11,"x_place","","Place the widget at some position on the Widget along the *x* axis.",179,null],[11,"y_place","","Place the widget at some position on the Widget along the *y* axis.",179,null],[11,"middle","","Place the widget in the middle of the current parent Widget.",179,null],[11,"top_left","","Place the widget in the top left corner of the current parent Widget.",179,null],[11,"top_left_with_margin","","Place the widget in the top left corner of the current parent Widget with the given margin\nbetween both edges.",179,null],[11,"top_left_with_margins","","Place the widget in the top left corner of the current parent Widget with the given margins\nbetween each respective edge.",179,null],[11,"top_right","","Place the widget in the top right corner of the current parent Widget.",179,null],[11,"top_right_with_margin","","Place the widget in the top right corner of the current parent Widget with the given margin\nbetween both edges.",179,null],[11,"top_right_with_margins","","Place the widget in the top right corner of the current parent Widget with the given margins\nbetween each respective edge.",179,null],[11,"bottom_left","","Place the widget in the bottom left corner of the current parent Widget.",179,null],[11,"bottom_left_with_margin","","Place the widget in the bottom left corner of the current parent Widget with the given\nmargin between both edges.",179,null],[11,"bottom_left_with_margins","","Place the widget in the bottom left corner of the current parent Widget with the given\nmargins between each respective edge.",179,null],[11,"bottom_right","","Place the widget in the bottom right corner of the current parent Widget.",179,null],[11,"bottom_right_with_margin","","Place the widget in the bottom right corner of the current parent Widget with the given\nmargin between both edges.",179,null],[11,"bottom_right_with_margins","","Place the widget in the bottom right corner of the current parent Widget with the given\nmargins between each respective edge.",179,null],[11,"mid_top","","Place the widget in the middle of the top edge of the current parent Widget.",179,null],[11,"mid_top_with_margin","","Place the widget in the middle of the top edge of the current parent Widget with the given\nmargin from the edge.",179,null],[11,"mid_bottom","","Place the widget in the middle of the bottom edge of the current parent Widget.",179,null],[11,"mid_bottom_with_margin","","Place the widget in the middle of the bottom edge of the current parent Widget with the\ngiven margin from the edge.",179,null],[11,"mid_left","","Place the widget in the middle of the left edge of the current parent Widget.",179,null],[11,"mid_left_with_margin","","Place the widget in the middle of the left edge of the current parent Widget with the\ngiven margin from the edge.",179,null],[11,"mid_right","","Place the widget in the middle of the right edge of the current parent Widget.",179,null],[11,"mid_right_with_margin","","Place the widget in the middle of the right edge of the current parent Widget with the\ngiven margin from the edge.",179,null],[11,"w","","Set the absolute width for the widget.",180,null],[11,"h","","Set the absolute height for the widget.",180,null],[11,"wh","","Set the dimensions for the widget.",180,null],[11,"w_h","","Set the width and height for the widget.",180,null],[11,"w_of","","Set the width as the width of the widget at the given index.",180,null],[11,"padded_w_of","","Set the width as the width of the widget at the given index padded at both ends by the\ngiven Scalar.",180,null],[11,"h_of","","Set the height as the height of the widget at the given index.",180,null],[11,"padded_h_of","","Set the height as the height of the widget at the given index padded at both ends by the\ngiven Scalar.",180,null],[11,"wh_of","","Set the dimensions as the dimensions of the widget at the given index.",180,null],[11,"padded_wh_of","","Set the dimensions as the dimensions of the widget at the given index with all four edges\npadded by the given scalar.",180,null],[11,"kid_area_w_of","","Set the width as the width of the padded area of the widget at the given index.",180,null],[11,"padded_kid_area_w_of","","Set the width as the `KidArea` width for the widget at the given index, padded at both ends\nby the given scalar.",180,null],[11,"kid_area_h_of","","Set the height as the `KidArea` height of the widget at the given index.",180,null],[11,"padded_kid_area_h_of","","Set the height as the `KidArea` height of the widget at the given index, padded at both\nends by the given scalar.",180,null],[11,"kid_area_wh_of","","Set the dimensions as the `KidArea` dimensions of the widget at the given index.",180,null],[11,"padded_kid_area_wh_of","","Set the dimensions as the `KidArea` dimensions of the widget at the given index, padded at\nall four edges by the given scalar.",180,null],[11,"get_w","","Get the absolute width of the widget as a Scalar value.",180,null],[11,"get_h","","Get the height of the widget.",180,null],[11,"get_wh","","The dimensions for the widget.",180,null],[11,"get_curve","","Return the bezier curve depth (-1. to 1.) for the next interpolation.",176,null],[11,"set_curve","","Set the bezier curve depth (-1. to 1.) for the next interpolation.",176,null],[11,"get_x","","Return the X value.",184,null],[11,"get_y","","Return the Y value.",184,null],[11,"set_x","","Return the X value.",184,null],[11,"set_y","","Return the Y value.",184,null],[11,"new","","Create a new Envelope Point.",184,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"point"}}],[11,"default_x_position","","The default **Position** for the widget along the *x* axis.",181,null],[11,"default_y_position","","The default **Position** for the widget along the *y* axis.",181,null],[11,"default_x_dimension","","The default width for the **Widget**.",181,null],[11,"default_y_dimension","","The default height of the widget.",181,null],[11,"drag_area","","If the widget is draggable, implement this method and return the position and dimensions of\nthe draggable space. The position should be relative to the center of the widget.",181,null],[11,"kid_area","","The area on which child widgets will be placed when using the `Place` `Position` methods.",181,null],[11,"parent","","Set the parent widget for this Widget by passing the WidgetId of the parent.",181,null],[11,"no_parent","","Specify that this widget has no parent widgets.",181,null],[11,"place_on_kid_area","","Set whether or not the **Widget** should be placed on the kid_area.",181,null],[11,"graphics_for","","Indicates that the **Widget** is used as a non-interactive graphical element for some other\nwidget.",181,null],[11,"floating","","Set whether or not the widget is floating (the default is `false`).\nA typical example of a floating widget would be a pop-up or alert window.",181,null],[11,"crop_kids","","Indicates that all widgets who are children of this widget should be cropped to the\n`kid_area` of this widget.",181,null],[11,"scroll_kids","","Makes the widget&#39;s `KidArea` scrollable.",181,null],[11,"scroll_kids_vertically","","Makes the widget&#39;s `KidArea` scrollable.",181,null],[11,"scroll_kids_horizontally","","Set whether or not the widget&#39;s `KidArea` is scrollable (the default is false).",181,null],[11,"and","","A builder method that &quot;lifts&quot; the **Widget** through the given `build` function.",181,null],[11,"and_mut","","A builder method that mutates the **Widget** with the given `mutate` function.",181,null],[11,"and_if","","A method that conditionally builds the **Widget** with the given `build` function.",181,null],[11,"and_then","","A method that optionally builds the the **Widget** with the given `build` function.",181,null],[11,"set","","Note: There should be no need to override this method.",181,null]],"paths":[[8,"CharacterCache"],[8,"Graphics"],[3,"Line"],[3,"Image"],[3,"PointPath"],[3,"FramedRectangle"],[3,"Polygon"],[3,"Oval"],[3,"Rectangle"],[3,"Text"],[3,"Button"],[3,"Canvas"],[3,"EnvelopeEditor"],[3,"FileNavigator"],[3,"RangeSlider"],[3,"Slider"],[3,"TextBox"],[3,"TextEdit"],[3,"TitleBar"],[3,"Toggle"],[3,"XYPad"],[3,"LineStyle"],[3,"ImageStyle"],[3,"FramedRectangleStyle"],[3,"TextStyle"],[3,"ButtonStyle"],[3,"CanvasStyle"],[3,"DropDownListStyle"],[3,"EnvelopeEditorStyle"],[3,"FileNavigatorStyle"],[3,"NumberDialerStyle"],[3,"PlotPathStyle"],[3,"RangeSliderStyle"],[3,"ScrollbarStyle"],[3,"SliderStyle"],[3,"TabsStyle"],[3,"TextBoxStyle"],[3,"TextEditStyle"],[3,"TitleBarStyle"],[3,"ToggleStyle"],[3,"XYPadStyle"],[3,"Padding"],[3,"Range"],[3,"Rect"],[3,"Ui"],[3,"CommonBuilder"],[3,"CommonState"],[3,"CommonStyle"],[3,"Floating"],[3,"UpdateArgs"],[3,"KidArea"],[3,"KidAreaArgs"],[3,"WidgetId"],[4,"TextWrap"],[4,"FileNavigatorEvent"],[4,"RangeSliderEdge"],[4,"ShapeStyle"],[4,"Framing"],[4,"Align"],[4,"Axis"],[4,"Corner"],[4,"Direction"],[4,"Dimension"],[4,"Edge"],[4,"Place"],[4,"Position"],[4,"MaybeParent"],[4,"WidgetIndex"],[3,"State"],[8,"Axis"],[3,"Scroll"],[4,"X"],[4,"Y"],[4,"Button"],[3,"ControllerAxisArgs"],[3,"ControllerButton"],[4,"Key"],[4,"Motion"],[4,"Button"],[4,"Input"],[4,"Event"],[8,"ToRawEvent"],[3,"Context"],[3,"DrawState"],[8,"ImageSize"],[8,"Transformed"],[3,"Character"],[8,"Backend"],[3,"Background"],[3,"Hsla"],[3,"Rgba"],[4,"Color"],[4,"Gradient"],[8,"Colorable"],[3,"Text"],[3,"Move"],[3,"Press"],[3,"MousePress"],[3,"KeyPress"],[3,"Release"],[3,"MouseRelease"],[3,"KeyRelease"],[3,"Drag"],[3,"Click"],[3,"DoubleClick"],[3,"Scroll"],[4,"Event"],[4,"Ui"],[4,"Widget"],[4,"Button"],[3,"GlyphCache"],[8,"Walker"],[3,"UniqueWidgetState"],[3,"Container"],[4,"Node"],[4,"Edge"],[3,"PickWidgets"],[3,"PickScrollableWidgets"],[3,"DepthOrder"],[8,"GraphIndex"],[3,"Graph"],[6,"Children"],[6,"Parents"],[3,"State"],[3,"Mouse"],[4,"ButtonPosition"],[3,"ButtonMap"],[3,"PressedButtons"],[3,"Mouse"],[3,"Widget"],[3,"Events"],[3,"Presses"],[3,"MousePresses"],[3,"MouseButtonPresses"],[3,"KeyPresses"],[3,"Releases"],[3,"MouseButtonReleases"],[3,"MouseReleases"],[3,"KeyReleases"],[3,"Clicks"],[3,"ButtonClicks"],[3,"Drags"],[3,"ButtonDrags"],[3,"Texts"],[3,"Scrolls"],[3,"Global"],[3,"Events"],[3,"UiEvents"],[3,"Widths"],[3,"Rects"],[3,"RectsPerLine"],[3,"SelectedRectsPerLine"],[3,"SelectedRects"],[3,"Index"],[3,"XysPerLine"],[3,"Xs"],[3,"Info"],[4,"Break"],[3,"Rects"],[3,"SelectedRects"],[3,"Infos"],[3,"Lines"],[3,"Theme"],[3,"WidgetDefault"],[3,"UniqueDefault"],[3,"UiCell"],[4,"IterDiff"],[3,"Circle"],[3,"DropDownList"],[3,"WidgetMatrix"],[3,"NumberDialer"],[3,"PlotPath"],[3,"Scrollbar"],[3,"Tabs"],[3,"IndexSlot"],[3,"WidgetState"],[8,"EnvelopePoint"],[8,"Frameable"],[8,"Labelable"],[8,"Positionable"],[8,"Sizeable"],[8,"Widget"],[3,"ModifierKey"],[6,"NodeIndex"],[6,"Point"]]};
searchIndex["daggy"] = {"doc":"**daggy** is a directed acyclic graph data structure library.","items":[[0,"algo","daggy::petgraph","Graph algorithms.",null,null],[5,"is_cyclic_undirected","daggy::petgraph::algo","Return `true` if the input graph contains a cycle.",null,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[5,"is_cyclic","","**Deprecated: Renamed to `is_cyclic_undirected`.**",null,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[5,"is_cyclic_directed","","Return `true` if the input directed graph contains a cycle.",null,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[5,"toposort","","Perform a topological sort of a directed graph.",null,{"inputs":[{"name":"graph"}],"output":{"name":"vec"}}],[5,"scc","","Compute the *strongly connected components* using Kosaraju&#39;s algorithm.",null,{"inputs":[{"name":"graph"}],"output":{"name":"vec"}}],[5,"condensation","","Condense every strongly connected component into a single node and return the result.",null,{"inputs":[{"name":"graph"},{"name":"bool"}],"output":{"name":"graph"}}],[5,"connected_components","","Return the number of connected components of the graph.",null,{"inputs":[{"name":"graph"}],"output":{"name":"usize"}}],[5,"min_spanning_tree","","Compute a *minimum spanning tree* of a graph.",null,{"inputs":[{"name":"graph"}],"output":{"name":"graph"}}],[5,"is_isomorphic","","Return `true` if the graphs `g0` and `g1` are isomorphic.",null,{"inputs":[{"name":"graph"},{"name":"graph"}],"output":{"name":"bool"}}],[5,"is_isomorphic_matching","","Return `true` if the graphs `g0` and `g1` are isomorphic.",null,{"inputs":[{"name":"graph"},{"name":"graph"},{"name":"f"},{"name":"g"}],"output":{"name":"bool"}}],[5,"dijkstra","","Dijkstra&#39;s shortest path algorithm.",null,null],[0,"graphmap","daggy::petgraph","`GraphMap&lt;N, E&gt;` is an undirected graph where node values are mapping keys.",null,null],[3,"GraphMap","daggy::petgraph::graphmap","`GraphMap&lt;N, E&gt;` is an undirected graph, with generic node values `N` and edge weights `E`.",null,null],[8,"NodeTrait","","A trait group for `GraphMap`&#39;s node identifier.",null,null],[3,"Nodes","","",null,null],[3,"Neighbors","","",null,null],[3,"Edges","","",null,null],[3,"AllEdges","","",null,null],[3,"Ptr","","A reference that is hashed and compared by its pointer value.",null,null],[12,"0","","",0,null],[0,"graph","daggy::petgraph","`Graph&lt;N, E, Ty, Ix&gt;` is a graph datastructure using an adjacency list representation.",null,null],[6,"DefIndex","daggy::petgraph::graph","",null,null],[8,"IndexType","","Trait for the unsigned integer type used for node and edge indices.",null,null],[10,"new","","",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[10,"index","","",1,null],[10,"max","","",1,{"inputs":[],"output":{"name":"self"}}],[3,"NodeIndex","","Node identifier.",null,null],[5,"node_index","","Short version of `NodeIndex::new`",null,{"inputs":[{"name":"usize"}],"output":{"name":"nodeindex"}}],[5,"edge_index","","Short version of `EdgeIndex::new`",null,{"inputs":[{"name":"usize"}],"output":{"name":"edgeindex"}}],[3,"EdgeIndex","","Edge identifier.",null,null],[3,"Node","","The graph&#39;s node type.",null,null],[12,"weight","","Associated node data.",2,null],[3,"Edge","","The graph&#39;s edge type.",null,null],[12,"weight","","Associated edge data.",3,null],[3,"Graph","","`Graph&lt;N, E, Ty, Ix&gt;` is a graph datastructure using an adjacency list representation.",null,null],[3,"Externals","","An iterator over either the nodes without edges to them or from them.",null,null],[3,"Neighbors","","Iterator over the neighbors of a node.",null,null],[3,"Edges","","Iterator over the edges of a node.",null,null],[3,"NodeWeightsMut","","Iterator yielding mutable access to all node weights.",null,null],[3,"EdgeWeightsMut","","Iterator yielding mutable access to all edge weights.",null,null],[8,"GraphIndex","","A  `GraphIndex` is a node or edge index.",null,null],[3,"WalkNeighbors","","A “walker” object that can be used to step through the edge list of a node.",null,null],[3,"WalkEdges","","**Deprecated.**",null,null],[3,"NodeIndices","","Iterator over the node indices of a graph.",null,null],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",null,null],[0,"dot","daggy::petgraph","Simple graphviz dot file format output.",null,null],[3,"Dot","daggy::petgraph::dot","`Dot` implements output to graphviz .dot format for a graph.",null,null],[4,"Config","","`Dot` configuration.",null,null],[13,"NodeIndexLabel","","Use indices for node labels.",4,null],[13,"EdgeIndexLabel","","Use indices for edge labels.",4,null],[13,"EdgeNoLabel","","Use no edge labels.",4,null],[0,"visit","daggy::petgraph","Graph visitor algorithms.",null,null],[8,"Graphlike","daggy::petgraph::visit","Base trait for graphs that defines the node identifier.",null,null],[16,"NodeId","","",5,null],[8,"NeighborIter","","NeighborIter gives access to the neighbors iterator.",null,null],[16,"Iter","","",6,null],[10,"neighbors","","Return an iterator that visits all neighbors of the node **n**.",6,null],[3,"AsUndirected","","Wrapper type for walking the graph as if it is undirected",null,null],[12,"0","","",7,null],[3,"Reversed","","Wrapper type for walking the graph as if all edges are reversed.",null,null],[12,"0","","",8,null],[8,"NeighborsDirected","","NeighborsDirected gives access to neighbors of both `Incoming` and `Outgoing`\nedges of a node.",null,null],[16,"NeighborsDirected","","",9,null],[10,"neighbors_directed","","Return an iterator that visits all neighbors of the node **n**.",9,null],[8,"Externals","","Externals returns an iterator of all nodes that either have either no\nincoming or no outgoing edges.",null,null],[16,"Externals","","",10,null],[10,"externals","","Return an iterator of all nodes with no edges in the given direction",10,null],[8,"VisitMap","","A mapping for storing the visited status for NodeId `N`.",null,null],[10,"visit","","Return **true** if the value is not already present.",11,null],[10,"is_visited","","",11,null],[8,"Visitable","","A graph that can create a visitor map.",null,null],[16,"Map","","",12,null],[10,"visit_map","","",12,null],[8,"Revisitable","","A graph that can reset and resize its visitor map.",null,null],[10,"reset_map","","",13,null],[8,"GetAdjacencyMatrix","","Create or access the adjacency matrix of a graph",null,null],[16,"AdjMatrix","","",14,null],[10,"adjacency_matrix","","",14,null],[10,"is_adjacent","","",14,null],[3,"Dfs","","A depth first search (DFS) of a graph.",null,null],[12,"stack","","The stack of nodes to visit",15,null],[12,"discovered","","The map of discovered nodes",15,null],[3,"DfsIter","","An iterator for a depth first traversal of a graph.",null,null],[3,"Bfs","","A breadth first search (BFS) of a graph.",null,null],[12,"stack","","The queue of nodes to visit",16,null],[12,"discovered","","The map of discovered nodes",16,null],[3,"BfsIter","","An iterator for a breadth first traversal of a graph.",null,null],[3,"Topo","","A topological order traversal for a graph.",null,null],[3,"SubTopo","","A topological order traversal for a subgraph.",null,null],[0,"unionfind","daggy::petgraph","`UnionFind&lt;K&gt;` is a disjoint-set data structure.",null,null],[3,"UnionFind","daggy::petgraph::unionfind","`UnionFind&lt;K&gt;` is a disjoint-set data structure. It tracks set membership of *n* elements\nindexed from *0* to *n - 1*. The scalar type is `K` which must be an unsigned integer type.",null,null],[4,"EdgeDirection","daggy::petgraph","Edge direction",null,null],[13,"Outgoing","","An `Outgoing` edge is an outward edge *from* the current node.",17,null],[13,"Incoming","","An `Incoming` edge is an inbound edge *to* the current node.",17,null],[4,"Directed","","Marker type for a directed graph.",null,null],[4,"Undirected","","Marker type for an undirected graph.",null,null],[8,"EdgeType","","A graph&#39;s edge type determines whether is has directed edges or not.",null,null],[10,"is_directed","","",18,{"inputs":[],"output":{"name":"bool"}}],[8,"IntoWeightedEdge","","Convert an element like `(i, j)` or `(i, j, w)` into\na triple of source, target, edge weight.",null,null],[16,"NodeId","","",19,null],[10,"into_weighted_edge","","",19,null],[3,"DfsIter","","An iterator for a depth first traversal of a graph.",null,null],[3,"BfsIter","","An iterator for a breadth first traversal of a graph.",null,null],[3,"Bfs","","A breadth first search (BFS) of a graph.",null,null],[12,"stack","","The queue of nodes to visit",16,null],[12,"discovered","","The map of discovered nodes",16,null],[3,"GraphMap","","`GraphMap&lt;N, E&gt;` is an undirected graph, with generic node values `N` and edge weights `E`.",null,null],[3,"Dfs","","A depth first search (DFS) of a graph.",null,null],[12,"stack","","The stack of nodes to visit",15,null],[12,"discovered","","The map of discovered nodes",15,null],[3,"Graph","","`Graph&lt;N, E, Ty, Ix&gt;` is a graph datastructure using an adjacency list representation.",null,null],[3,"EdgeIndex","daggy","Edge identifier.",null,null],[3,"NodeIndex","","Node identifier.",null,null],[3,"EdgeWeightsMut","","Iterator yielding mutable access to all edge weights.",null,null],[3,"NodeWeightsMut","","Iterator yielding mutable access to all node weights.",null,null],[3,"Dag","","A Directed acyclic graph (DAG) data structure.",null,null],[3,"Children","","A **Walker** type that can be used to step through the children of some parent node.",null,null],[3,"Parents","","A **Walker** type that can be used to step through the children of some parent node.",null,null],[3,"EdgeIndices","","An iterator yielding multiple `EdgeIndex`s, returned by the `Graph::add_edges` method.",null,null],[3,"WouldCycle","","An error returned by the `Dag::add_edge` method in the case that adding an edge would have\ncaused the graph to cycle.",null,null],[12,"0","","",20,null],[0,"walker","","**Walker** is a trait providing a variety of useful methods for traversing graph types.",null,null],[3,"Recursive","daggy::walker","Recursively walks a graph using the recursive function `recursive_fn`.",null,null],[3,"Chain","","Walks the entirety of `a` before walking the entirety of `b`.",null,null],[3,"Filter","","A walker that applies some given predicate to each element returned by its walker.\nThe only index pairs that will be yielded are those that make the predicate evaluate to true.",null,null],[3,"Peekable","","A walker that has a `.peek(&amp;graph)` method that returns an optional next neighbor.",null,null],[3,"SkipWhile","","A walker that invokes the predicate on elements until it returns false. Once the predicate\nreturns false, that element and all further elements are yielded.",null,null],[3,"TakeWhile","","A walker that yields elements so long as the predicate returns true. After the\npredicate returns false for the first time, no further elements will be yielded.",null,null],[3,"Skip","","A walker that skips the first n steps of this walk, and then yields all further steps.",null,null],[3,"Take","","A walker that yields the first n steps of this walk.",null,null],[3,"Cycle","","A walker that repeats its internal walker endlessly.",null,null],[3,"Inspect","","A walker that calls a function with a reference to each index pair before yielding them.\nThis is often useful for debugging a walker pipeline.",null,null],[3,"Iter","","An iterator yielding index pairs produced by its internal walker and graph.",null,null],[3,"IterEdges","","An iterator yielding edge indices produced by its internal walker and graph.",null,null],[3,"IterNodes","","An iterator yielding node indices produced by its internal walker and graph.",null,null],[3,"IterWeights","","An iterator yielding weights associated with the index pairs produced by its internal walker\nand graph.",null,null],[3,"IterEdgeWeights","","An iterator yielding edge weights associated with the indices produced by its internal walker\nand graph.",null,null],[3,"IterNodeWeights","","An iterator yielding node weights associated with the indices produced by its internal walker\nand graph.",null,null],[6,"IndexPair","","Short-hand for an edge node index pair.",null,null],[8,"Walker","","A trait providing a variety of useful methods for traversing some graph type **G**.",null,null],[16,"Index","","The unsigned integer type used for node and edge indices.",21,null],[10,"next","","Fetch the `EdgeIndex` and `NodeIndex` to the next neighbour in our walk through the given\n**Graph**.",21,null],[11,"next_edge","","The next edge in our walk for the given **Graph**.",21,null],[11,"next_node","","The next node in our walk for the given **Graph**.",21,null],[11,"count","","Counts all the steps in the entire walk of the given graph.",21,null],[11,"last","","Walks the whole walk until reaching and returning the last edge node pair.",21,null],[11,"last_edge","","Walks the whole walk until reaching and returning the last edge.",21,null],[11,"last_node","","Walks the whole walk until reaching and returning the last node.",21,null],[11,"nth","","Walks &quot;n&quot; number of steps and produces the resulting edge node pair.",21,null],[11,"nth_edge","","Walks &quot;n&quot; number of steps and produces the resulting edge.",21,null],[11,"nth_node","","Walks &quot;n&quot; number of steps and produces the resulting node.",21,null],[11,"chain","","Produces a walker that will walk the entirey of `self` before walking the entirey of other.",21,null],[11,"filter","","Creates a walker that applies the predicate to each element returned by this walker.\nThe only elements that will be yielded are those that make the predicate evaluate to true.",21,null],[11,"peekable","","Creates a walker that has a `.peek(&amp;graph)` method that returns an optional next neighbor.",21,null],[11,"skip_while","","Creates a walker that invokes the predicate on elements until it returns false. Once the\npredicate returns false, that element and all further elements are yielded.",21,null],[11,"take_while","","Creates a walker that yields elements so long as the predicate returns true. After the\npredicate returns false for the first time, no further elements will be yielded.",21,null],[11,"skip","","Creates a walker that skips the first n steps of this walk, and then yields all further\nsteps.",21,null],[11,"take","","Creates a walker that yields the first n steps of this walk.",21,null],[11,"all","","Tests whether the predicate holds true for all steps in the walk.",21,null],[11,"any","","Tests whether any step in the walk satisfies the given predicate.",21,null],[11,"find","","Returns the first edge node index pair satisfying the specified predicate.",21,null],[11,"find_edge","","Returns the edge index satisfying the specified predicate.",21,null],[11,"find_node","","Returns the node index satisfying the specified predicate.",21,null],[11,"cycle","","Repeats the walker endlessly.",21,null],[11,"fold","","Performs a fold operation over the entire walker, returning the eventual state at the end\nof the walk.",21,null],[11,"inspect","","Creates a walker that calls a function with a reference to each index pair before yielding\nthem. This is often useful for debugging a walker pipeline.",21,null],[11,"iter","","Converts the walker into an iterator yielding index pairs.",21,null],[11,"iter_weights","","Converts the walker into an iterator yielding `(&amp;e, &amp;n)`, where `e` is the edge weight for\nthe next `EdgeIndex` and `n` is the node weight for the next `NodeIndex`.",21,null],[11,"fmt","","",22,null],[11,"clone","","",22,null],[11,"new","","Construct a new **Recursive** **Walker** starting from the node at the given index.",22,{"inputs":[{"name":"nodeindex"},{"name":"f"}],"output":{"name":"self"}}],[11,"next","","",22,null],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"next","","",23,null],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"next","","",24,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"peek","","The edge node index pair of the neighbor at the next step in our walk of the given graph.",25,null],[11,"peek_edge","","The edge index of the neighbor at the next step in our walk of the given graph.",25,null],[11,"peek_node","","The node index of the neighbor at the next step in our walk of the given graph.",25,null],[11,"next","","",25,null],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"next","","",26,null],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"next","","",27,null],[11,"fmt","","",28,null],[11,"clone","","",28,null],[11,"next","","",28,null],[11,"fmt","","",29,null],[11,"clone","","",29,null],[11,"next","","",29,null],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"next","","",30,null],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"next","","",31,null],[11,"fmt","","",32,null],[11,"clone","","",32,null],[11,"edges","","Convert to an iterator that only yields the edge indices.",32,null],[11,"nodes","","Convert to an iterator that only yields the node indices.",32,null],[11,"next","","",32,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"next","","",33,null],[11,"fmt","","",34,null],[11,"clone","","",34,null],[11,"next","","",34,null],[11,"fmt","","",35,null],[11,"clone","","",35,null],[11,"edges","","Convert to an iterator yielding only the edge weights.",35,null],[11,"nodes","","Convert to an iterator yielding only the node weights.",35,null],[11,"next","","",35,null],[11,"fmt","","",36,null],[11,"clone","","",36,null],[11,"next","","",36,null],[11,"fmt","","",37,null],[11,"clone","","",37,null],[11,"next","","",37,null],[6,"PetGraph","daggy","The Petgraph to be used internally within the Dag for storing/managing nodes and edges.",null,null],[6,"RawNodes","","Read only access into a **Dag**&#39;s internal node array.",null,null],[6,"RawEdges","","Read only access into a **Dag**&#39;s internal edge array.",null,null],[6,"RecursiveWalk","","An alias to simplify the **Recursive** **Walker** type returned by **Dag**.",null,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"new","","Create a new, empty `Dag`.",38,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Create a new `Dag` with estimated capacity for its node and edge Vecs.",38,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"clear","","Removes all nodes and edges from the **Dag**.",38,null],[11,"node_count","","The total number of nodes in the **Dag**.",38,null],[11,"edge_count","","The total number of edgees in the **Dag**.",38,null],[11,"graph","","Borrow the `Dag`&#39;s underlying `PetGraph&lt;N, Ix&gt;`.\nAll existing indices may be used to index into this `PetGraph` the same way they may be\nused to index into the `Dag`.",38,null],[11,"into_graph","","Take ownership of the `Dag` and return the internal `PetGraph`.\nAll existing indices may be used to index into this `PetGraph` the same way they may be\nused to index into the `Dag`.",38,null],[11,"add_node","","Add a new node to the `Dag` with the given weight.",38,null],[11,"add_edge","","Add a new directed edge to the `Dag` with the given weight.",38,null],[11,"add_edges","","Adds the given directed edges to the `Dag`, each with their own given weight.",38,null],[11,"update_edge","","Update the edge from nodes `a` -&gt; `b` with the given weight.",38,null],[11,"find_edge","","Find and return the index to the edge that describes `a` -&gt; `b` if there is one.",38,null],[11,"edge_endpoints","","Access the parent and child nodes for the given `EdgeIndex`.",38,null],[11,"clear_edges","","Remove all edges.",38,null],[11,"add_parent","","Add a new edge and parent node to the node at the given `NodeIndex`.\nReturns both the edge&#39;s `EdgeIndex` and the node&#39;s `NodeIndex`.",38,null],[11,"add_child","","Add a new edge and child node to the node at the given `NodeIndex`.\nReturns both the edge&#39;s `EdgeIndex` and the node&#39;s `NodeIndex`.",38,null],[11,"node_weight","","Borrow the weight from the node at the given index.",38,null],[11,"node_weight_mut","","Mutably borrow the weight from the node at the given index.",38,null],[11,"raw_nodes","","Read from the internal node array.",38,null],[11,"node_weights_mut","","An iterator yielding mutable access to all node weights.",38,null],[11,"edge_weight","","Borrow the weight from the edge at the given index.",38,null],[11,"edge_weight_mut","","Mutably borrow the weight from the edge at the given index.",38,null],[11,"raw_edges","","Read from the internal edge array.",38,null],[11,"edge_weights_mut","","An iterator yielding mutable access to all edge weights.",38,null],[11,"index_twice_mut","","Index the `Dag` by two indices.",38,null],[11,"remove_node","","Remove the node at the given index from the `Dag` and return it if it exists.",38,null],[11,"remove_edge","","Remove an edge and return its weight, or `None` if it didn&#39;t exist.",38,null],[11,"parents","","A **Walker** type that may be used to step through the parents of the given child node.",38,null],[11,"children","","A &quot;walker&quot; object that may be used to step through the children of the given parent node.",38,null],[11,"recursive_walk","","A **Walker** type that recursively walks the **Dag** using the given `recursive_fn`.",38,null],[11,"index","","",38,null],[11,"index_mut","","",38,null],[11,"index","","",38,null],[11,"index_mut","","",38,null],[11,"next","","",39,null],[11,"next","","",40,null],[11,"next","","",41,null],[11,"fmt","","",20,null],[11,"description","","",20,null],[11,"new","daggy::petgraph","Create a new `GraphMap`.",42,{"inputs":[],"output":{"name":"graphmap"}}],[11,"with_capacity","","Create a new `GraphMap` with estimated capacity.",42,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"graphmap"}}],[11,"capacity","","Return the current node and edge capacity of the graph.",42,null],[11,"from_edges","","Create a new `GraphMap` from an iterable of edges.",42,{"inputs":[{"name":"i"}],"output":{"name":"graphmap"}}],[11,"node_count","","Return the number of nodes in the graph.",42,null],[11,"edge_count","","Return the number of edges in the graph.",42,null],[11,"clear","","Remove all nodes and edges",42,null],[11,"add_node","","Add node `n` to the graph.",42,null],[11,"remove_node","","Return `true` if node `n` was removed.",42,null],[11,"contains_node","","Return `true` if the node is contained in the graph.",42,null],[11,"add_edge","","Add an edge connecting `a` and `b` to the graph, with associated\ndata `weight`.",42,null],[11,"remove_edge","","Remove edge from `a` to `b` from the graph and return the edge weight.",42,null],[11,"contains_edge","","Return `true` if the edge connecting `a` with `b` is contained in the graph.",42,null],[11,"nodes","","Return an iterator over the nodes of the graph.",42,null],[11,"neighbors","","Return an iterator over the nodes that are connected with `from` by edges.",42,null],[11,"edges","","Return an iterator over the nodes that are connected with `from` by edges,\npaired with the edge weight.",42,null],[11,"edge_weight","","Return a reference to the edge weight connecting `a` with `b`, or\n`None` if the edge does not exist in the graph.",42,null],[11,"edge_weight_mut","","Return a mutable reference to the edge weight connecting `a` with `b`, or\n`None` if the edge does not exist in the graph.",42,null],[11,"all_edges","","Return an iterator over all edges of the graph with their weight in arbitrary order.",42,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[11,"from_iter","","",42,{"inputs":[{"name":"i"}],"output":{"name":"graphmap"}}],[11,"extend","","",42,null],[11,"next","daggy::petgraph::graphmap","",43,null],[11,"size_hint","","",43,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"clone","","",44,null],[11,"next","","",45,null],[11,"next","","",46,null],[11,"index","daggy::petgraph","",42,null],[11,"index_mut","","",42,null],[11,"default","","",42,{"inputs":[],"output":{"name":"graphmap"}}],[11,"clone","daggy::petgraph::graphmap","",0,null],[11,"eq","","Ptr compares by pointer equality, i.e if they point to the same value",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","Ptr is ordered by pointer value, i.e. an arbitrary but stable and total order.",0,null],[11,"deref","","",0,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"hash","daggy","",47,null],[11,"cmp","","",47,null],[11,"partial_cmp","","",47,null],[11,"lt","","",47,null],[11,"le","","",47,null],[11,"gt","","",47,null],[11,"ge","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"new","","",47,{"inputs":[{"name":"usize"}],"output":{"name":"nodeindex"}}],[11,"index","","",47,null],[11,"end","","",47,{"inputs":[],"output":{"name":"nodeindex"}}],[11,"from","","",47,{"inputs":[{"name":"ix"}],"output":{"name":"nodeindex"}}],[11,"hash","","",48,null],[11,"cmp","","",48,null],[11,"partial_cmp","","",48,null],[11,"lt","","",48,null],[11,"le","","",48,null],[11,"gt","","",48,null],[11,"ge","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"clone","","",48,null],[11,"new","","",48,{"inputs":[{"name":"usize"}],"output":{"name":"edgeindex"}}],[11,"index","","",48,null],[11,"end","","An invalid `EdgeIndex` used to denote absence of an edge, for example\nto end an adjacency list.",48,{"inputs":[],"output":{"name":"edgeindex"}}],[11,"fmt","","",48,null],[11,"clone","daggy::petgraph::graph","",2,null],[11,"fmt","","",2,null],[11,"next_edge","","Accessor for data structure internals: the first edge in the given direction.",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"next_edge","","Accessor for data structure internals: the next edge for the given direction.",3,null],[11,"source","","Return the source node index.",3,null],[11,"target","","Return the target node index.",3,null],[11,"clone","daggy::petgraph","",49,null],[11,"clone_from","","",49,null],[11,"fmt","","",49,null],[11,"new","","Create a new `Graph` with directed edges.",49,{"inputs":[],"output":{"name":"graph"}}],[11,"new_undirected","","Create a new `Graph` with undirected edges.",49,{"inputs":[],"output":{"name":"graph"}}],[11,"with_capacity","","Create a new `Graph` with estimated capacity.",49,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"graph"}}],[11,"capacity","","Return the current node and edge capacity of the graph.",49,null],[11,"node_count","","Return the number of nodes (vertices) in the graph.",49,null],[11,"edge_count","","Return the number of edges in the graph.",49,null],[11,"is_directed","","Whether the graph has directed edges or not.",49,null],[11,"add_node","","Add a node (also called vertex) with associated data `weight` to the graph.",49,null],[11,"node_weight","","Access the weight for node `a`.",49,null],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",49,null],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its associated\ndata `weight`.",49,null],[11,"update_edge","","Add or update an edge from `a` to `b`.\nIf the edge already exists, its weight is updated.",49,null],[11,"edge_weight","","Access the weight for edge `e`.",49,null],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably.",49,null],[11,"edge_endpoints","","Access the source and target nodes for `e`.",49,null],[11,"remove_node","","Remove `a` from the graph if it exists, and return its weight.\nIf it doesn&#39;t exist in the graph, return `None`.",49,null],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it didn&#39;t exist.",49,null],[11,"neighbors","","Return an iterator of all nodes with an edge starting from `a`.",49,null],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge between them and `a`,\nin the specified direction.\nIf the graph&#39;s edges are undirected, this is equivalent to *.neighbors(a)*.",49,null],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge between them and `a`,\nin either direction.\nIf the graph&#39;s edges are undirected, this is equivalent to *.neighbors(a)*.",49,null],[11,"edges","","Return an iterator over the neighbors of node `a`, paired with their respective edge\nweights.",49,null],[11,"edges_directed","","Return an iterator of all neighbors that have an edge between them and `a`,\nin the specified direction, paired with the respective edge weights.",49,null],[11,"find_edge","","Lookup an edge from `a` to `b`.",49,null],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",49,null],[11,"externals","","Return an iterator over either the nodes without edges to them\n(`Incoming`) or from them (`Outgoing`).",49,null],[11,"node_indices","","Return an iterator over the node indices of the graph",49,null],[11,"node_weights_mut","","Return an iterator yielding mutable access to all node weights.",49,null],[11,"edge_indices","","Return an iterator over the edge indices of the graph",49,null],[11,"edge_weights_mut","","Return an iterator yielding mutable access to all edge weights.",49,null],[11,"raw_nodes","","Access the internal node array.",49,null],[11,"raw_edges","","Access the internal edge array.",49,null],[11,"into_nodes_edges","","Convert the graph into a vector of Nodes and a vector of Edges",49,null],[11,"first_edge","","Accessor for data structure internals: the first edge in the given direction.",49,null],[11,"next_edge","","Accessor for data structure internals: the next edge for the given direction.",49,null],[11,"walk_edges_directed","","**Deprecated:** Use [`.neighbors_directed(a, dir).detach()`][1] instead.",49,null],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of\nnode or edge indices is fine.",49,null],[11,"reverse","","Reverse the direction of all edges",49,null],[11,"clear","","Remove all nodes and edges",49,null],[11,"clear_edges","","Remove all edges",49,null],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit` closure,\nremove the others.",49,null],[11,"retain_edges","","Keep all edges that return `true` from the `visit` closure,\nremove the others.",49,null],[11,"from_edges","","Create a new `Graph` from an iterable of edges.",49,{"inputs":[{"name":"i"}],"output":{"name":"graph"}}],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",49,null],[11,"map","","Create a new `Graph` by mapping node and\nedge weights to new values.",49,null],[11,"filter_map","","Create a new `Graph` by mapping nodes and edges.\nA node or edge may be mapped to `None` to exclude it from\nthe resulting graph.",49,null],[11,"into_edge_type","","Convert the graph into either undirected or directed. No edge adjustments\nare done, so you may want to go over the result to remove or add edges.",49,null],[11,"next","daggy::petgraph::graph","",50,null],[11,"next","","",51,null],[11,"clone","","",51,null],[11,"detach","","Return a “walker” object that can be used to step through the\nneighbors and edges from the origin node.",51,null],[11,"next","","",52,null],[11,"clone","","",52,null],[11,"next","daggy","",53,null],[11,"size_hint","","",53,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"index","daggy::petgraph","",49,null],[11,"index_mut","","",49,null],[11,"index","","",49,null],[11,"index_mut","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"graph"}}],[11,"index","daggy","",47,null],[11,"is_node_index","","",47,{"inputs":[],"output":{"name":"bool"}}],[11,"index","","",48,null],[11,"is_node_index","","",48,{"inputs":[],"output":{"name":"bool"}}],[11,"clone","daggy::petgraph::graph","",55,null],[11,"next","","Step to the next edge and its endpoint node in the walk for graph `g`.",55,null],[11,"next_node","","",55,null],[11,"next_edge","","",55,null],[11,"fmt","","",56,null],[11,"clone","","",56,null],[11,"next","","Fetch the next edge index in the walk for graph `g`.",56,null],[11,"next_neighbor","","Fetch the next edge index and the next node index in the walk for graph `g`.",56,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"size_hint","","",58,null],[11,"next_back","","",58,null],[11,"new","daggy::petgraph::dot","Create a `Dot` formatting wrapper with default configuration.",59,{"inputs":[{"name":"g"}],"output":{"name":"dot"}}],[11,"with_config","","Create a `Dot` formatting wrapper with custom configuration.",59,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",59,null],[11,"fmt","","",59,null],[11,"fmt","","",59,null],[11,"fmt","","",59,null],[11,"neighbors","daggy::petgraph","",49,null],[11,"neighbors","","",42,null],[11,"neighbors","daggy::petgraph::visit","",7,null],[11,"neighbors","","",8,null],[11,"neighbors_directed","daggy::petgraph","",49,null],[11,"neighbors_directed","daggy::petgraph::visit","",8,null],[11,"externals","daggy::petgraph","",49,null],[11,"externals","daggy::petgraph::visit","",8,null],[11,"visit_map","daggy::petgraph","",49,null],[11,"reset_map","","",49,null],[11,"reset_map","daggy::petgraph::visit","",8,null],[11,"visit_map","daggy::petgraph","",42,null],[11,"reset_map","","",42,null],[11,"visit_map","daggy::petgraph::visit","",7,null],[11,"visit_map","","",8,null],[11,"adjacency_matrix","daggy::petgraph","",42,null],[11,"is_adjacent","","",42,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"new","","Create a new **Dfs**, using the graph&#39;s visitor map, and put **start**\nin the stack of nodes to visit.",15,{"inputs":[{"name":"g"},{"name":"n"}],"output":{"name":"dfs"}}],[11,"empty","","Create a new **Dfs** using the graph&#39;s visitor map, and no stack.",15,{"inputs":[{"name":"g"}],"output":{"name":"dfs"}}],[11,"move_to","","Keep the discovered map, but clear the visit stack and restart\nthe dfs from a particular node.",15,null],[11,"next","","Return the next node in the dfs, or **None** if the traversal is done.",15,null],[11,"new","","",60,null],[11,"move_to","","Keep the discovered map, but clear the visit stack and restart\nthe DFS traversal from a particular node.",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"clone","","",60,null],[11,"clone","","",16,null],[11,"new","","Create a new **Bfs**, using the graph&#39;s visitor map, and put **start**\nin the stack of nodes to visit.",16,{"inputs":[{"name":"g"},{"name":"n"}],"output":{"name":"bfs"}}],[11,"next","","Return the next node in the dfs, or **None** if the traversal is done.",16,null],[11,"new","","",61,null],[11,"next","","",61,null],[11,"size_hint","","",61,null],[11,"clone","","",61,null],[11,"clone","daggy::petgraph::visit","",62,null],[11,"new","","Create a new `Topo`, using the graph&#39;s visitor map, and put all\ninitial nodes in the to-visit list.",62,{"inputs":[{"name":"g"}],"output":{"name":"topo"}}],[11,"reset","","Clear visited state, and put all initial nodes into the visit list.",62,null],[11,"next","","Return the next node in the current topological order traversal, or\n`None` if the traversal is at the end.",62,null],[11,"clone","","",63,null],[11,"from_node","","Create a new `SubTopo`, using the graph&#39;s visitor map, and put single\nnode in the to-visit list.",63,{"inputs":[{"name":"g"},{"name":"n"}],"output":{"name":"subtopo"}}],[11,"reset_with_node","","Clear visited state, and put a single node into the visit list.",63,null],[11,"next","","Return the next node in the current topological order traversal, or\n`None` if the traversal is at the end.",63,null],[11,"clone","daggy::petgraph::unionfind","",64,null],[11,"fmt","","",64,null],[11,"new","","Create a new `UnionFind` of `n` disjoint sets.",64,{"inputs":[{"name":"usize"}],"output":{"name":"unionfind"}}],[11,"find","","Return the representative for `x`.",64,null],[11,"find_mut","","Return the representative for `x`.",64,null],[11,"union","","Unify the two sets containing `x` and `y`.",64,null],[11,"into_labeling","","Return a vector mapping each element to its representative.",64,null],[11,"adjacency_matrix","daggy::petgraph","",49,null],[11,"is_adjacent","","",49,null],[11,"hash","","",17,null],[11,"cmp","","",17,null],[11,"partial_cmp","","",17,null],[11,"eq","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"opposite","","Return the opposite `EdgeDirection`.",17,null],[11,"fmt","","",65,null],[11,"clone","","",65,null],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"is_directed","","",65,{"inputs":[],"output":{"name":"bool"}}],[11,"is_directed","","",66,{"inputs":[],"output":{"name":"bool"}}]],"paths":[[3,"Ptr"],[8,"IndexType"],[3,"Node"],[3,"Edge"],[4,"Config"],[8,"Graphlike"],[8,"NeighborIter"],[3,"AsUndirected"],[3,"Reversed"],[8,"NeighborsDirected"],[8,"Externals"],[8,"VisitMap"],[8,"Visitable"],[8,"Revisitable"],[8,"GetAdjacencyMatrix"],[3,"Dfs"],[3,"Bfs"],[4,"EdgeDirection"],[8,"EdgeType"],[8,"IntoWeightedEdge"],[3,"WouldCycle"],[8,"Walker"],[3,"Recursive"],[3,"Chain"],[3,"Filter"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Cycle"],[3,"Inspect"],[3,"Iter"],[3,"IterEdges"],[3,"IterNodes"],[3,"IterWeights"],[3,"IterEdgeWeights"],[3,"IterNodeWeights"],[3,"Dag"],[3,"Children"],[3,"Parents"],[3,"EdgeIndices"],[3,"GraphMap"],[3,"Nodes"],[3,"Neighbors"],[3,"Edges"],[3,"AllEdges"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Graph"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"NodeWeightsMut"],[3,"EdgeWeightsMut"],[3,"WalkNeighbors"],[3,"WalkEdges"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"Dot"],[3,"DfsIter"],[3,"BfsIter"],[3,"Topo"],[3,"SubTopo"],[3,"UnionFind"],[4,"Directed"],[4,"Undirected"]]};
searchIndex["petgraph"] = {"doc":"**petgraph** is a graph data structure library.","items":[[4,"EdgeDirection","petgraph","Edge direction",null,null],[13,"Outgoing","","An `Outgoing` edge is an outward edge *from* the current node.",0,null],[13,"Incoming","","An `Incoming` edge is an inbound edge *to* the current node.",0,null],[4,"Directed","","Marker type for a directed graph.",null,null],[4,"Undirected","","Marker type for an undirected graph.",null,null],[0,"algo","","Graph algorithms.",null,null],[5,"is_isomorphic","petgraph::algo","Return `true` if the graphs `g0` and `g1` are isomorphic.",null,{"inputs":[{"name":"graph"},{"name":"graph"}],"output":{"name":"bool"}}],[5,"is_isomorphic_matching","","Return `true` if the graphs `g0` and `g1` are isomorphic.",null,{"inputs":[{"name":"graph"},{"name":"graph"},{"name":"f"},{"name":"g"}],"output":{"name":"bool"}}],[5,"dijkstra","","Dijkstra&#39;s shortest path algorithm.",null,{"inputs":[{"name":"g"},{"name":"nodeid"},{"name":"option"},{"name":"f"}],"output":{"name":"hashmap"}}],[5,"is_cyclic_undirected","","Return `true` if the input graph contains a cycle.",null,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[5,"is_cyclic","","**Deprecated: Renamed to `is_cyclic_undirected`.**",null,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[5,"is_cyclic_directed","","Return `true` if the input directed graph contains a cycle.",null,{"inputs":[{"name":"graph"}],"output":{"name":"bool"}}],[5,"toposort","","Perform a topological sort of a directed graph.",null,{"inputs":[{"name":"graph"}],"output":{"name":"vec"}}],[5,"scc","","Compute the *strongly connected components* using Kosaraju&#39;s algorithm.",null,{"inputs":[{"name":"graph"}],"output":{"name":"vec"}}],[5,"condensation","","Condense every strongly connected component into a single node and return the result.",null,{"inputs":[{"name":"graph"},{"name":"bool"}],"output":{"name":"graph"}}],[5,"connected_components","","Return the number of connected components of the graph.",null,{"inputs":[{"name":"graph"}],"output":{"name":"usize"}}],[5,"min_spanning_tree","","Compute a *minimum spanning tree* of a graph.",null,{"inputs":[{"name":"graph"}],"output":{"name":"graph"}}],[0,"graphmap","petgraph","`GraphMap&lt;N, E&gt;` is an undirected graph where node values are mapping keys.",null,null],[3,"GraphMap","petgraph::graphmap","`GraphMap&lt;N, E&gt;` is an undirected graph, with generic node values `N` and edge weights `E`.",null,null],[3,"Nodes","","",null,null],[3,"Neighbors","","",null,null],[3,"Edges","","",null,null],[3,"AllEdges","","",null,null],[3,"Ptr","","A reference that is hashed and compared by its pointer value.",null,null],[12,"0","","",1,null],[8,"NodeTrait","","A trait group for `GraphMap`&#39;s node identifier.",null,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"new","","Create a new `GraphMap`.",2,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Create a new `GraphMap` with estimated capacity.",2,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Return the current node and edge capacity of the graph.",2,null],[11,"from_edges","","Create a new `GraphMap` from an iterable of edges.",2,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"node_count","","Return the number of nodes in the graph.",2,null],[11,"edge_count","","Return the number of edges in the graph.",2,null],[11,"clear","","Remove all nodes and edges",2,null],[11,"add_node","","Add node `n` to the graph.",2,null],[11,"remove_node","","Return `true` if node `n` was removed.",2,null],[11,"contains_node","","Return `true` if the node is contained in the graph.",2,null],[11,"add_edge","","Add an edge connecting `a` and `b` to the graph, with associated\ndata `weight`.",2,null],[11,"remove_edge","","Remove edge from `a` to `b` from the graph and return the edge weight.",2,null],[11,"contains_edge","","Return `true` if the edge connecting `a` with `b` is contained in the graph.",2,null],[11,"nodes","","Return an iterator over the nodes of the graph.",2,null],[11,"neighbors","","Return an iterator over the nodes that are connected with `from` by edges.",2,null],[11,"edges","","Return an iterator over the nodes that are connected with `from` by edges,\npaired with the edge weight.",2,null],[11,"edge_weight","","Return a reference to the edge weight connecting `a` with `b`, or\n`None` if the edge does not exist in the graph.",2,null],[11,"edge_weight_mut","","Return a mutable reference to the edge weight connecting `a` with `b`, or\n`None` if the edge does not exist in the graph.",2,null],[11,"all_edges","","Return an iterator over all edges of the graph with their weight in arbitrary order.",2,null],[11,"from_iter","","",2,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend","","",2,null],[11,"next","","",3,null],[11,"size_hint","","",3,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[11,"clone","","",4,null],[11,"next","","",5,null],[11,"next","","",6,null],[11,"index","","",2,null],[11,"index_mut","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",1,null],[11,"eq","","Ptr compares by pointer equality, i.e if they point to the same value",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","Ptr is ordered by pointer value, i.e. an arbitrary but stable and total order.",1,null],[11,"deref","","",1,null],[11,"hash","","",1,null],[11,"fmt","","",1,null],[0,"graph","petgraph","`Graph&lt;N, E, Ty, Ix&gt;` is a graph datastructure using an adjacency list representation.",null,null],[3,"NodeIndex","petgraph::graph","Node identifier.",null,null],[3,"EdgeIndex","","Edge identifier.",null,null],[3,"Node","","The graph&#39;s node type.",null,null],[12,"weight","","Associated node data.",7,null],[3,"Edge","","The graph&#39;s edge type.",null,null],[12,"weight","","Associated edge data.",8,null],[3,"Graph","","`Graph&lt;N, E, Ty, Ix&gt;` is a graph datastructure using an adjacency list representation.",null,null],[3,"Externals","","An iterator over either the nodes without edges to them or from them.",null,null],[3,"Neighbors","","Iterator over the neighbors of a node.",null,null],[3,"Edges","","Iterator over the edges of a node.",null,null],[3,"NodeWeightsMut","","Iterator yielding mutable access to all node weights.",null,null],[3,"EdgeWeightsMut","","Iterator yielding mutable access to all edge weights.",null,null],[3,"WalkNeighbors","","A “walker” object that can be used to step through the edge list of a node.",null,null],[3,"WalkEdges","","**Deprecated.**",null,null],[3,"NodeIndices","","Iterator over the node indices of a graph.",null,null],[3,"EdgeIndices","","Iterator over the edge indices of a graph.",null,null],[5,"node_index","","Short version of `NodeIndex::new`",null,{"inputs":[{"name":"usize"}],"output":{"name":"nodeindex"}}],[5,"edge_index","","Short version of `EdgeIndex::new`",null,{"inputs":[{"name":"usize"}],"output":{"name":"edgeindex"}}],[6,"DefIndex","","The default integer type for node and edge indices in `Graph`.\n`u32` is the default to reduce the size of the graph&#39;s data and improve\nperformance in the common case.",null,null],[8,"IndexType","","Trait for the unsigned integer type used for node and edge indices.",null,null],[10,"new","","",9,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[10,"index","","",9,null],[10,"max","","",9,{"inputs":[],"output":{"name":"self"}}],[8,"GraphIndex","","A  `GraphIndex` is a node or edge index.",null,null],[11,"hash","","",10,null],[11,"cmp","","",10,null],[11,"partial_cmp","","",10,null],[11,"lt","","",10,null],[11,"le","","",10,null],[11,"gt","","",10,null],[11,"ge","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"new","","",10,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"index","","",10,null],[11,"end","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",10,{"inputs":[{"name":"ix"}],"output":{"name":"self"}}],[11,"hash","","",11,null],[11,"cmp","","",11,null],[11,"partial_cmp","","",11,null],[11,"lt","","",11,null],[11,"le","","",11,null],[11,"gt","","",11,null],[11,"ge","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"new","","",11,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"index","","",11,null],[11,"end","","An invalid `EdgeIndex` used to denote absence of an edge, for example\nto end an adjacency list.",11,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",11,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"next_edge","","Accessor for data structure internals: the first edge in the given direction.",7,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"next_edge","","Accessor for data structure internals: the next edge for the given direction.",8,null],[11,"source","","Return the source node index.",8,null],[11,"target","","Return the target node index.",8,null],[11,"clone","","",12,null],[11,"clone_from","","",12,null],[11,"fmt","","",12,null],[11,"new","","Create a new `Graph` with directed edges.",12,{"inputs":[],"output":{"name":"self"}}],[11,"new_undirected","","Create a new `Graph` with undirected edges.",12,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Create a new `Graph` with estimated capacity.",12,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Return the current node and edge capacity of the graph.",12,null],[11,"node_count","","Return the number of nodes (vertices) in the graph.",12,null],[11,"edge_count","","Return the number of edges in the graph.",12,null],[11,"is_directed","","Whether the graph has directed edges or not.",12,null],[11,"add_node","","Add a node (also called vertex) with associated data `weight` to the graph.",12,null],[11,"node_weight","","Access the weight for node `a`.",12,null],[11,"node_weight_mut","","Access the weight for node `a`, mutably.",12,null],[11,"add_edge","","Add an edge from `a` to `b` to the graph, with its associated\ndata `weight`.",12,null],[11,"update_edge","","Add or update an edge from `a` to `b`.\nIf the edge already exists, its weight is updated.",12,null],[11,"edge_weight","","Access the weight for edge `e`.",12,null],[11,"edge_weight_mut","","Access the weight for edge `e`, mutably.",12,null],[11,"edge_endpoints","","Access the source and target nodes for `e`.",12,null],[11,"remove_node","","Remove `a` from the graph if it exists, and return its weight.\nIf it doesn&#39;t exist in the graph, return `None`.",12,null],[11,"remove_edge","","Remove an edge and return its edge weight, or `None` if it didn&#39;t exist.",12,null],[11,"neighbors","","Return an iterator of all nodes with an edge starting from `a`.",12,null],[11,"neighbors_directed","","Return an iterator of all neighbors that have an edge between them and `a`,\nin the specified direction.\nIf the graph&#39;s edges are undirected, this is equivalent to *.neighbors(a)*.",12,null],[11,"neighbors_undirected","","Return an iterator of all neighbors that have an edge between them and `a`,\nin either direction.\nIf the graph&#39;s edges are undirected, this is equivalent to *.neighbors(a)*.",12,null],[11,"edges","","Return an iterator over the neighbors of node `a`, paired with their respective edge\nweights.",12,null],[11,"edges_directed","","Return an iterator of all neighbors that have an edge between them and `a`,\nin the specified direction, paired with the respective edge weights.",12,null],[11,"find_edge","","Lookup an edge from `a` to `b`.",12,null],[11,"find_edge_undirected","","Lookup an edge between `a` and `b`, in either direction.",12,null],[11,"externals","","Return an iterator over either the nodes without edges to them\n(`Incoming`) or from them (`Outgoing`).",12,null],[11,"node_indices","","Return an iterator over the node indices of the graph",12,null],[11,"node_weights_mut","","Return an iterator yielding mutable access to all node weights.",12,null],[11,"edge_indices","","Return an iterator over the edge indices of the graph",12,null],[11,"edge_weights_mut","","Return an iterator yielding mutable access to all edge weights.",12,null],[11,"raw_nodes","","Access the internal node array.",12,null],[11,"raw_edges","","Access the internal edge array.",12,null],[11,"into_nodes_edges","","Convert the graph into a vector of Nodes and a vector of Edges",12,null],[11,"first_edge","","Accessor for data structure internals: the first edge in the given direction.",12,null],[11,"next_edge","","Accessor for data structure internals: the next edge for the given direction.",12,null],[11,"walk_edges_directed","","**Deprecated:** Use [`.neighbors_directed(a, dir).detach()`][1] instead.",12,null],[11,"index_twice_mut","","Index the `Graph` by two indices, any combination of\nnode or edge indices is fine.",12,null],[11,"reverse","","Reverse the direction of all edges",12,null],[11,"clear","","Remove all nodes and edges",12,null],[11,"clear_edges","","Remove all edges",12,null],[11,"retain_nodes","","Keep all nodes that return `true` from the `visit` closure,\nremove the others.",12,null],[11,"retain_edges","","Keep all edges that return `true` from the `visit` closure,\nremove the others.",12,null],[11,"from_edges","","Create a new `Graph` from an iterable of edges.",12,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"extend_with_edges","","Extend the graph from an iterable of edges.",12,null],[11,"map","","Create a new `Graph` by mapping node and\nedge weights to new values.",12,null],[11,"filter_map","","Create a new `Graph` by mapping nodes and edges.\nA node or edge may be mapped to `None` to exclude it from\nthe resulting graph.",12,null],[11,"into_edge_type","","Convert the graph into either undirected or directed. No edge adjustments\nare done, so you may want to go over the result to remove or add edges.",12,null],[11,"next","","",13,null],[11,"next","","",14,null],[11,"clone","","",14,null],[11,"detach","","Return a “walker” object that can be used to step through the\nneighbors and edges from the origin node.",14,null],[11,"next","","",15,null],[11,"clone","","",15,null],[11,"next","","",16,null],[11,"size_hint","","",16,null],[11,"next","","",17,null],[11,"size_hint","","",17,null],[11,"index","","",12,null],[11,"index_mut","","",12,null],[11,"index","","",12,null],[11,"index_mut","","",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"index","","",10,null],[11,"is_node_index","","",10,{"inputs":[],"output":{"name":"bool"}}],[11,"index","","",11,null],[11,"is_node_index","","",11,{"inputs":[],"output":{"name":"bool"}}],[11,"clone","","",18,null],[11,"next","","Step to the next edge and its endpoint node in the walk for graph `g`.",18,null],[11,"next_node","","",18,null],[11,"next_edge","","",18,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"next","","Fetch the next edge index in the walk for graph `g`.",19,null],[11,"next_neighbor","","Fetch the next edge index and the next node index in the walk for graph `g`.",19,null],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"next","","",20,null],[11,"size_hint","","",20,null],[11,"next_back","","",20,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"next","","",21,null],[11,"size_hint","","",21,null],[11,"next_back","","",21,null],[0,"dot","petgraph","Simple graphviz dot file format output.",null,null],[3,"Dot","petgraph::dot","`Dot` implements output to graphviz .dot format for a graph.",null,null],[4,"Config","","`Dot` configuration.",null,null],[13,"NodeIndexLabel","","Use indices for node labels.",22,null],[13,"EdgeIndexLabel","","Use indices for edge labels.",22,null],[13,"EdgeNoLabel","","Use no edge labels.",22,null],[11,"new","","Create a `Dot` formatting wrapper with default configuration.",23,{"inputs":[{"name":"g"}],"output":{"name":"self"}}],[11,"with_config","","Create a `Dot` formatting wrapper with custom configuration.",23,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"fmt","","",22,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[11,"fmt","","",23,null],[0,"visit","petgraph","Graph visitor algorithms.",null,null],[3,"AsUndirected","petgraph::visit","Wrapper type for walking the graph as if it is undirected",null,null],[12,"0","","",24,null],[3,"Reversed","","Wrapper type for walking the graph as if all edges are reversed.",null,null],[12,"0","","",25,null],[3,"Dfs","","A depth first search (DFS) of a graph.",null,null],[12,"stack","","The stack of nodes to visit",26,null],[12,"discovered","","The map of discovered nodes",26,null],[3,"DfsIter","","An iterator for a depth first traversal of a graph.",null,null],[3,"Bfs","","A breadth first search (BFS) of a graph.",null,null],[12,"stack","","The queue of nodes to visit",27,null],[12,"discovered","","The map of discovered nodes",27,null],[3,"BfsIter","","An iterator for a breadth first traversal of a graph.",null,null],[3,"Topo","","A topological order traversal for a graph.",null,null],[3,"SubTopo","","A topological order traversal for a subgraph.",null,null],[8,"Graphlike","","Base trait for graphs that defines the node identifier.",null,null],[16,"NodeId","","",28,null],[8,"NeighborIter","","NeighborIter gives access to the neighbors iterator.",null,null],[16,"Iter","","",29,null],[10,"neighbors","","Return an iterator that visits all neighbors of the node **n**.",29,null],[8,"NeighborsDirected","","NeighborsDirected gives access to neighbors of both `Incoming` and `Outgoing`\nedges of a node.",null,null],[16,"NeighborsDirected","","",30,null],[10,"neighbors_directed","","Return an iterator that visits all neighbors of the node **n**.",30,null],[8,"Externals","","Externals returns an iterator of all nodes that either have either no\nincoming or no outgoing edges.",null,null],[16,"Externals","","",31,null],[10,"externals","","Return an iterator of all nodes with no edges in the given direction",31,null],[8,"VisitMap","","A mapping for storing the visited status for NodeId `N`.",null,null],[10,"visit","","Return **true** if the value is not already present.",32,null],[10,"is_visited","","",32,null],[8,"Visitable","","A graph that can create a visitor map.",null,null],[16,"Map","","",33,null],[10,"visit_map","","",33,null],[8,"Revisitable","","A graph that can reset and resize its visitor map.",null,null],[10,"reset_map","","",34,null],[8,"GetAdjacencyMatrix","","Create or access the adjacency matrix of a graph",null,null],[16,"AdjMatrix","","",35,null],[10,"adjacency_matrix","","",35,null],[10,"is_adjacent","","",35,null],[11,"neighbors","petgraph::graph","",12,null],[11,"neighbors","petgraph::graphmap","",2,null],[11,"neighbors","petgraph::visit","",24,null],[11,"neighbors","","",25,null],[11,"neighbors_directed","petgraph::graph","",12,null],[11,"neighbors_directed","petgraph::visit","",25,null],[11,"externals","petgraph::graph","",12,null],[11,"externals","petgraph::visit","",25,null],[11,"visit_map","petgraph::graph","",12,null],[11,"reset_map","","",12,null],[11,"reset_map","petgraph::visit","",25,null],[11,"visit_map","petgraph::graphmap","",2,null],[11,"reset_map","","",2,null],[11,"visit_map","petgraph::visit","",24,null],[11,"visit_map","","",25,null],[11,"adjacency_matrix","petgraph::graphmap","",2,null],[11,"is_adjacent","","",2,null],[11,"fmt","petgraph::visit","",26,null],[11,"clone","","",26,null],[11,"new","","Create a new **Dfs**, using the graph&#39;s visitor map, and put **start**\nin the stack of nodes to visit.",26,{"inputs":[{"name":"g"},{"name":"n"}],"output":{"name":"self"}}],[11,"empty","","Create a new **Dfs** using the graph&#39;s visitor map, and no stack.",26,{"inputs":[{"name":"g"}],"output":{"name":"self"}}],[11,"move_to","","Keep the discovered map, but clear the visit stack and restart\nthe dfs from a particular node.",26,null],[11,"next","","Return the next node in the dfs, or **None** if the traversal is done.",26,null],[11,"new","","",36,{"inputs":[{"name":"g"},{"name":"nodeid"}],"output":{"name":"self"}}],[11,"move_to","","Keep the discovered map, but clear the visit stack and restart\nthe DFS traversal from a particular node.",36,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"clone","","",36,null],[11,"clone","","",27,null],[11,"new","","Create a new **Bfs**, using the graph&#39;s visitor map, and put **start**\nin the stack of nodes to visit.",27,{"inputs":[{"name":"g"},{"name":"n"}],"output":{"name":"self"}}],[11,"next","","Return the next node in the dfs, or **None** if the traversal is done.",27,null],[11,"new","","",37,{"inputs":[{"name":"g"},{"name":"nodeid"}],"output":{"name":"self"}}],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"new","","Create a new `Topo`, using the graph&#39;s visitor map, and put all\ninitial nodes in the to-visit list.",38,{"inputs":[{"name":"g"}],"output":{"name":"self"}}],[11,"reset","","Clear visited state, and put all initial nodes into the visit list.",38,null],[11,"next","","Return the next node in the current topological order traversal, or\n`None` if the traversal is at the end.",38,null],[11,"clone","","",39,null],[11,"from_node","","Create a new `SubTopo`, using the graph&#39;s visitor map, and put single\nnode in the to-visit list.",39,{"inputs":[{"name":"g"},{"name":"n"}],"output":{"name":"self"}}],[11,"reset_with_node","","Clear visited state, and put a single node into the visit list.",39,null],[11,"next","","Return the next node in the current topological order traversal, or\n`None` if the traversal is at the end.",39,null],[0,"unionfind","petgraph","`UnionFind&lt;K&gt;` is a disjoint-set data structure.",null,null],[3,"UnionFind","petgraph::unionfind","`UnionFind&lt;K&gt;` is a disjoint-set data structure. It tracks set membership of *n* elements\nindexed from *0* to *n - 1*. The scalar type is `K` which must be an unsigned integer type.",null,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"new","","Create a new `UnionFind` of `n` disjoint sets.",40,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"find","","Return the representative for `x`.",40,null],[11,"find_mut","","Return the representative for `x`.",40,null],[11,"union","","Unify the two sets containing `x` and `y`.",40,null],[11,"into_labeling","","Return a vector mapping each element to its representative.",40,null],[11,"adjacency_matrix","petgraph::graph","",12,null],[11,"is_adjacent","","",12,null],[8,"EdgeType","petgraph","A graph&#39;s edge type determines whether is has directed edges or not.",null,null],[10,"is_directed","","",41,{"inputs":[],"output":{"name":"bool"}}],[8,"IntoWeightedEdge","","Convert an element like `(i, j)` or `(i, j, w)` into\na triple of source, target, edge weight.",null,null],[16,"NodeId","","",42,null],[10,"into_weighted_edge","","",42,null],[11,"hash","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"opposite","","Return the opposite `EdgeDirection`.",0,null],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"is_directed","","",43,{"inputs":[],"output":{"name":"bool"}}],[11,"is_directed","","",44,{"inputs":[],"output":{"name":"bool"}}]],"paths":[[4,"EdgeDirection"],[3,"Ptr"],[3,"GraphMap"],[3,"Nodes"],[3,"Neighbors"],[3,"Edges"],[3,"AllEdges"],[3,"Node"],[3,"Edge"],[8,"IndexType"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Graph"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"NodeWeightsMut"],[3,"EdgeWeightsMut"],[3,"WalkNeighbors"],[3,"WalkEdges"],[3,"NodeIndices"],[3,"EdgeIndices"],[4,"Config"],[3,"Dot"],[3,"AsUndirected"],[3,"Reversed"],[3,"Dfs"],[3,"Bfs"],[8,"Graphlike"],[8,"NeighborIter"],[8,"NeighborsDirected"],[8,"Externals"],[8,"VisitMap"],[8,"Visitable"],[8,"Revisitable"],[8,"GetAdjacencyMatrix"],[3,"DfsIter"],[3,"BfsIter"],[3,"Topo"],[3,"SubTopo"],[3,"UnionFind"],[8,"EdgeType"],[8,"IntoWeightedEdge"],[4,"Directed"],[4,"Undirected"]]};
searchIndex["graphics"] = {"doc":"A library for 2D graphics that works with multiple back-ends.","items":[[8,"ImageSize","graphics","Implemented by all images to be used with generic algorithms.",null,null],[10,"get_size","","Get the image size.",0,null],[11,"get_width","","Gets the image width.",0,null],[11,"get_height","","Gets the image height.",0,null],[3,"Viewport","","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels.\n```[x, y, width height]``` where ```(x, y)``` is lower left corner.",1,null],[12,"draw_size","","The size of frame buffer in pixels.",1,null],[12,"window_size","","The size of window in points.",1,null],[5,"clear","","Clears the screen.",null,{"inputs":[{"name":"color"},{"name":"g"}],"output":null}],[5,"image","","Draws image.",null,null],[5,"ellipse","","Draws ellipse.",null,{"inputs":[{"name":"color"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"circle_arc","","Draws arc",null,{"inputs":[{"name":"color"},{"name":"radius"},{"name":"scalar"},{"name":"scalar"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"rectangle","","Draws rectangle.",null,{"inputs":[{"name":"color"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"polygon","","Draws polygon.",null,{"inputs":[{"name":"color"},{"name":"polygon"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"line","","Draws line.",null,{"inputs":[{"name":"color"},{"name":"radius"},{"name":"l"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"text","","Draws text.",null,{"inputs":[{"name":"color"},{"name":"fontsize"},{"name":"str"},{"name":"c"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"draw_state","","Graphics draw state.",null,null],[3,"DrawState","graphics::draw_state","Graphics draw state used for blending, clipping and stencil rendering.",null,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this\nrectangle (in screen space) will be written to as a result of rendering.",2,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",2,null],[12,"blend","","Blend function to use. If None, blending is disabled.",2,null],[4,"Blend","","The blend setting to use when drawing.",null,null],[13,"Alpha","","Alpha blending (allows semi-transparent pixels).",3,null],[13,"Add","","Additive blending.",3,null],[13,"Multiply","","Multiply color components.",3,null],[13,"Invert","","Invert colors when rendering a white shape.",3,null],[4,"Stencil","","Stencil buffer settings.",null,null],[13,"Clip","","Draw to stencil buffer.",4,null],[13,"Inside","","Draw pixels that have stencil value.",4,null],[13,"Outside","","Draw pixels that does not have stencil value.",4,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"new_alpha","","Uses alpha blending.",2,{"inputs":[],"output":{"name":"drawstate"}}],[11,"new_clip","","Draws to stencil buffer with value 255.\nThis can be used for clipping.",2,{"inputs":[],"output":{"name":"drawstate"}}],[11,"new_inside","","Tests against stencil buffer with value 255.\nDraws inside the shape defined by stencil buffer.",2,{"inputs":[],"output":{"name":"drawstate"}}],[11,"new_outside","","Tests against stencil buffer with value 255.\nDraws outside the shape defined by stencil buffer.",2,{"inputs":[],"output":{"name":"drawstate"}}],[11,"blend","","Sets blending.",2,null],[11,"scissor","","Sets scissor `[x, y, w, h]`.",2,null],[11,"partial_cmp","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[0,"character","graphics","A text character",null,null],[3,"Character","graphics::character","Holds rendered character data.",null,null],[12,"offset","","The offset of character.",5,null],[12,"size","","The size of character, including space.",5,null],[12,"texture","","The texture of the character.",5,null],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The textyre type associated with the character cache.",6,null],[10,"character","","Get reference to character.",6,null],[11,"width","","Return the width for some given text.",6,null],[11,"clone","","",5,null],[11,"left","","The left offset.",5,null],[11,"top","","The top offset.",5,null],[11,"width","","Gets width of character, including space to the next one.",5,null],[11,"height","","Sets height of character, including space to the next one.",5,null],[0,"context","graphics","Transformation context",null,null],[3,"Context","graphics::context","Drawing 2d context.",null,null],[12,"viewport","","Viewport information.",7,null],[12,"view","","View transformation.",7,null],[12,"transform","","Current transformation.",7,null],[12,"draw_state","","Current draw state settings.",7,null],[11,"clone","","",7,null],[11,"new","","Creates a new drawing context.",7,{"inputs":[],"output":{"name":"context"}}],[11,"new_viewport","","Creates a new context with absolute transform in point coordinates.",7,{"inputs":[{"name":"viewport"}],"output":{"name":"context"}}],[11,"new_abs","","Creates a new drawing context in absolute coordinates.",7,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"context"}}],[11,"view","","Moves the current transform to the view coordinate system.",7,null],[11,"reset","","Moves the current transform to the default coordinate system.",7,null],[11,"store_view","","Stores the current transform as new view.",7,null],[11,"get_view_size","","Computes the current view size.",7,null],[0,"color","graphics","Helper methods for colors",null,null],[5,"grey","graphics::color","Returns a grey color",null,{"inputs":[{"name":"colorcomponent"}],"output":{"name":"color"}}],[5,"alpha","","Returns a semi-transparent white color",null,{"inputs":[{"name":"colorcomponent"}],"output":{"name":"color"}}],[5,"hex","","Converts from hexadecimal color format",null,{"inputs":[{"name":"str"}],"output":{"name":"color"}}],[5,"gamma_srgb_to_linear","","Converts gamma (brightness) from sRGB to linear color space.",null,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[5,"gamma_linear_to_srgb","","Converts gamma (brightness) of a color from linear color space to sRGB.",null,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[17,"WHITE","","White color.",null,null],[17,"BLACK","","Black color.",null,null],[17,"TRANSPARENT","","Transparent color.",null,null],[0,"polygon","graphics","Draw polygon",null,null],[3,"Polygon","graphics::polygon","A polygon",null,null],[12,"color","","The color of the polygon",8,null],[11,"clone","","",8,null],[11,"new","","Creates new polygon",8,{"inputs":[{"name":"color"}],"output":{"name":"polygon"}}],[11,"color","","Sets color.",8,null],[11,"draw","","Draws polygon using the default method.",8,null],[11,"draw_tri","","Draws polygon using triangulation.",8,null],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation, using default method.",8,null],[11,"draw_tween_lerp_tri","","Draws tweened polygon with linear interpolation, using triangulation.",8,null],[0,"line","graphics","Draw Line",null,null],[3,"Line","graphics::line","A colored line with a default border radius",null,null],[12,"color","","The line color",9,null],[12,"radius","","The line radius",9,null],[12,"shape","","The line shape",9,null],[4,"Shape","","The shape of the line",null,null],[13,"Square","","Square edges",10,null],[13,"Round","","Round edges",10,null],[13,"Bevel","","Bevel edges",10,null],[11,"clone","","",10,null],[11,"clone","","",9,null],[11,"new","","Creates a new line",9,{"inputs":[{"name":"color"},{"name":"radius"}],"output":{"name":"line"}}],[11,"new_round","","Creates a new line",9,{"inputs":[{"name":"color"},{"name":"radius"}],"output":{"name":"line"}}],[11,"color","","Sets color.",9,null],[11,"radius","","Sets radius.",9,null],[11,"width","","Sets width.",9,null],[11,"shape","","Sets shape.",9,null],[11,"draw","","Draws line using default method.",9,null],[11,"draw_tri","","Draws line using triangulation.",9,null],[11,"draw_arrow","","Draws an arrow",9,null],[0,"circle_arc","graphics","Draw an arc",null,null],[3,"CircleArc","graphics::circle_arc","A curved line",null,null],[12,"color","","The arcs color",11,null],[12,"radius","","The radius of the arc (Thickness of the drawing, not the radius of the circle)",11,null],[12,"start","","The start of the arc in radians",11,null],[12,"end","","The end of the arc in radians",11,null],[12,"resolution","","The resolution for the arc.",11,null],[11,"clone","","",11,null],[11,"new","","Creates a new arc",11,{"inputs":[{"name":"color"},{"name":"radius"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"circlearc"}}],[11,"color","","Sets the arcs color.",11,null],[11,"radius","","Sets the radius of the arc (Thickness of the arc, not the radius of the circle it wraps)",11,null],[11,"start","","Sets the start of the arc (in radians).",11,null],[11,"end","","Sets the end of the arc (in radians).",11,null],[11,"resolution","","Sets the resolution of the arcs smoothness.",11,null],[11,"draw","","Draws circle arc using default method.",11,null],[11,"draw_tri","","Draws circle arc using triangulation.",11,null],[0,"ellipse","graphics","Draw ellipse",null,null],[3,"Border","graphics::ellipse","Ellipse border",null,null],[12,"color","","The border color",12,null],[12,"radius","","The border radius",12,null],[3,"Ellipse","","An ellipse with filled color",null,null],[12,"color","","The ellipse color",13,null],[12,"border","","The ellipse border",13,null],[12,"resolution","","The resolution for the shape, 360 degrees.",13,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"new","","Creates a new ellipse",13,{"inputs":[{"name":"color"}],"output":{"name":"ellipse"}}],[11,"new_border","","Creates a new ellipse border",13,{"inputs":[{"name":"color"},{"name":"radius"}],"output":{"name":"ellipse"}}],[11,"color","","Sets ellipse color.",13,null],[11,"border","","Sets ellipse border.",13,null],[11,"maybe_border","","Sets optional ellipse border.",13,null],[11,"resolution","","Sets resolution of the ellipse smoothness.",13,null],[11,"draw","","Draws ellipse using default method.",13,null],[11,"draw_tri","","Draws ellipse using triangulation.",13,null],[0,"rectangle","graphics","Draw rectangle",null,null],[3,"Border","graphics::rectangle","The border of the rectangle",null,null],[12,"color","","The color of the border",14,null],[12,"radius","","The radius of the border",14,null],[3,"Rectangle","","A filled rectangle",null,null],[12,"color","","The rectangle color",15,null],[12,"shape","","The roundness of the rectangle",15,null],[12,"border","","The border",15,null],[4,"Shape","","The shape of the rectangle",null,null],[13,"Square","","Square corners",16,null],[13,"Round","","Round corners, with resolution per corner.",16,null],[13,"Bevel","","Bevel corners",16,null],[5,"centered","","Use x, y, half-width, half-height",null,{"inputs":[{"name":"rectangle"}],"output":{"name":"rectangle"}}],[5,"centered_square","","Use centered square",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[5,"square","","Use square with x, y in upper left corner",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[11,"clone","","",16,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"new","","Creates a new rectangle.",15,{"inputs":[{"name":"color"}],"output":{"name":"rectangle"}}],[11,"new_round","","Creates a new round rectangle.",15,{"inputs":[{"name":"color"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"new_border","","Creates a new rectangle border.",15,{"inputs":[{"name":"color"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"new_round_border","","Creates a new round rectangle border.",15,{"inputs":[{"name":"color"},{"name":"radius"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"color","","Sets color.",15,null],[11,"shape","","Sets shape.",15,null],[11,"border","","Sets border.",15,null],[11,"maybe_border","","Sets optional border.",15,null],[11,"draw","","Draws the rectangle using default method.",15,null],[11,"draw_tri","","Draws the rectangle using triangulation.",15,null],[0,"image","graphics","Draw an image",null,null],[3,"Image","graphics::image","An image",null,null],[12,"color","","The color",17,null],[12,"rectangle","","The rectangle to draw image inside",17,null],[12,"source_rectangle","","The image source rectangle",17,null],[5,"draw_many","","Draws many images.",null,null],[11,"clone","","",17,null],[11,"new","","Creates a new image",17,{"inputs":[],"output":{"name":"image"}}],[11,"new_color","","Creates a new colored image",17,{"inputs":[{"name":"color"}],"output":{"name":"image"}}],[11,"color","","Sets color.",17,null],[11,"maybe_color","","Sets optional color.",17,null],[11,"rect","","Sets rectangle.",17,null],[11,"maybe_rect","","Sets optional rectangle.",17,null],[11,"src_rect","","Sets source rectangle.",17,null],[11,"maybe_src_rect","","Sets optional source rectangle.",17,null],[11,"draw","","Draws image using default method.",17,null],[11,"draw_tri","","Draws image using triangulation.",17,null],[0,"types","graphics","Contains type aliases used in this library",null,null],[6,"Area","graphics::types","The type used for area.",null,null],[6,"Color","","[red, green, blue, alpha]",null,null],[6,"ColorComponent","","The type used for color component.",null,null],[6,"Line","","[x1, y1, x2, y2]",null,null],[6,"SourceRectangle","","[x, y, w, h]",null,null],[6,"Polygon","","[p0, p1, ...]",null,null],[6,"Polygons","","A slice of polygons.",null,null],[6,"Radius","","The type used for radius.",null,null],[6,"Resolution","","The type used for resolution.",null,null],[6,"Ray","","[x, y, dir_x, dir_y]",null,null],[6,"Rectangle","","[x, y, w, h]",null,null],[6,"Triangle","","[x1, y1, x2, y2, x3, y3]",null,null],[6,"Width","","The type used for width.",null,null],[6,"FontSize","","The type used for font size.",null,null],[0,"modular_index","graphics","Helper functions for computing modular index safely.",null,null],[5,"offset","graphics::modular_index","Computes modular offset safely for indices.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"isize"}],"output":{"name":"usize"}}],[5,"previous","","Computes previous modular index safely.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[5,"next","","Computes next modular index safely.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[0,"text","graphics","Draw text",null,null],[3,"Text","graphics::text","Renders text",null,null],[12,"color","","The color",18,null],[12,"font_size","","The font size",18,null],[12,"round","","Whether or not the text&#39;s position should be rounded (to a signed distance field).",18,null],[11,"clone","","",18,null],[11,"new","","Creates a new text with black color",18,{"inputs":[{"name":"fontsize"}],"output":{"name":"text"}}],[11,"new_color","","Creates a new colored text",18,{"inputs":[{"name":"color"},{"name":"fontsize"}],"output":{"name":"text"}}],[11,"round","","A builder method indicating that the Text&#39;s position should be rounded upon drawing.",18,null],[11,"draw","","Draws text with a character cache",18,null],[0,"triangulation","graphics","Methods for converting shapes into triangles.",null,null],[5,"tx","graphics::triangulation","Transformed x coordinate as f32.",null,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"f32"}}],[5,"ty","","Transformed y coordinate as f32.",null,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"f32"}}],[5,"with_lerp_polygons_tri_list","","Streams tweened polygons using linear interpolation.",null,{"inputs":[{"name":"matrix2d"},{"name":"polygons"},{"name":"scalar"},{"name":"f"}],"output":null}],[5,"with_ellipse_tri_list","","Streams an ellipse specified by a resolution.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"f"}],"output":null}],[5,"with_round_border_line_tri_list","","Streams a round border line.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"line"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_round_rectangle_tri_list","","Streams a round rectangle.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"stream_polygon_tri_list","","Streams a polygon into tri list.\nUses buffers that fit inside L1 cache.",null,{"inputs":[{"name":"matrix2d"},{"name":"e"},{"name":"f"}],"output":null}],[5,"with_ellipse_border_tri_list","","Streams an ellipse border specified by a resolution.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_arc_tri_list","","Streams an arc between the two radian boundaries.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_round_rectangle_border_tri_list","","Streams a round rectangle border.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"stream_quad_tri_list","","Streams a quad into tri list.",null,{"inputs":[{"name":"matrix2d"},{"name":"e"},{"name":"f"}],"output":null}],[5,"with_polygon_tri_list","","Splits polygon into convex segments.\nCreate a buffer that fits into L1 cache with 1KB overhead.",null,{"inputs":[{"name":"matrix2d"},{"name":"polygon"},{"name":"f"}],"output":null}],[5,"rect_tri_list_xy","","Creates triangle list vertices from rectangle.",null,null],[5,"rect_border_tri_list_xy","","Creates triangle list vertices from rectangle.",null,null],[5,"rect_tri_list_uv","","Creates triangle list texture coords from image.",null,null],[0,"math","graphics","Various methods for computing with vectors.",null,null],[5,"multiply","graphics::math","Multiplies two matrices.",null,null],[5,"dot","","Computes the dot product.",null,null],[5,"cross","","Computes the cross product.",null,null],[5,"add","","Adds two vectors.",null,null],[5,"sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,null],[5,"cast","","Converts to another vector type.",null,null],[5,"mul","","Multiplies two vectors component wise.",null,null],[5,"mul_scalar","","Multiplies the vector with a scalar.",null,null],[5,"square_len","","Computes the square length of a vector.",null,null],[5,"transform_pos","","Transforms a 2D position through matrix.",null,null],[5,"transform_vec","","Transforms a 2D vector through matrix.",null,null],[5,"perp","","Creates a perpendicular vector.",null,null],[5,"abs_transform","","Transforms from normalized to absolute coordinates.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"matrix2d"}}],[5,"translate","","Creates a translation matrix.",null,{"inputs":[{"name":"vec2d"}],"output":{"name":"matrix2d"}}],[5,"rotate_radians","","Creates a rotation matrix.",null,{"inputs":[{"name":"t"}],"output":{"name":"matrix2d"}}],[5,"orient","","Orients x axis to look at point.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"matrix2d"}}],[5,"scale","","Create a scale matrix.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"matrix2d"}}],[5,"shear","","Create a shear matrix.",null,{"inputs":[{"name":"vec2d"}],"output":{"name":"matrix2d"}}],[5,"identity","","Create an identity matrix.",null,{"inputs":[],"output":{"name":"matrix2d"}}],[5,"get_scale","","Extract scale information from matrix.",null,{"inputs":[{"name":"matrix2d"}],"output":{"name":"vec2d"}}],[5,"separation","","Compute the shortest vector from point to ray.\nA ray stores starting point and directional vector.",null,{"inputs":[{"name":"ray"},{"name":"vec2d"}],"output":{"name":"vec2d"}}],[5,"least_separation_4","","Returns the least separation out of four.\nEach seperation can be computed using `separation` function.\nThe separation returned can be used\nto solve collision of rectangles.",null,{"inputs":[{"name":"vec2d"},{"name":"vec2d"},{"name":"vec2d"},{"name":"vec2d"}],"output":{"name":"vec2d"}}],[5,"margin_rectangle","","Shrinks a rectangle by a factor on all sides.",null,{"inputs":[{"name":"rectangle"},{"name":"t"}],"output":{"name":"rectangle"}}],[5,"relative_rectangle","","Computes a relative rectangle using the rectangle as a tile.",null,{"inputs":[{"name":"rectangle"},{"name":"vec2d"}],"output":{"name":"rectangle"}}],[5,"overlap_rectangle","","Computes overlap between two rectangles.\nThe area of the overlapping rectangle is positive.\nA shared edge or corner is not considered overlap.",null,{"inputs":[{"name":"rectangle"},{"name":"rectangle"}],"output":{"name":"option"}}],[5,"relative_source_rectangle","","Computes a relative source rectangle using\nthe source rectangle as a tile.",null,{"inputs":[{"name":"sourcerectangle"},{"name":"i32"},{"name":"i32"}],"output":{"name":"sourcerectangle"}}],[5,"modular_offset","","Computes modular offset safely for numbers.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"area_centroid","","Computes the area and centroid of a simple polygon.",null,null],[5,"area","","Computes area of a simple polygon.",null,{"inputs":[{"name":"polygon"}],"output":{"name":"t"}}],[5,"centroid","","Computes centroid of a simple polygon.",null,{"inputs":[{"name":"polygon"}],"output":{"name":"vec2d"}}],[5,"line_side","","Returns a number that tells which side it is relative to a line.",null,{"inputs":[{"name":"line"},{"name":"vec2d"}],"output":{"name":"t"}}],[5,"inside_triangle","","Returns true if point is inside triangle.",null,{"inputs":[{"name":"triangle"},{"name":"vec2d"}],"output":{"name":"bool"}}],[5,"triangle_face","","Returns true if triangle is clockwise.",null,{"inputs":[{"name":"triangle"}],"output":{"name":"bool"}}],[5,"to_barycentric","","Transforms from cartesian coordinates to barycentric.",null,{"inputs":[{"name":"triangle"},{"name":"vec2d"}],"output":{"name":"vec3d"}}],[5,"from_barycentric","","Transforms from barycentric coordinates to cartesian.",null,{"inputs":[{"name":"triangle"},{"name":"vec3d"}],"output":{"name":"vec2d"}}],[5,"hsv","","Transform color with hue, saturation and value.",null,{"inputs":[{"name":"color"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[6,"Scalar","","The type used for scalars.",null,null],[6,"Matrix2d","","The type used for matrices.",null,null],[6,"Vec2d","","The type used for 2D vectors.",null,null],[6,"Vec3d","","The type used for 3D vectors.",null,null],[0,"deform","graphics","Least square deforming of a 2D grid.",null,null],[3,"DeformGrid","graphics::deform","Represents a deformed grid.",null,null],[12,"cols","","The number of columns in the grid.",19,null],[12,"rows","","The number of rows in the grid.",19,null],[12,"rect","","The grid undeformed, which is a plain rectangle.",19,null],[12,"vertices","","The vertices, deformed.",19,null],[12,"indices","","The triangle indices.",19,null],[12,"texture_coords","","The texture coordinates.",19,null],[12,"ps","","Initial position of control points.",19,null],[12,"qs","","The current position of control points.",19,null],[12,"wis","","A weight computation buffer, one for each control point.",19,null],[11,"clone","","",19,null],[11,"new","","Creates a new DeformGrid.",19,{"inputs":[{"name":"rectangle"},{"name":"usize"},{"name":"usize"}],"output":{"name":"deformgrid"}}],[11,"set_current","","Sets current control position.",19,null],[11,"set_original","","Sets original control position.",19,null],[11,"reset_control_points","","Removes all control points.",19,null],[11,"reset_vertices_and_texture_coords","","Sets vertices and texture coords back to default.",19,null],[11,"hit","","Finds original coordinate.\nIf the deformed grid is overlapping itself, multiple hits might occur.\nReturns the first hit it finds.",19,null],[11,"draw_image","","Draws deformed image using default method.",19,null],[11,"draw_image_tri","","Draws deformed image using triangulation.",19,null],[11,"add_control_point","","Adds a control point, in original coordinates.",19,null],[11,"draw_vertical_lines","","Draw vertical grid lines.",19,null],[11,"draw_horizontal_lines","","Draw horizontal grid lines.",19,null],[11,"update","","Updates the grid, by deforming the vertices.",19,null],[0,"grid","graphics","A flat grid with square cells.",null,null],[3,"Grid","graphics::grid","Represents a flat grid with square cells.",null,null],[12,"cols","","Number of columns.",20,null],[12,"rows","","Number of rows.",20,null],[12,"units","","The width and height of each grid cell.",20,null],[3,"GridCells","","Iterates through the cells of a grid as (u32, u32).",null,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"draw","","Draws the grid.",20,null],[11,"cells","","Get a GridIterator for the grid",20,null],[11,"cell_position","","Get on-screen position of a grid cell",20,null],[11,"x_pos","","Get on-screen x position of a grid cell",20,null],[11,"y_pos","","Get on-screen y position of a grid cell",20,null],[11,"next","","",21,null],[0,"radians","graphics","Reexport radians helper trait from vecmath",null,null],[8,"Radians","graphics::radians","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",22,{"inputs":[],"output":{"name":"self"}}],[10,"_180","","Returns radians corresponding to 180 degrees.",22,{"inputs":[],"output":{"name":"self"}}],[10,"_360","","Returns radians corresponding to 360 degrees.",22,{"inputs":[],"output":{"name":"self"}}],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",22,null],[10,"rad_to_deg","","Convert a value to degrees from radians.\nEquivalent to ```value * (180 / π)```.",22,null],[7,"BACK_END_MAX_VERTEX_COUNT","graphics","Any triangulation method called on the back-end\nnever exceeds this number of vertices.\nThis can be used to initialize buffers that fit the chunk size.",null,null],[8,"Graphics","","Implemented by all graphics back-ends.",null,null],[16,"Texture","","The texture type associated with the back-end.",23,null],[10,"clear_color","","Clears background with a color.",23,null],[10,"clear_stencil","","Clears stencil buffer with a value, usually 0.",23,null],[10,"tri_list","","Renders list of 2d triangles using a solid color.",23,null],[10,"tri_list_uv","","Renders list of 2d triangles using a color and a texture.",23,null],[11,"rectangle","","Draws a rectangle.",23,null],[11,"polygon","","Draws a polygon.",23,null],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",23,null],[11,"image","","Draws image.",23,null],[11,"ellipse","","Draws ellipse.",23,null],[11,"line","","Draws line.",23,null],[11,"circle_arc","","Draws circle arc.",23,null],[11,"deform_image","","Draws deformed image.",23,null],[8,"SourceRectangled","","Should be implemented by contexts that\nhave source rectangle information.",null,null],[10,"src_rect","","Adds a source rectangle.",24,null],[10,"src_rel","","Moves to a relative source rectangle using\nthe current source rectangle as tile.",24,null],[10,"src_flip_h","","Flips the source rectangle horizontally.",24,null],[10,"src_flip_v","","Flips the source rectangle vertically.",24,null],[10,"src_flip_hv","","Flips the source rectangle horizontally and vertically.",24,null],[8,"Rectangled","","Should be implemented by contexts that have rectangle information.",null,null],[10,"margin","","Shrinks the current rectangle equally by all sides.",25,null],[11,"expand","","Expands the current rectangle equally by all sides.",25,null],[10,"rel","","Moves to a relative rectangle using the current rectangle as tile.",25,null],[8,"Transformed","","Implemented by contexts that can transform.",null,null],[10,"append_transform","","Appends transform to the current one.",26,null],[10,"prepend_transform","","Prepends transform to the current one.",26,null],[10,"trans","","Translate x an y in local coordinates.",26,null],[11,"rot_deg","","Rotates degrees in local coordinates.",26,null],[10,"rot_rad","","Rotate radians in local coordinates.",26,null],[10,"orient","","Orients x axis to look at point locally.",26,null],[10,"scale","","Scales in local coordinates.",26,null],[11,"zoom","","Scales in both directions in local coordinates.",26,null],[11,"flip_v","","Flips vertically in local coordinates.",26,null],[11,"flip_h","","Flips horizontally in local coordinates.",26,null],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",26,null],[10,"shear","","Shears in local coordinates.",26,null],[8,"Colored","","Implemented by contexts that contains color.",null,null],[10,"mul_rgba","","Multiplies with red, green, blue and alpha values.",27,null],[11,"tint","","Mixes the current color with white.",27,null],[11,"shade","","Mixes the current color with black.",27,null],[11,"hue_deg","","Rotates hue by degrees.",27,null],[10,"hue_rad","","Rotates hue by radians.",27,null],[11,"abs_transform","","Computes absolute transform for 2D graphics,\nwhich uses a row major 2x3 matrix.\nThe origin is in the upper left corner of the viewport rectangle.\nThe x axis points to the right, and the y axis points down.\nThe units are in points (window coordinates).",1,null],[11,"clone","","",1,null],[11,"rectangle","","Draws a rectangle.",23,null],[11,"polygon","","Draws a polygon.",23,null],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",23,null],[11,"image","","Draws image.",23,null],[11,"ellipse","","Draws ellipse.",23,null],[11,"line","","Draws line.",23,null],[11,"circle_arc","","Draws circle arc.",23,null],[11,"deform_image","","Draws deformed image.",23,null],[11,"src_rect","graphics::types","",28,null],[11,"src_rel","","",28,null],[11,"src_flip_h","","",28,null],[11,"src_flip_v","","",28,null],[11,"src_flip_hv","","",28,null],[11,"expand","graphics","Expands the current rectangle equally by all sides.",25,null],[11,"margin","graphics::types","",29,null],[11,"rel","","",29,null],[11,"rot_deg","graphics","Rotates degrees in local coordinates.",26,null],[11,"zoom","","Scales in both directions in local coordinates.",26,null],[11,"flip_v","","Flips vertically in local coordinates.",26,null],[11,"flip_h","","Flips horizontally in local coordinates.",26,null],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",26,null],[11,"append_transform","graphics::math","",30,null],[11,"prepend_transform","","",30,null],[11,"trans","","",30,null],[11,"rot_rad","","",30,null],[11,"orient","","",30,null],[11,"scale","","",30,null],[11,"shear","","",30,null],[11,"append_transform","graphics::context","",7,null],[11,"prepend_transform","","",7,null],[11,"trans","","",7,null],[11,"rot_rad","","",7,null],[11,"orient","","",7,null],[11,"scale","","",7,null],[11,"shear","","",7,null],[11,"tint","graphics","Mixes the current color with white.",27,null],[11,"shade","","Mixes the current color with black.",27,null],[11,"hue_deg","","Rotates hue by degrees.",27,null],[11,"mul_rgba","graphics::types","",31,null],[11,"hue_rad","","",31,null],[11,"mul_rgba","graphics::line","",9,null],[11,"hue_rad","","",9,null],[11,"mul_rgba","graphics::ellipse","",13,null],[11,"hue_rad","","",13,null],[11,"mul_rgba","graphics::rectangle","",15,null],[11,"hue_rad","","",15,null]],"paths":[[8,"ImageSize"],[3,"Viewport"],[3,"DrawState"],[4,"Blend"],[4,"Stencil"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[3,"Line"],[4,"Shape"],[3,"CircleArc"],[3,"Border"],[3,"Ellipse"],[3,"Border"],[3,"Rectangle"],[4,"Shape"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GridCells"],[8,"Radians"],[8,"Graphics"],[8,"SourceRectangled"],[8,"Rectangled"],[8,"Transformed"],[8,"Colored"],[6,"SourceRectangle"],[6,"Rectangle"],[6,"Matrix2d"],[6,"Color"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[3,"BigInt","num","A big signed integer type.",null,null],[3,"BigUint","","A big unsigned integer type.",null,null],[6,"Rational","","",null,null],[6,"BigRational","","",null,null],[3,"Complex","","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",1,null],[10,"mod_floor","","Floored integer modulo, satisfying:",1,null],[10,"gcd","","Greatest Common Divisor (GCD).",1,null],[10,"lcm","","Lowest Common Multiple (LCM).",1,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",1,null],[10,"is_even","","Returns `true` if the number is even.",1,null],[10,"is_odd","","Returns `true` if the number is odd.",1,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",1,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",2,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",2,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",5,null],[10,"abs_sub","","The positive difference of two numbers.",5,null],[10,"signum","","Returns the sign of the number.",5,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",5,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",5,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",6,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",6,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",7,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",7,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",8,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",9,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",10,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",11,null],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",12,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",12,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",12,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",12,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",12,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",12,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",12,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",12,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",12,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",12,null],[10,"swap_bytes","","Reverses the byte order of the integer.",12,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",12,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",12,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",12,null],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",13,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",13,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",13,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",13,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",13,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",13,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",13,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",13,null],[10,"floor","","Returns the largest integer less than or equal to a number.",13,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",13,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",13,null],[10,"trunc","","Return the integer part of a number.",13,null],[10,"fract","","Returns the fractional part of a number.",13,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",13,null],[10,"signum","","Returns a number that represents the sign of `self`.",13,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",13,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",13,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",13,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",13,null],[10,"powi","","Raise a number to an integer power.",13,null],[10,"powf","","Raise a number to a floating point power.",13,null],[10,"sqrt","","Take the square root of a number.",13,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",13,null],[10,"exp2","","Returns `2^(self)`.",13,null],[10,"ln","","Returns the natural logarithm of the number.",13,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",13,null],[10,"log2","","Returns the base 2 logarithm of the number.",13,null],[10,"log10","","Returns the base 10 logarithm of the number.",13,null],[10,"max","","Returns the maximum of the two numbers.",13,null],[10,"min","","Returns the minimum of the two numbers.",13,null],[10,"abs_sub","","The positive difference of two numbers.",13,null],[10,"cbrt","","Take the cubic root of a number.",13,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",13,null],[10,"sin","","Computes the sine of a number (in radians).",13,null],[10,"cos","","Computes the cosine of a number (in radians).",13,null],[10,"tan","","Computes the tangent of a number (in radians).",13,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",13,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",13,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",13,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",13,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",13,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",13,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",13,null],[10,"sinh","","Hyperbolic sine function.",13,null],[10,"cosh","","Hyperbolic cosine function.",13,null],[10,"tanh","","Hyperbolic tangent function.",13,null],[10,"asinh","","Inverse hyperbolic sine function.",13,null],[10,"acosh","","Inverse hyperbolic cosine function.",13,null],[10,"atanh","","Inverse hyperbolic tangent function.",13,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",13,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",16,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",14,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",14,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",14,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",14,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",14,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",14,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",14,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",14,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",14,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",14,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",14,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",14,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",15,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",16,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"pow","num","",null,null],[5,"pow","num::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[0,"bigint","","",null,null],[0,"complex","","",null,null],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null],[0,"rational","","",null,null],[11,"new","","Creates and initializes a BigInt.",17,{"inputs":[{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",17,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",17,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",17,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",17,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",17,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",17,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",17,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",17,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",17,null],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`,\nnot including the sign.",17,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it&#39;s not negative.",17,null],[11,"checked_add","","",17,null],[11,"checked_sub","","",17,null],[11,"checked_mul","","",17,null],[11,"checked_div","","",17,null],[11,"hash","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"decode","","",18,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",18,null],[11,"eq","","",18,null],[11,"partial_cmp","","",18,null],[11,"cmp","","",18,null],[11,"default","","",18,{"inputs":[],"output":{"name":"biguint"}}],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"fmt","","",18,null],[11,"from_str","","",18,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",18,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",18,null],[11,"bitand","","",18,null],[11,"bitor","","",18,null],[11,"bitor","","",18,null],[11,"bitxor","","",18,null],[11,"bitxor","","",18,null],[11,"shl","","",18,null],[11,"shr","","",18,null],[11,"zero","","",18,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",18,null],[11,"one","","",18,{"inputs":[],"output":{"name":"biguint"}}],[11,"add","","",18,null],[11,"add","","",18,null],[11,"sub","","",18,null],[11,"sub","","",18,null],[11,"mul","","",18,null],[11,"mul","","",18,null],[11,"div","","",18,null],[11,"div","","",18,null],[11,"rem","","",18,null],[11,"rem","","",18,null],[11,"neg","","",18,null],[11,"checked_add","","",18,null],[11,"checked_sub","","",18,null],[11,"checked_mul","","",18,null],[11,"checked_div","","",18,null],[11,"div_rem","","",18,null],[11,"div_floor","","",18,null],[11,"mod_floor","","",18,null],[11,"div_mod_floor","","",18,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",18,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",18,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",18,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",18,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",18,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",18,null],[11,"to_i64","","",18,null],[11,"to_u64","","",18,null],[11,"to_f32","","",18,null],[11,"to_f64","","",18,null],[11,"from_i64","","",18,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",18,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",18,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",18,{"inputs":[{"name":"u64"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"u8"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"u16"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"u32"}],"output":{"name":"biguint"}}],[11,"from","","",18,{"inputs":[{"name":"usize"}],"output":{"name":"biguint"}}],[11,"to_biguint","","",17,null],[11,"to_biguint","","",18,null],[11,"new","","Creates and initializes a `BigUint`.",18,{"inputs":[{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",18,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",18,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",18,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",18,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",18,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",18,null],[11,"parse_bytes","","Creates and initializes a `BigUint`.",18,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",18,null],[11,"hash","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"decode","","",17,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",17,null],[11,"eq","","",17,null],[11,"partial_cmp","","",17,null],[11,"cmp","","",17,null],[11,"default","","",17,{"inputs":[],"output":{"name":"bigint"}}],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"fmt","","",17,null],[11,"from_str","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",17,null],[11,"shr","","",17,null],[11,"zero","","",17,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",17,null],[11,"one","","",17,{"inputs":[],"output":{"name":"bigint"}}],[11,"abs","","",17,null],[11,"abs_sub","","",17,null],[11,"signum","","",17,null],[11,"is_positive","","",17,null],[11,"is_negative","","",17,null],[11,"add","","",17,null],[11,"add","","",17,null],[11,"sub","","",17,null],[11,"sub","","",17,null],[11,"mul","","",17,null],[11,"mul","","",17,null],[11,"div","","",17,null],[11,"div","","",17,null],[11,"rem","","",17,null],[11,"rem","","",17,null],[11,"neg","","",17,null],[11,"checked_add","","",17,null],[11,"checked_sub","","",17,null],[11,"checked_mul","","",17,null],[11,"checked_div","","",17,null],[11,"div_rem","","",17,null],[11,"div_floor","","",17,null],[11,"mod_floor","","",17,null],[11,"div_mod_floor","","",17,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",17,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",17,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",17,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",17,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",17,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",17,null],[11,"to_i64","","",17,null],[11,"to_u64","","",17,null],[11,"to_f32","","",17,null],[11,"to_f64","","",17,null],[11,"from_i64","","",17,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",17,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",17,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",17,{"inputs":[{"name":"i64"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"i8"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"i16"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"i32"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"isize"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u64"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u8"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u16"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"u32"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"usize"}],"output":{"name":"bigint"}}],[11,"from","","",17,{"inputs":[{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"to_bigint","","",17,null],[11,"to_bigint","","",18,null],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"powf","","Raises `self` to a floating point power.",0,null],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,null],[11,"powc","","Raises `self` to a complex power.",0,null],[11,"expf","","Raises a floating point number to the complex power `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null]],"paths":[[3,"Complex"],[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[3,"BigInt"],[3,"BigUint"]]};
searchIndex["num_rational"] = {"doc":"Rational numbers","items":[[3,"Ratio","num_rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"from_integer","","Creates a ratio representing the integer `t`.",0,{"inputs":[{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",0,null],[11,"numer","","Gets an immutable reference to the numerator.",0,null],[11,"denom","","Gets an immutable reference to the denominator.",0,null],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",0,null],[11,"reduced","","Returns a `reduce`d copy of self.",0,null],[11,"recip","","Returns the reciprocal.",0,null],[11,"floor","","Rounds towards minus infinity.",0,null],[11,"ceil","","Rounds towards plus infinity.",0,null],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",0,null],[11,"trunc","","Rounds towards zero.",0,null],[11,"fract","","Returns the fractional part of a number.",0,null],[11,"pow","","Raises the ratio to the power of an exponent",0,null],[11,"from_float","","Converts a float into a rational number.",0,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"rem","","",0,null],[11,"rem","","",0,null],[11,"neg","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",0,null],[11,"abs_sub","","",0,null],[11,"signum","","",0,null],[11,"is_positive","","",0,null],[11,"is_negative","","",0,null],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,null],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null]],"paths":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["vecmath"] = {"doc":"A simple and generic library for vector math.","items":[[5,"col_mat3x2_mul_col","vecmath","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"col_mat3_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat4_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat2x3_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3x4_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat4_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat3x2_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"col_mat3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"col_mat4x3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"col_mat4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"row_mat2x3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"row_mat3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"row_mat3x4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"row_mat4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"mat2x3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix2x3"}}],[5,"mat3x2_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3x2"}}],[5,"mat3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3"}}],[5,"mat3x4_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3x4"}}],[5,"mat4x3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix4x3"}}],[5,"mat4_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix4"}}],[5,"vec2_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_sub","","Subtracts &#39;b&#39; from &#39;a&#39;.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_add","","Adds two vectors.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_add","","Adds two vectors.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_add","","Adds two vectors.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_cross","","Computes the cross product.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_cross","","Computes the cross product.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec2_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector2"},{"name":"t"}],"output":{"name":"vector2"}}],[5,"vec3_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector3"},{"name":"t"}],"output":{"name":"vector3"}}],[5,"vec4_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector4"},{"name":"t"}],"output":{"name":"vector4"}}],[5,"vec2_neg","","Negates the vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_neg","","Negates the vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_neg","","Negates the vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec3_dot_vec2","","Computes transformed vector component.",null,{"inputs":[{"name":"vector3"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec4_dot_vec3","","Computes transformed vector component.",null,{"inputs":[{"name":"vector4"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec3_dot_pos2","","Computes transformed position component.",null,{"inputs":[{"name":"vector3"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec4_dot_pos3","","Computes transformed position component.",null,{"inputs":[{"name":"vector4"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"row_mat2x3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"col_mat2x3_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"row_mat3x2_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3x2_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3x4_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3x4_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat4x3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat4x3_row","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat4_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat4_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"mat2x3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix3x2"}}],[5,"mat3x2_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix2x3"}}],[5,"mat3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix4x3"}}],[5,"mat4x3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix3x4"}}],[5,"mat4_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"col_mat3_transform","","Transforms a 3D vector through a matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4_transform","","Transforms a 4D vector through a matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"row_mat3_transform","","Transforms a 3D vector through a matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"row_mat4_transform","","Transforms a 4D vector through a matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"row_mat2x3_transform_pos2","","Transforms a 2D position through matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3x2_transform_pos2","","Transforms a 2D position through matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3_transform_pos2","","Transforms a 2D position through row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3_transform_pos2","","Transforms a 2D position through column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3x4_transform_pos3","","Transforms a 3D position through matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_transform_pos3","","Transforms a 3D position through matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"row_mat2x3_transform_vec2","","Transforms a 2D vector through matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3x2_transform_vec2","","Transforms a 2D vector through matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3_transform_vec2","","Transforms a 2D vector through row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3_transform_vec2","","Transforms a 2D vector through column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3x4_transform_vec3","","Transforms a 3D vector through matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_transform_vec3","","Transforms a 3D vector through matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"mat2x3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"t"}}],[5,"mat3x2_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"t"}}],[5,"mat3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"t"}}],[5,"mat3x4_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"t"}}],[5,"mat4x3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"t"}}],[5,"mat4_det","","Computes the determinant of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"t"}}],[5,"mat2x3_inv_det","","Computes inverse determinant of a 2x3 matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"t"}}],[5,"mat3x2_inv_det","","Computes inverse determinant of a 3x2 matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"t"}}],[5,"mat3_inv_det","","Computes inverse determinant of a 3x3 matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"t"}}],[5,"mat3x4_inv_det","","Computes inverse determinant of a 3x4 matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"t"}}],[5,"mat4x3_inv_det","","Computes inverse determinant of a 4x3 matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"t"}}],[5,"mat4_inv_det","","Computes the inverse determinant of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"t"}}],[5,"mat2x3_inv","","Computes the inverse of a 2x3 matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_inv","","Computes the inverse of a 3x2 matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_inv","","Computes the inverse of a 3x3 matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_inv","","Computes the inverse of a 3x4 matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_inv","","Computes the inverse of a 4x3 matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_inv","","Computes the inverse of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[0,"traits","","Various useful traits",null,null],[6,"Vector2","","A 2D vector.",null,null],[6,"Vector3","","A 3D vector.",null,null],[6,"Vector4","","A 4D vector.",null,null],[6,"Matrix2x3","","A 2x3 matrix.",null,null],[6,"Matrix3x2","","A 3x2 matrix.",null,null],[6,"Matrix3","","A 3x3 matrix.",null,null],[6,"Matrix3x4","","A 3x4 matrix.",null,null],[6,"Matrix4x3","","A 4x3 matrix.",null,null],[6,"Matrix4","","A 4x4 matrix.",null,null]],"paths":[]};
searchIndex["num_bigint"] = {"doc":"A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).","items":[[3,"BigUint","num_bigint","A big unsigned integer type.",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`&#39;s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num_bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num_bigint","A `BigDigit` is a `BigUint`&#39;s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,null],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,null],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,null],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,null],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,null],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,null],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,null],[11,"hash","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"decode","","",5,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,null],[11,"eq","","",5,null],[11,"partial_cmp","","",5,null],[11,"cmp","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"biguint"}}],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",5,null],[11,"bitand","","",5,null],[11,"bitor","","",5,null],[11,"bitor","","",5,null],[11,"bitxor","","",5,null],[11,"bitxor","","",5,null],[11,"shl","","",5,null],[11,"shr","","",5,null],[11,"zero","","",5,{"inputs":[],"output":{"name":"biguint"}}],[11,"is_zero","","",5,null],[11,"one","","",5,{"inputs":[],"output":{"name":"biguint"}}],[11,"add","","",5,null],[11,"add","","",5,null],[11,"sub","","",5,null],[11,"sub","","",5,null],[11,"mul","","",5,null],[11,"mul","","",5,null],[11,"div","","",5,null],[11,"div","","",5,null],[11,"rem","","",5,null],[11,"rem","","",5,null],[11,"neg","","",5,null],[11,"checked_add","","",5,null],[11,"checked_sub","","",5,null],[11,"checked_mul","","",5,null],[11,"checked_div","","",5,null],[11,"div_rem","","",5,null],[11,"div_floor","","",5,null],[11,"mod_floor","","",5,null],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,null],[11,"to_i64","","",5,null],[11,"to_u64","","",5,null],[11,"to_f32","","",5,null],[11,"to_f64","","",5,null],[11,"from_i64","","",5,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",5,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",5,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"to_biguint","","",6,null],[11,"to_biguint","","",5,null],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,null],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",5,null],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,null],[11,"hash","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"eq","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"neg","","Negate Sign value.",0,null],[11,"mul","","",0,null],[11,"hash","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"decode","","",6,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,null],[11,"eq","","",6,null],[11,"partial_cmp","","",6,null],[11,"cmp","","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"bigint"}}],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"from_str","","",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",6,null],[11,"shr","","",6,null],[11,"zero","","",6,{"inputs":[],"output":{"name":"bigint"}}],[11,"is_zero","","",6,null],[11,"one","","",6,{"inputs":[],"output":{"name":"bigint"}}],[11,"abs","","",6,null],[11,"abs_sub","","",6,null],[11,"signum","","",6,null],[11,"is_positive","","",6,null],[11,"is_negative","","",6,null],[11,"add","","",6,null],[11,"add","","",6,null],[11,"sub","","",6,null],[11,"sub","","",6,null],[11,"mul","","",6,null],[11,"mul","","",6,null],[11,"div","","",6,null],[11,"div","","",6,null],[11,"rem","","",6,null],[11,"rem","","",6,null],[11,"neg","","",6,null],[11,"checked_add","","",6,null],[11,"checked_sub","","",6,null],[11,"checked_mul","","",6,null],[11,"checked_div","","",6,null],[11,"div_rem","","",6,null],[11,"div_floor","","",6,null],[11,"mod_floor","","",6,null],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,null],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,null],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,null],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,null],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,null],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,null],[11,"to_i64","","",6,null],[11,"to_u64","","",6,null],[11,"to_f32","","",6,null],[11,"to_f64","","",6,null],[11,"from_i64","","",6,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f64","","",6,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"from","","",6,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"i8"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"i16"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"isize"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"u64"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"u8"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"u16"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","",6,{"inputs":[{"name":"biguint"}],"output":{"name":"self"}}],[11,"to_bigint","","",6,null],[11,"to_bigint","","",5,null],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"to_str_radix","","Returns the integer formatted as a string in the given radix.\n`radix` must be in the range `[2, 36]`.",6,null],[11,"sign","","Returns the sign of the `BigInt` as a `Sign`.",6,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"bits","","Determines the fewest bits necessary to express the `BigInt`,\nnot including the sign.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it&#39;s not negative.",6,null],[11,"checked_add","","",6,null],[11,"checked_sub","","",6,null],[11,"checked_mul","","",6,null],[11,"checked_div","","",6,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"from","","",1,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"clone","","",2,null],[11,"next","","",2,null],[11,"clone","","",3,null],[11,"next","","",3,null]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["input"] = {"doc":"A flexible structure for user interactions\nto be used in window frameworks and widgets libraries.","items":[[3,"AfterRenderArgs","input","After render arguments.",null,null],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",0,null],[3,"RenderArgs","","Render arguments",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",1,null],[12,"width","","The width of rendered area in points.",1,null],[12,"height","","The height of rendered area in points.",1,null],[12,"draw_width","","The width of rendered area in pixels.",1,null],[12,"draw_height","","The height of rendered area in pixels.",1,null],[3,"TouchArgs","","Touch arguments",null,null],[12,"device","","A unique identifier for touch device.",2,null],[12,"id","","A unique identifier for touch event.",2,null],[12,"x","","The x coordinate of the touch position, normalized 0..1.",2,null],[12,"y","","The y coordinate of the touch position, normalized 0..1.",2,null],[12,"z","","The z coordinate of the touch position, normalized 0..1.",2,null],[12,"px","","The x coordinate of the touch pressure direction.",2,null],[12,"py","","The y coordinate of the touch pressure direction.",2,null],[12,"pz","","The z coordinate of the touch pressure direction.",2,null],[12,"is_3d","","Whether the touch is in 3D.",2,null],[12,"touch","","The touch state.",2,null],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",null,null],[12,"dt","","Delta time in seconds.",3,null],[3,"EventId","","Used to identify events arguments provided by traits.",null,null],[12,"0","","",4,null],[4,"Event","","Adds render and update events to input events",null,null],[13,"Render","","Render graphics.",5,null],[13,"AfterRender","","After rendering and swapping buffers.",5,null],[13,"Update","","Update the state of the application.",5,null],[13,"Idle","","Do background tasks that can be done incrementally.",5,null],[13,"Input","","Input event.",5,null],[4,"Touch","","Stores the touch state.",null,null],[13,"Start","","The start of touch, for example\na finger pressed down on a touch screen.",6,null],[13,"Move","","The move of touch, for example\na finger moving while touching a touch screen.",6,null],[13,"End","","The end of touch, for example\ntaking a finger away from a touch screen.",6,null],[13,"Cancel","","The cancel of touch, for example\nthe window loses focus.",6,null],[4,"Button","","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",7,null],[13,"Mouse","","A mouse button.",7,null],[13,"Controller","","A controller button.",7,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",8,null],[13,"MouseRelative","","x and y in relative coordinates.",8,null],[13,"MouseScroll","","x and y in scroll ticks.",8,null],[13,"ControllerAxis","","controller axis move event.",8,null],[13,"Touch","","touch event.",8,null],[4,"Input","","Models input events.",null,null],[13,"Press","","Pressed a button.",9,null],[13,"Release","","Released a button.",9,null],[13,"Move","","Moved mouse cursor.",9,null],[13,"Text","","Text (usually from keyboard).",9,null],[13,"Resize","","Window got resized.",9,null],[13,"Focus","","Window gained or lost focus.",9,null],[13,"Cursor","","Window gained or lost cursor.",9,null],[0,"controller","","Back-end agnostic controller events.",null,null],[3,"ControllerButton","input::controller","Components of a controller button event. Not guaranteed consistent across\nbackends.",null,null],[12,"id","","Which controller was the button on.",10,null],[12,"button","","Which button was pressed.",10,null],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not guaranteed consistent across\nbackends.",null,null],[12,"id","","Which controller moved.",11,null],[12,"axis","","The axis that moved.",11,null],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though backends may use\na different range for various devices.",11,null],[8,"ControllerAxisEvent","","The position of a controller axis changed.",null,null],[10,"from_controller_axis_args","","Creates a controller axis event.",12,{"inputs":[{"name":"controlleraxisargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"controller_axis","","Calls closure if this is a controller axis event.",12,null],[11,"controller_axis_args","","Returns controller axis arguments.",12,null],[11,"hash","","",10,null],[11,"fmt","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"encode","","",10,null],[11,"decode","","",10,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",10,null],[11,"new","","Create a new ControllerButton object. Intended for use by backends when\nemitting events.",10,{"inputs":[{"name":"i32"},{"name":"u8"}],"output":{"name":"self"}}],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"encode","","",11,null],[11,"decode","","",11,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",11,null],[11,"new","","Create a new ControllerAxisArgs object. Intended for use by backends when\nemitting events.",11,{"inputs":[{"name":"i32"},{"name":"u8"},{"name":"f64"}],"output":{"name":"self"}}],[0,"keyboard","input","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","input::keyboard","",null,null],[4,"Key","","Represent a keyboard key.\nKeycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",null,null],[13,"Unknown","","",13,null],[13,"Backspace","","",13,null],[13,"Tab","","",13,null],[13,"Return","","",13,null],[13,"Escape","","",13,null],[13,"Space","","",13,null],[13,"Exclaim","","",13,null],[13,"Quotedbl","","",13,null],[13,"Hash","","",13,null],[13,"Dollar","","",13,null],[13,"Percent","","",13,null],[13,"Ampersand","","",13,null],[13,"Quote","","",13,null],[13,"LeftParen","","",13,null],[13,"RightParen","","",13,null],[13,"Asterisk","","",13,null],[13,"Plus","","",13,null],[13,"Comma","","",13,null],[13,"Minus","","",13,null],[13,"Period","","",13,null],[13,"Slash","","",13,null],[13,"D0","","",13,null],[13,"D1","","",13,null],[13,"D2","","",13,null],[13,"D3","","",13,null],[13,"D4","","",13,null],[13,"D5","","",13,null],[13,"D6","","",13,null],[13,"D7","","",13,null],[13,"D8","","",13,null],[13,"D9","","",13,null],[13,"Colon","","",13,null],[13,"Semicolon","","",13,null],[13,"Less","","",13,null],[13,"Equals","","",13,null],[13,"Greater","","",13,null],[13,"Question","","",13,null],[13,"At","","",13,null],[13,"LeftBracket","","",13,null],[13,"Backslash","","",13,null],[13,"RightBracket","","",13,null],[13,"Caret","","",13,null],[13,"Underscore","","",13,null],[13,"Backquote","","",13,null],[13,"A","","",13,null],[13,"B","","",13,null],[13,"C","","",13,null],[13,"D","","",13,null],[13,"E","","",13,null],[13,"F","","",13,null],[13,"G","","",13,null],[13,"H","","",13,null],[13,"I","","",13,null],[13,"J","","",13,null],[13,"K","","",13,null],[13,"L","","",13,null],[13,"M","","",13,null],[13,"N","","",13,null],[13,"O","","",13,null],[13,"P","","",13,null],[13,"Q","","",13,null],[13,"R","","",13,null],[13,"S","","",13,null],[13,"T","","",13,null],[13,"U","","",13,null],[13,"V","","",13,null],[13,"W","","",13,null],[13,"X","","",13,null],[13,"Y","","",13,null],[13,"Z","","",13,null],[13,"Delete","","",13,null],[13,"CapsLock","","",13,null],[13,"F1","","",13,null],[13,"F2","","",13,null],[13,"F3","","",13,null],[13,"F4","","",13,null],[13,"F5","","",13,null],[13,"F6","","",13,null],[13,"F7","","",13,null],[13,"F8","","",13,null],[13,"F9","","",13,null],[13,"F10","","",13,null],[13,"F11","","",13,null],[13,"F12","","",13,null],[13,"PrintScreen","","",13,null],[13,"ScrollLock","","",13,null],[13,"Pause","","",13,null],[13,"Insert","","",13,null],[13,"Home","","",13,null],[13,"PageUp","","",13,null],[13,"End","","",13,null],[13,"PageDown","","",13,null],[13,"Right","","",13,null],[13,"Left","","",13,null],[13,"Down","","",13,null],[13,"Up","","",13,null],[13,"NumLockClear","","",13,null],[13,"NumPadDivide","","",13,null],[13,"NumPadMultiply","","",13,null],[13,"NumPadMinus","","",13,null],[13,"NumPadPlus","","",13,null],[13,"NumPadEnter","","",13,null],[13,"NumPad1","","",13,null],[13,"NumPad2","","",13,null],[13,"NumPad3","","",13,null],[13,"NumPad4","","",13,null],[13,"NumPad5","","",13,null],[13,"NumPad6","","",13,null],[13,"NumPad7","","",13,null],[13,"NumPad8","","",13,null],[13,"NumPad9","","",13,null],[13,"NumPad0","","",13,null],[13,"NumPadPeriod","","",13,null],[13,"Application","","",13,null],[13,"Power","","",13,null],[13,"NumPadEquals","","",13,null],[13,"F13","","",13,null],[13,"F14","","",13,null],[13,"F15","","",13,null],[13,"F16","","",13,null],[13,"F17","","",13,null],[13,"F18","","",13,null],[13,"F19","","",13,null],[13,"F20","","",13,null],[13,"F21","","",13,null],[13,"F22","","",13,null],[13,"F23","","",13,null],[13,"F24","","",13,null],[13,"Execute","","",13,null],[13,"Help","","",13,null],[13,"Menu","","",13,null],[13,"Select","","",13,null],[13,"Stop","","",13,null],[13,"Again","","",13,null],[13,"Undo","","",13,null],[13,"Cut","","",13,null],[13,"Copy","","",13,null],[13,"Paste","","",13,null],[13,"Find","","",13,null],[13,"Mute","","",13,null],[13,"VolumeUp","","",13,null],[13,"VolumeDown","","",13,null],[13,"NumPadComma","","",13,null],[13,"NumPadEqualsAS400","","",13,null],[13,"AltErase","","",13,null],[13,"Sysreq","","",13,null],[13,"Cancel","","",13,null],[13,"Clear","","",13,null],[13,"Prior","","",13,null],[13,"Return2","","",13,null],[13,"Separator","","",13,null],[13,"Out","","",13,null],[13,"Oper","","",13,null],[13,"ClearAgain","","",13,null],[13,"CrSel","","",13,null],[13,"ExSel","","",13,null],[13,"NumPad00","","",13,null],[13,"NumPad000","","",13,null],[13,"ThousandsSeparator","","",13,null],[13,"DecimalSeparator","","",13,null],[13,"CurrencyUnit","","",13,null],[13,"CurrencySubUnit","","",13,null],[13,"NumPadLeftParen","","",13,null],[13,"NumPadRightParen","","",13,null],[13,"NumPadLeftBrace","","",13,null],[13,"NumPadRightBrace","","",13,null],[13,"NumPadTab","","",13,null],[13,"NumPadBackspace","","",13,null],[13,"NumPadA","","",13,null],[13,"NumPadB","","",13,null],[13,"NumPadC","","",13,null],[13,"NumPadD","","",13,null],[13,"NumPadE","","",13,null],[13,"NumPadF","","",13,null],[13,"NumPadXor","","",13,null],[13,"NumPadPower","","",13,null],[13,"NumPadPercent","","",13,null],[13,"NumPadLess","","",13,null],[13,"NumPadGreater","","",13,null],[13,"NumPadAmpersand","","",13,null],[13,"NumPadDblAmpersand","","",13,null],[13,"NumPadVerticalBar","","",13,null],[13,"NumPadDblVerticalBar","","",13,null],[13,"NumPadColon","","",13,null],[13,"NumPadHash","","",13,null],[13,"NumPadSpace","","",13,null],[13,"NumPadAt","","",13,null],[13,"NumPadExclam","","",13,null],[13,"NumPadMemStore","","",13,null],[13,"NumPadMemRecall","","",13,null],[13,"NumPadMemClear","","",13,null],[13,"NumPadMemAdd","","",13,null],[13,"NumPadMemSubtract","","",13,null],[13,"NumPadMemMultiply","","",13,null],[13,"NumPadMemDivide","","",13,null],[13,"NumPadPlusMinus","","",13,null],[13,"NumPadClear","","",13,null],[13,"NumPadClearEntry","","",13,null],[13,"NumPadBinary","","",13,null],[13,"NumPadOctal","","",13,null],[13,"NumPadDecimal","","",13,null],[13,"NumPadHexadecimal","","",13,null],[13,"LCtrl","","",13,null],[13,"LShift","","",13,null],[13,"LAlt","","",13,null],[13,"LGui","","",13,null],[13,"RCtrl","","",13,null],[13,"RShift","","",13,null],[13,"RAlt","","",13,null],[13,"RGui","","",13,null],[13,"Mode","","",13,null],[13,"AudioNext","","",13,null],[13,"AudioPrev","","",13,null],[13,"AudioStop","","",13,null],[13,"AudioPlay","","",13,null],[13,"AudioMute","","",13,null],[13,"MediaSelect","","",13,null],[13,"Www","","",13,null],[13,"Mail","","",13,null],[13,"Calculator","","",13,null],[13,"Computer","","",13,null],[13,"AcSearch","","",13,null],[13,"AcHome","","",13,null],[13,"AcBack","","",13,null],[13,"AcForward","","",13,null],[13,"AcStop","","",13,null],[13,"AcRefresh","","",13,null],[13,"AcBookmarks","","",13,null],[13,"BrightnessDown","","",13,null],[13,"BrightnessUp","","",13,null],[13,"DisplaySwitch","","",13,null],[13,"KbdIllumToggle","","",13,null],[13,"KbdIllumDown","","",13,null],[13,"KbdIllumUp","","",13,null],[13,"Eject","","",13,null],[13,"Sleep","","",13,null],[17,"NO_MODIFIER","","No modifier.",null,null],[17,"CTRL","","Ctrl.",null,null],[17,"SHIFT","","Shift.",null,null],[17,"ALT","","Alt.",null,null],[17,"GUI","","Gui.",null,null],[17,"CTRL_SHIFT","","Ctrl + Shift.",null,null],[17,"CTRL_ALT","","Ctrl + Alt.",null,null],[17,"CTRL_GUI","","Ctrl + Gui.",null,null],[17,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",null,null],[17,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",null,null],[17,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",null,null],[17,"SHIFT_ALT","","Shift + Alt.",null,null],[17,"SHIFT_GUI","","Shift + Gui.",null,null],[17,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",null,null],[17,"ALT_GUI","","Alt + Gui.",null,null],[11,"hash","","",14,null],[11,"cmp","","",14,null],[11,"partial_cmp","","",14,null],[11,"lt","","",14,null],[11,"le","","",14,null],[11,"gt","","",14,null],[11,"ge","","",14,null],[11,"clone","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"encode","","",14,null],[11,"decode","","",14,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",14,null],[11,"empty","","Returns an empty set of flags.",14,{"inputs":[],"output":{"name":"modifierkey"}}],[11,"all","","Returns the set containing all flags.",14,{"inputs":[],"output":{"name":"modifierkey"}}],[11,"bits","","Returns the raw value of the flags currently stored.",14,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",14,{"inputs":[{"name":"u8"}],"output":{"name":"modifierkey"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,null],[11,"is_all","","Returns `true` if all flags are currently set.",14,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",14,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",14,null],[11,"insert","","Inserts the specified flags in-place.",14,null],[11,"remove","","Removes the specified flags in-place.",14,null],[11,"toggle","","Toggles the specified flags in-place.",14,null],[11,"bitor","","Returns the union of the two sets of flags.",14,null],[11,"bitor_assign","","Adds the set of flags.",14,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",14,null],[11,"bitxor_assign","","Toggles the set of flags.",14,null],[11,"bitand","","Returns the intersection between the two sets of flags.",14,null],[11,"bitand_assign","","Disables all flags disabled in the set.",14,null],[11,"sub","","Returns the set difference of the two sets of flags.",14,null],[11,"sub_assign","","Disables all flags enabled in the set.",14,null],[11,"not","","Returns the complement of this set of flags.",14,null],[11,"extend","","",14,null],[11,"from_iter","","",14,{"inputs":[{"name":"t"}],"output":{"name":"modifierkey"}}],[11,"event","","Change modifier key state depending on input.",14,null],[11,"default","","",14,{"inputs":[],"output":{"name":"modifierkey"}}],[11,"hash","","",13,null],[11,"fmt","","",13,null],[11,"encode","","",13,null],[11,"decode","","",13,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",13,null],[11,"from","","",13,{"inputs":[{"name":"u32"}],"output":{"name":"key"}}],[11,"eq","","",13,null],[11,"partial_cmp","","",13,null],[11,"cmp","","",13,null],[11,"code","","Returns an id of the key",13,null],[0,"mouse","input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",15,null],[13,"Left","","Left mouse button.",15,null],[13,"Right","","Right mouse button.",15,null],[13,"Middle","","Middle mouse button.",15,null],[13,"X1","","Extra mouse button number 1.",15,null],[13,"X2","","Extra mouse button number 2.",15,null],[13,"Button6","","Mouse button number 6.",15,null],[13,"Button7","","Mouse button number 7.",15,null],[13,"Button8","","Mouse button number 8.",15,null],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",16,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",16,null],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",16,null],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",17,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",17,null],[11,"mouse_relative_args","","Returns mouse relative arguments.",17,null],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",18,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",18,null],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",18,null],[11,"fmt","","",15,null],[11,"hash","","",15,null],[11,"partial_cmp","","",15,null],[11,"cmp","","",15,null],[11,"eq","","",15,null],[11,"encode","","",15,null],[11,"decode","","",15,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",15,null],[11,"from","","",15,{"inputs":[{"name":"u32"}],"output":{"name":"mousebutton"}}],[0,"generic_event","input","Trait for generic events",null,null],[8,"GenericEvent","input::generic_event","Implemented by all events",null,null],[10,"event_id","","The id of this event.",19,null],[10,"with_args","","Calls closure with arguments",19,null],[10,"from_args","","Converts from arguments to `Self`",19,{"inputs":[{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","input","",9,null],[11,"with_args","","",9,null],[11,"from_args","","",9,{"inputs":[{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","","",5,null],[11,"with_args","","",5,null],[11,"from_args","","",5,{"inputs":[{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",20,null],[11,"eq","","",20,null],[11,"clone","","",20,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"from","","",5,{"inputs":[{"name":"renderargs"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"afterrenderargs"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"updateargs"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"idleargs"}],"output":{"name":"self"}}],[11,"from","","",5,{"inputs":[{"name":"input"}],"output":{"name":"self"}}],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"viewport","","Returns viewport information filling entire render area.",1,null],[11,"fmt","","",6,null],[11,"eq","","",6,null],[11,"encode","","",6,null],[11,"decode","","",6,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",6,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"encode","","",2,null],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",2,null],[11,"new","","Creates arguments for 2D touch.",2,null],[11,"new_3d","","Creates arguments for 3D touch.",2,null],[11,"position","","The position of the touch in 2D.",2,null],[11,"position_3d","","The position of the touch in 3D.",2,null],[11,"pressure","","The pressure magnitude, normalized 0..1.",2,null],[11,"pressure_3d","","The pressure vector in 3D.",2,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",21,{"inputs":[{"name":"afterrenderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"after_render","","Calls closure if this is an after render event.",21,null],[11,"after_render_args","","Returns after render arguments.",21,null],[8,"CursorEvent","","When window gets or loses cursor",null,null],[10,"from_cursor","","Creates a cursor event.",22,{"inputs":[{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"cursor","","Calls closure if this is a cursor event.",22,null],[11,"cursor_args","","Returns cursor arguments.",22,null],[8,"FocusEvent","","When window gets or loses focus",null,null],[10,"from_focused","","Creates a focus event.",23,{"inputs":[{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"focus","","Calls closure if this is a focus event.",23,null],[11,"focus_args","","Returns focus arguments.",23,null],[8,"IdleEvent","","When background tasks should be performed",null,null],[10,"from_idle_args","","Creates an idle event.",24,{"inputs":[{"name":"idleargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",24,{"inputs":[{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"idle","","Calls closure if this is an idle event.",24,null],[11,"idle_args","","Returns idle arguments.",24,null],[8,"PressEvent","","The press of a button",null,null],[10,"from_button","","Creates a press event.",25,{"inputs":[{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"press","","Calls closure if this is a press event.",25,null],[11,"press_args","","Returns press arguments.",25,null],[8,"ReleaseEvent","","The release of a button",null,null],[10,"from_button","","Creates a release event.",26,{"inputs":[{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"release","","Calls closure if this is a release event.",26,null],[11,"release_args","","Returns release arguments.",26,null],[8,"ResizeEvent","","When the window is resized",null,null],[10,"from_width_height","","Creates a resize event.",27,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"self"}],"output":{"name":"option"}}],[10,"resize","","Calls closure if this is a resize event.",27,null],[11,"resize_args","","Returns resize arguments.",27,null],[8,"RenderEvent","","When the next frame should be rendered",null,null],[10,"from_render_args","","Creates a render event.",28,{"inputs":[{"name":"renderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"render","","Calls closure if this is a render event.",28,null],[11,"render_args","","Returns render arguments.",28,null],[8,"TextEvent","","When receiving text from user, such as typing a character",null,null],[10,"from_text","","Creates a text event.",29,{"inputs":[{"name":"str"},{"name":"self"}],"output":{"name":"option"}}],[10,"text","","Calls closure if this is a text event.",29,null],[11,"text_args","","Returns text arguments.",29,null],[8,"TouchEvent","","When a touch is started, moved, ended or cancelled.",null,null],[10,"from_touch_args","","Creates a touch event.",30,{"inputs":[{"name":"touchargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"touch","","Calls closure if this is a touch event.",30,null],[11,"touch_args","","Returns touch arguments.",30,null],[8,"UpdateEvent","","When the application state should be updated",null,null],[10,"from_update_args","","Creates an update event.",31,{"inputs":[{"name":"updateargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",31,{"inputs":[{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"update","","Calls closure if this is an update event.",31,null],[11,"update_args","","Returns update arguments.",31,null],[11,"fmt","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",7,null],[11,"hash","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"encode","","",7,null],[11,"decode","","",7,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",7,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"encode","","",8,null],[11,"decode","","",8,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",8,null],[11,"fmt","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"encode","","",9,null],[11,"decode","","",9,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",9,null],[11,"from","","",7,{"inputs":[{"name":"key"}],"output":{"name":"self"}}],[11,"from","","",7,{"inputs":[{"name":"mousebutton"}],"output":{"name":"self"}}],[11,"from","","",7,{"inputs":[{"name":"controllerbutton"}],"output":{"name":"self"}}],[11,"from","","",8,{"inputs":[{"name":"controlleraxisargs"}],"output":{"name":"self"}}],[11,"from","","",9,{"inputs":[{"name":"motion"}],"output":{"name":"self"}}],[11,"after_render_args","","Returns after render arguments.",21,null],[11,"cursor_args","","Returns cursor arguments.",22,null],[11,"focus_args","","Returns focus arguments.",23,null],[11,"from_dt","","Creates an update event with delta time.",24,{"inputs":[{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",24,null],[11,"press_args","","Returns press arguments.",25,null],[11,"release_args","","Returns release arguments.",26,null],[11,"render_args","","Returns render arguments.",28,null],[11,"resize_args","","Returns resize arguments.",27,null],[11,"text_args","","Returns text arguments.",29,null],[11,"touch_args","","Returns touch arguments.",30,null],[11,"from_dt","","Creates an update event with delta time.",31,{"inputs":[{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",31,null]],"paths":[[3,"IdleArgs"],[3,"RenderArgs"],[3,"TouchArgs"],[3,"UpdateArgs"],[3,"EventId"],[4,"Event"],[4,"Touch"],[4,"Button"],[4,"Motion"],[4,"Input"],[3,"ControllerButton"],[3,"ControllerAxisArgs"],[8,"ControllerAxisEvent"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"GenericEvent"],[3,"AfterRenderArgs"],[8,"AfterRenderEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[8,"IdleEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"ResizeEvent"],[8,"RenderEvent"],[8,"TextEvent"],[8,"TouchEvent"],[8,"UpdateEvent"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","items":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"__dt"}],"output":{"name":"result"}}],[11,"encode","","",0,null],[11,"new","","Create a new Complex",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"i","","Returns imaginary unit",0,{"inputs":[],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn&#39;t necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",0,null],[11,"scale","","Multiplies `self` by the scalar `t`.",0,null],[11,"unscale","","Divides `self` by the scalar `t`.",0,null],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,null],[11,"inv","","Returns `1/self`",0,null],[11,"norm","","Calculate |self|",0,null],[11,"arg","","Calculate the principal Arg of self.",0,null],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",0,null],[11,"from_polar","","Convert a polar representation into a complex number.",0,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural logarithm.",0,null],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,null],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,null],[11,"powf","","Raises `self` to a floating point power.",0,null],[11,"log","","Returns the logarithm of `self` with respect to an arbitrary base.",0,null],[11,"powc","","Raises `self` to a complex power.",0,null],[11,"expf","","Raises a floating point number to the complex power `self`.",0,null],[11,"sin","","Computes the sine of `self`.",0,null],[11,"cos","","Computes the cosine of `self`.",0,null],[11,"tan","","Computes the tangent of `self`.",0,null],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,null],[11,"acos","","Computes the principal value of the inverse cosine of `self`.",0,null],[11,"atan","","Computes the principal value of the inverse tangent of `self`.",0,null],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,null],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,null],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,null],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of `self`.",0,null],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine of `self`.",0,null],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent of `self`.",0,null],[11,"is_nan","","Checks if the given complex number is NaN",0,null],[11,"is_infinite","","Checks if the given complex number is infinite",0,null],[11,"is_finite","","Checks if the given complex number is finite",0,null],[11,"is_normal","","Checks if the given complex number is normal",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"div","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"zero","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"is_zero","","",0,null],[11,"one","","",0,{"inputs":[],"output":{"name":"complex"}}],[11,"fmt","","",0,null]],"paths":[[3,"Complex"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["viewport"] = {"doc":"A library for storing viewport information","items":[[3,"Viewport","viewport","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels.\n```[x, y, width height]``` where ```(x, y)``` is lower left corner.",0,null],[12,"draw_size","","The size of frame buffer in pixels.",0,null],[12,"window_size","","The size of window in points.",0,null],[11,"clone","","",0,null],[11,"abs_transform","","Computes absolute transform for 2D graphics,\nwhich uses a row major 2x3 matrix.\nThe origin is in the upper left corner of the viewport rectangle.\nThe x axis points to the right, and the y axis points down.\nThe units are in points (window coordinates).",0,null]],"paths":[[3,"Viewport"]]};
searchIndex["float"] = {"doc":"Traits for generic floats in game programming","items":[[8,"Float","float","Convenience trait for floats.",null,null],[8,"Min","","Minimum value.",null,null],[10,"min","","Returns the minimum value of self or other.",0,null],[8,"Max","","Maximum value.",null,null],[10,"max","","Returns the maximum value of self or other.",1,null],[8,"Signum","","The sign of the number.",null,null],[10,"signum","","Returns number representing the sign of self",2,null],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",3,{"inputs":[],"output":{"name":"self"}}],[10,"_180","","Returns radians corresponding to 180 degrees.",3,{"inputs":[],"output":{"name":"self"}}],[10,"_360","","Returns radians corresponding to 360 degrees.",3,{"inputs":[],"output":{"name":"self"}}],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",3,null],[10,"rad_to_deg","","Convert a value to degrees from radians.\nEquivalent to ```value * (180 / π)```.",3,null],[8,"One","","Number 1.",null,null],[10,"one","","Returns 1.",4,{"inputs":[],"output":{"name":"self"}}],[8,"Zero","","Number 0.",null,null],[10,"zero","","Returns 0.",5,{"inputs":[],"output":{"name":"self"}}],[8,"Sqrt","","Square root.",null,null],[10,"sqrt","","Returns square root.",6,null],[8,"Trig","","Basic trigonometry functions",null,null],[10,"sin","","Returns sine of self",7,null],[10,"cos","","Returns cosine of self",7,null],[10,"tan","","Returns tangent of self",7,null],[8,"Cast","","Casts into another type.",null,null],[10,"cast","","Casts into other type.",8,null],[8,"FromPrimitive","","Trait for converting from different numeric types",null,null],[10,"from_f64","","from a f64",9,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[10,"from_f32","","from a f32",9,{"inputs":[{"name":"f32"}],"output":{"name":"self"}}],[10,"from_isize","","from a isze",9,{"inputs":[{"name":"isize"}],"output":{"name":"self"}}],[10,"from_u32","","from a u32",9,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[10,"from_i32","","from a i32",9,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags!","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"fmt","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"eq","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"fmt","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"fmt","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",25,null],[10,"read_nil","","",25,null],[10,"read_usize","","",25,null],[10,"read_u64","","",25,null],[10,"read_u32","","",25,null],[10,"read_u16","","",25,null],[10,"read_u8","","",25,null],[10,"read_isize","","",25,null],[10,"read_i64","","",25,null],[10,"read_i32","","",25,null],[10,"read_i16","","",25,null],[10,"read_i8","","",25,null],[10,"read_bool","","",25,null],[10,"read_f64","","",25,null],[10,"read_f32","","",25,null],[10,"read_char","","",25,null],[10,"read_str","","",25,null],[10,"read_enum","","",25,null],[10,"read_enum_variant","","",25,null],[10,"read_enum_variant_arg","","",25,null],[10,"read_enum_struct_variant","","",25,null],[10,"read_enum_struct_variant_field","","",25,null],[10,"read_struct","","",25,null],[10,"read_struct_field","","",25,null],[10,"read_tuple","","",25,null],[10,"read_tuple_arg","","",25,null],[10,"read_tuple_struct","","",25,null],[10,"read_tuple_struct_arg","","",25,null],[10,"read_option","","",25,null],[10,"read_seq","","",25,null],[10,"read_seq_elt","","",25,null],[10,"read_map","","",25,null],[10,"read_map_elt_key","","",25,null],[10,"read_map_elt_val","","",25,null],[10,"error","","",25,null],[8,"Encoder","","",null,null],[16,"Error","","",26,null],[10,"emit_nil","","",26,null],[10,"emit_usize","","",26,null],[10,"emit_u64","","",26,null],[10,"emit_u32","","",26,null],[10,"emit_u16","","",26,null],[10,"emit_u8","","",26,null],[10,"emit_isize","","",26,null],[10,"emit_i64","","",26,null],[10,"emit_i32","","",26,null],[10,"emit_i16","","",26,null],[10,"emit_i8","","",26,null],[10,"emit_bool","","",26,null],[10,"emit_f64","","",26,null],[10,"emit_f32","","",26,null],[10,"emit_char","","",26,null],[10,"emit_str","","",26,null],[10,"emit_enum","","",26,null],[10,"emit_enum_variant","","",26,null],[10,"emit_enum_variant_arg","","",26,null],[10,"emit_enum_struct_variant","","",26,null],[10,"emit_enum_struct_variant_field","","",26,null],[10,"emit_struct","","",26,null],[10,"emit_struct_field","","",26,null],[10,"emit_tuple","","",26,null],[10,"emit_tuple_arg","","",26,null],[10,"emit_tuple_struct","","",26,null],[10,"emit_tuple_struct_arg","","",26,null],[10,"emit_option","","",26,null],[10,"emit_option_none","","",26,null],[10,"emit_option_some","","",26,null],[10,"emit_seq","","",26,null],[10,"emit_seq_elt","","",26,null],[10,"emit_map","","",26,null],[10,"emit_map_elt_key","","",26,null],[10,"emit_map_elt_val","","",26,null],[8,"Decodable","","",null,null],[10,"decode","","",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",28,null],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",29,null],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"linger","","",null,null],[12,"l_onoff","","",13,null],[12,"l_linger","","",13,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",14,null],[12,"sa_data","","",14,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",15,null],[12,"sin_port","","",15,null],[12,"sin_addr","","",15,null],[12,"sin_zero","","",15,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",16,null],[12,"sin6_port","","",16,null],[12,"sin6_flowinfo","","",16,null],[12,"sin6_addr","","",16,null],[12,"sin6_scope_id","","",16,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",17,null],[12,"sun_path","","",17,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",18,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",19,null],[12,"ai_family","","",19,null],[12,"ai_socktype","","",19,null],[12,"ai_protocol","","",19,null],[12,"ai_addrlen","","",19,null],[12,"ai_addr","","",19,null],[12,"ai_canonname","","",19,null],[12,"ai_next","","",19,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",20,null],[12,"nl_pid","","",20,null],[12,"nl_groups","","",20,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",21,null],[12,"sll_protocol","","",21,null],[12,"sll_ifindex","","",21,null],[12,"sll_hatype","","",21,null],[12,"sll_pkttype","","",21,null],[12,"sll_halen","","",21,null],[12,"sll_addr","","",21,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",22,null],[12,"tm_min","","",22,null],[12,"tm_hour","","",22,null],[12,"tm_mday","","",22,null],[12,"tm_mon","","",22,null],[12,"tm_year","","",22,null],[12,"tm_wday","","",22,null],[12,"tm_yday","","",22,null],[12,"tm_isdst","","",22,null],[12,"tm_gmtoff","","",22,null],[12,"tm_zone","","",22,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",23,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",24,null],[12,"dli_fbase","","",24,null],[12,"dli_sname","","",24,null],[12,"dli_saddr","","",24,null],[3,"epoll_event","","",null,null],[12,"events","","",25,null],[12,"u64","","",25,null],[3,"utsname","","",null,null],[12,"sysname","","",26,null],[12,"nodename","","",26,null],[12,"release","","",26,null],[12,"version","","",26,null],[12,"machine","","",26,null],[12,"domainname","","",26,null],[3,"lconv","","",null,null],[12,"decimal_point","","",27,null],[12,"thousands_sep","","",27,null],[12,"grouping","","",27,null],[12,"int_curr_symbol","","",27,null],[12,"currency_symbol","","",27,null],[12,"mon_decimal_point","","",27,null],[12,"mon_thousands_sep","","",27,null],[12,"mon_grouping","","",27,null],[12,"positive_sign","","",27,null],[12,"negative_sign","","",27,null],[12,"int_frac_digits","","",27,null],[12,"frac_digits","","",27,null],[12,"p_cs_precedes","","",27,null],[12,"p_sep_by_space","","",27,null],[12,"n_cs_precedes","","",27,null],[12,"n_sep_by_space","","",27,null],[12,"p_sign_posn","","",27,null],[12,"n_sign_posn","","",27,null],[12,"int_p_cs_precedes","","",27,null],[12,"int_p_sep_by_space","","",27,null],[12,"int_n_cs_precedes","","",27,null],[12,"int_n_sep_by_space","","",27,null],[12,"int_p_sign_posn","","",27,null],[12,"int_n_sign_posn","","",27,null],[3,"dirent","","",null,null],[12,"d_ino","","",28,null],[12,"d_off","","",28,null],[12,"d_reclen","","",28,null],[12,"d_type","","",28,null],[12,"d_name","","",28,null],[3,"dirent64","","",null,null],[12,"d_ino","","",29,null],[12,"d_off","","",29,null],[12,"d_reclen","","",29,null],[12,"d_type","","",29,null],[12,"d_name","","",29,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",30,null],[12,"rlim_max","","",30,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",31,null],[12,"gl_pathv","","",31,null],[12,"gl_offs","","",31,null],[12,"gl_flags","","",31,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",32,null],[12,"ifa_name","","",32,null],[12,"ifa_flags","","",32,null],[12,"ifa_addr","","",32,null],[12,"ifa_netmask","","",32,null],[12,"ifa_ifu","","",32,null],[12,"ifa_data","","",32,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",33,null],[12,"pw_passwd","","",33,null],[12,"pw_uid","","",33,null],[12,"pw_gid","","",33,null],[12,"pw_gecos","","",33,null],[12,"pw_dir","","",33,null],[12,"pw_shell","","",33,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",34,null],[12,"f_frsize","","",34,null],[12,"f_blocks","","",34,null],[12,"f_bfree","","",34,null],[12,"f_bavail","","",34,null],[12,"f_files","","",34,null],[12,"f_ffree","","",34,null],[12,"f_favail","","",34,null],[12,"f_fsid","","",34,null],[12,"f_flag","","",34,null],[12,"f_namemax","","",34,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",35,null],[12,"dqb_bsoftlimit","","",35,null],[12,"dqb_curspace","","",35,null],[12,"dqb_ihardlimit","","",35,null],[12,"dqb_isoftlimit","","",35,null],[12,"dqb_curinodes","","",35,null],[12,"dqb_btime","","",35,null],[12,"dqb_itime","","",35,null],[12,"dqb_valid","","",35,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",36,null],[12,"ssi_errno","","",36,null],[12,"ssi_code","","",36,null],[12,"ssi_pid","","",36,null],[12,"ssi_uid","","",36,null],[12,"ssi_fd","","",36,null],[12,"ssi_tid","","",36,null],[12,"ssi_band","","",36,null],[12,"ssi_overrun","","",36,null],[12,"ssi_trapno","","",36,null],[12,"ssi_status","","",36,null],[12,"ssi_int","","",36,null],[12,"ssi_ptr","","",36,null],[12,"ssi_utime","","",36,null],[12,"ssi_stime","","",36,null],[12,"ssi_addr","","",36,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",37,null],[12,"mq_maxmsg","","",37,null],[12,"mq_msgsize","","",37,null],[12,"mq_curmsgs","","",37,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",38,null],[12,"sa_mask","","",38,null],[12,"sa_flags","","",38,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",39,null],[12,"ss_flags","","",39,null],[12,"ss_size","","",39,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",40,null],[12,"si_errno","","",40,null],[12,"si_code","","",40,null],[12,"_pad","","",40,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"ucred","","",null,null],[12,"pid","","",42,null],[12,"uid","","",42,null],[12,"gid","","",42,null],[3,"statfs","","",null,null],[12,"f_type","","",43,null],[12,"f_bsize","","",43,null],[12,"f_blocks","","",43,null],[12,"f_bfree","","",43,null],[12,"f_bavail","","",43,null],[12,"f_files","","",43,null],[12,"f_ffree","","",43,null],[12,"f_fsid","","",43,null],[12,"f_namelen","","",43,null],[12,"f_frsize","","",43,null],[3,"msghdr","","",null,null],[12,"msg_name","","",44,null],[12,"msg_namelen","","",44,null],[12,"msg_iov","","",44,null],[12,"msg_iovlen","","",44,null],[12,"msg_control","","",44,null],[12,"msg_controllen","","",44,null],[12,"msg_flags","","",44,null],[3,"termios","","",null,null],[12,"c_iflag","","",45,null],[12,"c_oflag","","",45,null],[12,"c_cflag","","",45,null],[12,"c_lflag","","",45,null],[12,"c_line","","",45,null],[12,"c_cc","","",45,null],[12,"c_ispeed","","",45,null],[12,"c_ospeed","","",45,null],[3,"flock","","",null,null],[12,"l_type","","",46,null],[12,"l_whence","","",46,null],[12,"l_start","","",46,null],[12,"l_len","","",46,null],[12,"l_pid","","",46,null],[3,"ipc_perm","","",null,null],[12,"__key","","",47,null],[12,"uid","","",47,null],[12,"gid","","",47,null],[12,"cuid","","",47,null],[12,"cgid","","",47,null],[12,"mode","","",47,null],[12,"__seq","","",47,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",48,null],[12,"shm_segsz","","",48,null],[12,"shm_atime","","",48,null],[12,"shm_dtime","","",48,null],[12,"shm_ctime","","",48,null],[12,"shm_cpid","","",48,null],[12,"shm_lpid","","",48,null],[12,"shm_nattch","","",48,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",49,null],[12,"loads","","",49,null],[12,"totalram","","",49,null],[12,"freeram","","",49,null],[12,"sharedram","","",49,null],[12,"bufferram","","",49,null],[12,"totalswap","","",49,null],[12,"freeswap","","",49,null],[12,"procs","","",49,null],[12,"pad","","",49,null],[12,"totalhigh","","",49,null],[12,"freehigh","","",49,null],[12,"mem_unit","","",49,null],[12,"_f","","",49,null],[3,"stat","","",null,null],[12,"st_dev","","",50,null],[12,"st_ino","","",50,null],[12,"st_nlink","","",50,null],[12,"st_mode","","",50,null],[12,"st_uid","","",50,null],[12,"st_gid","","",50,null],[12,"st_rdev","","",50,null],[12,"st_size","","",50,null],[12,"st_blksize","","",50,null],[12,"st_blocks","","",50,null],[12,"st_atime","","",50,null],[12,"st_atime_nsec","","",50,null],[12,"st_mtime","","",50,null],[12,"st_mtime_nsec","","",50,null],[12,"st_ctime","","",50,null],[12,"st_ctime_nsec","","",50,null],[3,"stat64","","",null,null],[12,"st_dev","","",51,null],[12,"st_ino","","",51,null],[12,"st_nlink","","",51,null],[12,"st_mode","","",51,null],[12,"st_uid","","",51,null],[12,"st_gid","","",51,null],[12,"st_rdev","","",51,null],[12,"st_size","","",51,null],[12,"st_blksize","","",51,null],[12,"st_blocks","","",51,null],[12,"st_atime","","",51,null],[12,"st_atime_nsec","","",51,null],[12,"st_mtime","","",51,null],[12,"st_mtime_nsec","","",51,null],[12,"st_ctime","","",51,null],[12,"st_ctime_nsec","","",51,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",52,null],[12,"exponent","","",52,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",53,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",54,null],[12,"swd","","",54,null],[12,"ftw","","",54,null],[12,"fop","","",54,null],[12,"rip","","",54,null],[12,"rdp","","",54,null],[12,"mxcsr","","",54,null],[12,"mxcr_mask","","",54,null],[12,"_st","","",54,null],[12,"_xmm","","",54,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",55,null],[12,"fpregs","","",55,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",56,null],[12,"uc_link","","",56,null],[12,"uc_stack","","",56,null],[12,"uc_mcontext","","",56,null],[12,"uc_sigmask","","",56,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"mkfifoat","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",57,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",58,null],[11,"clone","","",49,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",59,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",64,null],[11,"clone","","",37,null],[11,"clone","","",65,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",66,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sysinfo"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["interpolation"] = {"doc":"Interpolation algorithms.","items":[[4,"EaseFunction","interpolation","",null,null],[13,"QuadraticIn","","",0,null],[13,"QuadraticOut","","",0,null],[13,"QuadraticInOut","","",0,null],[13,"CubicIn","","",0,null],[13,"CubicOut","","",0,null],[13,"CubicInOut","","",0,null],[13,"QuarticIn","","",0,null],[13,"QuarticOut","","",0,null],[13,"QuarticInOut","","",0,null],[13,"QuinticIn","","",0,null],[13,"QuinticOut","","",0,null],[13,"QuinticInOut","","",0,null],[13,"SineIn","","",0,null],[13,"SineOut","","",0,null],[13,"SineInOut","","",0,null],[13,"CircularIn","","",0,null],[13,"CircularOut","","",0,null],[13,"CircularInOut","","",0,null],[13,"ExponentialIn","","",0,null],[13,"ExponentialOut","","",0,null],[13,"ExponentialInOut","","",0,null],[13,"ElasticIn","","",0,null],[13,"ElasticOut","","",0,null],[13,"ElasticInOut","","",0,null],[13,"BackIn","","",0,null],[13,"BackOut","","",0,null],[13,"BackInOut","","",0,null],[13,"BounceIn","","",0,null],[13,"BounceOut","","",0,null],[13,"BounceInOut","","",0,null],[5,"lerp","","Performs linear interpolation.\nA linear interpolation consists of two states &#39;a&#39; and &#39;b&#39;.\nThe &#39;t&#39; variable is a factor between 0 and 1 that\ngives weight to &#39;a&#39; or &#39;b&#39;.\nWhen &#39;t&#39; is zero then &#39;a&#39; has full weight.\nWhen &#39;t&#39; is one then &#39;b&#39; has full weight.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"scalar"}],"output":{"name":"t"}}],[5,"quad_bez","","Performs quadratic beziér interpolation.\nThis is done by nesting linear interpolations.\nFor more information, see:",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"scalar"}],"output":{"name":"t"}}],[5,"cub_bez","","Performs cubic beziér interpolation.\nThis is done by interpolation between two quadratic beziér.\nFor more information, see:",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"scalar"}],"output":{"name":"t"}}],[11,"eq","","",0,null],[11,"clone","","",0,null],[8,"Ease","","",null,null],[10,"calc","","Calculate the eased value, normalized",1,null],[10,"quadratic_in","","",1,null],[10,"quadratic_out","","",1,null],[10,"quadratic_in_out","","",1,null],[10,"cubic_in","","",1,null],[10,"cubic_out","","",1,null],[10,"cubic_in_out","","",1,null],[10,"quartic_in","","",1,null],[10,"quartic_out","","",1,null],[10,"quartic_in_out","","",1,null],[10,"quintic_in","","",1,null],[10,"quintic_out","","",1,null],[10,"quintic_in_out","","",1,null],[10,"sine_in","","",1,null],[10,"sine_out","","",1,null],[10,"sine_in_out","","",1,null],[10,"circular_in","","",1,null],[10,"circular_out","","",1,null],[10,"circular_in_out","","",1,null],[10,"exponential_in","","",1,null],[10,"exponential_out","","",1,null],[10,"exponential_in_out","","",1,null],[10,"elastic_in","","",1,null],[10,"elastic_out","","",1,null],[10,"elastic_in_out","","",1,null],[10,"back_in","","",1,null],[10,"back_out","","",1,null],[10,"back_in_out","","",1,null],[10,"bounce_in","","",1,null],[10,"bounce_out","","",1,null],[10,"bounce_in_out","","",1,null],[8,"Spatial","","Used for interpolation over spatial structures.",null,null],[16,"Scalar","","The scalar type.",2,null],[10,"add","","Add",2,null],[10,"sub","","Subtract",2,null],[10,"scale","","Scales with a scalar.",2,null]],"paths":[[4,"EaseFunction"],[8,"Ease"],[8,"Spatial"]]};
searchIndex["texture"] = {"doc":"A generic library for textures.","items":[[3,"TextureSettings","texture","Texture creation parameters.",null,null],[4,"Format","","Texture format.",null,null],[13,"Rgba8","","`(red, green, blue, alpha)` with values 0-255.",0,null],[4,"Filter","","Sampling filter",null,null],[13,"Linear","","A Weighted Linear Blend",1,null],[13,"Nearest","","Nearest Texel",1,null],[0,"ops","","Image operations for textures.",null,null],[5,"flip_vertical","texture::ops","Flips the image vertically.",null,null],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",null,null],[8,"ImageSize","texture","Implemented by all images to be used with generic algorithms.",null,null],[10,"get_size","","Get the image size.",2,null],[11,"get_width","","Gets the image width.",2,null],[11,"get_height","","Gets the image height.",2,null],[8,"CreateTexture","","Implemented by textures for creation.",null,null],[16,"Error","","The error when creating texture.",3,null],[10,"create","","Create texture from memory.",3,null],[8,"UpdateTexture","","Implemented by textures for updating.",null,null],[16,"Error","","The error when updating texture.",4,null],[10,"update","","Update texture.",4,null],[11,"new","","Create default settings.",5,{"inputs":[],"output":{"name":"texturesettings"}}],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color space.",5,null],[11,"set_convert_gamma","","Sets convert gamma.",5,null],[11,"convert_gamma","","Sets convert gamma.",5,null],[11,"get_compress","","Gets wheter compress on the GPU.",5,null],[11,"set_compress","","Sets compress.",5,null],[11,"compress","","Sets compress.",5,null],[11,"get_generate_mipmap","","Gets generate mipmap.",5,null],[11,"set_generate_mipmap","","Sets generate mipmap.",5,null],[11,"generate_mipmap","","Sets generate mipmap.",5,null],[11,"get_min","","Gets minify filter.",5,null],[11,"set_min","","Sets minify filter.",5,null],[11,"min","","Sets minify filter.",5,null],[11,"get_mag","","Gets magnify filter",5,null],[11,"set_mag","","Sets magnify filter",5,null],[11,"mag","","Sets magnify filter",5,null],[11,"get_mipmap","","Gets minify mipmap filter",5,null],[11,"set_mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true.",5,null],[11,"mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true",5,null],[11,"get_filter","","Returns the min and mag filter",5,null],[11,"set_filter","","Sets the min and mag filter",5,null],[11,"filter","","Sets the min and mag filter",5,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null]],"paths":[[4,"Format"],[4,"Filter"],[8,"ImageSize"],[8,"CreateTexture"],[8,"UpdateTexture"],[3,"TextureSettings"]]};
searchIndex["fixedbitset"] = {"doc":"**FixedBitSet** is a simple fixed size set of bits.","items":[[3,"FixedBitSet","fixedbitset","**FixedBitSet** is a simple fixed size set of bits that can\nbe enabled (1 / **true**) or disabled (0 / **false**).",null,null],[11,"hash","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"with_capacity","","Create a new **FixedBitSet** with a specific number of bits,\nall initially clear.",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"grow","","Grow capacity to **bits**, all new bits initialized to zero",0,null],[11,"len","","Return the length of the **FixedBitSet** in bits.",0,null],[11,"contains","","Return **true** if the bit is enabled in the **FixedBitSet**,\n**false** otherwise.",0,null],[11,"clear","","Clear all bits.",0,null],[11,"insert","","**Panics** if **bit** is out of bounds.",0,null],[11,"set","","**Panics** if **bit** is out of bounds.",0,null],[11,"as_slice","","View the bitset as a slice of `u32` blocks",0,null],[11,"as_mut_slice","","View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last\nwill cause `contains` to return potentially incorrect results for bits past the bitlength.",0,null],[11,"clone","","",0,null],[11,"index","","",0,null]],"paths":[[3,"FixedBitSet"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[5,"div_rem","num_integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null]],"paths":[[8,"Integer"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",12,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",12,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",12,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",12,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",12,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",12,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",12,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",12,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",12,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",12,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",12,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",12,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",13,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",14,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",15,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",15,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",15,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",15,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",15,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",15,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",15,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",15,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",15,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",15,null],[10,"swap_bytes","","Reverses the byte order of the integer.",15,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",15,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",15,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",15,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",15,null],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",16,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",16,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["read_color"] = {"doc":"A simple library for reading hex colors.","items":[[5,"char_to_hex","read_color","Converts a character into a u8 value.",null,{"inputs":[{"name":"char"}],"output":{"name":"option"}}],[5,"hex","","Reads a hex value from an iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"hex_pair","","Reads a pair of hex values, joining them in value range 0-255.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgb","","Reads RGB colors from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgba","","Reads RGBA colors from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgb_maybe_a","","Reads RGB with optional alpha from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}]],"paths":[]};
initSearch(searchIndex);
