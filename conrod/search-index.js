var searchIndex = {};
searchIndex['conrod'] = {"items":[[0,"","conrod","",null,null],[0,"color","","",null,null],[11,"complement","elmesque::color","Produce a complementary color. The two colors will accent each other. This is the same as\nrotating the hue by 180 degrees.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"luminance","","Calculate and return the luminance of the Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"plain_contrast","","Return either black or white, depending which contrasts the Color the most. This will be\nuseful for determining a readable color for text on any given background Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"to_hsl","","Extract the components of a color in the HSL format.",0,{"inputs":[{"name":"color"}],"output":{"name":"hsla"}}],[11,"to_rgb","","Extract the components of a color in the RGB format.",0,{"inputs":[{"name":"color"}],"output":{"name":"rgba"}}],[11,"to_fsa","","Extract the components of a color in the RGB format within a fixed-size array.",0,null],[11,"to_byte_fsa","","Same as `to_fsa`, except r, g, b and a are represented in byte form.",0,null],[11,"to_hex","","Return the hex representation of this color in the format #RRGGBBAA\ne.g. `Color(1.0, 0.0, 5.0, 1.0) == \"#FF0080FF\"`",0,{"inputs":[{"name":"color"}],"output":{"name":"string"}}],[11,"with_luminance","","Return the same color but with the given luminance.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"alpha","","Return the same color but with the alpha multiplied by the given alpha.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"with_alpha","","Return the same color but with the given alpha.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"highlighted","","Return a highlighted version of the current Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"clicked","","Return a clicked version of the current Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"invert","","Return the Color's invert.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"red","","Return the red value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"green","","Return the green value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"blue","","Return the blue value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"set_red","","Set the red value.",0,null],[11,"set_green","","Set the green value.",0,null],[11,"set_blue","","Set the blue value.",0,null],[11,"decode","","",0,{"inputs":[{"name":"color"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"color"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"color"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"eq","","",0,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"hsla"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"hsla"}],"output":{"name":"hsla"}}],[11,"fmt","","",2,{"inputs":[{"name":"rgba"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"rgba"}],"output":{"name":"rgba"}}],[11,"fmt","","",3,{"inputs":[{"name":"gradient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"gradient"}],"output":{"name":"gradient"}}],[11,"fmt","elmesque::element","",4,{"inputs":[{"name":"properties"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"properties"}],"output":{"name":"properties"}}],[11,"fmt","","",5,{"inputs":[{"name":"element"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"element"}],"output":{"name":"element"}}],[11,"width","","Create an `Element` with a given width.",5,{"inputs":[{"name":"element"},{"name":"i32"}],"output":{"name":"element"}}],[11,"height","","Create an `Element` with a given height.",5,{"inputs":[{"name":"element"},{"name":"i32"}],"output":{"name":"element"}}],[11,"size","","Create an `Element` with a given size.",5,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"}],"output":{"name":"element"}}],[11,"opacity","","Create an `Element` with a given opacity.",5,{"inputs":[{"name":"element"},{"name":"f32"}],"output":{"name":"element"}}],[11,"color","","Create an `Element with a given background color.",5,{"inputs":[{"name":"element"},{"name":"color"}],"output":{"name":"element"}}],[11,"crop","","Crops an `Element` with the given rectangle.",5,{"inputs":[{"name":"element"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"element"}}],[11,"container","","Put an element in a container. This lets you position the element really easily, and there are\ntons of ways to set the `Position`.",5,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"},{"name":"position"}],"output":{"name":"element"}}],[11,"clear","","Put an element in a cleared wrapper. The color provided will be the color that clears the\nscreen before rendering the contained element.",5,{"inputs":[{"name":"element"},{"name":"color"}],"output":{"name":"element"}}],[11,"above","","Stack elements vertically. To put `a` above `b` you would say: `a.above(b)`",5,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"below","","Stack elements vertically. To put `a` below `b` you would say: `a.below(b)`",5,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"beside","","Put elements beside each other horizontally. To put `b` to the right of `a` you would say:\n`a.beside(b)`",5,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"get_width","","Return the width of the Element.",5,{"inputs":[{"name":"element"}],"output":{"name":"i32"}}],[11,"get_height","","Return the height of the Element.",5,{"inputs":[{"name":"element"}],"output":{"name":"i32"}}],[11,"get_size","","Return the size of the Element's bounding rectangle.",5,null],[11,"draw","","Draw the form with some given graphics backend.",5,null],[11,"is_over","","Return whether or not a point is over the element.",5,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"prim"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"prim"}],"output":{"name":"prim"}}],[11,"fmt","","",7,{"inputs":[{"name":"imagestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"imagestyle"}],"output":{"name":"imagestyle"}}],[11,"fmt","","",8,{"inputs":[{"name":"three"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"three"}],"output":{"name":"three"}}],[11,"fmt","","",9,{"inputs":[{"name":"pos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"pos"}],"output":{"name":"pos"}}],[11,"fmt","","",10,{"inputs":[{"name":"position"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","","",11,{"inputs":[{"name":"direction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"new","","Construct a renderer, used for rendering elmesque `Element`s.",12,{"inputs":[{"name":"renderer"},{"name":"context"},{"name":"g"}],"output":{"name":"renderer"}}],[11,"character_cache","","Builder method for constructing a Renderer with a GlyphCache for drawing text.",12,{"inputs":[{"name":"renderer"},{"name":"c"}],"output":{"name":"renderer"}}],[11,"fmt","elmesque::form","",13,{"inputs":[{"name":"form"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"form"}],"output":{"name":"form"}}],[11,"fmt","","",14,{"inputs":[{"name":"fillstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"fillstyle"}],"output":{"name":"fillstyle"}}],[11,"fmt","","",15,{"inputs":[{"name":"linecap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"linecap"}],"output":{"name":"linecap"}}],[11,"fmt","","",16,{"inputs":[{"name":"linejoin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"linejoin"}],"output":{"name":"linejoin"}}],[11,"fmt","","",17,{"inputs":[{"name":"linestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"linestyle"}],"output":{"name":"linestyle"}}],[11,"default","","The default LineStyle.",17,{"inputs":[{"name":"linestyle"}],"output":{"name":"linestyle"}}],[11,"width","","The LineStyle with some given width.",17,{"inputs":[{"name":"linestyle"},{"name":"f64"}],"output":{"name":"linestyle"}}],[11,"fmt","","",18,{"inputs":[{"name":"basicform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"basicform"}],"output":{"name":"basicform"}}],[11,"fmt","","",19,{"inputs":[{"name":"shapestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"shapestyle"}],"output":{"name":"shapestyle"}}],[11,"shift","","Move a form by the given amount. this is a relative translation so `shift(10.0, 10.0, form)\nwould move `form` ten pixels up and ten pixels to the right.",13,{"inputs":[{"name":"form"},{"name":"f64"},{"name":"f64"}],"output":{"name":"form"}}],[11,"shift_x","","Move a shape in the x direction. This is relative so `shift_x(10.0, form)` moves `form` 10\npixels to the right.",13,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"shift_y","","Move a shape in the y direction. This is relative so `shift_y(10.0, form)` moves `form\nupwards by 10 pixels.",13,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"scale","","Scale a form by a given factor. Scaling by 2 doubles both dimensions and quadruples the\narea.",13,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"rotate","","Rotate a form by a given angle. Rotate takes radians and turns things counterclockwise.\nSo to turn `form` 30 degrees to the left you would say `rotate(degrees(30), form)`.",13,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"alpha","","Set the alpha of a Form. The default is 1 and 0 is totally transparent.",13,{"inputs":[{"name":"form"},{"name":"f32"}],"output":{"name":"form"}}],[11,"fmt","","",20,{"inputs":[{"name":"pointpath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"pointpath"}],"output":{"name":"pointpath"}}],[11,"fmt","","",21,{"inputs":[{"name":"shape"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"filled","","Create a filled-in shape.",21,{"inputs":[{"name":"shape"},{"name":"color"}],"output":{"name":"form"}}],[11,"textured","","Create a textured shape.\nThe texture is described by some path and is tiled to fill the entire shape.",21,{"inputs":[{"name":"shape"},{"name":"pathbuf"}],"output":{"name":"form"}}],[11,"gradient","","Fill a shape with a gradient.",21,{"inputs":[{"name":"shape"},{"name":"gradient"}],"output":{"name":"form"}}],[11,"outlined","","Outline a shape with a given line style.",21,{"inputs":[{"name":"shape"},{"name":"linestyle"}],"output":{"name":"form"}}],[11,"fmt","elmesque::text","",22,{"inputs":[{"name":"text"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"fmt","","",23,{"inputs":[{"name":"textunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"textunit"}],"output":{"name":"textunit"}}],[11,"fmt","","",24,{"inputs":[{"name":"line"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"line"}],"output":{"name":"line"}}],[11,"fmt","","",25,{"inputs":[{"name":"position"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","","",26,{"inputs":[{"name":"style"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"style"}],"output":{"name":"style"}}],[11,"default","","",26,{"inputs":[{"name":"style"}],"output":{"name":"style"}}],[11,"from_string","","Convert a string into text which can be styled and displayed.",22,{"inputs":[{"name":"text"},{"name":"string"}],"output":{"name":"text"}}],[11,"empty","","Text with nothing in it.",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"append","","Put two chunks of text together.",22,{"inputs":[{"name":"text"},{"name":"text"}],"output":{"name":"text"}}],[11,"concat","","Put many chunks of text together.",22,{"inputs":[{"name":"text"},{"name":"vec"}],"output":{"name":"text"}}],[11,"join","","Put many chunks of text together with a separator.",22,{"inputs":[{"name":"text"},{"name":"text"},{"name":"vec"}],"output":{"name":"text"}}],[11,"style","","Set the style of some text. For example, if you design a `Style` called `foorter_style` that is\nspecifically for the bottom of your page, you could apply it to text like this:",22,{"inputs":[{"name":"text"},{"name":"style"}],"output":{"name":"text"}}],[11,"typeface","","Provide a path of a typeface to be used for some text.",22,{"inputs":[{"name":"text"},{"name":"pathbuf"}],"output":{"name":"text"}}],[11,"monospace","","Switch to a monospace typeface. Good for code snippets.",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"height","","Set the height of some text in pixels.",22,{"inputs":[{"name":"text"},{"name":"f64"}],"output":{"name":"text"}}],[11,"color","","Set the color of some text.",22,{"inputs":[{"name":"text"},{"name":"color"}],"output":{"name":"text"}}],[11,"bold","","Make the text bold.",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"italic","","Make the text italic.",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"line","","Put lines on text.",22,{"inputs":[{"name":"text"},{"name":"line"}],"output":{"name":"text"}}],[11,"position","","Change the text position relative to it's center point",22,{"inputs":[{"name":"text"},{"name":"position"}],"output":{"name":"text"}}],[11,"fmt","elmesque::transform_2d","",27,{"inputs":[{"name":"transform2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"transform2d"}],"output":{"name":"transform2d"}}],[11,"multiply","","Multiply two transforms together.",27,{"inputs":[{"name":"transform2d"},{"name":"transform2d"}],"output":{"name":"transform2d"}}],[4,"Color","conrod::color","Color supporting RGB and HSL variants.",null,null],[13,"Rgba","","Red, Green, Blue, Alpha - All values' scales represented between 0.0 and 1.0.",0,null],[13,"Hsla","","Hue, Saturation, Lightness, Alpha - all valuess scales represented between 0.0 and 1.0.",0,null],[6,"Colour","","",null,null],[5,"rgba","","Create RGB colors with an alpha component for transparency.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb","","Create RGB colors from numbers between 0.0 and 1.0.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgba_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[5,"hsla","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV) with an alpha component for\ntransparency.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"hsl","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV). This gives you access to colors\nmore like a color wheel, where all hues are arranged in a circle that you specify with radians.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"grayscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"greyscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"random","","Construct a random color.",null,{"inputs":[],"output":{"name":"color"}}],[3,"Hsla","","The parts of HSL along with an alpha for transparency.",null,null],[3,"Rgba","","The parts of RGB along with an alpha for transparency.",null,null],[5,"f32_to_byte","","Convert an f32 color to a byte.",null,{"inputs":[{"name":"f32"}],"output":{"name":"u8"}}],[5,"rgb_to_hsl","","Pure function for converting rgb to hsl.",null,null],[5,"hsl_to_rgb","","Pure function for converting hsl to rgb.",null,null],[4,"Gradient","","Linear or Radial Gradient.",null,null],[13,"Linear","","Takes a start and end point and then a series of color stops that indicate how to\ninterpolate between the start and end points.",3,null],[13,"Radial","","First takes a start point and inner radius. Then takes an end point and outer radius.\nIt then takes a series of color stops that indicate how to interpolate between the\ninner and outer circles.",3,null],[5,"linear","","Create a linear gradient.",null,null],[5,"radial","","Create a radial gradient.",null,null],[5,"light_red","","Built-in colors.",null,{"inputs":[],"output":{"name":"color"}}],[5,"red","","Scarlet Red - Regular - #CC0000",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_red","","Scarlet Red - Dark - #A30000",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_orange","","Orange - Light - #FCAF3E",null,{"inputs":[],"output":{"name":"color"}}],[5,"orange","","Orange - Regular - #F57900",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_orange","","Orange - Dark - #CE5C00",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_yellow","","Butter - Light - #FCE94F",null,{"inputs":[],"output":{"name":"color"}}],[5,"yellow","","Butter - Regular - #EDD400",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_yellow","","Butter - Dark - #C4A000",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_green","","Chameleon - Light - #8AE234",null,{"inputs":[],"output":{"name":"color"}}],[5,"green","","Chameleon - Regular - #73D216",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_green","","Chameleon - Dark - #4E9A06",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_blue","","Sky Blue - Light - #729FCF",null,{"inputs":[],"output":{"name":"color"}}],[5,"blue","","Sky Blue - Regular - #3465A4",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_blue","","Sky Blue - Dark - #204A87",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_purple","","Plum - Light - #AD7FA8",null,{"inputs":[],"output":{"name":"color"}}],[5,"purple","","Plum - Regular - #75507B",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_purple","","Plum - Dark - #5C3566",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_brown","","Chocolate - Light - #E9B96E",null,{"inputs":[],"output":{"name":"color"}}],[5,"brown","","Chocolate - Regular - #C17D11",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_brown","","Chocolate - Dark - #8F5902",null,{"inputs":[],"output":{"name":"color"}}],[5,"black","","Straight Black.",null,{"inputs":[],"output":{"name":"color"}}],[5,"white","","Straight White.",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_gray","","Alluminium - Light",null,{"inputs":[],"output":{"name":"color"}}],[5,"gray","","Alluminium - Regular",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_gray","","Alluminium - Dark",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_grey","","Aluminium - Light - #EEEEEC",null,{"inputs":[],"output":{"name":"color"}}],[5,"grey","","Aluminium - Regular - #D3D7CF",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_grey","","Aluminium - Dark - #BABDB6",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_charcoal","","Charcoal - Light - #888A85",null,{"inputs":[],"output":{"name":"color"}}],[5,"charcoal","","Charcoal - Regular - #555753",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_charcoal","","Charcoal - Dark - #2E3436",null,{"inputs":[],"output":{"name":"color"}}],[8,"Colorable","","Types that can be colored.",null,null],[10,"color","","Set the color of the widget.",28,{"inputs":[{"name":"colorable"},{"name":"color"}],"output":{"name":"self"}}],[11,"rgba","","Set the color of the widget from rgba values.",28,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"rgb","","Set the color of the widget from rgb values.",28,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsla","","Set the color of the widget from hsla values.",28,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsl","","Set the color of the widget from hsl values.",28,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[4,"Color","conrod","Color supporting RGB and HSL variants.",null,null],[13,"Rgba","","Red, Green, Blue, Alpha - All values' scales represented between 0.0 and 1.0.",0,null],[13,"Hsla","","Hue, Saturation, Lightness, Alpha - all valuess scales represented between 0.0 and 1.0.",0,null],[8,"Colorable","","Types that can be colored.",null,null],[10,"color","","Set the color of the widget.",28,{"inputs":[{"name":"colorable"},{"name":"color"}],"output":{"name":"self"}}],[11,"rgba","","Set the color of the widget from rgba values.",28,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"rgb","","Set the color of the widget from rgb values.",28,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsla","","Set the color of the widget from hsla values.",28,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsl","","Set the color of the widget from hsl values.",28,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The textyre type associated with the character cache.",29,null],[10,"character","","Get reference to character.",29,{"inputs":[{"name":"charactercache"},{"name":"u32"},{"name":"char"}],"output":{"name":"character"}}],[11,"width","","Return the width for some given text.",29,{"inputs":[{"name":"charactercache"},{"name":"u32"},{"name":"str"}],"output":{"name":"f64"}}],[11,"append_transform","graphics::context","",30,null],[11,"prepend_transform","","",30,null],[11,"trans","","",30,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":{"name":"context"}}],[11,"rot_rad","","",30,{"inputs":[{"name":"context"},{"name":"f64"}],"output":{"name":"context"}}],[11,"orient","","",30,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":{"name":"context"}}],[11,"scale","","",30,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":{"name":"context"}}],[11,"shear","","",30,null],[11,"mul_rgba","graphics::line","",31,{"inputs":[{"name":"line"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"line"}}],[11,"hue_rad","","",31,{"inputs":[{"name":"line"},{"name":"f32"}],"output":{"name":"line"}}],[11,"mul_rgba","graphics::ellipse","",32,{"inputs":[{"name":"ellipse"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"ellipse"}}],[11,"hue_rad","","",32,{"inputs":[{"name":"ellipse"},{"name":"f32"}],"output":{"name":"ellipse"}}],[11,"mul_rgba","graphics::rectangle","",33,{"inputs":[{"name":"rectangle"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"rectangle"}}],[11,"hue_rad","","",33,{"inputs":[{"name":"rectangle"},{"name":"f32"}],"output":{"name":"rectangle"}}],[11,"clone","graphics::character","",34,{"inputs":[{"name":"character"}],"output":{"name":"character"}}],[11,"left","","The left offset.",34,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"top","","The top offset.",34,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"width","","Gets width of character, including space to the next one.",34,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"height","","Sets height of character, including space to the next one.",34,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"clone","graphics::context","",30,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new","","Creates a new drawing context.",30,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new_viewport","","Creates a new context with absolute transform in point coordinates.",30,{"inputs":[{"name":"context"},{"name":"viewport"}],"output":{"name":"context"}}],[11,"abs","","Creates a new drawing context in absolute coordinates.",30,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":{"name":"context"}}],[11,"view","","Moves the current transform to the view coordinate system.",30,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"reset","","Moves the current transform to the default coordinate system.",30,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"store_view","","Stores the current transform as new view.",30,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"get_view_size","","Computes the current view size.",30,null],[11,"clone","graphics::polygon","",35,{"inputs":[{"name":"polygon"}],"output":{"name":"polygon"}}],[11,"new","","Creates new polygon",35,null],[11,"color","","Sets color.",35,null],[11,"draw","","Draws polygon",35,null],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation",35,null],[11,"clone","graphics::line","",36,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"clone","","",31,{"inputs":[{"name":"line"}],"output":{"name":"line"}}],[11,"new","","Creates a new line",31,null],[11,"new_round","","Creates a new line",31,null],[11,"color","","Sets color.",31,null],[11,"radius","","Sets radius.",31,{"inputs":[{"name":"line"},{"name":"f64"}],"output":{"name":"line"}}],[11,"width","","Sets width.",31,{"inputs":[{"name":"line"},{"name":"f64"}],"output":{"name":"line"}}],[11,"shape","","Sets shape.",31,{"inputs":[{"name":"line"},{"name":"shape"}],"output":{"name":"line"}}],[11,"draw","","Draw the line.",31,null],[11,"draw_arrow","","Draws an arrow",31,null],[11,"clone","graphics::ellipse","",37,{"inputs":[{"name":"border"}],"output":{"name":"border"}}],[11,"clone","","",32,{"inputs":[{"name":"ellipse"}],"output":{"name":"ellipse"}}],[11,"new","","Creates a new ellipse",32,null],[11,"new_border","","Creates a new ellipse border",32,null],[11,"color","","Sets ellipse color.",32,null],[11,"border","","Sets ellipse border.",32,{"inputs":[{"name":"ellipse"},{"name":"border"}],"output":{"name":"ellipse"}}],[11,"maybe_border","","Sets optional ellipse border.",32,{"inputs":[{"name":"ellipse"},{"name":"option"}],"output":{"name":"ellipse"}}],[11,"resolution","","Sets resolution of the ellipse smoothness.",32,{"inputs":[{"name":"ellipse"},{"name":"u32"}],"output":{"name":"ellipse"}}],[11,"draw","","Draws the ellipse.",32,null],[11,"clone","graphics::rectangle","",38,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"clone","","",39,{"inputs":[{"name":"border"}],"output":{"name":"border"}}],[11,"clone","","",33,{"inputs":[{"name":"rectangle"}],"output":{"name":"rectangle"}}],[11,"new","","Creates a new rectangle.",33,null],[11,"new_round","","Creates a new round rectangle.",33,null],[11,"new_border","","Creates a new rectangle border.",33,null],[11,"new_round_border","","Creates a new round rectangle border.",33,null],[11,"color","","Sets color.",33,null],[11,"shape","","Sets shape.",33,{"inputs":[{"name":"rectangle"},{"name":"shape"}],"output":{"name":"rectangle"}}],[11,"border","","Sets border.",33,{"inputs":[{"name":"rectangle"},{"name":"border"}],"output":{"name":"rectangle"}}],[11,"maybe_border","","Sets optional border.",33,{"inputs":[{"name":"rectangle"},{"name":"option"}],"output":{"name":"rectangle"}}],[11,"draw","","Draws the rectangle",33,null],[11,"clone","graphics::image","",40,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"new","","Creates a new image",40,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"new_colored","","Creates a new colored image",40,null],[11,"color","","Sets color.",40,null],[11,"maybe_color","","Sets optional color.",40,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"image"}}],[11,"rect","","Sets rectangle.",40,{"inputs":[{"name":"image"},{"name":"r"}],"output":{"name":"image"}}],[11,"maybe_rect","","Sets optional rectangle.",40,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"image"}}],[11,"src_rect","","Sets source rectangle.",40,null],[11,"maybe_src_rect","","Sets optional source rectangle.",40,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"image"}}],[11,"draw","","Draws the image.",40,null],[11,"clone","graphics::text","",41,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"new","","Creates a new text with black color",41,{"inputs":[{"name":"text"},{"name":"u32"}],"output":{"name":"text"}}],[11,"colored","","Creates a new colored text",41,null],[11,"draw","","Draws text with a character cache",41,null],[11,"clone","graphics::deform","",42,{"inputs":[{"name":"deformgrid"}],"output":{"name":"deformgrid"}}],[11,"new","","Creates a new DeformGrid.",42,null],[11,"set_current","","Sets current control position.",42,null],[11,"set_original","","Sets original control position.",42,null],[11,"reset_control_points","","Removes all control points.",42,null],[11,"reset_vertices_and_texture_coords","","Sets vertices and texture coords back to default.",42,null],[11,"hit","","Finds original coordinate.\nIf the deformed grid is overlapping itself, multiple hits might occur.\nReturns the first hit it finds.",42,null],[11,"draw_image","","Draws deformed image.",42,null],[11,"add_control_point","","Adds a control point, in original coordinates.",42,null],[11,"draw_vertical_lines","","Draw vertical grid lines.",42,null],[11,"draw_horizontal_lines","","Draw horizontal grid lines.",42,null],[11,"update","","Updates the grid, by deforming the vertices.",42,null],[11,"clone","graphics::grid","",43,{"inputs":[{"name":"grid"}],"output":{"name":"grid"}}],[11,"clone","","",44,{"inputs":[{"name":"gridcells"}],"output":{"name":"gridcells"}}],[11,"draw","","Draws the grid.",43,null],[11,"cells","","Get a GridIterator for the grid",43,{"inputs":[{"name":"grid"}],"output":{"name":"gridcells"}}],[11,"next","","",44,{"inputs":[{"name":"gridcells"}],"output":{"name":"option"}}],[11,"fmt","draw_state::state","",45,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",45,null],[11,"partial_cmp","","",45,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"lt","","",45,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"le","","",45,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"gt","","",45,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ge","","",45,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",45,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",45,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",46,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",46,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",46,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",46,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",46,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"cmp","","",47,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",47,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"lt","","",47,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"le","","",47,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"gt","","",47,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ge","","",47,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"hash","","",47,null],[11,"fmt","","",47,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",48,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"partial_cmp","","",49,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",49,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",49,{"inputs":[{"name":"primitive"}],"output":{"name":"cullface"}}],[11,"default","","",49,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"cmp","","",50,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"lt","","",50,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"le","","",50,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"gt","","",50,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ge","","",50,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"hash","","",50,null],[11,"fmt","","",50,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"clone","","",50,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"cmp","","",51,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"lt","","",51,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"le","","",51,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"gt","","",51,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ge","","",51,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"hash","","",51,null],[11,"fmt","","",51,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"cmp","","",52,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"lt","","",52,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"le","","",52,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"gt","","",52,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ge","","",52,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"hash","","",52,null],[11,"fmt","","",52,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"cmp","","",53,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",53,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",53,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",53,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",53,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"hash","","",53,null],[11,"fmt","","",53,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"default","","",53,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"cmp","","",54,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",54,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",54,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",54,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",54,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",54,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"hash","","",54,null],[11,"fmt","","",54,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"cmp","","",55,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",55,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",55,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",55,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",55,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",55,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"hash","","",55,null],[11,"fmt","","",55,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",55,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"default","","",55,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"cmp","","",56,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"lt","","",56,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"le","","",56,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"gt","","",56,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ge","","",56,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"hash","","",56,null],[11,"fmt","","",56,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"cmp","","",57,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"hash","","",57,null],[11,"fmt","","",57,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"cmp","","",58,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"hash","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"fmt","","",59,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",59,null],[11,"partial_cmp","","",59,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",59,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",59,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",59,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",59,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",59,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",59,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",59,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"eq","","",60,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",60,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",60,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",60,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",60,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"default","","",60,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",60,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",61,null],[11,"cmp","","",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",61,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",61,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",61,{"inputs":[{"name":"colormask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",61,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",61,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",61,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",61,null],[11,"remove","","Removes the specified flags in-place.",61,null],[11,"toggle","","Toggles the specified flags in-place.",61,null],[11,"bitor","","Returns the union of the two sets of flags.",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",61,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",61,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"partial_cmp","draw_state::target","",62,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"fmt","","",62,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",63,null],[11,"cmp","","",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"option"}}],[11,"lt","","",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"le","","",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"gt","","",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ge","","",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"eq","","",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"fmt","","",63,{"inputs":[{"name":"mask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",63,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"all","","Returns the set containing all flags.",63,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",63,{"inputs":[{"name":"mask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",63,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",63,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"mask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",63,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",63,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",63,null],[11,"remove","","Removes the specified flags in-place.",63,null],[11,"toggle","","Toggles the specified flags in-place.",63,null],[11,"bitor","","Returns the union of the two sets of flags.",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",63,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"not","","Returns the complement of this set of flags.",63,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"hash","","",64,null],[11,"cmp","","",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",64,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",64,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",64,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",64,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",64,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",64,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",64,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",64,null],[11,"remove","","Removes the specified flags in-place.",64,null],[11,"toggle","","Toggles the specified flags in-place.",64,null],[11,"bitor","","Returns the union of the two sets of flags.",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",64,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",64,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"option"}}],[11,"lt","","",65,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"le","","",65,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"gt","","",65,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ge","","",65,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"eq","","",65,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"cleardata"}],"output":{"name":"cleardata"}}],[11,"fmt","","",65,{"inputs":[{"name":"cleardata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","draw_state","",66,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"option"}}],[11,"lt","","",66,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"le","","",66,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"gt","","",66,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ge","","",66,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"drawstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"cmp","","",67,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",67,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"option"}}],[11,"lt","","",67,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"le","","",67,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"gt","","",67,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ge","","",67,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"hash","","",67,null],[11,"fmt","","",67,{"inputs":[{"name":"blendpreset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"blendpreset"}],"output":{"name":"blendpreset"}}],[11,"new","","Create a default `DrawState`. Uses counter-clockwise winding, culls the backface of each\nprimitive, and does no scissor/stencil/depth/blend/color masking.",66,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"get_target_mask","","Return a target mask that contains all the planes required by this state.",66,{"inputs":[{"name":"drawstate"}],"output":{"name":"mask"}}],[11,"multi_sample","","Enable multi-sampled rasterization",66,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"stencil","","Set the stencil test to a simple expression",66,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"u8"}],"output":{"name":"drawstate"}}],[11,"depth","","Set the depth test with the mask",66,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"bool"}],"output":{"name":"drawstate"}}],[11,"scissor","","Set the scissor",66,{"inputs":[{"name":"drawstate"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"drawstate"}}],[11,"blend","","Set the blend mode to one of the presets",66,{"inputs":[{"name":"drawstate"},{"name":"blendpreset"}],"output":{"name":"drawstate"}}],[6,"Scalar","conrod","",null,null],[11,"fmt","json_io","",68,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",68,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[4,"JsonIoError","conrod","Represents the different kinds of errors returned by Librar.",null,null],[13,"IO","","Some std::io Error.",68,null],[13,"JsonParserError","","An error returned by the JSON parser.",68,null],[13,"JsonDecoderError","","An error returned by the JSON decoder.",68,null],[13,"JsonEncoderError","","An error returned by the JSON encoder.",68,null],[3,"Split","","A type of Canvas for flexibly designing and guiding widget layout as splits of a window.",null,null],[3,"Floating","","A type of Canvas for flexibly designing and guiding widget layout as splits of a window.",null,null],[3,"Button","","A pressable button widget whose reaction is triggered upon release.",null,null],[3,"DropDownList","","Displays a given `Vec<String>` as a selectable drop down menu. It's reaction is triggered upon\nselection of a list item.",null,null],[3,"EnvelopeEditor","","Used for editing a series of 2D Points on a cartesian (X, Y) plane within some given range.\nUseful for things such as oscillator/automation envelopes or any value series represented\nperiodically.",null,null],[3,"Label","","Displays some given text centred within a rectangle.",null,null],[3,"WidgetMatrix","","Draw a matrix of any rectangular widget type, where the matrix will provide a function with\nthe widget number, it's `rows` and `cols` position, the width and height for the widget and\nthe location at which the widget should be drawn.",null,null],[3,"NumberDialer","","A widget for precision control over any digit within a value. The reaction is triggered when\nthe value is updated or if the mouse button is released while the cursor is above the widget.",null,null],[3,"Slider","","Linear value selection. If the slider's width is greater than it's height, it will\nautomatically become a horizontal slider, otherwise it will be a vertical slider. Its reaction\nis triggered if the value is updated or if the mouse button is released while the cursor is\nabove the rectangle.",null,null],[3,"TextBox","","A widget for displaying and mutating a given one-line text `String`. It's reaction is\ntriggered upon pressing of the `Enter`/`Return` key.",null,null],[3,"Toggle","","A pressable widget for toggling the state of a bool. Like the button widget, it's reaction is\ntriggered upon release and will return the new bool state. Note that the toggle will not\nmutate the bool for you, you should do this yourself within the react closure.",null,null],[3,"XYPad","","Used for displaying and controlling a 2D point on a cartesian plane within a given range.\nIts reaction is triggered when the value is updated or if the mouse button is released while\nthe cursor is above the rectangle.",null,null],[3,"ButtonStyle","","Styling for the Button, necessary for constructing its renderable Element.",null,null],[12,"maybe_width","","",69,null],[12,"maybe_height","","",69,null],[12,"maybe_color","","",69,null],[12,"maybe_frame","","",69,null],[12,"maybe_frame_color","","",69,null],[12,"maybe_label_color","","",69,null],[12,"maybe_label_font_size","","",69,null],[3,"DropDownListStyle","","Styling for the DropDownList, necessary for constructing its renderable Element.",null,null],[12,"maybe_width","","Width of the widget.",70,null],[12,"maybe_height","","Height of the widget.",70,null],[12,"maybe_color","","Color of the widget.",70,null],[12,"maybe_frame","","Width of the widget's frame.",70,null],[12,"maybe_frame_color","","Color of the widget's frame.",70,null],[12,"maybe_label_color","","Color of the item labels.",70,null],[12,"maybe_label_font_size","","Font size for the item labels.",70,null],[12,"maybe_max_visible_height","","Maximum height of the Open menu before the scrollbar appears.",70,null],[3,"EnvelopeEditorStyle","","Styling for the EnvelopeEditor, necessary for constructing its renderable Element.",null,null],[12,"maybe_width","","",71,null],[12,"maybe_height","","",71,null],[12,"maybe_color","","",71,null],[12,"maybe_frame","","",71,null],[12,"maybe_frame_color","","",71,null],[12,"maybe_label_color","","",71,null],[12,"maybe_label_font_size","","",71,null],[12,"maybe_value_font_size","","",71,null],[12,"maybe_point_radius","","",71,null],[12,"maybe_line_width","","",71,null],[3,"LabelStyle","","The styling for a Label's renderable Element.",null,null],[3,"NumberDialerStyle","","Styling for the NumberDialer, necessary for constructing its renderable Element.",null,null],[12,"maybe_width","","",72,null],[12,"maybe_height","","",72,null],[12,"maybe_color","","",72,null],[12,"maybe_frame","","",72,null],[12,"maybe_frame_color","","",72,null],[12,"maybe_label_color","","",72,null],[12,"maybe_label_font_size","","",72,null],[3,"SliderStyle","","Styling for the Slider, necessary for constructing its renderable Element.",null,null],[12,"maybe_width","","",73,null],[12,"maybe_height","","",73,null],[12,"maybe_color","","",73,null],[12,"maybe_frame","","",73,null],[12,"maybe_frame_color","","",73,null],[12,"maybe_label_color","","",73,null],[12,"maybe_label_font_size","","",73,null],[3,"TextBoxStyle","","Styling for the TextBox, necessary for constructing its renderable Element.",null,null],[12,"maybe_width","","",74,null],[12,"maybe_height","","",74,null],[12,"maybe_color","","",74,null],[12,"maybe_frame","","",74,null],[12,"maybe_frame_color","","",74,null],[12,"maybe_font_size","","",74,null],[3,"ToggleStyle","","Styling for the Toggle, necessary for constructing its renderable Element.",null,null],[12,"maybe_width","","",75,null],[12,"maybe_height","","",75,null],[12,"maybe_color","","",75,null],[12,"maybe_frame","","",75,null],[12,"maybe_frame_color","","",75,null],[12,"maybe_label_color","","",75,null],[12,"maybe_label_font_size","","",75,null],[3,"XYPadStyle","","Styling for the XYPad, necessary for constructing its renderable Element.",null,null],[12,"maybe_width","","",76,null],[12,"maybe_height","","",76,null],[12,"maybe_color","","",76,null],[12,"maybe_frame","","",76,null],[12,"maybe_frame_color","","",76,null],[12,"maybe_label_color","","",76,null],[12,"maybe_label_font_size","","",76,null],[12,"maybe_value_font_size","","",76,null],[12,"maybe_line_width","","",76,null],[3,"Background","","A type for drawing a colored window background.",null,null],[3,"Canvas","","The kind of Canvas.",null,null],[12,"kind","","The Kind of Canvas (i.e. Split, Floating, etc).",77,null],[12,"xy","","The position of the Canvas within the window.",77,null],[12,"element","","The Element used for drawing the Canvas.",77,null],[12,"widget_area_xy","","The position of the Widget area.",77,null],[12,"widget_area_dim","","The dimensions of the Widget area.",77,null],[12,"padding","","Padding for the Canvas describes the distance between each edge and its Widget's.",77,null],[12,"has_updated","","Has the Canvas been set since the last time the Ui was drawn?",77,null],[3,"Mouse","","Represents the current state of the Mouse.",null,null],[12,"xy","","Position of the mouse cursor.",78,null],[12,"left","","Left mouse button state.",78,null],[12,"middle","","Middle mouse button state.",78,null],[12,"right","","Right mouse button state.",78,null],[12,"unknown","","Unknown button state.",78,null],[12,"scroll","","Amount that the mouse has scrolled since the last render.",78,null],[3,"MouseScroll","","The amount of scrolling that has occurred since the last render event.",null,null],[12,"x","","Scrolling across the x axis.",79,null],[12,"y","","Scrolling across the y axis.",79,null],[3,"HorizontalAlign","","The horizontal alignment of a widget positioned relatively to another UI element on the y axis.",null,null],[3,"Margin","","The distance between the dimension bound and the outer edge of the frame.",null,null],[12,"top","","Margin between the y max Canvas and the outer edge of its frame.",80,null],[12,"bottom","","Margin between the y min Canvas and the outer edge of its frame.",80,null],[12,"left","","Margin between the x min Canvas and the outer edge of its frame.",80,null],[12,"right","","Margin between the x max Canvas and the outer edge of its frame.",80,null],[3,"Padding","","The distance between the inner edge of a frame and the outer edge of the inner content.",null,null],[12,"top","","Padding between the top of a Widget and the top of a Canvas.",81,null],[12,"bottom","","Padding between the bottom of a Widget and the bottom of a Canvas.",81,null],[12,"left","","Margin between the left of a Widget and the left of a Canvas.",81,null],[12,"right","","Margin between the right of a Widget and the right of a Canvas.",81,null],[3,"VerticalAlign","","The vertical alignment of a widget positioned relatively to another UI element on the x axis.",null,null],[3,"Align","","The alignment of an element's dimensions with another's.",null,null],[12,"horizontal","","Positioning relative to an elements width and position on the x axis.",82,null],[12,"vertical","","Positioning relative to an elements height and position on the y axis.",82,null],[3,"Theme","","A serializable collection of canvas and widget styling defaults.",null,null],[12,"name","","A name for the theme used for identification.",83,null],[12,"padding","","Padding for Canvas layout and positioning.",83,null],[12,"margin","","Margin for Canvas layout and positioning.",83,null],[12,"position","","A default widget position.",83,null],[12,"align","","A default alignment for widgets.",83,null],[12,"background_color","","A default background for the theme.",83,null],[12,"shape_color","","A default color for widget shapes.",83,null],[12,"frame_color","","A default color for widget frames.",83,null],[12,"frame_width","","A default width for widget frames.",83,null],[12,"label_color","","A default color for widget labels.",83,null],[12,"font_size_large","","A default \"large\" font size.",83,null],[12,"font_size_medium","","A default \"medium\" font size.",83,null],[12,"font_size_small","","A default \"small\" font size.",83,null],[12,"maybe_canvas_split","","Optional style defaults for a Canvas split.",83,null],[12,"maybe_canvas_floating","","Optional style defaults for a Floating Canvas.",83,null],[12,"maybe_button","","Optional style defaults for a Button widget.",83,null],[12,"maybe_drop_down_list","","Optional style defaults for a DropDownList.",83,null],[12,"maybe_envelope_editor","","Optional style defaults for an EnvelopeEditor.",83,null],[12,"maybe_number_dialer","","Optional style defaults for a NumberDialer.",83,null],[12,"maybe_slider","","Optional style defaults for a Slider.",83,null],[12,"maybe_text_box","","Optional style defaults for a TextBox.",83,null],[12,"maybe_toggle","","Optional style defaults for a Toggle.",83,null],[12,"maybe_xy_pad","","Optional style defaults for an XYPad.",83,null],[3,"GlyphCache","","A wrapper over some CharacterCache, exposing it's functionality via a RefCell.",null,null],[3,"Ui","","`Ui` is the most important type within Conrod and is necessary for rendering and maintaining\nwidget state.\n# Ui Handles the following:\n* Contains the state of all widgets which can be indexed via their UiId.\n* Stores rendering state for each widget until the end of each render cycle.\n* Contains the theme used for default styling of the widgets.\n* Maintains the latest user input state (for mouse and keyboard).\n* Maintains the latest window dimensions.",null,null],[12,"theme","","The theme used to set default styling for widgets.",84,null],[12,"glyph_cache","","Cache for character textures, used for label width calculation and glyph rendering.",84,null],[12,"win_w","","Window width.",84,null],[12,"win_h","","Window height.",84,null],[3,"UserInput","","A wrapper over the current user input state.",null,null],[12,"maybe_mouse","","Mouse state if it is available.",85,null],[12,"pressed_keys","","Keys pressed since the last cycle.",85,null],[12,"released_keys","","Keys released since the last cycle.",85,null],[12,"entered_text","","Text entered since the last cycle.",85,null],[12,"window_dim","","Current dimensions of the window.",85,null],[3,"WidgetState","","Represents the unique cached state of a widget.",null,null],[12,"state","","The state of the Widget.",86,null],[12,"dim","","The rectangular dimensions of the Widget.",86,null],[12,"xy","","The position of the Widget given as [x, y] coordinates.",86,null],[12,"depth","","The rendering depth for the Widget (the default is 0.0).",86,null],[4,"Framing","","To be used as a parameter for defining the aesthetic\nof the widget frame.",null,null],[13,"Frame","","Frame width and color.",87,null],[13,"NoFrame","","No frame.",87,null],[4,"MouseButtonState","","Represents the current state of a mouse button.",null,null],[13,"Up","","The mouse is currently up.",88,null],[13,"Down","","The mouse is currently down (pressed).",88,null],[4,"Corner","","A corner of a rectangle.",null,null],[13,"TopLeft","","The top left quarter of a rectangle's area.",89,null],[13,"TopRight","","The top right quarter of a rectangle's area.",89,null],[13,"BottomLeft","","The bottom left quarter of a rectangle's area.",89,null],[13,"BottomRight","","The bottom right quarter of a rectangle's area.",89,null],[4,"Direction","","Directionally positioned, relative to another widget.",null,null],[13,"Up","","Positioned above.",90,null],[13,"Down","","Positioned below.",90,null],[13,"Left","","Positioned to the left.",90,null],[13,"Right","","Positioned to the right.",90,null],[4,"Horizontal","","The orientation of a HorizontalAlign.",null,null],[13,"Left","","Align the left edges of the widgets.",91,null],[13,"Middle","","Align the centres of the widgets' closest parallel edges.",91,null],[13,"Right","","Align the right edges of the relative widgets.",91,null],[4,"Place","","Place the widget at a position on the Canvas.",null,null],[13,"Middle","","Centre of the Canvas.",92,null],[13,"TopLeft","","Top left of the Canvas - pad_top + pad_left.",92,null],[13,"TopRight","","Top right of the Canvas - pad_top - pad_right.",92,null],[13,"BottomLeft","","Bottom left of the Canvas + pad_bottom + pad_left.",92,null],[13,"BottomRight","","Bottom right of the Canvas + pad_bottom - pad_right.",92,null],[13,"MidTop","","Top centre of the Canvas - pad_top.",92,null],[13,"MidBottom","","Bottom centre of the Canvas + pad_bottom.",92,null],[13,"MidLeft","","Left centre of the Canvas + pad_left.",92,null],[13,"MidRight","","Right centre of the Canvas - pad_right.",92,null],[4,"Position","","A cached widget's position for rendering.",null,null],[13,"Absolute","","A specific position.",93,null],[13,"Relative","","A position relative to some other Ui element.",93,null],[13,"Direction","","A direction relative to some other Ui element.",93,null],[13,"Place","","A position at a place on the current Canvas.",93,null],[4,"Vertical","","The orientation of a VerticalAlign.",null,null],[13,"Top","","Align the top edges of the widgets.",94,null],[13,"Middle","","Align the centres of the widgets' closest parallel edges.",94,null],[13,"Bottom","","Align the bottom edges of the widgets.",94,null],[4,"UiId","","For functions that may take either a WidgetId or a CanvasId.",null,null],[13,"Canvas","","The ID for a Canvas.",95,null],[13,"Widget","","The ID for a Widget.",95,null],[5,"align_left_of","","The x offset required to align an element with `width` to the left of a target element.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[5,"align_right_of","","The x offset required to align an element with `width` to the right of a target element.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[5,"align_bottom_of","","The y offset required to align an element with `height` to the bottom of a target element.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[5,"align_top_of","","The y offset required to align an element with `height` to the top of a target element.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[5,"middle_of","","The position of a rect with `dim` Dimensions at the middle of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"top_left_of","","The position of a rect with `dim` Dimensions at the top left of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"top_right_of","","The position of a rect with `dim` Dimensions at the top right of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"bottom_left_of","","The position of a rect with `dim` Dimensions at the bottom left of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"bottom_right_of","","The position of a rect with `dim` Dimensions at the bottom right of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"mid_top_of","","The position of a rect with `dim` Dimensions at the middle of the inside of the top edge of\nthe `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"mid_bottom_of","","The position of a rect with `dim` Dimensions at the middle of the inside of the bottom edge of\nthe `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"mid_left_of","","The position of a rect with `dim` Dimensions at the middle of the inside of the left edge of\nthe `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"mid_right_of","","The position of a rect with `dim` Dimensions at the middle of the inside of the right edge of\nthe `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[11,"clone","","",96,{"inputs":[{"name":"background"}],"output":{"name":"background"}}],[11,"new","","Construct a background.",96,{"inputs":[{"name":"background"}],"output":{"name":"background"}}],[11,"draw","","Draw the background.",96,{"inputs":[{"name":"background"},{"name":"ui"},{"name":"b"}],"output":null}],[11,"color","","",96,{"inputs":[{"name":"background"},{"name":"color"}],"output":{"name":"self"}}],[11,"new","","Construct a default Floating canvas.",97,{"inputs":[{"name":"floating"}],"output":{"name":"floating"}}],[11,"show_title_bar","","Show or hide the title bar.",97,{"inputs":[{"name":"floating"},{"name":"bool"}],"output":{"name":"floating"}}],[11,"pad_left","","Set the padding from the left edge.",97,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"pad_right","","Set the padding from the right edge.",97,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"pad_top","","Set the padding from the top edge.",97,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"pad_bottom","","Set the padding from the bottom edge.",97,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"pad","","Set the padding for all edges.",97,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"set","","Register the Canvas within the Ui.",97,{"inputs":[{"name":"floating"},{"name":"canvasid"},{"name":"ui"}],"output":null}],[11,"color","","",97,{"inputs":[{"name":"floating"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",97,{"inputs":[{"name":"floating"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",97,{"inputs":[{"name":"floating"},{"name":"color"}],"output":{"name":"self"}}],[11,"position","","",97,{"inputs":[{"name":"floating"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",97,{"inputs":[{"name":"floating"}],"output":{"name":"position"}}],[11,"horizontal_align","","",97,{"inputs":[{"name":"floating"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",97,{"inputs":[{"name":"floating"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",97,{"inputs":[{"name":"floating"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",97,{"inputs":[{"name":"floating"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",97,{"inputs":[{"name":"floating"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",97,{"inputs":[{"name":"floating"}],"output":{"name":"depth"}}],[11,"width","","",97,{"inputs":[{"name":"floating"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",97,{"inputs":[{"name":"floating"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",97,{"inputs":[{"name":"floating"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",97,{"inputs":[{"name":"floating"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"label","","",97,{"inputs":[{"name":"floating"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",97,{"inputs":[{"name":"floating"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",97,{"inputs":[{"name":"floating"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"new","","Construct a default Canvas Split.",98,{"inputs":[{"name":"split"},{"name":"canvasid"}],"output":{"name":"split"}}],[11,"length","","Set the dimension of the Split.",98,{"inputs":[{"name":"split"},{"name":"length"}],"output":{"name":"split"}}],[11,"flow","","Set the child Canvas Splits of the current Canvas flowing in a given direction.",98,null],[11,"flow_down","","Set the child Canvasses flowing downwards.",98,null],[11,"flow_up","","Set the child Canvasses flowing upwards.",98,null],[11,"flow_right","","Set the child Canvasses flowing to the right.",98,null],[11,"flow_left","","Set the child Canvasses flowing to the left.",98,null],[11,"pad_left","","Set the padding from the left edge.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"pad_right","","Set the padding from the right edge.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"pad_top","","Set the padding from the top edge.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"pad_bottom","","Set the padding from the bottom edge.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"pad","","Set the padding for all edges.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin_left","","Set the margin from the left edge.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin_right","","Set the margin from the right edge.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin_top","","Set the margin from the top edge.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin_bottom","","Set the margin from the bottom edge.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin","","Set the margin for all edges.",98,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"set","","Store the Canvas and it's children within the `Ui`. Each Canvas can be accessed via it's\nunique identifier `CanvasId`.",98,{"inputs":[{"name":"split"},{"name":"ui"}],"output":null}],[11,"color","","",98,{"inputs":[{"name":"split"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",98,{"inputs":[{"name":"split"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",98,{"inputs":[{"name":"split"},{"name":"color"}],"output":{"name":"self"}}],[11,"fmt","","",77,{"inputs":[{"name":"canvas"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"canvas"}],"output":{"name":"canvas"}}],[11,"empty","","An empty Canvas",77,{"inputs":[{"name":"canvas"}],"output":{"name":"canvas"}}],[11,"clone","","",87,{"inputs":[{"name":"framing"}],"output":{"name":"framing"}}],[11,"fmt","","",88,{"inputs":[{"name":"mousebuttonstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"mousebuttonstate"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",78,{"inputs":[{"name":"mouse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"mouse"}],"output":{"name":"mouse"}}],[11,"fmt","","",79,{"inputs":[{"name":"mousescroll"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"mousescroll"}],"output":{"name":"scroll"}}],[11,"new","","Constructor for a Mouse struct.",78,{"inputs":[{"name":"mouse"},{"name":"point"},{"name":"buttonstate"},{"name":"buttonstate"},{"name":"buttonstate"}],"output":{"name":"mouse"}}],[11,"relative_to","","Return the mouse state with its position relative to the given position.",78,{"inputs":[{"name":"mouse"},{"name":"point"}],"output":{"name":"mouse"}}],[11,"decode","","",93,{"inputs":[{"name":"position"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",93,{"inputs":[{"name":"position"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"position"},{"name":"position"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"position"},{"name":"position"}],"output":{"name":"bool"}}],[11,"fmt","","",93,{"inputs":[{"name":"position"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"default","","The default widget Position.",93,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"eq","","",90,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"decode","","",90,{"inputs":[{"name":"direction"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",90,{"inputs":[{"name":"direction"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",90,{"inputs":[{"name":"direction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"eq","","",99,{"inputs":[{"name":"horizontalalign"},{"name":"horizontalalign"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"horizontalalign"},{"name":"horizontalalign"}],"output":{"name":"bool"}}],[11,"decode","","",99,{"inputs":[{"name":"horizontalalign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",99,{"inputs":[{"name":"horizontalalign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"horizontalalign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"horizontalalign"}],"output":{"name":"horizontalalign"}}],[11,"eq","","",91,{"inputs":[{"name":"horizontal"},{"name":"horizontal"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"horizontal"},{"name":"horizontal"}],"output":{"name":"bool"}}],[11,"decode","","",91,{"inputs":[{"name":"horizontal"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",91,{"inputs":[{"name":"horizontal"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"horizontal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"horizontal"}],"output":{"name":"horizontal"}}],[11,"eq","","",100,{"inputs":[{"name":"verticalalign"},{"name":"verticalalign"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"verticalalign"},{"name":"verticalalign"}],"output":{"name":"bool"}}],[11,"decode","","",100,{"inputs":[{"name":"verticalalign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",100,{"inputs":[{"name":"verticalalign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",100,{"inputs":[{"name":"verticalalign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"verticalalign"}],"output":{"name":"verticalalign"}}],[11,"eq","","",94,{"inputs":[{"name":"vertical"},{"name":"vertical"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"vertical"},{"name":"vertical"}],"output":{"name":"bool"}}],[11,"decode","","",94,{"inputs":[{"name":"vertical"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",94,{"inputs":[{"name":"vertical"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",94,{"inputs":[{"name":"vertical"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"vertical"}],"output":{"name":"vertical"}}],[11,"eq","","",92,{"inputs":[{"name":"place"},{"name":"place"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"place"},{"name":"place"}],"output":{"name":"bool"}}],[11,"decode","","",92,{"inputs":[{"name":"place"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",92,{"inputs":[{"name":"place"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"place"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"place"}],"output":{"name":"place"}}],[11,"clone","","",89,{"inputs":[{"name":"corner"}],"output":{"name":"corner"}}],[11,"to","","Align `width` to the given `target_width`.",91,{"inputs":[{"name":"horizontal"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[11,"to","","Align `height` to the given `target_height`.",94,{"inputs":[{"name":"vertical"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[11,"within","","Place the given `dim` within the `target_dim`.",92,{"inputs":[{"name":"place"},{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[11,"decode","","",81,{"inputs":[{"name":"padding"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",81,{"inputs":[{"name":"padding"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"padding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"padding"}],"output":{"name":"padding"}}],[11,"none","","No padding.",81,{"inputs":[{"name":"padding"}],"output":{"name":"padding"}}],[11,"offset_from","","Determine the offset for the given `Place`.",81,{"inputs":[{"name":"padding"},{"name":"place"}],"output":{"name":"point"}}],[11,"decode","","",80,{"inputs":[{"name":"margin"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",80,{"inputs":[{"name":"margin"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",80,{"inputs":[{"name":"margin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"margin"}],"output":{"name":"margin"}}],[11,"decode","","",83,{"inputs":[{"name":"theme"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",83,{"inputs":[{"name":"theme"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"theme"}],"output":{"name":"theme"}}],[11,"fmt","","",83,{"inputs":[{"name":"theme"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",82,{"inputs":[{"name":"align"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",82,{"inputs":[{"name":"align"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"align"}],"output":{"name":"align"}}],[11,"fmt","","",82,{"inputs":[{"name":"align"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","The default theme if not loading from file.",83,{"inputs":[{"name":"theme"}],"output":{"name":"theme"}}],[11,"load","","Load a theme from file.",83,{"inputs":[{"name":"theme"},{"name":"path"}],"output":{"name":"result"}}],[11,"save","","Save a theme to file.",83,{"inputs":[{"name":"theme"},{"name":"path"}],"output":{"name":"result"}}],[11,"decode","","",95,{"inputs":[{"name":"uiid"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",95,{"inputs":[{"name":"uiid"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"uiid"},{"name":"uiid"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"uiid"},{"name":"uiid"}],"output":{"name":"bool"}}],[11,"fmt","","",95,{"inputs":[{"name":"uiid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"uiid"}],"output":{"name":"uiid"}}],[11,"fmt","","",85,{"inputs":[{"name":"userinput"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"userinput"}],"output":{"name":"userinput"}}],[11,"char_width","","Return the width of a character.",101,{"inputs":[{"name":"glyphcache"},{"name":"fontsize"},{"name":"char"}],"output":{"name":"f64"}}],[11,"width","","Return the width of the given text.",101,{"inputs":[{"name":"glyphcache"},{"name":"fontsize"},{"name":"str"}],"output":{"name":"f64"}}],[11,"new","core::cell","Creates a new `RefCell` containing `value`.",102,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",102,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",102,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",102,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",102,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",102,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"fmt","core::num","",103,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",103,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",103,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",103,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",104,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"from_u64","","Makes a bignum from `u64` value.",104,{"inputs":[{"name":"big32x36"},{"name":"u64"}],"output":{"name":"big32x36"}}],[11,"is_zero","","Returns true if the bignum is zero.",104,{"inputs":[{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",104,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",104,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",104,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",104,{"inputs":[{"name":"big32x36"},{"name":"usize"}],"output":{"name":"big32x36"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",104,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",104,null],[11,"eq","","",104,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",104,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"option"}}],[11,"cmp","","",104,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"ordering"}}],[11,"clone","","",104,{"inputs":[{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"fmt","","",104,{"inputs":[{"name":"big32x36"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",105,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",105,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"is_zero","","Returns true if the bignum is zero.",105,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",105,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",105,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",105,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",105,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",105,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",105,null],[11,"eq","","",105,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",105,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",105,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",105,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",105,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",106,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",106,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",107,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",107,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",108,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",109,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",109,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",109,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",109,null],[11,"clone","","",110,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",110,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",110,null],[11,"fmt","","",111,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",111,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num","",112,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",112,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",113,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",113,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",114,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",114,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",115,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",115,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",116,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",116,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",117,null],[11,"fmt","","",117,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",117,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",117,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",117,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",117,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",117,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",117,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",117,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",117,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",117,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",118,null],[11,"get","","Dereferences the content.",118,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",118,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",118,null],[11,"fmt","","",118,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","core::marker","",119,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",119,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",119,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",119,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",119,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",119,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",119,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",120,null],[11,"eq","","",120,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",120,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",120,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",120,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",121,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",121,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",122,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",122,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",123,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",123,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",124,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",124,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",125,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",125,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",125,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",125,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",125,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","conrod","",126,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",126,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",126,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",126,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",126,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",126,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",126,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",127,null],[11,"fmt","","",127,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",127,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",127,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::atomic","",128,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",129,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",130,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",131,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",132,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",128,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",128,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",128,null],[11,"swap","","Stores a value into the bool, returning the old value.",128,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",128,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",128,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",128,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",128,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",128,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",129,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",129,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",129,null],[11,"swap","","Stores a value into the isize, returning the old value.",129,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",129,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",129,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",129,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",129,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",129,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",129,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",130,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",130,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",130,null],[11,"swap","","Stores a value into the usize, returning the old value.",130,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",130,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",130,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",130,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",130,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",130,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",130,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",131,null],[11,"load","","Loads a value from the pointer.",131,null],[11,"store","","Stores a value into the pointer.",131,null],[11,"swap","","Stores a value into the pointer, returning the old value.",131,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",131,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",133,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",133,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",133,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",133,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",133,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",133,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",133,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",134,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"clone","","",102,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",102,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",102,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",135,null],[11,"clone","","",135,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",136,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",136,{"inputs":[{"name":"ref"},{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",136,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for a optional component of the borrowed data, e.g. an\nenum variant.",136,{"inputs":[{"name":"ref"},{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",137,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for a optional component of the borrowed data, e.g.\nan enum variant.",137,{"inputs":[{"name":"refmut"},{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",138,null],[11,"deref","","",137,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",137,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",139,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",139,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",139,null],[11,"clone","core::char","",140,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",141,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",140,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",142,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",143,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",142,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",144,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",144,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",144,null],[11,"next_back","","",144,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",144,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",144,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",145,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",145,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",145,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",146,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",146,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",146,null],[11,"next_back","","",146,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",146,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",146,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",147,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",147,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",147,null],[11,"indexable","","",147,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",147,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",148,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",148,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",148,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",148,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",148,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",148,null],[11,"next_back","","",148,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",148,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",148,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",149,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",149,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",149,null],[11,"next_back","","",149,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",149,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",149,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",150,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",150,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",150,null],[11,"next_back","","",150,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",150,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",150,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",151,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",151,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",151,null],[11,"next_back","","",151,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",152,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",152,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",152,null],[11,"next_back","","",152,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",153,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",153,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",153,null],[11,"nth","","",153,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",153,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",153,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",153,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",153,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",154,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",154,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",154,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",154,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",154,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",154,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",154,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",154,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",155,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",155,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",155,null],[11,"clone","","",156,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",156,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",156,null],[11,"clone","","",157,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",157,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",157,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",157,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",157,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",157,null],[11,"indexable","","",157,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",157,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",158,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",158,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",158,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",158,null],[11,"indexable","","",158,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",158,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",159,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",159,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",159,null],[11,"clone","","",160,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",160,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",160,null],[11,"next_back","","",160,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",161,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",161,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",161,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",161,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",161,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",161,null],[11,"next_back","","",161,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",161,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",161,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",161,null],[11,"clone","","",162,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",162,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",162,null],[11,"next_back","","",162,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",162,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",162,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",163,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",163,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",163,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",163,null],[11,"clone","","",164,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",123,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",122,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",164,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",164,null],[11,"clone","","",165,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",165,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",165,null],[11,"next_back","","",165,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",164,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",164,null],[11,"next","core::ops","",122,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",123,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",166,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",166,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",166,null],[11,"next_back","","",166,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",166,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",166,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",167,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",167,null],[11,"next_back","","",167,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",167,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",167,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",167,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"clone","","",168,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",168,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",168,null],[11,"next_back","","",168,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",168,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",169,null],[11,"fmt","","",169,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",169,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",169,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",169,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",169,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",169,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",169,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",169,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",169,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",169,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",169,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",169,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",169,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",169,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",169,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",169,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",169,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",169,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",169,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",169,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",169,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",169,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",169,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",169,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",169,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",169,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",170,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",170,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",170,null],[11,"next_back","","",170,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",171,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",171,null],[11,"next_back","","",171,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",171,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",172,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",172,null],[11,"next_back","","",172,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",173,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",173,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",173,null],[11,"next_back","","",173,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",169,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",174,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",175,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",176,null],[11,"fmt","","",176,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",176,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",176,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",176,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",176,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",176,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",176,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",176,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",176,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",176,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",176,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",176,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",176,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",176,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",176,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",176,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",176,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",176,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",176,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",176,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",176,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",176,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",177,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",177,null],[11,"next_back","","",177,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",177,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",178,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",178,null],[11,"next_back","","",178,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",179,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",179,null],[11,"next_back","","",179,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",176,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",180,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",180,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",181,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",182,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",182,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",183,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",183,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",184,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",184,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",185,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",186,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",186,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",187,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",187,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",188,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",188,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",189,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",189,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",190,null],[11,"next","","",190,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",190,null],[11,"count","","",190,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",190,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",190,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",190,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",190,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"indexable","","",190,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",190,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",191,null],[11,"next","","",191,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",191,null],[11,"count","","",191,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",191,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",191,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",191,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",192,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",192,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",192,null],[11,"next_back","","",192,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",192,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",193,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",193,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",193,null],[11,"next_back","","",193,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",194,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",194,null],[11,"next","","",195,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",195,null],[11,"next","","",196,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",196,null],[11,"next","","",197,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",197,null],[11,"next","","",198,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",198,null],[11,"clone","","",199,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",199,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",199,null],[11,"next_back","","",199,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"indexable","","",199,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"idx","","",199,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",200,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",200,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",200,null],[11,"next_back","","",200,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"indexable","","",200,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"idx","","",200,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",201,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",201,null],[11,"next_back","","",201,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",202,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",202,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",202,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",203,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",204,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",203,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",203,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",203,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",205,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",205,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",205,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",205,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",205,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",205,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",205,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",205,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",206,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",206,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",206,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",206,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",206,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",206,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",206,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",206,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",207,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",207,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",207,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",207,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",207,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",207,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",207,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",207,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",208,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",208,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",209,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",209,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",210,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",210,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",208,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",208,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",208,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",208,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",208,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",211,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",211,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",212,{"inputs":[{"name":"matchonly"}],"output":{"name":"bool"}}],[11,"rejecting","","",212,null],[11,"matching","","",212,null],[11,"use_early_reject","","",213,{"inputs":[{"name":"rejectandmatch"}],"output":{"name":"bool"}}],[11,"rejecting","","",213,null],[11,"matching","","",213,null],[11,"eq","core::str","",214,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",214,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",214,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",214,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",214,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",215,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",215,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",215,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",215,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",215,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",215,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",216,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",216,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",216,null],[11,"next_back","","",216,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",217,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",217,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",217,null],[11,"next_back","","",217,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",218,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",219,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",219,null],[11,"call_mut","","",219,null],[11,"call_once","","",219,null],[11,"next","","",218,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",218,null],[11,"next_back","","",218,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",218,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",220,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",221,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",221,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",222,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",222,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",221,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",222,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",223,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",223,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",224,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",224,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",223,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",224,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",225,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",226,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",226,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",227,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",227,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",228,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",229,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",229,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",230,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",230,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",229,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",230,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",231,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",232,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",232,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",233,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",233,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",232,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",233,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",234,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",234,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",234,null],[11,"next_back","","",234,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",235,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",236,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",236,null],[11,"call_mut","","",236,null],[11,"call_once","","",236,null],[11,"next","","",235,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",235,null],[11,"next_back","","",235,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",237,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",238,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",238,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",238,null],[11,"finish","","",238,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",238,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",238,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",239,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",239,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",239,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",240,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",240,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",240,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",241,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",241,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",241,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",242,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",242,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",242,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",243,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",243,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",243,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",244,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",244,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",244,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",245,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",245,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",246,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",247,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",247,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",248,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",248,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",248,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",249,null],[11,"entry","","Adds a new entry to the set output.",250,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",250,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",250,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",251,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",251,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",251,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",252,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",252,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",252,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",253,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",254,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",255,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",255,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",255,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",256,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",257,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",258,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",258,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",259,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",260,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",261,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",261,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",261,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",262,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",262,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",262,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",262,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",262,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",262,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",262,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",262,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",262,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",262,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",262,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",262,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",262,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",262,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",262,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",262,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",262,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",258,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",120,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",133,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","conrod","",101,{"inputs":[{"name":"glyphcache"}],"output":{"name":"refcell"}}],[11,"deref_mut","","",101,{"inputs":[{"name":"glyphcache"}],"output":{"name":"refcell"}}],[11,"new","","Constructor for a UiContext.",84,{"inputs":[{"name":"ui"},{"name":"c"},{"name":"theme"}],"output":{"name":"ui"}}],[11,"widget_size","","Return the dimensions of a Canvas.",84,{"inputs":[{"name":"ui"},{"name":"widgetid"}],"output":{"name":"dimensions"}}],[11,"canvas_size","","Return the dimensions of a Canvas.",84,{"inputs":[{"name":"ui"},{"name":"canvasid"}],"output":{"name":"dimensions"}}],[11,"handle_event","","Handle game events and update the state.",84,{"inputs":[{"name":"ui"},{"name":"e"}],"output":null}],[11,"pick_canvas","","If the given Point is currently on a Canvas, return the Id of that canvas.",84,{"inputs":[{"name":"ui"},{"name":"point"}],"output":{"name":"option"}}],[11,"get_xy","","Get the centred xy coords for some given `Dimension`s, `Position` and alignment.",84,{"inputs":[{"name":"ui"},{"name":"position"},{"name":"dimensions"},{"name":"horizontalalign"},{"name":"verticalalign"}],"output":{"name":"point"}}],[11,"draw","","Draw the `Ui` in it's current state.\n- The order of drawing is as follows:\n    1. Canvas splits.\n    2. Widgets on Canvas splits.\n    3. Floating Canvasses.\n    4. Widgets on Floating Canvasses.\n- Widgets are sorted by capturing and then render depth (depth first).\n- Construct the elmesque `Renderer` for rendering the elm `Element`s.\n- Render all widgets.",84,{"inputs":[{"name":"ui"},{"name":"context"},{"name":"g"}],"output":null}],[0,"utils","","",null,null],[5,"partial_min","conrod::utils","Compare to PartialOrd values and return the min.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"partial_max","","Compare to PartialOrd values and return the min.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"clamp","","Clamp a value between a given min and max.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"is_over_rect","","Return whether or not a given point is over a rectangle at a given point on a cartesian plane.",null,{"inputs":[{"name":"point"},{"name":"point"},{"name":"dimensions"}],"output":{"name":"bool"}}],[5,"percentage","","Get value percentage between max and min.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"f32"}}],[5,"value_from_perc","","Adjust the value to the given percentage.",null,{"inputs":[{"name":"f32"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"map_range","","Map a value from a given range to a new given range.",null,{"inputs":[{"name":"x"},{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"}],"output":{"name":"y"}}],[5,"val_to_string","","Get a suitable string from the value, its max and the pixel range.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"usize"}],"output":{"name":"string"}}],[11,"decode","conrod","",69,{"inputs":[{"name":"buttonstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",69,{"inputs":[{"name":"buttonstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"buttonstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"buttonstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"buttonstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"buttonstyle"}],"output":{"name":"style"}}],[11,"new","","Create a button context to be built upon.",263,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"react","","Set the reaction for the Button. The reaction will be triggered upon release of the button.",263,{"inputs":[{"name":"button"},{"name":"f"}],"output":{"name":"self"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",263,{"inputs":[{"name":"button"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",263,{"inputs":[{"name":"button"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",263,{"inputs":[{"name":"button"}],"output":{"name":"str"}}],[11,"init_state","","",263,{"inputs":[{"name":"button"}],"output":{"name":"state"}}],[11,"style","","",263,{"inputs":[{"name":"button"}],"output":{"name":"style"}}],[11,"canvas_id","","",263,{"inputs":[{"name":"button"}],"output":{"name":"option"}}],[11,"update","","Update the state of the Button.",263,{"inputs":[{"name":"button"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given Button State.",263,{"inputs":[{"name":"button"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"new","","Construct the default Style.",69,{"inputs":[{"name":"buttonstyle"}],"output":{"name":"style"}}],[11,"width","","Get the width of the Widget.",69,{"inputs":[{"name":"buttonstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"height","","Get the height of the Widget.",69,{"inputs":[{"name":"buttonstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"color","","Get the Color for an Element.",69,{"inputs":[{"name":"buttonstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"frame","","Get the frame for an Element.",69,{"inputs":[{"name":"buttonstyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"frame_color","","Get the frame Color for an Element.",69,{"inputs":[{"name":"buttonstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_color","","Get the label Color for an Element.",69,{"inputs":[{"name":"buttonstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_font_size","","Get the label font size for an Element.",69,{"inputs":[{"name":"buttonstyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"color","","",263,{"inputs":[{"name":"button"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",263,{"inputs":[{"name":"button"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",263,{"inputs":[{"name":"button"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",263,{"inputs":[{"name":"button"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",263,{"inputs":[{"name":"button"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",263,{"inputs":[{"name":"button"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",263,{"inputs":[{"name":"button"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",263,{"inputs":[{"name":"button"}],"output":{"name":"position"}}],[11,"horizontal_align","","",263,{"inputs":[{"name":"button"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",263,{"inputs":[{"name":"button"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",263,{"inputs":[{"name":"button"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",263,{"inputs":[{"name":"button"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",263,{"inputs":[{"name":"button"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",263,{"inputs":[{"name":"button"}],"output":{"name":"depth"}}],[11,"width","","",263,{"inputs":[{"name":"button"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",263,{"inputs":[{"name":"button"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",263,{"inputs":[{"name":"button"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",263,{"inputs":[{"name":"button"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"decode","","",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"dropdownliststyle"}],"output":{"name":"style"}}],[11,"eq","","",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"new","","Construct a new DropDownList.",264,{"inputs":[{"name":"dropdownlist"},{"name":"vec"},{"name":"option"}],"output":{"name":"dropdownlist"}}],[11,"react","","Set the DropDownList's reaction. It will be triggered upon selection of a list item.",264,{"inputs":[{"name":"dropdownlist"},{"name":"f"}],"output":{"name":"dropdownlist"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",264,{"inputs":[{"name":"dropdownlist"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",264,{"inputs":[{"name":"dropdownlist"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"max_visible_items","","Set the maximum height of the DropDownList (before the scrollbar appears) as a number of\nitems.",264,{"inputs":[{"name":"dropdownlist"},{"name":"usize"}],"output":{"name":"self"}}],[11,"max_visible_height","","Set the maximum height of the DropDownList (before the scrollbar appears) as a scalar\nheight.",264,{"inputs":[{"name":"dropdownlist"},{"name":"f64"}],"output":{"name":"self"}}],[11,"unique_kind","","",264,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"str"}}],[11,"init_state","","",264,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"state"}}],[11,"style","","",264,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"style"}}],[11,"canvas_id","","",264,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"option"}}],[11,"capture_mouse","","Capture the mouse if the menu was opened.",264,{"inputs":[{"name":"dropdownlist"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_mouse","","Uncapture the mouse if the menu was closed.",264,{"inputs":[{"name":"dropdownlist"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"update","","Update the state of the DropDownList.",264,{"inputs":[{"name":"dropdownlist"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given DropDownList State.",264,{"inputs":[{"name":"dropdownlist"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"new","","Construct the default Style.",70,{"inputs":[{"name":"dropdownliststyle"}],"output":{"name":"style"}}],[11,"width","","Get the width of the Widget.",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"height","","Get the height of the Widget.",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"color","","Get the Color for an Element.",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"frame","","Get the frame for an Element.",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"frame_color","","Get the frame Color for an Element.",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_color","","Get the label Color for an Element.",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_font_size","","Get the label font size for an Element.",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"max_visible_height","","Get the maximum visible height of the DropDownList.",70,{"inputs":[{"name":"dropdownliststyle"},{"name":"theme"}],"output":{"name":"option"}}],[11,"color","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",264,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"position"}}],[11,"horizontal_align","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",264,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"depth"}}],[11,"width","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"height","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_width","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"scalar"}}],[11,"get_height","","",264,{"inputs":[{"name":"dropdownlist"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"decode","","",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"envelopeeditorstyle"}],"output":{"name":"style"}}],[11,"point_radius","","Set the radius of the envelope point circle.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"f64"}],"output":{"name":"envelopeeditor"}}],[11,"line_width","","Set the width of the envelope lines.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"f64"}],"output":{"name":"envelopeeditor"}}],[11,"value_font_size","","Set the font size for the displayed values.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"fontsize"}],"output":{"name":"envelopeeditor"}}],[11,"skew_y","","Set the value skewing for the envelope's y-axis. This is useful for displaying exponential\nranges such as frequency.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"f32"}],"output":{"name":"envelopeeditor"}}],[11,"new","","Construct an EnvelopeEditor widget.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"vec"},{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"}],"output":{"name":"envelopeeditor"}}],[11,"react","","Set the reaction for the EnvelopeEditor.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"f"}],"output":{"name":"envelopeeditor"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",265,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"str"}}],[11,"init_state","","",265,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"state"}}],[11,"style","","",265,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"style"}}],[11,"canvas_id","","",265,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"option"}}],[11,"capture_mouse","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_mouse","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"update","","Update the state of the EnvelopeEditor's cached state.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given EnvelopeEditor State.",265,{"inputs":[{"name":"envelopeeditor"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"new","","Construct the default Style.",71,{"inputs":[{"name":"envelopeeditorstyle"}],"output":{"name":"style"}}],[11,"width","","Get the width of the Widget.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"height","","Get the height of the Widget.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"color","","Get the Color for an Element.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"frame","","Get the frame for an Element.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"frame_color","","Get the frame Color for an Element.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_color","","Get the label Color for an Element.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_font_size","","Get the label font size for an Element.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"value_font_size","","Get the value font size for an Element.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"point_radius","","Get the point radius size for an Element.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"line_width","","Get the point radius size for an Element.",71,{"inputs":[{"name":"envelopeeditorstyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"color","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",265,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"position"}}],[11,"horizontal_align","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",265,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"depth"}}],[11,"width","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"height","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_width","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"scalar"}}],[11,"get_height","","",265,{"inputs":[{"name":"envelopeeditor"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"fmt","","",266,{"inputs":[{"name":"label"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",266,{"inputs":[{"name":"label"}],"output":{"name":"label"}}],[11,"decode","","",267,{"inputs":[{"name":"labelstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",267,{"inputs":[{"name":"labelstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",267,{"inputs":[{"name":"labelstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",267,{"inputs":[{"name":"labelstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"fmt","","",267,{"inputs":[{"name":"labelstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",267,{"inputs":[{"name":"labelstyle"}],"output":{"name":"style"}}],[11,"new","","Construct a new Label widget.",266,{"inputs":[{"name":"label"},{"name":"str"}],"output":{"name":"label"}}],[11,"font_size","","Set the font size for the label.",266,{"inputs":[{"name":"label"},{"name":"fontsize"}],"output":{"name":"label"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",266,{"inputs":[{"name":"label"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",266,{"inputs":[{"name":"label"}],"output":{"name":"str"}}],[11,"init_state","","",266,{"inputs":[{"name":"label"}],"output":{"name":"state"}}],[11,"style","","",266,{"inputs":[{"name":"label"}],"output":{"name":"style"}}],[11,"canvas_id","","",266,{"inputs":[{"name":"label"}],"output":{"name":"option"}}],[11,"update","","Update the state of the Label.",266,{"inputs":[{"name":"label"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element for the Label.",266,{"inputs":[{"name":"label"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"new","","Construct the default Style.",267,{"inputs":[{"name":"labelstyle"}],"output":{"name":"style"}}],[11,"color","","Get the Color for an Element.",267,{"inputs":[{"name":"labelstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"font_size","","Get the label font size for an Element.",267,{"inputs":[{"name":"labelstyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"color","","",266,{"inputs":[{"name":"label"},{"name":"color"}],"output":{"name":"self"}}],[11,"position","","",266,{"inputs":[{"name":"label"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",266,{"inputs":[{"name":"label"}],"output":{"name":"position"}}],[11,"horizontal_align","","",266,{"inputs":[{"name":"label"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",266,{"inputs":[{"name":"label"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",266,{"inputs":[{"name":"label"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",266,{"inputs":[{"name":"label"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",266,{"inputs":[{"name":"label"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",266,{"inputs":[{"name":"label"}],"output":{"name":"depth"}}],[11,"width","","",266,{"inputs":[{"name":"label"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",266,{"inputs":[{"name":"label"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",266,{"inputs":[{"name":"label"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",266,{"inputs":[{"name":"label"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"clone","","",268,{"inputs":[{"name":"widgetmatrix"}],"output":{"name":"matrix"}}],[11,"new","","Create a widget matrix context.",268,{"inputs":[{"name":"widgetmatrix"},{"name":"usize"},{"name":"usize"}],"output":{"name":"matrix"}}],[11,"each_widget","","The reaction called for each widget in the matrix. This should be called following all\nbuilder methods.",268,{"inputs":[{"name":"widgetmatrix"},{"name":"ui"},{"name":"f"}],"output":null}],[11,"cell_padding","","A builder method for adding padding to the cell.",268,{"inputs":[{"name":"widgetmatrix"},{"name":"f64"},{"name":"f64"}],"output":{"name":"matrix"}}],[11,"position","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",268,{"inputs":[{"name":"widgetmatrix"}],"output":{"name":"position"}}],[11,"horizontal_align","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",268,{"inputs":[{"name":"widgetmatrix"}],"output":{"name":"depth"}}],[11,"width","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",268,{"inputs":[{"name":"widgetmatrix"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"decode","","",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"fmt","","",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"numberdialerstyle"}],"output":{"name":"style"}}],[11,"new","","Construct a new NumberDialer widget.",269,{"inputs":[{"name":"numberdialer"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"u8"}],"output":{"name":"numberdialer"}}],[11,"react","","Set the reaction for the NumberDialer. It will be triggered when the value is updated or if\nthe mouse button is released while the cursor is above the widget.",269,{"inputs":[{"name":"numberdialer"},{"name":"f"}],"output":{"name":"numberdialer"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",269,{"inputs":[{"name":"numberdialer"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",269,{"inputs":[{"name":"numberdialer"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",269,{"inputs":[{"name":"numberdialer"}],"output":{"name":"str"}}],[11,"init_state","","",269,{"inputs":[{"name":"numberdialer"}],"output":{"name":"state"}}],[11,"style","","",269,{"inputs":[{"name":"numberdialer"}],"output":{"name":"style"}}],[11,"canvas_id","","",269,{"inputs":[{"name":"numberdialer"}],"output":{"name":"option"}}],[11,"update","","Update the state of the NumberDialer.",269,{"inputs":[{"name":"numberdialer"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given NumberDialer State.",269,{"inputs":[{"name":"numberdialer"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"new","","Construct the default Style.",72,{"inputs":[{"name":"numberdialerstyle"}],"output":{"name":"style"}}],[11,"width","","Get the width of the Widget.",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"height","","Get the height of the Widget.",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"color","","Get the Color for an Element.",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"frame","","Get the frame for an Element.",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"frame_color","","Get the frame Color for an Element.",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_color","","Get the label Color for an Element.",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_font_size","","Get the label font size for an Element.",72,{"inputs":[{"name":"numberdialerstyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"color","","",269,{"inputs":[{"name":"numberdialer"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",269,{"inputs":[{"name":"numberdialer"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",269,{"inputs":[{"name":"numberdialer"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",269,{"inputs":[{"name":"numberdialer"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",269,{"inputs":[{"name":"numberdialer"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",269,{"inputs":[{"name":"numberdialer"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",269,{"inputs":[{"name":"numberdialer"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",269,{"inputs":[{"name":"numberdialer"}],"output":{"name":"position"}}],[11,"horizontal_align","","",269,{"inputs":[{"name":"numberdialer"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",269,{"inputs":[{"name":"numberdialer"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",269,{"inputs":[{"name":"numberdialer"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",269,{"inputs":[{"name":"numberdialer"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",269,{"inputs":[{"name":"numberdialer"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",269,{"inputs":[{"name":"numberdialer"}],"output":{"name":"depth"}}],[11,"width","","",269,{"inputs":[{"name":"numberdialer"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"height","","",269,{"inputs":[{"name":"numberdialer"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_width","","",269,{"inputs":[{"name":"numberdialer"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"scalar"}}],[11,"get_height","","",269,{"inputs":[{"name":"numberdialer"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"decode","","",73,{"inputs":[{"name":"sliderstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",73,{"inputs":[{"name":"sliderstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"sliderstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"sliderstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"sliderstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"sliderstyle"}],"output":{"name":"style"}}],[11,"new","","Construct a new Slider widget.",270,{"inputs":[{"name":"slider"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"slider"}}],[11,"skew","","Set the amount in which the slider's display should be skewed.\nHigher skew amounts (above 1.0) will weight lower values.\nLower skew amounts (below 1.0) will weight heigher values.\nAll skew amounts should be greater than 0.0.",270,{"inputs":[{"name":"slider"},{"name":"f32"}],"output":{"name":"slider"}}],[11,"react","","Set the reaction for the Slider. It will be triggered if the value is updated or if the\nmouse button is released while the cursor is above the rectangle.",270,{"inputs":[{"name":"slider"},{"name":"f"}],"output":{"name":"slider"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",270,{"inputs":[{"name":"slider"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",270,{"inputs":[{"name":"slider"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",270,{"inputs":[{"name":"slider"}],"output":{"name":"str"}}],[11,"init_state","","",270,{"inputs":[{"name":"slider"}],"output":{"name":"state"}}],[11,"style","","",270,{"inputs":[{"name":"slider"}],"output":{"name":"style"}}],[11,"canvas_id","","",270,{"inputs":[{"name":"slider"}],"output":{"name":"option"}}],[11,"update","","Update the state of the Slider.",270,{"inputs":[{"name":"slider"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given Slider State.",270,{"inputs":[{"name":"slider"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"new","","Construct the default Style.",73,{"inputs":[{"name":"sliderstyle"}],"output":{"name":"style"}}],[11,"width","","Get the width of the Widget.",73,{"inputs":[{"name":"sliderstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"height","","Get the height of the Widget.",73,{"inputs":[{"name":"sliderstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"color","","Get the Color for an Element.",73,{"inputs":[{"name":"sliderstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"frame","","Get the frame for an Element.",73,{"inputs":[{"name":"sliderstyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"frame_color","","Get the frame Color for an Element.",73,{"inputs":[{"name":"sliderstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_color","","Get the label Color for an Element.",73,{"inputs":[{"name":"sliderstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_font_size","","Get the label font size for an Element.",73,{"inputs":[{"name":"sliderstyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"color","","",270,{"inputs":[{"name":"slider"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",270,{"inputs":[{"name":"slider"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",270,{"inputs":[{"name":"slider"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",270,{"inputs":[{"name":"slider"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",270,{"inputs":[{"name":"slider"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",270,{"inputs":[{"name":"slider"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"horizontal_align","","",270,{"inputs":[{"name":"slider"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",270,{"inputs":[{"name":"slider"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"position","","",270,{"inputs":[{"name":"slider"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",270,{"inputs":[{"name":"slider"}],"output":{"name":"position"}}],[11,"get_horizontal_align","","",270,{"inputs":[{"name":"slider"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",270,{"inputs":[{"name":"slider"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",270,{"inputs":[{"name":"slider"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",270,{"inputs":[{"name":"slider"}],"output":{"name":"depth"}}],[11,"width","","",270,{"inputs":[{"name":"slider"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"height","","",270,{"inputs":[{"name":"slider"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_width","","",270,{"inputs":[{"name":"slider"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"scalar"}}],[11,"get_height","","",270,{"inputs":[{"name":"slider"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"decode","","",74,{"inputs":[{"name":"textboxstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",74,{"inputs":[{"name":"textboxstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"textboxstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"textboxstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"textboxstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"textboxstyle"}],"output":{"name":"style"}}],[11,"new","","Construct a TextBox widget.",271,{"inputs":[{"name":"textbox"},{"name":"string"}],"output":{"name":"textbox"}}],[11,"font_size","","Set the font size of the text.",271,{"inputs":[{"name":"textbox"},{"name":"fontsize"}],"output":{"name":"textbox"}}],[11,"react","","Set the reaction for the TextBox. It will be triggered upon pressing of the\n`Enter`/`Return` key.",271,{"inputs":[{"name":"textbox"},{"name":"f"}],"output":{"name":"textbox"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",271,{"inputs":[{"name":"textbox"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",271,{"inputs":[{"name":"textbox"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",271,{"inputs":[{"name":"textbox"}],"output":{"name":"str"}}],[11,"init_state","","",271,{"inputs":[{"name":"textbox"}],"output":{"name":"state"}}],[11,"style","","",271,{"inputs":[{"name":"textbox"}],"output":{"name":"style"}}],[11,"canvas_id","","",271,{"inputs":[{"name":"textbox"}],"output":{"name":"option"}}],[11,"capture_keyboard","","Capture the keyboard if the Interaction has become `Captured`.",271,{"inputs":[{"name":"textbox"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_keyboard","","Uncapture the keyboard if the Interaction has become `Uncaptured`.",271,{"inputs":[{"name":"textbox"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"update","","Update the state of the TextBox.",271,{"inputs":[{"name":"textbox"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given TextBox State.",271,{"inputs":[{"name":"textbox"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"new","","Construct the default Style.",74,{"inputs":[{"name":"textboxstyle"}],"output":{"name":"style"}}],[11,"width","","Get the width of the Widget.",74,{"inputs":[{"name":"textboxstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"height","","Get the height of the Widget.",74,{"inputs":[{"name":"textboxstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"color","","Get the Color for an Element.",74,{"inputs":[{"name":"textboxstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"frame","","Get the frame for an Element.",74,{"inputs":[{"name":"textboxstyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"frame_color","","Get the frame Color for an Element.",74,{"inputs":[{"name":"textboxstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"font_size","","Get the label font size for an Element.",74,{"inputs":[{"name":"textboxstyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"color","","",271,{"inputs":[{"name":"textbox"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",271,{"inputs":[{"name":"textbox"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",271,{"inputs":[{"name":"textbox"},{"name":"color"}],"output":{"name":"self"}}],[11,"position","","",271,{"inputs":[{"name":"textbox"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",271,{"inputs":[{"name":"textbox"}],"output":{"name":"position"}}],[11,"horizontal_align","","",271,{"inputs":[{"name":"textbox"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",271,{"inputs":[{"name":"textbox"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",271,{"inputs":[{"name":"textbox"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",271,{"inputs":[{"name":"textbox"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",271,{"inputs":[{"name":"textbox"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",271,{"inputs":[{"name":"textbox"}],"output":{"name":"depth"}}],[11,"width","","",271,{"inputs":[{"name":"textbox"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"height","","",271,{"inputs":[{"name":"textbox"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_width","","",271,{"inputs":[{"name":"textbox"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"scalar"}}],[11,"get_height","","",271,{"inputs":[{"name":"textbox"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"decode","","",75,{"inputs":[{"name":"togglestyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",75,{"inputs":[{"name":"togglestyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"togglestyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"togglestyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"togglestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"togglestyle"}],"output":{"name":"style"}}],[11,"new","","Construct a new Toggle widget.",272,{"inputs":[{"name":"toggle"},{"name":"bool"}],"output":{"name":"toggle"}}],[11,"react","","Set the reaction for the Toggle. It will be triggered upon release of the button.",272,{"inputs":[{"name":"toggle"},{"name":"f"}],"output":{"name":"self"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",272,{"inputs":[{"name":"toggle"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",272,{"inputs":[{"name":"toggle"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",272,{"inputs":[{"name":"toggle"}],"output":{"name":"str"}}],[11,"init_state","","",272,{"inputs":[{"name":"toggle"}],"output":{"name":"state"}}],[11,"style","","",272,{"inputs":[{"name":"toggle"}],"output":{"name":"style"}}],[11,"canvas_id","","",272,{"inputs":[{"name":"toggle"}],"output":{"name":"option"}}],[11,"update","","Update the state of the Toggle.",272,{"inputs":[{"name":"toggle"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given Toggle State.",272,{"inputs":[{"name":"toggle"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"new","","Construct the default Style.",75,{"inputs":[{"name":"togglestyle"}],"output":{"name":"style"}}],[11,"width","","Get the width of the Widget.",75,{"inputs":[{"name":"togglestyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"height","","Get the height of the Widget.",75,{"inputs":[{"name":"togglestyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"color","","Get the Color for an Element.",75,{"inputs":[{"name":"togglestyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"frame","","Get the frame for an Element.",75,{"inputs":[{"name":"togglestyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"frame_color","","Get the frame Color for an Element.",75,{"inputs":[{"name":"togglestyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_color","","Get the label Color for an Element.",75,{"inputs":[{"name":"togglestyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_font_size","","Get the label font size for an Element.",75,{"inputs":[{"name":"togglestyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"color","","",272,{"inputs":[{"name":"toggle"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",272,{"inputs":[{"name":"toggle"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",272,{"inputs":[{"name":"toggle"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",272,{"inputs":[{"name":"toggle"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",272,{"inputs":[{"name":"toggle"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",272,{"inputs":[{"name":"toggle"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",272,{"inputs":[{"name":"toggle"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",272,{"inputs":[{"name":"toggle"}],"output":{"name":"position"}}],[11,"horizontal_align","","",272,{"inputs":[{"name":"toggle"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",272,{"inputs":[{"name":"toggle"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",272,{"inputs":[{"name":"toggle"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",272,{"inputs":[{"name":"toggle"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",272,{"inputs":[{"name":"toggle"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",272,{"inputs":[{"name":"toggle"}],"output":{"name":"depth"}}],[11,"width","","",272,{"inputs":[{"name":"toggle"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"height","","",272,{"inputs":[{"name":"toggle"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_width","","",272,{"inputs":[{"name":"toggle"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"scalar"}}],[11,"get_height","","",272,{"inputs":[{"name":"toggle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"decode","","",76,{"inputs":[{"name":"xypadstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",76,{"inputs":[{"name":"xypadstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"xypadstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"xypadstyle"},{"name":"style"}],"output":{"name":"bool"}}],[11,"fmt","","",76,{"inputs":[{"name":"xypadstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"xypadstyle"}],"output":{"name":"style"}}],[11,"new","","Construct a new XYPad widget.",273,{"inputs":[{"name":"xypad"},{"name":"x"},{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"},{"name":"y"}],"output":{"name":"xypad"}}],[11,"line_width","","Set the width of the XYPad's crosshair lines.",273,{"inputs":[{"name":"xypad"},{"name":"f64"}],"output":{"name":"xypad"}}],[11,"value_font_size","","Set the font size for the displayed crosshair value.",273,{"inputs":[{"name":"xypad"},{"name":"fontsize"}],"output":{"name":"xypad"}}],[11,"react","","Set the reaction for the XYPad. It will be triggered when the value is updated or if the\nmouse button is released while the cursor is above the rectangle.",273,{"inputs":[{"name":"xypad"},{"name":"f"}],"output":{"name":"self"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",273,{"inputs":[{"name":"xypad"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",273,{"inputs":[{"name":"xypad"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",273,{"inputs":[{"name":"xypad"}],"output":{"name":"str"}}],[11,"init_state","","",273,{"inputs":[{"name":"xypad"}],"output":{"name":"state"}}],[11,"style","","",273,{"inputs":[{"name":"xypad"}],"output":{"name":"style"}}],[11,"canvas_id","","",273,{"inputs":[{"name":"xypad"}],"output":{"name":"option"}}],[11,"update","","Update the XYPad's cached state.",273,{"inputs":[{"name":"xypad"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given XYPad State.",273,{"inputs":[{"name":"xypad"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"new","","Construct the default Style.",76,{"inputs":[{"name":"xypadstyle"}],"output":{"name":"style"}}],[11,"width","","Get the width of the Widget.",76,{"inputs":[{"name":"xypadstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"height","","Get the height of the Widget.",76,{"inputs":[{"name":"xypadstyle"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"color","","Get the Color for an Element.",76,{"inputs":[{"name":"xypadstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"frame","","Get the frame for an Element.",76,{"inputs":[{"name":"xypadstyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"frame_color","","Get the frame Color for an Element.",76,{"inputs":[{"name":"xypadstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_color","","Get the label Color for an Element.",76,{"inputs":[{"name":"xypadstyle"},{"name":"theme"}],"output":{"name":"color"}}],[11,"label_font_size","","Get the label font size for an Element.",76,{"inputs":[{"name":"xypadstyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"value_font_size","","Get the value font size for an Element.",76,{"inputs":[{"name":"xypadstyle"},{"name":"theme"}],"output":{"name":"fontsize"}}],[11,"line_width","","Get the point radius size for an Element.",76,{"inputs":[{"name":"xypadstyle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"color","","",273,{"inputs":[{"name":"xypad"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",273,{"inputs":[{"name":"xypad"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",273,{"inputs":[{"name":"xypad"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",273,{"inputs":[{"name":"xypad"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",273,{"inputs":[{"name":"xypad"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",273,{"inputs":[{"name":"xypad"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",273,{"inputs":[{"name":"xypad"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",273,{"inputs":[{"name":"xypad"}],"output":{"name":"position"}}],[11,"horizontal_align","","",273,{"inputs":[{"name":"xypad"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",273,{"inputs":[{"name":"xypad"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",273,{"inputs":[{"name":"xypad"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",273,{"inputs":[{"name":"xypad"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",273,{"inputs":[{"name":"xypad"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",273,{"inputs":[{"name":"xypad"}],"output":{"name":"depth"}}],[11,"width","","",273,{"inputs":[{"name":"xypad"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"height","","",273,{"inputs":[{"name":"xypad"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_width","","",273,{"inputs":[{"name":"xypad"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"scalar"}}],[11,"get_height","","",273,{"inputs":[{"name":"xypad"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"eq","","",86,{"inputs":[{"name":"widgetstate"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"widgetstate"},{"name":"state"}],"output":{"name":"bool"}}],[6,"CanvasId","","Unique canvas identifier. Each canvas must use a unique `CanvasId` so that it's state can be\ncached within the `Ui` type. The reason we use a usize is because canvasses are cached within\na `Vec`, which is limited to a size of `usize` elements.",null,null],[6,"FontSize","","Font size used throughout Conrod.",null,null],[6,"Depth","","The depth at which the widget will be rendered. This determines the order of rendering where\nwidgets with a greater depth will be rendered first. 0.0 is the default depth.",null,null],[6,"Dimensions","","General use 2D spatial dimensions.",null,null],[6,"Point","","General use 2D spatial point.",null,null],[6,"WidgetId","","Unique widget identifier. Each widget must use a unique `WidgetId` so that it's state can be\ncached within the `Ui` type. The reason we use a usize is because widgets are cached within\na `Vec`, which is limited to a size of `usize` elements.",null,null],[8,"EnvelopePoint","","`EnvPoint` must be implemented for any type that is used as a 2D point within the\nEnvelopeEditor.",null,null],[16,"X","","A value on the X-axis of the envelope.",274,null],[16,"Y","","A value on the Y-axis of the envelope.",274,null],[10,"get_x","","Return the X value.",274,{"inputs":[{"name":"envelopepoint"}],"output":{"name":"x"}}],[10,"get_y","","Return the Y value.",274,{"inputs":[{"name":"envelopepoint"}],"output":{"name":"y"}}],[10,"set_x","","Set the X value.",274,{"inputs":[{"name":"envelopepoint"},{"name":"x"}],"output":null}],[10,"set_y","","Set the Y value.",274,{"inputs":[{"name":"envelopepoint"},{"name":"y"}],"output":null}],[11,"get_curve","","Return the bezier curve depth (-1. to 1.) for the next interpolation.",274,{"inputs":[{"name":"envelopepoint"}],"output":{"name":"f32"}}],[11,"set_curve","","Set the bezier curve depth (-1. to 1.) for the next interpolation.",274,{"inputs":[{"name":"envelopepoint"},{"name":"f32"}],"output":null}],[10,"new","","Create a new EnvPoint.",274,{"inputs":[{"name":"envelopepoint"},{"name":"x"},{"name":"y"}],"output":{"name":"self"}}],[8,"Frameable","","Widgets that may display a frame.",null,null],[10,"frame","","Set the width of the widget's frame.",275,{"inputs":[{"name":"frameable"},{"name":"f64"}],"output":{"name":"self"}}],[10,"frame_color","","Set the color of the widget's frame.",275,{"inputs":[{"name":"frameable"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame_rgba","","Set the color of the widget's frame with rgba values.",275,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"frame_rgb","","Set the color of the widget's frame with rgb values.",275,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"frame_hsla","","Set the color of the widget's frame with hsla values.",275,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"frame_hsl","","Set the color of the widget's frame with hsl values.",275,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[8,"Labelable","","Widgets that may display some label.",null,null],[10,"label","","Set the label for the widget.",276,{"inputs":[{"name":"labelable"},{"name":"str"}],"output":{"name":"self"}}],[10,"label_color","","Set the color of the widget's label.",276,{"inputs":[{"name":"labelable"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_rgba","","Set the color of the widget's label from rgba values.",276,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_rgb","","Set the color of the widget's label from rgb values.",276,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_hsla","","Set the color of the widget's label from hsla values.",276,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_hsl","","Set the color of the widget's label from hsl values.",276,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[10,"label_font_size","","Set the font size for the widget's label.",276,{"inputs":[{"name":"labelable"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"small_font","","Set a \"small\" font size for the widget's label.",276,{"inputs":[{"name":"labelable"},{"name":"ui"}],"output":{"name":"self"}}],[11,"medium_font","","Set a \"medium\" font size for the widget's label.",276,{"inputs":[{"name":"labelable"},{"name":"ui"}],"output":{"name":"self"}}],[11,"large_font","","Set a \"large\" font size for the widget's label.",276,{"inputs":[{"name":"labelable"},{"name":"ui"}],"output":{"name":"self"}}],[8,"Positionable","","Widgets that are positionable.",null,null],[10,"position","","Set the Position.",277,{"inputs":[{"name":"positionable"},{"name":"position"}],"output":{"name":"self"}}],[10,"get_position","","Get the Position.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"position"}}],[11,"point","","Set the position with some Point.",277,{"inputs":[{"name":"positionable"},{"name":"point"}],"output":{"name":"self"}}],[11,"xy","","Set the position with XY co-ords.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"relative","","Set the point relative to the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"point"}],"output":{"name":"self"}}],[11,"relative_xy","","Set the xy relative to the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"relative_to","","Set the position relative to the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"point"}],"output":{"name":"self"}}],[11,"relative_xy_to","","Set the position relative to the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"down","","Set the position as below the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"up","","Set the position as above the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"left","","Set the position to the left of the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"right","","Set the position to the right of the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"down_from","","Set the position as below the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"up_from","","Set the position as above the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"left_from","","Set the position to the left of the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"right_from","","Set the position to the right of the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"horizontal_align","","Align the position horizontally (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[10,"vertical_align","","Align the position vertically (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"verticalalign"}],"output":{"name":"self"}}],[10,"get_horizontal_align","","Return the horizontal alignment.",277,{"inputs":[{"name":"positionable"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[10,"get_vertical_align","","Return the vertical alignment.",277,{"inputs":[{"name":"positionable"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"get_alignment","","Return the alignment of both axis.",277,null],[11,"align_left","","Align the position to the left (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_middle_x","","Align the position to the middle (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_right","","Align the position to the right (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_top","","Align the position to the top (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_middle_y","","Align the position to the middle (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_bottom","","Align the position to the bottom (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_left_of","","Align the position to the left (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_middle_x_of","","Align the position to the middle (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_right_of","","Align the position to the right (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_top_of","","Align the position to the top (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_middle_y_of","","Align the position to the middle (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_bottom_of","","Align the position to the bottom (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"place","","Place the widget at some position on the Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"place"},{"name":"option"}],"output":{"name":"self"}}],[11,"middle_of","","Place the widget in the middle of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"top_left_of","","Place the widget in the top left corner of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"top_right_of","","Place the widget in the top right corner of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"bottom_left_of","","Place the widget in the bottom left corner of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"bottom_right_of","","Place the widget in the bottom right corner of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_top_of","","Place the widget in the middle of the top edge of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_bottom_of","","Place the widget in the middle of the bottom edge of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_left_of","","Place the widget in the middle of the left edge of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_right_of","","Place the widget in the middle of the right edge of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"middle","","Place the widget in the middle of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"top_left","","Place the widget in the top left corner of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"top_right","","Place the widget in the top right corner of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"bottom_left","","Place the widget in the bottom left corner of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"bottom_right","","Place the widget in the bottom right corner of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_top","","Place the widget in the middle of the top edge of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_bottom","","Place the widget in the middle of the bottom edge of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_left","","Place the widget in the middle of the left edge of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_right","","Place the widget in the middle of the right edge of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[10,"depth","","The depth at which the widget should be rendered.",277,{"inputs":[{"name":"positionable"},{"name":"depth"}],"output":{"name":"self"}}],[10,"get_depth","","Return the depth.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"depth"}}],[8,"Sizeable","","Widgets that support different dimensions.",null,null],[10,"width","","Set the width for the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"height","","Set the height for the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"get_width","","Get the width of the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"scalar"}}],[10,"get_height","","Get the height of the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"dim","","Set the dimensions for the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"dimensions"}],"output":{"name":"self"}}],[11,"dimensions","","Set the width and height for the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_dimensions","","Return the dimensions for the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"dimensions"}}],[8,"Widget","","A trait to be implemented by all Widget types.",null,null],[16,"State","","State to be stored within the `Ui`s widget cache. Take advantage of this type for any large\nallocations that you would like to avoid repeating between updates, or any calculations\nthat you'd like to avoid repeating between calls to `update` and `draw`. Conrod will never\nclone the state, it will only ever be moved.",279,null],[16,"Style","","Styling used by the widget to construct an Element. Styling is useful to have in its own\nabstraction in order to making Theme serializing easier. Conrod doesn't yet support\nserializing non-internal widget styling with the `Theme` type, but we hope to soon.",279,null],[10,"unique_kind","","Return the kind of the widget as a &'static str. Note that this must be unique from all\nother widgets' \"unique kinds\". This is used by conrod to help avoid UiId errors.",279,{"inputs":[{"name":"widget"}],"output":{"name":"str"}}],[10,"init_state","","Return the initial `State` of the Widget. The `Ui` will only call this once.",279,{"inputs":[{"name":"widget"}],"output":{"name":"state"}}],[10,"style","","Return the styling of the widget. The `Ui` will call this once prior to each `update`. It\ndoes this so that it can check for differences in `Style` in case a new `Element` needs to\nbe constructed.",279,{"inputs":[{"name":"widget"}],"output":{"name":"style"}}],[10,"update","","Your widget's previous state is given to you as a parameter and it is your job to\nconstruct and return an Update that will be used to update the widget's cached state.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[10,"draw","","Construct a renderable Element from the current styling and new state. This will *only* be\ncalled on the occasion that the widget's `Style` or `State` has changed. Keep this in mind\nwhen designing your widget's `Style` and `State` types.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"canvas_id","","Return the canvas to which the Widget will be attached, if there is one. Note that the\nCanvasId can also normally be inferred by the widget's `Position`, however calling this\nmethod will override this.",279,{"inputs":[{"name":"widget"}],"output":{"name":"option"}}],[11,"capture_mouse","","Optionally override with the case that the widget should capture the mouse.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_mouse","","Optionally override with the case that the widget should capture the mouse.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"capture_keyboard","","Optionally override with the case that the widget should capture the mouse.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_keyboard","","Optionally override with the case that the widget should capture the mouse.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"set","","Note: There should be no need to override this method.",279,{"inputs":[{"name":"widget"},{"name":"widgetid"},{"name":"ui"}],"output":null}],[11,"frame_rgba","","Set the color of the widget's frame with rgba values.",275,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"frame_rgb","","Set the color of the widget's frame with rgb values.",275,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"frame_hsla","","Set the color of the widget's frame with hsla values.",275,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"frame_hsl","","Set the color of the widget's frame with hsl values.",275,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_rgba","","Set the color of the widget's label from rgba values.",276,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_rgb","","Set the color of the widget's label from rgb values.",276,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_hsla","","Set the color of the widget's label from hsla values.",276,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_hsl","","Set the color of the widget's label from hsl values.",276,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"small_font","","Set a \"small\" font size for the widget's label.",276,{"inputs":[{"name":"labelable"},{"name":"ui"}],"output":{"name":"self"}}],[11,"medium_font","","Set a \"medium\" font size for the widget's label.",276,{"inputs":[{"name":"labelable"},{"name":"ui"}],"output":{"name":"self"}}],[11,"large_font","","Set a \"large\" font size for the widget's label.",276,{"inputs":[{"name":"labelable"},{"name":"ui"}],"output":{"name":"self"}}],[11,"point","","Set the position with some Point.",277,{"inputs":[{"name":"positionable"},{"name":"point"}],"output":{"name":"self"}}],[11,"xy","","Set the position with XY co-ords.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"relative","","Set the point relative to the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"point"}],"output":{"name":"self"}}],[11,"relative_xy","","Set the xy relative to the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"relative_to","","Set the position relative to the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"point"}],"output":{"name":"self"}}],[11,"relative_xy_to","","Set the position relative to the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"down","","Set the position as below the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"up","","Set the position as above the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"left","","Set the position to the left of the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"right","","Set the position to the right of the previous widget.",277,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"down_from","","Set the position as below the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"up_from","","Set the position as above the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"left_from","","Set the position to the left of the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"right_from","","Set the position to the right of the widget with the given UiId.",277,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_alignment","","Return the alignment of both axis.",277,null],[11,"align_left","","Align the position to the left (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_middle_x","","Align the position to the middle (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_right","","Align the position to the right (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_top","","Align the position to the top (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_middle_y","","Align the position to the middle (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_bottom","","Align the position to the bottom (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_left_of","","Align the position to the left (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_middle_x_of","","Align the position to the middle (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_right_of","","Align the position to the right (only effective for Up or Down `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_top_of","","Align the position to the top (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_middle_y_of","","Align the position to the middle (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"align_bottom_of","","Align the position to the bottom (only effective for Left or Right `Direction`s).",277,{"inputs":[{"name":"positionable"},{"name":"uiid"}],"output":{"name":"self"}}],[11,"place","","Place the widget at some position on the Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"place"},{"name":"option"}],"output":{"name":"self"}}],[11,"middle_of","","Place the widget in the middle of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"top_left_of","","Place the widget in the top left corner of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"top_right_of","","Place the widget in the top right corner of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"bottom_left_of","","Place the widget in the bottom left corner of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"bottom_right_of","","Place the widget in the bottom right corner of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_top_of","","Place the widget in the middle of the top edge of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_bottom_of","","Place the widget in the middle of the bottom edge of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_left_of","","Place the widget in the middle of the left edge of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_right_of","","Place the widget in the middle of the right edge of the given Canvas.",277,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"middle","","Place the widget in the middle of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"top_left","","Place the widget in the top left corner of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"top_right","","Place the widget in the top right corner of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"bottom_left","","Place the widget in the bottom left corner of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"bottom_right","","Place the widget in the bottom right corner of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_top","","Place the widget in the middle of the top edge of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_bottom","","Place the widget in the middle of the bottom edge of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_left","","Place the widget in the middle of the left edge of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_right","","Place the widget in the middle of the right edge of the current Canvas.",277,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"dim","","Set the dimensions for the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"dimensions"}],"output":{"name":"self"}}],[11,"dimensions","","Set the width and height for the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_dimensions","","Return the dimensions for the widget.",278,{"inputs":[{"name":"sizeable"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"dimensions"}}],[11,"get_curve","","Return the bezier curve depth (-1. to 1.) for the next interpolation.",274,{"inputs":[{"name":"envelopepoint"}],"output":{"name":"f32"}}],[11,"set_curve","","Set the bezier curve depth (-1. to 1.) for the next interpolation.",274,{"inputs":[{"name":"envelopepoint"},{"name":"f32"}],"output":null}],[11,"get_x","","Return the X value.",280,{"inputs":[{"name":"point"}],"output":{"name":"scalar"}}],[11,"get_y","","Return the Y value.",280,{"inputs":[{"name":"point"}],"output":{"name":"scalar"}}],[11,"set_x","","Return the X value.",280,{"inputs":[{"name":"point"},{"name":"scalar"}],"output":null}],[11,"set_y","","Return the Y value.",280,{"inputs":[{"name":"point"},{"name":"scalar"}],"output":null}],[11,"new","","Create a new Envelope Point.",280,{"inputs":[{"name":"point"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"point"}}],[11,"canvas_id","","Return the canvas to which the Widget will be attached, if there is one. Note that the\nCanvasId can also normally be inferred by the widget's `Position`, however calling this\nmethod will override this.",279,{"inputs":[{"name":"widget"}],"output":{"name":"option"}}],[11,"capture_mouse","","Optionally override with the case that the widget should capture the mouse.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_mouse","","Optionally override with the case that the widget should capture the mouse.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"capture_keyboard","","Optionally override with the case that the widget should capture the mouse.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_keyboard","","Optionally override with the case that the widget should capture the mouse.",279,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"set","","Note: There should be no need to override this method.",279,{"inputs":[{"name":"widget"},{"name":"widgetid"},{"name":"ui"}],"output":null}]],"paths":[[4,"Color"],[3,"Hsla"],[3,"Rgba"],[4,"Gradient"],[3,"Properties"],[3,"Element"],[4,"Prim"],[4,"ImageStyle"],[4,"Three"],[4,"Pos"],[3,"Position"],[4,"Direction"],[3,"Renderer"],[3,"Form"],[4,"FillStyle"],[4,"LineCap"],[4,"LineJoin"],[3,"LineStyle"],[4,"BasicForm"],[4,"ShapeStyle"],[3,"PointPath"],[3,"Shape"],[3,"Text"],[3,"TextUnit"],[4,"Line"],[4,"Position"],[3,"Style"],[3,"Transform2D"],[8,"Colorable"],[8,"CharacterCache"],[3,"Context"],[3,"Line"],[3,"Ellipse"],[3,"Rectangle"],[3,"Character"],[3,"Polygon"],[4,"Shape"],[3,"Border"],[4,"Shape"],[3,"Border"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GridCells"],[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Primitive"],[3,"MultiSample"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Rect"],[3,"Mask"],[3,"Mirror"],[3,"ClearData"],[3,"DrawState"],[4,"BlendPreset"],[4,"JsonIoError"],[3,"ButtonStyle"],[3,"DropDownListStyle"],[3,"EnvelopeEditorStyle"],[3,"NumberDialerStyle"],[3,"SliderStyle"],[3,"TextBoxStyle"],[3,"ToggleStyle"],[3,"XYPadStyle"],[3,"Canvas"],[3,"Mouse"],[3,"MouseScroll"],[3,"Margin"],[3,"Padding"],[3,"Align"],[3,"Theme"],[3,"Ui"],[3,"UserInput"],[3,"WidgetState"],[4,"Framing"],[4,"MouseButtonState"],[4,"Corner"],[4,"Direction"],[4,"Horizontal"],[4,"Place"],[4,"Position"],[4,"Vertical"],[4,"UiId"],[3,"Background"],[3,"Floating"],[3,"Split"],[3,"HorizontalAlign"],[3,"VerticalAlign"],[3,"GlyphCache"],[3,"RefCell"],[3,"Wrapping"],[3,"Big32x36"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"NoCopy"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"Button"],[3,"DropDownList"],[3,"EnvelopeEditor"],[3,"Label"],[3,"LabelStyle"],[3,"WidgetMatrix"],[3,"NumberDialer"],[3,"Slider"],[3,"TextBox"],[3,"Toggle"],[3,"XYPad"],[8,"EnvelopePoint"],[8,"Frameable"],[8,"Labelable"],[8,"Positionable"],[8,"Sizeable"],[8,"Widget"],[6,"Point"]]};
searchIndex['piston'] = {"items":[[0,"","piston","A user friendly game engine written in Rust.",null,null],[0,"input","","",null,null],[0,"keyboard","piston::input","Back-end agnostic keyboard keys.",null,null],[11,"empty","input::keyboard","Returns an empty set of flags.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"all","","Returns the set containing all flags.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bits","","Returns the raw value of the flags currently stored.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",0,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"modifierkey"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",0,null],[11,"remove","","Removes the specified flags in-place.",0,null],[11,"toggle","","Toggles the specified flags in-place.",0,null],[11,"handle_input","","Change modifier key state depending on input.",0,null],[11,"hash","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"eq","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"encode","","",0,{"inputs":[{"name":"modifierkey"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"modifierkey"},{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"modifierkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bitor","","Returns the union of the two sets of flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"sub","","Returns the set difference of the two sets of flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"not","","Returns the complement of this set of flags.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"from_iter","","",0,{"inputs":[{"name":"modifierkey"},{"name":"t"}],"output":{"name":"modifierkey"}}],[11,"default","","",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",1,{"inputs":[{"name":"key"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"key"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"eq","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"ordering"}}],[11,"code","","Returns an id of the key",1,{"inputs":[{"name":"key"}],"output":{"name":"i32"}}],[11,"to_i64","","",1,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"to_u64","","",1,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"to_isize","","",1,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"from_u64","","",1,{"inputs":[{"name":"key"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",1,{"inputs":[{"name":"key"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_isize","","",1,{"inputs":[{"name":"key"},{"name":"isize"}],"output":{"name":"option"}}],[11,"fmt","input::mouse","",2,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"partial_cmp","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"ordering"}}],[11,"eq","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"encode","","",2,{"inputs":[{"name":"mousebutton"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"mousebutton"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"from_u64","","",2,{"inputs":[{"name":"mousebutton"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",2,{"inputs":[{"name":"mousebutton"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_isize","","",2,{"inputs":[{"name":"mousebutton"},{"name":"isize"}],"output":{"name":"option"}}],[11,"to_u64","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"to_i64","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"to_isize","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"fmt","input","",3,{"inputs":[{"name":"button"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"encode","","",3,{"inputs":[{"name":"button"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"button"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"fmt","","",4,{"inputs":[{"name":"motion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"encode","","",4,{"inputs":[{"name":"motion"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"motion"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"motion"}],"output":{"name":"motion"}}],[11,"fmt","","",5,{"inputs":[{"name":"input"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"encode","","",5,{"inputs":[{"name":"input"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"input"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"input"}],"output":{"name":"input"}}],[3,"ModifierKey","piston::input::keyboard","",null,null],[17,"NO_MODIFIER","","/// No modifier.",null,null],[17,"CTRL","","/// Ctrl.",null,null],[17,"SHIFT","","/// Shift.",null,null],[17,"ALT","","/// Alt.",null,null],[17,"GUI","","/// Gui.",null,null],[17,"CTRL_SHIFT","","/// Ctrl + Shift.",null,null],[17,"CTRL_ALT","","/// Ctrl + Alt.",null,null],[17,"CTRL_GUI","","/// Ctrl + Gui.",null,null],[17,"CTRL_SHIFT_ALT","","/// Ctrl + Shift + Alt.",null,null],[17,"CTRL_SHIFT_GUI","","/// Ctrl + Shift + Gui.",null,null],[17,"CTRL_SHIFT_ALT_GUI","","/// Ctrl + Shift + Alt + Gui.",null,null],[17,"SHIFT_ALT","","/// Shift + Alt.",null,null],[17,"SHIFT_GUI","","/// Shift + Gui.",null,null],[17,"SHIFT_ALT_GUI","","/// Shift + Alt + Gui.",null,null],[17,"ALT_GUI","","/// Alt + Gui.",null,null],[4,"Key","","Represent a keyboard key.",null,null],[13,"Unknown","","",1,null],[13,"Backspace","","",1,null],[13,"Tab","","",1,null],[13,"Return","","",1,null],[13,"Escape","","",1,null],[13,"Space","","",1,null],[13,"Exclaim","","",1,null],[13,"Quotedbl","","",1,null],[13,"Hash","","",1,null],[13,"Dollar","","",1,null],[13,"Percent","","",1,null],[13,"Ampersand","","",1,null],[13,"Quote","","",1,null],[13,"LeftParen","","",1,null],[13,"RightParen","","",1,null],[13,"Asterisk","","",1,null],[13,"Plus","","",1,null],[13,"Comma","","",1,null],[13,"Minus","","",1,null],[13,"Period","","",1,null],[13,"Slash","","",1,null],[13,"D0","","",1,null],[13,"D1","","",1,null],[13,"D2","","",1,null],[13,"D3","","",1,null],[13,"D4","","",1,null],[13,"D5","","",1,null],[13,"D6","","",1,null],[13,"D7","","",1,null],[13,"D8","","",1,null],[13,"D9","","",1,null],[13,"Colon","","",1,null],[13,"Semicolon","","",1,null],[13,"Less","","",1,null],[13,"Equals","","",1,null],[13,"Greater","","",1,null],[13,"Question","","",1,null],[13,"At","","",1,null],[13,"LeftBracket","","",1,null],[13,"Backslash","","",1,null],[13,"RightBracket","","",1,null],[13,"Caret","","",1,null],[13,"Underscore","","",1,null],[13,"Backquote","","",1,null],[13,"A","","",1,null],[13,"B","","",1,null],[13,"C","","",1,null],[13,"D","","",1,null],[13,"E","","",1,null],[13,"F","","",1,null],[13,"G","","",1,null],[13,"H","","",1,null],[13,"I","","",1,null],[13,"J","","",1,null],[13,"K","","",1,null],[13,"L","","",1,null],[13,"M","","",1,null],[13,"N","","",1,null],[13,"O","","",1,null],[13,"P","","",1,null],[13,"Q","","",1,null],[13,"R","","",1,null],[13,"S","","",1,null],[13,"T","","",1,null],[13,"U","","",1,null],[13,"V","","",1,null],[13,"W","","",1,null],[13,"X","","",1,null],[13,"Y","","",1,null],[13,"Z","","",1,null],[13,"Delete","","",1,null],[13,"CapsLock","","",1,null],[13,"F1","","",1,null],[13,"F2","","",1,null],[13,"F3","","",1,null],[13,"F4","","",1,null],[13,"F5","","",1,null],[13,"F6","","",1,null],[13,"F7","","",1,null],[13,"F8","","",1,null],[13,"F9","","",1,null],[13,"F10","","",1,null],[13,"F11","","",1,null],[13,"F12","","",1,null],[13,"PrintScreen","","",1,null],[13,"ScrollLock","","",1,null],[13,"Pause","","",1,null],[13,"Insert","","",1,null],[13,"Home","","",1,null],[13,"PageUp","","",1,null],[13,"End","","",1,null],[13,"PageDown","","",1,null],[13,"Right","","",1,null],[13,"Left","","",1,null],[13,"Down","","",1,null],[13,"Up","","",1,null],[13,"NumLockClear","","",1,null],[13,"NumPadDivide","","",1,null],[13,"NumPadMultiply","","",1,null],[13,"NumPadMinus","","",1,null],[13,"NumPadPlus","","",1,null],[13,"NumPadEnter","","",1,null],[13,"NumPad1","","",1,null],[13,"NumPad2","","",1,null],[13,"NumPad3","","",1,null],[13,"NumPad4","","",1,null],[13,"NumPad5","","",1,null],[13,"NumPad6","","",1,null],[13,"NumPad7","","",1,null],[13,"NumPad8","","",1,null],[13,"NumPad9","","",1,null],[13,"NumPad0","","",1,null],[13,"NumPadPeriod","","",1,null],[13,"Application","","",1,null],[13,"Power","","",1,null],[13,"NumPadEquals","","",1,null],[13,"F13","","",1,null],[13,"F14","","",1,null],[13,"F15","","",1,null],[13,"F16","","",1,null],[13,"F17","","",1,null],[13,"F18","","",1,null],[13,"F19","","",1,null],[13,"F20","","",1,null],[13,"F21","","",1,null],[13,"F22","","",1,null],[13,"F23","","",1,null],[13,"F24","","",1,null],[13,"Execute","","",1,null],[13,"Help","","",1,null],[13,"Menu","","",1,null],[13,"Select","","",1,null],[13,"Stop","","",1,null],[13,"Again","","",1,null],[13,"Undo","","",1,null],[13,"Cut","","",1,null],[13,"Copy","","",1,null],[13,"Paste","","",1,null],[13,"Find","","",1,null],[13,"Mute","","",1,null],[13,"VolumeUp","","",1,null],[13,"VolumeDown","","",1,null],[13,"NumPadComma","","",1,null],[13,"NumPadEqualsAS400","","",1,null],[13,"AltErase","","",1,null],[13,"Sysreq","","",1,null],[13,"Cancel","","",1,null],[13,"Clear","","",1,null],[13,"Prior","","",1,null],[13,"Return2","","",1,null],[13,"Separator","","",1,null],[13,"Out","","",1,null],[13,"Oper","","",1,null],[13,"ClearAgain","","",1,null],[13,"CrSel","","",1,null],[13,"ExSel","","",1,null],[13,"NumPad00","","",1,null],[13,"NumPad000","","",1,null],[13,"ThousandsSeparator","","",1,null],[13,"DecimalSeparator","","",1,null],[13,"CurrencyUnit","","",1,null],[13,"CurrencySubUnit","","",1,null],[13,"NumPadLeftParen","","",1,null],[13,"NumPadRightParen","","",1,null],[13,"NumPadLeftBrace","","",1,null],[13,"NumPadRightBrace","","",1,null],[13,"NumPadTab","","",1,null],[13,"NumPadBackspace","","",1,null],[13,"NumPadA","","",1,null],[13,"NumPadB","","",1,null],[13,"NumPadC","","",1,null],[13,"NumPadD","","",1,null],[13,"NumPadE","","",1,null],[13,"NumPadF","","",1,null],[13,"NumPadXor","","",1,null],[13,"NumPadPower","","",1,null],[13,"NumPadPercent","","",1,null],[13,"NumPadLess","","",1,null],[13,"NumPadGreater","","",1,null],[13,"NumPadAmpersand","","",1,null],[13,"NumPadDblAmpersand","","",1,null],[13,"NumPadVerticalBar","","",1,null],[13,"NumPadDblVerticalBar","","",1,null],[13,"NumPadColon","","",1,null],[13,"NumPadHash","","",1,null],[13,"NumPadSpace","","",1,null],[13,"NumPadAt","","",1,null],[13,"NumPadExclam","","",1,null],[13,"NumPadMemStore","","",1,null],[13,"NumPadMemRecall","","",1,null],[13,"NumPadMemClear","","",1,null],[13,"NumPadMemAdd","","",1,null],[13,"NumPadMemSubtract","","",1,null],[13,"NumPadMemMultiply","","",1,null],[13,"NumPadMemDivide","","",1,null],[13,"NumPadPlusMinus","","",1,null],[13,"NumPadClear","","",1,null],[13,"NumPadClearEntry","","",1,null],[13,"NumPadBinary","","",1,null],[13,"NumPadOctal","","",1,null],[13,"NumPadDecimal","","",1,null],[13,"NumPadHexadecimal","","",1,null],[13,"LCtrl","","",1,null],[13,"LShift","","",1,null],[13,"LAlt","","",1,null],[13,"LGui","","",1,null],[13,"RCtrl","","",1,null],[13,"RShift","","",1,null],[13,"RAlt","","",1,null],[13,"RGui","","",1,null],[13,"Mode","","",1,null],[13,"AudioNext","","",1,null],[13,"AudioPrev","","",1,null],[13,"AudioStop","","",1,null],[13,"AudioPlay","","",1,null],[13,"AudioMute","","",1,null],[13,"MediaSelect","","",1,null],[13,"Www","","",1,null],[13,"Mail","","",1,null],[13,"Calculator","","",1,null],[13,"Computer","","",1,null],[13,"AcSearch","","",1,null],[13,"AcHome","","",1,null],[13,"AcBack","","",1,null],[13,"AcForward","","",1,null],[13,"AcStop","","",1,null],[13,"AcRefresh","","",1,null],[13,"AcBookmarks","","",1,null],[13,"BrightnessDown","","",1,null],[13,"BrightnessUp","","",1,null],[13,"DisplaySwitch","","",1,null],[13,"KbdIllumToggle","","",1,null],[13,"KbdIllumDown","","",1,null],[13,"KbdIllumUp","","",1,null],[13,"Eject","","",1,null],[13,"Sleep","","",1,null],[0,"mouse","piston::input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","piston::input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",2,null],[13,"Left","","Left mouse button.",2,null],[13,"Right","","Right mouse button.",2,null],[13,"Middle","","Middle mouse button.",2,null],[13,"X1","","Extra mouse button number 1.",2,null],[13,"X2","","Extra mouse button number 2.",2,null],[13,"Button6","","Mouse button number 6.",2,null],[13,"Button7","","Mouse button number 7.",2,null],[13,"Button8","","Mouse button number 8.",2,null],[4,"Button","piston::input","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",3,null],[13,"Mouse","","A mouse button.",3,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",4,null],[13,"MouseRelative","","x and y in relative coordinates.",4,null],[13,"MouseScroll","","x and y in scroll ticks.",4,null],[4,"Input","","Models input events.",null,null],[13,"Press","","Pressed a button.",5,null],[13,"Release","","Released a button.",5,null],[13,"Move","","Moved mouse cursor.",5,null],[13,"Text","","Text (usually from keyboard).",5,null],[13,"Resize","","Window got resized.",5,null],[13,"Focus","","Window gained or lost focus.",5,null],[4,"MouseButton","","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",2,null],[13,"Left","","Left mouse button.",2,null],[13,"Right","","Right mouse button.",2,null],[13,"Middle","","Middle mouse button.",2,null],[13,"X1","","Extra mouse button number 1.",2,null],[13,"X2","","Extra mouse button number 2.",2,null],[13,"Button6","","Mouse button number 6.",2,null],[13,"Button7","","Mouse button number 7.",2,null],[13,"Button8","","Mouse button number 8.",2,null],[4,"Key","","Represent a keyboard key.",null,null],[13,"Unknown","","",1,null],[13,"Backspace","","",1,null],[13,"Tab","","",1,null],[13,"Return","","",1,null],[13,"Escape","","",1,null],[13,"Space","","",1,null],[13,"Exclaim","","",1,null],[13,"Quotedbl","","",1,null],[13,"Hash","","",1,null],[13,"Dollar","","",1,null],[13,"Percent","","",1,null],[13,"Ampersand","","",1,null],[13,"Quote","","",1,null],[13,"LeftParen","","",1,null],[13,"RightParen","","",1,null],[13,"Asterisk","","",1,null],[13,"Plus","","",1,null],[13,"Comma","","",1,null],[13,"Minus","","",1,null],[13,"Period","","",1,null],[13,"Slash","","",1,null],[13,"D0","","",1,null],[13,"D1","","",1,null],[13,"D2","","",1,null],[13,"D3","","",1,null],[13,"D4","","",1,null],[13,"D5","","",1,null],[13,"D6","","",1,null],[13,"D7","","",1,null],[13,"D8","","",1,null],[13,"D9","","",1,null],[13,"Colon","","",1,null],[13,"Semicolon","","",1,null],[13,"Less","","",1,null],[13,"Equals","","",1,null],[13,"Greater","","",1,null],[13,"Question","","",1,null],[13,"At","","",1,null],[13,"LeftBracket","","",1,null],[13,"Backslash","","",1,null],[13,"RightBracket","","",1,null],[13,"Caret","","",1,null],[13,"Underscore","","",1,null],[13,"Backquote","","",1,null],[13,"A","","",1,null],[13,"B","","",1,null],[13,"C","","",1,null],[13,"D","","",1,null],[13,"E","","",1,null],[13,"F","","",1,null],[13,"G","","",1,null],[13,"H","","",1,null],[13,"I","","",1,null],[13,"J","","",1,null],[13,"K","","",1,null],[13,"L","","",1,null],[13,"M","","",1,null],[13,"N","","",1,null],[13,"O","","",1,null],[13,"P","","",1,null],[13,"Q","","",1,null],[13,"R","","",1,null],[13,"S","","",1,null],[13,"T","","",1,null],[13,"U","","",1,null],[13,"V","","",1,null],[13,"W","","",1,null],[13,"X","","",1,null],[13,"Y","","",1,null],[13,"Z","","",1,null],[13,"Delete","","",1,null],[13,"CapsLock","","",1,null],[13,"F1","","",1,null],[13,"F2","","",1,null],[13,"F3","","",1,null],[13,"F4","","",1,null],[13,"F5","","",1,null],[13,"F6","","",1,null],[13,"F7","","",1,null],[13,"F8","","",1,null],[13,"F9","","",1,null],[13,"F10","","",1,null],[13,"F11","","",1,null],[13,"F12","","",1,null],[13,"PrintScreen","","",1,null],[13,"ScrollLock","","",1,null],[13,"Pause","","",1,null],[13,"Insert","","",1,null],[13,"Home","","",1,null],[13,"PageUp","","",1,null],[13,"End","","",1,null],[13,"PageDown","","",1,null],[13,"Right","","",1,null],[13,"Left","","",1,null],[13,"Down","","",1,null],[13,"Up","","",1,null],[13,"NumLockClear","","",1,null],[13,"NumPadDivide","","",1,null],[13,"NumPadMultiply","","",1,null],[13,"NumPadMinus","","",1,null],[13,"NumPadPlus","","",1,null],[13,"NumPadEnter","","",1,null],[13,"NumPad1","","",1,null],[13,"NumPad2","","",1,null],[13,"NumPad3","","",1,null],[13,"NumPad4","","",1,null],[13,"NumPad5","","",1,null],[13,"NumPad6","","",1,null],[13,"NumPad7","","",1,null],[13,"NumPad8","","",1,null],[13,"NumPad9","","",1,null],[13,"NumPad0","","",1,null],[13,"NumPadPeriod","","",1,null],[13,"Application","","",1,null],[13,"Power","","",1,null],[13,"NumPadEquals","","",1,null],[13,"F13","","",1,null],[13,"F14","","",1,null],[13,"F15","","",1,null],[13,"F16","","",1,null],[13,"F17","","",1,null],[13,"F18","","",1,null],[13,"F19","","",1,null],[13,"F20","","",1,null],[13,"F21","","",1,null],[13,"F22","","",1,null],[13,"F23","","",1,null],[13,"F24","","",1,null],[13,"Execute","","",1,null],[13,"Help","","",1,null],[13,"Menu","","",1,null],[13,"Select","","",1,null],[13,"Stop","","",1,null],[13,"Again","","",1,null],[13,"Undo","","",1,null],[13,"Cut","","",1,null],[13,"Copy","","",1,null],[13,"Paste","","",1,null],[13,"Find","","",1,null],[13,"Mute","","",1,null],[13,"VolumeUp","","",1,null],[13,"VolumeDown","","",1,null],[13,"NumPadComma","","",1,null],[13,"NumPadEqualsAS400","","",1,null],[13,"AltErase","","",1,null],[13,"Sysreq","","",1,null],[13,"Cancel","","",1,null],[13,"Clear","","",1,null],[13,"Prior","","",1,null],[13,"Return2","","",1,null],[13,"Separator","","",1,null],[13,"Out","","",1,null],[13,"Oper","","",1,null],[13,"ClearAgain","","",1,null],[13,"CrSel","","",1,null],[13,"ExSel","","",1,null],[13,"NumPad00","","",1,null],[13,"NumPad000","","",1,null],[13,"ThousandsSeparator","","",1,null],[13,"DecimalSeparator","","",1,null],[13,"CurrencyUnit","","",1,null],[13,"CurrencySubUnit","","",1,null],[13,"NumPadLeftParen","","",1,null],[13,"NumPadRightParen","","",1,null],[13,"NumPadLeftBrace","","",1,null],[13,"NumPadRightBrace","","",1,null],[13,"NumPadTab","","",1,null],[13,"NumPadBackspace","","",1,null],[13,"NumPadA","","",1,null],[13,"NumPadB","","",1,null],[13,"NumPadC","","",1,null],[13,"NumPadD","","",1,null],[13,"NumPadE","","",1,null],[13,"NumPadF","","",1,null],[13,"NumPadXor","","",1,null],[13,"NumPadPower","","",1,null],[13,"NumPadPercent","","",1,null],[13,"NumPadLess","","",1,null],[13,"NumPadGreater","","",1,null],[13,"NumPadAmpersand","","",1,null],[13,"NumPadDblAmpersand","","",1,null],[13,"NumPadVerticalBar","","",1,null],[13,"NumPadDblVerticalBar","","",1,null],[13,"NumPadColon","","",1,null],[13,"NumPadHash","","",1,null],[13,"NumPadSpace","","",1,null],[13,"NumPadAt","","",1,null],[13,"NumPadExclam","","",1,null],[13,"NumPadMemStore","","",1,null],[13,"NumPadMemRecall","","",1,null],[13,"NumPadMemClear","","",1,null],[13,"NumPadMemAdd","","",1,null],[13,"NumPadMemSubtract","","",1,null],[13,"NumPadMemMultiply","","",1,null],[13,"NumPadMemDivide","","",1,null],[13,"NumPadPlusMinus","","",1,null],[13,"NumPadClear","","",1,null],[13,"NumPadClearEntry","","",1,null],[13,"NumPadBinary","","",1,null],[13,"NumPadOctal","","",1,null],[13,"NumPadDecimal","","",1,null],[13,"NumPadHexadecimal","","",1,null],[13,"LCtrl","","",1,null],[13,"LShift","","",1,null],[13,"LAlt","","",1,null],[13,"LGui","","",1,null],[13,"RCtrl","","",1,null],[13,"RShift","","",1,null],[13,"RAlt","","",1,null],[13,"RGui","","",1,null],[13,"Mode","","",1,null],[13,"AudioNext","","",1,null],[13,"AudioPrev","","",1,null],[13,"AudioStop","","",1,null],[13,"AudioPlay","","",1,null],[13,"AudioMute","","",1,null],[13,"MediaSelect","","",1,null],[13,"Www","","",1,null],[13,"Mail","","",1,null],[13,"Calculator","","",1,null],[13,"Computer","","",1,null],[13,"AcSearch","","",1,null],[13,"AcHome","","",1,null],[13,"AcBack","","",1,null],[13,"AcForward","","",1,null],[13,"AcStop","","",1,null],[13,"AcRefresh","","",1,null],[13,"AcBookmarks","","",1,null],[13,"BrightnessDown","","",1,null],[13,"BrightnessUp","","",1,null],[13,"DisplaySwitch","","",1,null],[13,"KbdIllumToggle","","",1,null],[13,"KbdIllumDown","","",1,null],[13,"KbdIllumUp","","",1,null],[13,"Eject","","",1,null],[13,"Sleep","","",1,null],[0,"event","piston","",null,null],[0,"generic_event","piston::event","Trait for generic events",null,null],[8,"GenericEvent","piston::event::generic_event","Implemented by all events",null,null],[10,"event_id","","The id of this event.",6,{"inputs":[{"name":"genericevent"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with arguments",6,{"inputs":[{"name":"genericevent"},{"name":"f"}],"output":{"name":"u"}}],[10,"from_args","","Converts from arguments to `Self`",6,{"inputs":[{"name":"genericevent"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","piston::input","",5,{"inputs":[{"name":"input"}],"output":{"name":"eventid"}}],[11,"with_args","","",5,{"inputs":[{"name":"input"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",5,{"inputs":[{"name":"input"},{"name":"eventid"},{"name":"any"},{"name":"input"}],"output":{"name":"option"}}],[11,"event_id","event::event","",7,{"inputs":[{"name":"event"}],"output":{"name":"eventid"}}],[11,"with_args","","",7,{"inputs":[{"name":"event"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",7,{"inputs":[{"name":"event"},{"name":"eventid"},{"name":"any"},{"name":"event"}],"output":{"name":"option"}}],[11,"fmt","","",7,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"render","","",7,{"inputs":[{"name":"event"},{"name":"renderargs"}],"output":{"name":"event"}}],[11,"after_render","","",7,{"inputs":[{"name":"event"},{"name":"afterrenderargs"}],"output":{"name":"event"}}],[11,"update","","",7,{"inputs":[{"name":"event"},{"name":"updateargs"}],"output":{"name":"event"}}],[11,"idle","","",7,{"inputs":[{"name":"event"},{"name":"idleargs"}],"output":{"name":"event"}}],[11,"input","","",7,{"inputs":[{"name":"event"},{"name":"i"}],"output":{"name":"event"}}],[11,"eq","event","",8,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"eventid"}],"output":{"name":"eventid"}}],[11,"events","alloc::rc","",9,{"inputs":[{"name":"rc"}],"output":{"name":"windowevents"}}],[3,"EventId","piston::event","Used to identify events arguments provided by traits.",null,null],[8,"Events","","A trait for create event iterator from window.",null,null],[10,"events","","Creates event iterator from window.",10,{"inputs":[{"name":"events"}],"output":{"name":"windowevents"}}],[8,"PressEvent","","The press of a button",null,null],[10,"from_button","","Creates a press event.",11,{"inputs":[{"name":"pressevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"press","","Calls closure if this is a press event.",11,{"inputs":[{"name":"pressevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",11,{"inputs":[{"name":"pressevent"}],"output":{"name":"option"}}],[8,"FocusEvent","","When window gets or looses focus",null,null],[10,"from_focused","","Creates a focus event.",12,{"inputs":[{"name":"focusevent"},{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"focus","","Calls closure if this is a focus event.",12,{"inputs":[{"name":"focusevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",12,{"inputs":[{"name":"focusevent"}],"output":{"name":"option"}}],[11,"fmt","event_loop","",13,{"inputs":[{"name":"renderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"renderargs"}],"output":{"name":"renderargs"}}],[11,"viewport","","Returns viewport information filling entire render area.",13,{"inputs":[{"name":"renderargs"}],"output":{"name":"viewport"}}],[11,"fmt","","",14,{"inputs":[{"name":"afterrenderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"afterrenderargs"}],"output":{"name":"afterrenderargs"}}],[11,"fmt","","",15,{"inputs":[{"name":"updateargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"updateargs"}],"output":{"name":"updateargs"}}],[11,"fmt","","",16,{"inputs":[{"name":"idleargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"idleargs"}],"output":{"name":"idleargs"}}],[11,"eq","","",17,{"inputs":[{"name":"idle"},{"name":"idle"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"idle"},{"name":"idle"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"idle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"idle"}],"output":{"name":"idle"}}],[11,"fmt","","",18,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"new","","Creates a new event iterator with default UPS and FPS settings.",19,{"inputs":[{"name":"windowevents"},{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"set_ups","","",19,null],[11,"set_max_fps","","",19,null],[11,"set_swap_buffers","","",19,null],[11,"set_bench_mode","","",19,null],[11,"next","","Returns the next game event.",19,{"inputs":[{"name":"windowevents"}],"output":{"name":"option"}}],[3,"AfterRenderArgs","piston::event","After render arguments.",null,null],[8,"RenderEvent","","When the next frame should be rendered",null,null],[10,"from_render_args","","Creates a render event.",20,{"inputs":[{"name":"renderevent"},{"name":"renderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"render","","Calls closure if this is a render event.",20,{"inputs":[{"name":"renderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",20,{"inputs":[{"name":"renderevent"}],"output":{"name":"option"}}],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",16,null],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",21,{"inputs":[{"name":"mousescrollevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",21,{"inputs":[{"name":"mousescrollevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",21,{"inputs":[{"name":"mousescrollevent"}],"output":{"name":"option"}}],[8,"TextEvent","","When receiving text from user, such as typing a character",null,null],[10,"from_text","","Creates a text event.",22,{"inputs":[{"name":"textevent"},{"name":"str"},{"name":"self"}],"output":{"name":"option"}}],[10,"text","","Calls closure if this is a text event.",22,{"inputs":[{"name":"textevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",22,{"inputs":[{"name":"textevent"}],"output":{"name":"option"}}],[3,"WindowEvents","","An event loop iterator",null,null],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",23,{"inputs":[{"name":"afterrenderevent"},{"name":"afterrenderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"after_render","","Calls closure if this is an after render event.",23,{"inputs":[{"name":"afterrenderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"after_render_args","","Returns after render arguments.",23,{"inputs":[{"name":"afterrenderevent"}],"output":{"name":"option"}}],[4,"Event","","Adds render and update events to input events",null,null],[13,"Render","","Render graphics.",7,null],[13,"AfterRender","","After rendering and swapping buffers.",7,null],[13,"Update","","Update the state of the application.",7,null],[13,"Idle","","Do background tasks that can be done incrementally.",7,null],[13,"Input","","Input event.",7,null],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",null,null],[12,"dt","","Delta time in seconds.",15,null],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",24,{"inputs":[{"name":"mousecursorevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",24,{"inputs":[{"name":"mousecursorevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",24,{"inputs":[{"name":"mousecursorevent"}],"output":{"name":"option"}}],[8,"EventMap","","Methods required to map from consumed event to emitted event.",null,null],[10,"render","","Creates a render event.",25,{"inputs":[{"name":"eventmap"},{"name":"renderargs"}],"output":{"name":"self"}}],[10,"after_render","","Creates an after render event.",25,{"inputs":[{"name":"eventmap"},{"name":"afterrenderargs"}],"output":{"name":"self"}}],[10,"update","","Creates an update event.",25,{"inputs":[{"name":"eventmap"},{"name":"updateargs"}],"output":{"name":"self"}}],[10,"input","","Creates an input event.",25,{"inputs":[{"name":"eventmap"},{"name":"i"}],"output":{"name":"self"}}],[10,"idle","","Creates an idle event.",25,{"inputs":[{"name":"eventmap"},{"name":"idleargs"}],"output":{"name":"self"}}],[8,"ResizeEvent","","When the window is resized",null,null],[10,"from_width_height","","Creates a resize event.",26,{"inputs":[{"name":"resizeevent"},{"name":"u32"},{"name":"u32"},{"name":"self"}],"output":{"name":"option"}}],[10,"resize","","Calls closure if this is a resize event.",26,{"inputs":[{"name":"resizeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",26,{"inputs":[{"name":"resizeevent"}],"output":{"name":"option"}}],[8,"ReleaseEvent","","The release of a button",null,null],[10,"from_button","","Creates a release event.",27,{"inputs":[{"name":"releaseevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"release","","Calls closure if this is a release event.",27,{"inputs":[{"name":"releaseevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",27,{"inputs":[{"name":"releaseevent"}],"output":{"name":"option"}}],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[8,"GenericEvent","","Implemented by all events",null,null],[10,"event_id","","The id of this event.",6,{"inputs":[{"name":"genericevent"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with arguments",6,{"inputs":[{"name":"genericevent"},{"name":"f"}],"output":{"name":"u"}}],[10,"from_args","","Converts from arguments to `Self`",6,{"inputs":[{"name":"genericevent"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",28,{"inputs":[{"name":"mouserelativeevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",28,{"inputs":[{"name":"mouserelativeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_relative_args","","Returns mouse relative arguments.",28,{"inputs":[{"name":"mouserelativeevent"}],"output":{"name":"option"}}],[3,"RenderArgs","","Render arguments",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",13,null],[12,"width","","The width of rendered area in points.",13,null],[12,"height","","The height of rendered area in points.",13,null],[12,"draw_width","","The width of rendered area in pixels.",13,null],[12,"draw_height","","The height of rendered area in pixels.",13,null],[8,"UpdateEvent","","When the application state should be updated",null,null],[10,"from_update_args","","Creates an update event.",29,{"inputs":[{"name":"updateevent"},{"name":"updateargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",29,{"inputs":[{"name":"updateevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"update","","Calls closure if this is an update event.",29,{"inputs":[{"name":"updateevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",29,{"inputs":[{"name":"updateevent"}],"output":{"name":"option"}}],[8,"IdleEvent","","When background tasks should be performed",null,null],[10,"from_idle_args","","Creates an idle event.",30,{"inputs":[{"name":"idleevent"},{"name":"idleargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",30,{"inputs":[{"name":"idleevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"idle","","Calls closure if this is an idle event.",30,{"inputs":[{"name":"idleevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",30,{"inputs":[{"name":"idleevent"}],"output":{"name":"option"}}],[8,"EventLoop","","Methods implements for event loop settings.",null,null],[10,"set_ups","","The number of updates per second",31,null],[11,"ups","","The number of updates per second",31,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":{"name":"self"}}],[10,"set_max_fps","","The maximum number of frames per second",31,null],[11,"max_fps","","The maximum number of frames per second",31,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":{"name":"self"}}],[10,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",31,null],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",31,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",31,null],[11,"bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",31,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":{"name":"self"}}],[0,"window","piston","",null,null],[11,"clone","window","",32,{"inputs":[{"name":"size"}],"output":{"name":"size"}}],[11,"from","","",32,null],[11,"from","","",32,null],[11,"new","","Creates window settings with defaults.\n- samples: 0\n- fullscreen: false\n- exit_on_esc: false",33,{"inputs":[{"name":"windowsettings"},{"name":"t"},{"name":"s"}],"output":{"name":"windowsettings"}}],[11,"get_title","","Gets title.",33,{"inputs":[{"name":"windowsettings"}],"output":{"name":"string"}}],[11,"title","","Sets title.",33,{"inputs":[{"name":"windowsettings"},{"name":"string"}],"output":{"name":"windowsettings"}}],[11,"get_size","","Gets size.",33,{"inputs":[{"name":"windowsettings"}],"output":{"name":"size"}}],[11,"size","","Sets size.",33,{"inputs":[{"name":"windowsettings"},{"name":"size"}],"output":{"name":"windowsettings"}}],[11,"get_fullscreen","","Gets fullscreen.",33,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"fullscreen","","Sets fullscreen.",33,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"windowsettings"}}],[11,"get_exit_on_esc","","Gets exit on esc.",33,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"exit_on_esc","","Sets exit on esc.",33,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"windowsettings"}}],[11,"get_samples","","Gets samples.",33,{"inputs":[{"name":"windowsettings"}],"output":{"name":"u8"}}],[11,"samples","","Sets samples.",33,{"inputs":[{"name":"windowsettings"},{"name":"u8"}],"output":{"name":"windowsettings"}}],[11,"get_vsync","","Gets vsync.",33,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"vsync","","Sets vsync.",33,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"windowsettings"}}],[11,"get_maybe_opengl","","Gets opengl.",33,{"inputs":[{"name":"windowsettings"}],"output":{"name":"option"}}],[11,"maybe_opengl","","Sets opengl.",33,{"inputs":[{"name":"windowsettings"},{"name":"option"}],"output":{"name":"windowsettings"}}],[11,"opengl","","Sets opengl.",33,{"inputs":[{"name":"windowsettings"},{"name":"opengl"}],"output":{"name":"windowsettings"}}],[11,"new","","Returns a new `NoWindow`.",34,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"nowindow"}}],[11,"from","","",34,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"nowindow"}}],[11,"should_close","","",34,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"size","","",34,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"swap_buffers","","",34,null],[11,"poll_event","","",34,{"inputs":[{"name":"nowindow"}],"output":{"name":"option"}}],[11,"draw_size","","",34,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"get_title","","",34,{"inputs":[{"name":"nowindow"}],"output":{"name":"string"}}],[11,"set_title","","",34,null],[11,"get_exit_on_esc","","",34,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",34,null],[11,"set_capture_cursor","","",34,null],[6,"ProcAddress","piston::window","",null,null],[3,"Size","","Size in pixels.",null,null],[12,"width","","The width in pixels.",32,null],[12,"height","","The height in pixels.",32,null],[8,"Window","","Required to use the event loop.",null,null],[16,"Event","","The event type emitted by `poll_event`",35,null],[10,"should_close","","Returns true if window should close.",35,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[10,"size","","Gets the size of the window in user coordinates.",35,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[10,"swap_buffers","","Swaps render buffers.",35,null],[10,"poll_event","","Polls event from window.",35,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[10,"draw_size","","Gets draw size of the window.\nThis is equal to the size of the frame buffer of the inner window,\nexcluding the title bar and borders.",35,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[8,"AdvancedWindow","","Implemented by fully supported window back-ends.",null,null],[10,"get_title","","Gets a copy of the title of the window.",36,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"string"}}],[10,"set_title","","Sets the title of the window.",36,null],[11,"title","","Sets title on window.",36,{"inputs":[{"name":"advancedwindow"},{"name":"string"}],"output":{"name":"self"}}],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",36,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"bool"}}],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",36,null],[11,"exit_on_esc","","Sets whether to exit when pressing esc.",36,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_capture_cursor","","Sets whether to capture/grab cursor.\nThis is used to lock and hide cursor to the window,\nfor example in a first-person shooter game.",36,null],[11,"capture_cursor","","Sets whether to capture/grab cursor (see `set_capture_cursor`).",36,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[8,"OpenGLWindow","","Trait for OpenGL specific operations.",null,null],[10,"get_proc_address","","Returns the address of an OpenGL function if it exist, else returns null pointer.",37,null],[10,"is_current","","Returns true if this context is the current context.",37,{"inputs":[{"name":"openglwindow"}],"output":{"name":"bool"}}],[10,"make_current","","Make this context current.",37,null],[3,"WindowSettings","","Settings for window behavior.",null,null],[3,"NoWindow","","An implementation of Window that runs without a window at all.",null,null]],"paths":[[3,"ModifierKey"],[4,"Key"],[4,"MouseButton"],[4,"Button"],[4,"Motion"],[4,"Input"],[8,"GenericEvent"],[4,"Event"],[3,"EventId"],[3,"Rc"],[8,"Events"],[8,"PressEvent"],[8,"FocusEvent"],[3,"RenderArgs"],[3,"AfterRenderArgs"],[3,"UpdateArgs"],[3,"IdleArgs"],[4,"Idle"],[4,"State"],[3,"WindowEvents"],[8,"RenderEvent"],[8,"MouseScrollEvent"],[8,"TextEvent"],[8,"AfterRenderEvent"],[8,"MouseCursorEvent"],[8,"EventMap"],[8,"ResizeEvent"],[8,"ReleaseEvent"],[8,"MouseRelativeEvent"],[8,"UpdateEvent"],[8,"IdleEvent"],[8,"EventLoop"],[3,"Size"],[3,"WindowSettings"],[3,"NoWindow"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"]]};
searchIndex['event'] = {"items":[[0,"","event","A library for event threading",null,null],[3,"EventId","","Used to identify events arguments provided by traits.",null,null],[4,"Event","","Adds render and update events to input events",null,null],[13,"Render","","Render graphics.",0,null],[13,"AfterRender","","After rendering and swapping buffers.",0,null],[13,"Update","","Update the state of the application.",0,null],[13,"Idle","","Do background tasks that can be done incrementally.",0,null],[13,"Input","","Input event.",0,null],[0,"generic_event","","Trait for generic events",null,null],[8,"GenericEvent","event::generic_event","Implemented by all events",null,null],[10,"event_id","","The id of this event.",1,{"inputs":[{"name":"genericevent"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with arguments",1,{"inputs":[{"name":"genericevent"},{"name":"f"}],"output":{"name":"u"}}],[10,"from_args","","Converts from arguments to `Self`",1,{"inputs":[{"name":"genericevent"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","input","",2,{"inputs":[{"name":"input"}],"output":{"name":"eventid"}}],[11,"with_args","","",2,{"inputs":[{"name":"input"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",2,{"inputs":[{"name":"input"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","event","",0,{"inputs":[{"name":"event"}],"output":{"name":"eventid"}}],[11,"with_args","","",0,{"inputs":[{"name":"event"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",0,{"inputs":[{"name":"event"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"render","","",0,{"inputs":[{"name":"event"},{"name":"renderargs"}],"output":{"name":"event"}}],[11,"after_render","","",0,{"inputs":[{"name":"event"},{"name":"afterrenderargs"}],"output":{"name":"event"}}],[11,"update","","",0,{"inputs":[{"name":"event"},{"name":"updateargs"}],"output":{"name":"event"}}],[11,"idle","","",0,{"inputs":[{"name":"event"},{"name":"idleargs"}],"output":{"name":"event"}}],[11,"input","","",0,{"inputs":[{"name":"event"},{"name":"i"}],"output":{"name":"event"}}],[8,"UpdateEvent","","When the application state should be updated",null,null],[10,"from_update_args","","Creates an update event.",3,{"inputs":[{"name":"updateevent"},{"name":"updateargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",3,{"inputs":[{"name":"updateevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"update","","Calls closure if this is an update event.",3,{"inputs":[{"name":"updateevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",3,{"inputs":[{"name":"updateevent"}],"output":{"name":"option"}}],[8,"RenderEvent","","When the next frame should be rendered",null,null],[10,"from_render_args","","Creates a render event.",4,{"inputs":[{"name":"renderevent"},{"name":"renderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"render","","Calls closure if this is a render event.",4,{"inputs":[{"name":"renderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",4,{"inputs":[{"name":"renderevent"}],"output":{"name":"option"}}],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",5,{"inputs":[{"name":"afterrenderevent"},{"name":"afterrenderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"after_render","","Calls closure if this is an after render event.",5,{"inputs":[{"name":"afterrenderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"after_render_args","","Returns after render arguments.",5,{"inputs":[{"name":"afterrenderevent"}],"output":{"name":"option"}}],[8,"IdleEvent","","When background tasks should be performed",null,null],[10,"from_idle_args","","Creates an idle event.",6,{"inputs":[{"name":"idleevent"},{"name":"idleargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",6,{"inputs":[{"name":"idleevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"idle","","Calls closure if this is an idle event.",6,{"inputs":[{"name":"idleevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",6,{"inputs":[{"name":"idleevent"}],"output":{"name":"option"}}],[8,"PressEvent","","The press of a button",null,null],[10,"from_button","","Creates a press event.",7,{"inputs":[{"name":"pressevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"press","","Calls closure if this is a press event.",7,{"inputs":[{"name":"pressevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",7,{"inputs":[{"name":"pressevent"}],"output":{"name":"option"}}],[8,"ReleaseEvent","","The release of a button",null,null],[10,"from_button","","Creates a release event.",8,{"inputs":[{"name":"releaseevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"release","","Calls closure if this is a release event.",8,{"inputs":[{"name":"releaseevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",8,{"inputs":[{"name":"releaseevent"}],"output":{"name":"option"}}],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",9,{"inputs":[{"name":"mousecursorevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",9,{"inputs":[{"name":"mousecursorevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",9,{"inputs":[{"name":"mousecursorevent"}],"output":{"name":"option"}}],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",10,{"inputs":[{"name":"mouserelativeevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",10,{"inputs":[{"name":"mouserelativeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_relative_args","","Returns mouse relative arguments.",10,{"inputs":[{"name":"mouserelativeevent"}],"output":{"name":"option"}}],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",11,{"inputs":[{"name":"mousescrollevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",11,{"inputs":[{"name":"mousescrollevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",11,{"inputs":[{"name":"mousescrollevent"}],"output":{"name":"option"}}],[8,"TextEvent","","When receiving text from user, such as typing a character",null,null],[10,"from_text","","Creates a text event.",12,{"inputs":[{"name":"textevent"},{"name":"str"},{"name":"self"}],"output":{"name":"option"}}],[10,"text","","Calls closure if this is a text event.",12,{"inputs":[{"name":"textevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",12,{"inputs":[{"name":"textevent"}],"output":{"name":"option"}}],[8,"ResizeEvent","","When the window is resized",null,null],[10,"from_width_height","","Creates a resize event.",13,{"inputs":[{"name":"resizeevent"},{"name":"u32"},{"name":"u32"},{"name":"self"}],"output":{"name":"option"}}],[10,"resize","","Calls closure if this is a resize event.",13,{"inputs":[{"name":"resizeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",13,{"inputs":[{"name":"resizeevent"}],"output":{"name":"option"}}],[8,"FocusEvent","","When window gets or looses focus",null,null],[10,"from_focused","","Creates a focus event.",14,{"inputs":[{"name":"focusevent"},{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"focus","","Calls closure if this is a focus event.",14,{"inputs":[{"name":"focusevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",14,{"inputs":[{"name":"focusevent"}],"output":{"name":"option"}}],[8,"Events","","A trait for create event iterator from window.",null,null],[10,"events","","Creates event iterator from window.",15,{"inputs":[{"name":"events"}],"output":{"name":"windowevents"}}],[11,"eq","","",16,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"eventid"}],"output":{"name":"eventid"}}],[11,"events","alloc::rc","",17,{"inputs":[{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"from_dt","event","Creates an update event with delta time.",3,{"inputs":[{"name":"updateevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",3,{"inputs":[{"name":"updateevent"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",4,{"inputs":[{"name":"renderevent"}],"output":{"name":"option"}}],[11,"after_render_args","","Returns after render arguments.",5,{"inputs":[{"name":"afterrenderevent"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",6,{"inputs":[{"name":"idleevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",6,{"inputs":[{"name":"idleevent"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",7,{"inputs":[{"name":"pressevent"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",8,{"inputs":[{"name":"releaseevent"}],"output":{"name":"option"}}],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",9,{"inputs":[{"name":"mousecursorevent"}],"output":{"name":"option"}}],[11,"mouse_relative_args","","Returns mouse relative arguments.",10,{"inputs":[{"name":"mouserelativeevent"}],"output":{"name":"option"}}],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",11,{"inputs":[{"name":"mousescrollevent"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",12,{"inputs":[{"name":"textevent"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",13,{"inputs":[{"name":"resizeevent"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",14,{"inputs":[{"name":"focusevent"}],"output":{"name":"option"}}]],"paths":[[4,"Event"],[8,"GenericEvent"],[4,"Input"],[8,"UpdateEvent"],[8,"RenderEvent"],[8,"AfterRenderEvent"],[8,"IdleEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"TextEvent"],[8,"ResizeEvent"],[8,"FocusEvent"],[8,"Events"],[3,"EventId"],[3,"Rc"]]};
searchIndex['event_loop'] = {"items":[[0,"","event_loop","A generic event loop for games and interactive applications",null,null],[3,"RenderArgs","","Render arguments",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",0,null],[12,"width","","The width of rendered area in points.",0,null],[12,"height","","The height of rendered area in points.",0,null],[12,"draw_width","","The width of rendered area in pixels.",0,null],[12,"draw_height","","The height of rendered area in pixels.",0,null],[3,"AfterRenderArgs","","After render arguments.",null,null],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",null,null],[12,"dt","","Delta time in seconds.",1,null],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",2,null],[3,"WindowEvents","","An event loop iterator",null,null],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[8,"EventMap","","Methods required to map from consumed event to emitted event.",null,null],[10,"render","","Creates a render event.",3,{"inputs":[{"name":"eventmap"},{"name":"renderargs"}],"output":{"name":"self"}}],[10,"after_render","","Creates an after render event.",3,{"inputs":[{"name":"eventmap"},{"name":"afterrenderargs"}],"output":{"name":"self"}}],[10,"update","","Creates an update event.",3,{"inputs":[{"name":"eventmap"},{"name":"updateargs"}],"output":{"name":"self"}}],[10,"input","","Creates an input event.",3,{"inputs":[{"name":"eventmap"},{"name":"i"}],"output":{"name":"self"}}],[10,"idle","","Creates an idle event.",3,{"inputs":[{"name":"eventmap"},{"name":"idleargs"}],"output":{"name":"self"}}],[8,"EventLoop","","Methods implements for event loop settings.",null,null],[10,"set_ups","","The number of updates per second",4,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":null}],[11,"ups","","The number of updates per second",4,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":{"name":"self"}}],[10,"set_max_fps","","The maximum number of frames per second",4,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":null}],[11,"max_fps","","The maximum number of frames per second",4,{"inputs":[{"name":"eventloop"},{"name":"u64"}],"output":{"name":"self"}}],[10,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",4,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":null}],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",4,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",4,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":null}],[11,"bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",4,{"inputs":[{"name":"eventloop"},{"name":"bool"}],"output":{"name":"self"}}],[11,"fmt","","",0,{"inputs":[{"name":"renderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"renderargs"}],"output":{"name":"renderargs"}}],[11,"viewport","","Returns viewport information filling entire render area.",0,{"inputs":[{"name":"renderargs"}],"output":{"name":"viewport"}}],[11,"fmt","","",5,{"inputs":[{"name":"afterrenderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"afterrenderargs"}],"output":{"name":"afterrenderargs"}}],[11,"fmt","","",1,{"inputs":[{"name":"updateargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"updateargs"}],"output":{"name":"updateargs"}}],[11,"fmt","","",2,{"inputs":[{"name":"idleargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"idleargs"}],"output":{"name":"idleargs"}}],[11,"new","","Creates a new event iterator with default UPS and FPS settings.",6,{"inputs":[{"name":"windowevents"},{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"set_ups","","",6,{"inputs":[{"name":"windowevents"},{"name":"u64"}],"output":null}],[11,"set_max_fps","","",6,{"inputs":[{"name":"windowevents"},{"name":"u64"}],"output":null}],[11,"set_swap_buffers","","",6,{"inputs":[{"name":"windowevents"},{"name":"bool"}],"output":null}],[11,"set_bench_mode","","",6,{"inputs":[{"name":"windowevents"},{"name":"bool"}],"output":null}],[11,"next","","Returns the next game event.",6,{"inputs":[{"name":"windowevents"}],"output":{"name":"option"}}]],"paths":[[3,"RenderArgs"],[3,"UpdateArgs"],[3,"IdleArgs"],[8,"EventMap"],[8,"EventLoop"],[3,"AfterRenderArgs"],[3,"WindowEvents"]]};
searchIndex['window'] = {"items":[[0,"","window","Window abstraction",null,null],[3,"Size","","Size in pixels.",null,null],[12,"width","","The width in pixels.",0,null],[12,"height","","The height in pixels.",0,null],[3,"WindowSettings","","Settings for window behavior.",null,null],[3,"NoWindow","","An implementation of Window that runs without a window at all.",null,null],[6,"ProcAddress","","The type of an OpenGL function address.",null,null],[8,"Window","","Required to use the event loop.",null,null],[16,"Event","","The event type emitted by `poll_event`",1,null],[10,"should_close","","Returns true if window should close.",1,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[10,"size","","Gets the size of the window in user coordinates.",1,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[10,"swap_buffers","","Swaps render buffers.",1,{"inputs":[{"name":"window"}],"output":null}],[10,"poll_event","","Polls event from window.",1,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[10,"draw_size","","Gets draw size of the window.\nThis is equal to the size of the frame buffer of the inner window,\nexcluding the title bar and borders.",1,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[8,"AdvancedWindow","","Implemented by fully supported window back-ends.",null,null],[10,"get_title","","Gets a copy of the title of the window.",2,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"string"}}],[10,"set_title","","Sets the title of the window.",2,{"inputs":[{"name":"advancedwindow"},{"name":"string"}],"output":null}],[11,"title","","Sets title on window.",2,{"inputs":[{"name":"advancedwindow"},{"name":"string"}],"output":{"name":"self"}}],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",2,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"bool"}}],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",2,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":null}],[11,"exit_on_esc","","Sets whether to exit when pressing esc.",2,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_capture_cursor","","Sets whether to capture/grab cursor.\nThis is used to lock and hide cursor to the window,\nfor example in a first-person shooter game.",2,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":null}],[11,"capture_cursor","","Sets whether to capture/grab cursor (see `set_capture_cursor`).",2,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[8,"OpenGLWindow","","Trait for OpenGL specific operations.",null,null],[10,"get_proc_address","","Returns the address of an OpenGL function if it exist, else returns null pointer.",3,{"inputs":[{"name":"openglwindow"},{"name":"str"}],"output":{"name":"procaddress"}}],[10,"is_current","","Returns true if this context is the current context.",3,{"inputs":[{"name":"openglwindow"}],"output":{"name":"bool"}}],[10,"make_current","","Make this context current.",3,{"inputs":[{"name":"openglwindow"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"size"}],"output":{"name":"size"}}],[11,"from","","",0,null],[11,"from","","",0,null],[11,"new","","Creates window settings with defaults.\n- samples: 0\n- fullscreen: false\n- exit_on_esc: false",4,{"inputs":[{"name":"windowsettings"},{"name":"t"},{"name":"s"}],"output":{"name":"windowsettings"}}],[11,"get_title","","Gets title.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"string"}}],[11,"title","","Sets title.",4,{"inputs":[{"name":"windowsettings"},{"name":"string"}],"output":{"name":"self"}}],[11,"get_size","","Gets size.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"size"}}],[11,"size","","Sets size.",4,{"inputs":[{"name":"windowsettings"},{"name":"size"}],"output":{"name":"self"}}],[11,"get_fullscreen","","Gets fullscreen.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"fullscreen","","Sets fullscreen.",4,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_exit_on_esc","","Gets exit on esc.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"exit_on_esc","","Sets exit on esc.",4,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_samples","","Gets samples.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"u8"}}],[11,"samples","","Sets samples.",4,{"inputs":[{"name":"windowsettings"},{"name":"u8"}],"output":{"name":"self"}}],[11,"get_vsync","","Gets vsync.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"vsync","","Sets vsync.",4,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_maybe_opengl","","Gets opengl.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"option"}}],[11,"maybe_opengl","","Sets opengl.",4,{"inputs":[{"name":"windowsettings"},{"name":"option"}],"output":{"name":"self"}}],[11,"opengl","","Sets opengl.",4,{"inputs":[{"name":"windowsettings"},{"name":"opengl"}],"output":{"name":"self"}}],[11,"new","","Returns a new `NoWindow`.",5,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"nowindow"}}],[11,"from","","",5,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"nowindow"}}],[11,"should_close","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"size","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"swap_buffers","","",5,{"inputs":[{"name":"nowindow"}],"output":null}],[11,"poll_event","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"option"}}],[11,"draw_size","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"get_title","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"string"}}],[11,"set_title","","",5,{"inputs":[{"name":"nowindow"},{"name":"string"}],"output":null}],[11,"get_exit_on_esc","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",5,{"inputs":[{"name":"nowindow"},{"name":"bool"}],"output":null}],[11,"set_capture_cursor","","",5,{"inputs":[{"name":"nowindow"},{"name":"bool"}],"output":null}]],"paths":[[3,"Size"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"WindowSettings"],[3,"NoWindow"]]};
searchIndex['input'] = {"items":[[0,"","input","A flexible structure for user interactions\nto be used in window frameworks and widgets libraries.",null,null],[4,"Button","","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",0,null],[13,"Mouse","","A mouse button.",0,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",1,null],[13,"MouseRelative","","x and y in relative coordinates.",1,null],[13,"MouseScroll","","x and y in scroll ticks.",1,null],[4,"Input","","Models input events.",null,null],[13,"Press","","Pressed a button.",2,null],[13,"Release","","Released a button.",2,null],[13,"Move","","Moved mouse cursor.",2,null],[13,"Text","","Text (usually from keyboard).",2,null],[13,"Resize","","Window got resized.",2,null],[13,"Focus","","Window gained or lost focus.",2,null],[0,"keyboard","","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","input::keyboard","",null,null],[4,"Key","","Represent a keyboard key.",null,null],[13,"Unknown","","",3,null],[13,"Backspace","","",3,null],[13,"Tab","","",3,null],[13,"Return","","",3,null],[13,"Escape","","",3,null],[13,"Space","","",3,null],[13,"Exclaim","","",3,null],[13,"Quotedbl","","",3,null],[13,"Hash","","",3,null],[13,"Dollar","","",3,null],[13,"Percent","","",3,null],[13,"Ampersand","","",3,null],[13,"Quote","","",3,null],[13,"LeftParen","","",3,null],[13,"RightParen","","",3,null],[13,"Asterisk","","",3,null],[13,"Plus","","",3,null],[13,"Comma","","",3,null],[13,"Minus","","",3,null],[13,"Period","","",3,null],[13,"Slash","","",3,null],[13,"D0","","",3,null],[13,"D1","","",3,null],[13,"D2","","",3,null],[13,"D3","","",3,null],[13,"D4","","",3,null],[13,"D5","","",3,null],[13,"D6","","",3,null],[13,"D7","","",3,null],[13,"D8","","",3,null],[13,"D9","","",3,null],[13,"Colon","","",3,null],[13,"Semicolon","","",3,null],[13,"Less","","",3,null],[13,"Equals","","",3,null],[13,"Greater","","",3,null],[13,"Question","","",3,null],[13,"At","","",3,null],[13,"LeftBracket","","",3,null],[13,"Backslash","","",3,null],[13,"RightBracket","","",3,null],[13,"Caret","","",3,null],[13,"Underscore","","",3,null],[13,"Backquote","","",3,null],[13,"A","","",3,null],[13,"B","","",3,null],[13,"C","","",3,null],[13,"D","","",3,null],[13,"E","","",3,null],[13,"F","","",3,null],[13,"G","","",3,null],[13,"H","","",3,null],[13,"I","","",3,null],[13,"J","","",3,null],[13,"K","","",3,null],[13,"L","","",3,null],[13,"M","","",3,null],[13,"N","","",3,null],[13,"O","","",3,null],[13,"P","","",3,null],[13,"Q","","",3,null],[13,"R","","",3,null],[13,"S","","",3,null],[13,"T","","",3,null],[13,"U","","",3,null],[13,"V","","",3,null],[13,"W","","",3,null],[13,"X","","",3,null],[13,"Y","","",3,null],[13,"Z","","",3,null],[13,"Delete","","",3,null],[13,"CapsLock","","",3,null],[13,"F1","","",3,null],[13,"F2","","",3,null],[13,"F3","","",3,null],[13,"F4","","",3,null],[13,"F5","","",3,null],[13,"F6","","",3,null],[13,"F7","","",3,null],[13,"F8","","",3,null],[13,"F9","","",3,null],[13,"F10","","",3,null],[13,"F11","","",3,null],[13,"F12","","",3,null],[13,"PrintScreen","","",3,null],[13,"ScrollLock","","",3,null],[13,"Pause","","",3,null],[13,"Insert","","",3,null],[13,"Home","","",3,null],[13,"PageUp","","",3,null],[13,"End","","",3,null],[13,"PageDown","","",3,null],[13,"Right","","",3,null],[13,"Left","","",3,null],[13,"Down","","",3,null],[13,"Up","","",3,null],[13,"NumLockClear","","",3,null],[13,"NumPadDivide","","",3,null],[13,"NumPadMultiply","","",3,null],[13,"NumPadMinus","","",3,null],[13,"NumPadPlus","","",3,null],[13,"NumPadEnter","","",3,null],[13,"NumPad1","","",3,null],[13,"NumPad2","","",3,null],[13,"NumPad3","","",3,null],[13,"NumPad4","","",3,null],[13,"NumPad5","","",3,null],[13,"NumPad6","","",3,null],[13,"NumPad7","","",3,null],[13,"NumPad8","","",3,null],[13,"NumPad9","","",3,null],[13,"NumPad0","","",3,null],[13,"NumPadPeriod","","",3,null],[13,"Application","","",3,null],[13,"Power","","",3,null],[13,"NumPadEquals","","",3,null],[13,"F13","","",3,null],[13,"F14","","",3,null],[13,"F15","","",3,null],[13,"F16","","",3,null],[13,"F17","","",3,null],[13,"F18","","",3,null],[13,"F19","","",3,null],[13,"F20","","",3,null],[13,"F21","","",3,null],[13,"F22","","",3,null],[13,"F23","","",3,null],[13,"F24","","",3,null],[13,"Execute","","",3,null],[13,"Help","","",3,null],[13,"Menu","","",3,null],[13,"Select","","",3,null],[13,"Stop","","",3,null],[13,"Again","","",3,null],[13,"Undo","","",3,null],[13,"Cut","","",3,null],[13,"Copy","","",3,null],[13,"Paste","","",3,null],[13,"Find","","",3,null],[13,"Mute","","",3,null],[13,"VolumeUp","","",3,null],[13,"VolumeDown","","",3,null],[13,"NumPadComma","","",3,null],[13,"NumPadEqualsAS400","","",3,null],[13,"AltErase","","",3,null],[13,"Sysreq","","",3,null],[13,"Cancel","","",3,null],[13,"Clear","","",3,null],[13,"Prior","","",3,null],[13,"Return2","","",3,null],[13,"Separator","","",3,null],[13,"Out","","",3,null],[13,"Oper","","",3,null],[13,"ClearAgain","","",3,null],[13,"CrSel","","",3,null],[13,"ExSel","","",3,null],[13,"NumPad00","","",3,null],[13,"NumPad000","","",3,null],[13,"ThousandsSeparator","","",3,null],[13,"DecimalSeparator","","",3,null],[13,"CurrencyUnit","","",3,null],[13,"CurrencySubUnit","","",3,null],[13,"NumPadLeftParen","","",3,null],[13,"NumPadRightParen","","",3,null],[13,"NumPadLeftBrace","","",3,null],[13,"NumPadRightBrace","","",3,null],[13,"NumPadTab","","",3,null],[13,"NumPadBackspace","","",3,null],[13,"NumPadA","","",3,null],[13,"NumPadB","","",3,null],[13,"NumPadC","","",3,null],[13,"NumPadD","","",3,null],[13,"NumPadE","","",3,null],[13,"NumPadF","","",3,null],[13,"NumPadXor","","",3,null],[13,"NumPadPower","","",3,null],[13,"NumPadPercent","","",3,null],[13,"NumPadLess","","",3,null],[13,"NumPadGreater","","",3,null],[13,"NumPadAmpersand","","",3,null],[13,"NumPadDblAmpersand","","",3,null],[13,"NumPadVerticalBar","","",3,null],[13,"NumPadDblVerticalBar","","",3,null],[13,"NumPadColon","","",3,null],[13,"NumPadHash","","",3,null],[13,"NumPadSpace","","",3,null],[13,"NumPadAt","","",3,null],[13,"NumPadExclam","","",3,null],[13,"NumPadMemStore","","",3,null],[13,"NumPadMemRecall","","",3,null],[13,"NumPadMemClear","","",3,null],[13,"NumPadMemAdd","","",3,null],[13,"NumPadMemSubtract","","",3,null],[13,"NumPadMemMultiply","","",3,null],[13,"NumPadMemDivide","","",3,null],[13,"NumPadPlusMinus","","",3,null],[13,"NumPadClear","","",3,null],[13,"NumPadClearEntry","","",3,null],[13,"NumPadBinary","","",3,null],[13,"NumPadOctal","","",3,null],[13,"NumPadDecimal","","",3,null],[13,"NumPadHexadecimal","","",3,null],[13,"LCtrl","","",3,null],[13,"LShift","","",3,null],[13,"LAlt","","",3,null],[13,"LGui","","",3,null],[13,"RCtrl","","",3,null],[13,"RShift","","",3,null],[13,"RAlt","","",3,null],[13,"RGui","","",3,null],[13,"Mode","","",3,null],[13,"AudioNext","","",3,null],[13,"AudioPrev","","",3,null],[13,"AudioStop","","",3,null],[13,"AudioPlay","","",3,null],[13,"AudioMute","","",3,null],[13,"MediaSelect","","",3,null],[13,"Www","","",3,null],[13,"Mail","","",3,null],[13,"Calculator","","",3,null],[13,"Computer","","",3,null],[13,"AcSearch","","",3,null],[13,"AcHome","","",3,null],[13,"AcBack","","",3,null],[13,"AcForward","","",3,null],[13,"AcStop","","",3,null],[13,"AcRefresh","","",3,null],[13,"AcBookmarks","","",3,null],[13,"BrightnessDown","","",3,null],[13,"BrightnessUp","","",3,null],[13,"DisplaySwitch","","",3,null],[13,"KbdIllumToggle","","",3,null],[13,"KbdIllumDown","","",3,null],[13,"KbdIllumUp","","",3,null],[13,"Eject","","",3,null],[13,"Sleep","","",3,null],[17,"NO_MODIFIER","","/// No modifier.",null,null],[17,"CTRL","","/// Ctrl.",null,null],[17,"SHIFT","","/// Shift.",null,null],[17,"ALT","","/// Alt.",null,null],[17,"GUI","","/// Gui.",null,null],[17,"CTRL_SHIFT","","/// Ctrl + Shift.",null,null],[17,"CTRL_ALT","","/// Ctrl + Alt.",null,null],[17,"CTRL_GUI","","/// Ctrl + Gui.",null,null],[17,"CTRL_SHIFT_ALT","","/// Ctrl + Shift + Alt.",null,null],[17,"CTRL_SHIFT_GUI","","/// Ctrl + Shift + Gui.",null,null],[17,"CTRL_SHIFT_ALT_GUI","","/// Ctrl + Shift + Alt + Gui.",null,null],[17,"SHIFT_ALT","","/// Shift + Alt.",null,null],[17,"SHIFT_GUI","","/// Shift + Gui.",null,null],[17,"SHIFT_ALT_GUI","","/// Shift + Alt + Gui.",null,null],[17,"ALT_GUI","","/// Alt + Gui.",null,null],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"eq","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"encode","","",4,{"inputs":[{"name":"modifierkey"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"modifierkey"},{"name":"__d"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"modifierkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"all","","Returns the set containing all flags.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bits","","Returns the raw value of the flags currently stored.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",4,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",4,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"modifierkey"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"sub","","Returns the set difference of the two sets of flags.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"not","","Returns the complement of this set of flags.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"from_iter","","",4,{"inputs":[{"name":"modifierkey"},{"name":"t"}],"output":{"name":"modifierkey"}}],[11,"handle_input","","Change modifier key state depending on input.",4,{"inputs":[{"name":"modifierkey"},{"name":"input"}],"output":null}],[11,"default","","",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",3,{"inputs":[{"name":"key"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"key"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"eq","","",3,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"option"}}],[11,"cmp","","",3,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"ordering"}}],[11,"code","","Returns an id of the key",3,{"inputs":[{"name":"key"}],"output":{"name":"i32"}}],[11,"to_i64","","",3,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"to_u64","","",3,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"to_isize","","",3,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"from_u64","","",3,{"inputs":[{"name":"key"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",3,{"inputs":[{"name":"key"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_isize","","",3,{"inputs":[{"name":"key"},{"name":"isize"}],"output":{"name":"option"}}],[0,"mouse","input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",5,null],[13,"Left","","Left mouse button.",5,null],[13,"Right","","Right mouse button.",5,null],[13,"Middle","","Middle mouse button.",5,null],[13,"X1","","Extra mouse button number 1.",5,null],[13,"X2","","Extra mouse button number 2.",5,null],[13,"Button6","","Mouse button number 6.",5,null],[13,"Button7","","Mouse button number 7.",5,null],[13,"Button8","","Mouse button number 8.",5,null],[11,"fmt","","",5,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"partial_cmp","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"ordering"}}],[11,"eq","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"encode","","",5,{"inputs":[{"name":"mousebutton"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"mousebutton"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"from_u64","","",5,{"inputs":[{"name":"mousebutton"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"mousebutton"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_isize","","",5,{"inputs":[{"name":"mousebutton"},{"name":"isize"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"to_i64","","",5,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"to_isize","","",5,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"fmt","input","",0,{"inputs":[{"name":"button"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"encode","","",0,{"inputs":[{"name":"button"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"button"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"fmt","","",1,{"inputs":[{"name":"motion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"encode","","",1,{"inputs":[{"name":"motion"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"motion"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"motion"}],"output":{"name":"motion"}}],[11,"fmt","","",2,{"inputs":[{"name":"input"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"encode","","",2,{"inputs":[{"name":"input"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"input"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"input"}],"output":{"name":"input"}}]],"paths":[[4,"Button"],[4,"Motion"],[4,"Input"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"]]};
searchIndex['elmesque'] = {"items":[[0,"","elmesque","",null,null],[0,"color","","",null,null],[3,"Hsla","elmesque::color","The parts of HSL along with an alpha for transparency.",null,null],[3,"Rgba","","The parts of RGB along with an alpha for transparency.",null,null],[4,"Color","","Color supporting RGB and HSL variants.",null,null],[13,"Rgba","","Red, Green, Blue, Alpha - All values' scales represented between 0.0 and 1.0.",0,null],[13,"Hsla","","Hue, Saturation, Lightness, Alpha - all valuess scales represented between 0.0 and 1.0.",0,null],[4,"Gradient","","Linear or Radial Gradient.",null,null],[13,"Linear","","Takes a start and end point and then a series of color stops that indicate how to\ninterpolate between the start and end points.",1,null],[13,"Radial","","First takes a start point and inner radius. Then takes an end point and outer radius.\nIt then takes a series of color stops that indicate how to interpolate between the\ninner and outer circles.",1,null],[5,"rgba","","Create RGB colors with an alpha component for transparency.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb","","Create RGB colors from numbers between 0.0 and 1.0.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgba_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[5,"hsla","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV) with an alpha component for\ntransparency.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"hsl","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV). This gives you access to colors\nmore like a color wheel, where all hues are arranged in a circle that you specify with radians.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"grayscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"greyscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"random","","Construct a random color.",null,{"inputs":[],"output":{"name":"color"}}],[5,"f32_to_byte","","Convert an f32 color to a byte.",null,{"inputs":[{"name":"f32"}],"output":{"name":"u8"}}],[5,"rgb_to_hsl","","Pure function for converting rgb to hsl.",null,null],[5,"hsl_to_rgb","","Pure function for converting hsl to rgb.",null,null],[5,"linear","","Create a linear gradient.",null,null],[5,"radial","","Create a radial gradient.",null,null],[5,"light_red","","Built-in colors.",null,{"inputs":[],"output":{"name":"color"}}],[5,"red","","Scarlet Red - Regular - #CC0000",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_red","","Scarlet Red - Dark - #A30000",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_orange","","Orange - Light - #FCAF3E",null,{"inputs":[],"output":{"name":"color"}}],[5,"orange","","Orange - Regular - #F57900",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_orange","","Orange - Dark - #CE5C00",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_yellow","","Butter - Light - #FCE94F",null,{"inputs":[],"output":{"name":"color"}}],[5,"yellow","","Butter - Regular - #EDD400",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_yellow","","Butter - Dark - #C4A000",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_green","","Chameleon - Light - #8AE234",null,{"inputs":[],"output":{"name":"color"}}],[5,"green","","Chameleon - Regular - #73D216",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_green","","Chameleon - Dark - #4E9A06",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_blue","","Sky Blue - Light - #729FCF",null,{"inputs":[],"output":{"name":"color"}}],[5,"blue","","Sky Blue - Regular - #3465A4",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_blue","","Sky Blue - Dark - #204A87",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_purple","","Plum - Light - #AD7FA8",null,{"inputs":[],"output":{"name":"color"}}],[5,"purple","","Plum - Regular - #75507B",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_purple","","Plum - Dark - #5C3566",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_brown","","Chocolate - Light - #E9B96E",null,{"inputs":[],"output":{"name":"color"}}],[5,"brown","","Chocolate - Regular - #C17D11",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_brown","","Chocolate - Dark - #8F5902",null,{"inputs":[],"output":{"name":"color"}}],[5,"black","","Straight Black.",null,{"inputs":[],"output":{"name":"color"}}],[5,"white","","Straight White.",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_gray","","Alluminium - Light",null,{"inputs":[],"output":{"name":"color"}}],[5,"gray","","Alluminium - Regular",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_gray","","Alluminium - Dark",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_grey","","Aluminium - Light - #EEEEEC",null,{"inputs":[],"output":{"name":"color"}}],[5,"grey","","Aluminium - Regular - #D3D7CF",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_grey","","Aluminium - Dark - #BABDB6",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_charcoal","","Charcoal - Light - #888A85",null,{"inputs":[],"output":{"name":"color"}}],[5,"charcoal","","Charcoal - Regular - #555753",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_charcoal","","Charcoal - Dark - #2E3436",null,{"inputs":[],"output":{"name":"color"}}],[6,"Colour","","Regional spelling alias.",null,null],[8,"Colorable","","Types that can be colored.",null,null],[10,"color","","Set the color of the widget.",2,{"inputs":[{"name":"colorable"},{"name":"color"}],"output":{"name":"self"}}],[11,"rgba","","Set the color of the widget from rgba values.",2,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"rgb","","Set the color of the widget from rgb values.",2,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsla","","Set the color of the widget from hsla values.",2,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsl","","Set the color of the widget from hsl values.",2,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"decode","","",0,{"inputs":[{"name":"color"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"color"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"color"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"eq","","",0,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"complement","","Produce a complementary color. The two colors will accent each other. This is the same as\nrotating the hue by 180 degrees.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"luminance","","Calculate and return the luminance of the Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"plain_contrast","","Return either black or white, depending which contrasts the Color the most. This will be\nuseful for determining a readable color for text on any given background Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"to_hsl","","Extract the components of a color in the HSL format.",0,{"inputs":[{"name":"color"}],"output":{"name":"hsla"}}],[11,"to_rgb","","Extract the components of a color in the RGB format.",0,{"inputs":[{"name":"color"}],"output":{"name":"rgba"}}],[11,"to_fsa","","Extract the components of a color in the RGB format within a fixed-size array.",0,null],[11,"to_byte_fsa","","Same as `to_fsa`, except r, g, b and a are represented in byte form.",0,null],[11,"to_hex","","Return the hex representation of this color in the format #RRGGBBAA\ne.g. `Color(1.0, 0.0, 5.0, 1.0) == \"#FF0080FF\"`",0,{"inputs":[{"name":"color"}],"output":{"name":"string"}}],[11,"with_luminance","","Return the same color but with the given luminance.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"alpha","","Return the same color but with the alpha multiplied by the given alpha.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"with_alpha","","Return the same color but with the given alpha.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"highlighted","","Return a highlighted version of the current Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"clicked","","Return a clicked version of the current Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"invert","","Return the Color's invert.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"red","","Return the red value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"green","","Return the green value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"blue","","Return the blue value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"set_red","","Set the red value.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":null}],[11,"set_green","","Set the green value.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":null}],[11,"set_blue","","Set the blue value.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"hsla"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"hsla"}],"output":{"name":"hsla"}}],[11,"fmt","","",4,{"inputs":[{"name":"rgba"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"rgba"}],"output":{"name":"rgba"}}],[11,"fmt","","",1,{"inputs":[{"name":"gradient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"gradient"}],"output":{"name":"gradient"}}],[0,"element","elmesque","",null,null],[3,"Properties","elmesque::element","An Element's Properties.",null,null],[12,"width","","",5,null],[12,"height","","",5,null],[12,"opacity","","",5,null],[12,"crop","","",5,null],[12,"color","","",5,null],[3,"Element","","Graphical elements that snap together to build complex widgets and layouts.",null,null],[12,"props","","",6,null],[12,"element","","",6,null],[3,"Position","","An element's Position.",null,null],[3,"Renderer","","",null,null],[4,"Prim","","The various kinds of Elements.",null,null],[13,"Image","","",7,null],[13,"Container","","",7,null],[13,"Flow","","",7,null],[13,"Collage","","",7,null],[13,"Cleared","","",7,null],[13,"Spacer","","",7,null],[4,"ImageStyle","","Styling for the Image Element.",null,null],[13,"Plain","","",8,null],[13,"Fitted","","",8,null],[13,"Cropped","","",8,null],[13,"Tiled","","",8,null],[4,"Three","","",null,null],[13,"P","","",9,null],[13,"Z","","",9,null],[13,"N","","",9,null],[4,"Pos","","",null,null],[13,"Absolute","","",10,null],[13,"Relative","","",10,null],[4,"Direction","","The direction for a flow of `Element`s.",null,null],[13,"Up","","",11,null],[13,"Down","","",11,null],[13,"Left","","",11,null],[13,"Right","","",11,null],[13,"In","","",11,null],[13,"Out","","",11,null],[5,"size_of","","Return the size of the Element.",null,null],[5,"new_element","","Construct a new Element from width, height and some Prim.\nIterates the global GUID counter by one and returns that as the Element id.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"prim"}],"output":{"name":"element"}}],[5,"spacer","","Create an empty box. this is useful for getting your spacing right and making borders.",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"element"}}],[5,"empty","","An Element that takes up no space. Good for things that appear conditionally.",null,{"inputs":[],"output":{"name":"element"}}],[5,"image","","Create an image given a width, height and texture.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"pathbuf"}],"output":{"name":"element"}}],[5,"fitted_image","","Create a fitted image given a width, height and texture. This will crop the picture to best\nfill the given dimensions.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"pathbuf"}],"output":{"name":"element"}}],[5,"cropped_image","","Create a cropped image. Take a rectangle out of the picture starting at the given top left\ncoordinate.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"pathbuf"}],"output":{"name":"element"}}],[5,"tiled_image","","Create a tiled image given a width, height and texture.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"pathbuf"}],"output":{"name":"element"}}],[5,"flow","","Have a list of elements flow in a particular direction. The `Direction` starts from the first\nelement in the list. The result is an `Element`.",null,{"inputs":[{"name":"direction"},{"name":"vec"}],"output":{"name":"element"}}],[5,"layers","","Layer elements on top of each other, starting from the bottom.",null,{"inputs":[{"name":"vec"}],"output":{"name":"element"}}],[5,"absolute","","Repetitive things.",null,{"inputs":[{"name":"i32"}],"output":{"name":"pos"}}],[5,"relative","","",null,{"inputs":[{"name":"f32"}],"output":{"name":"pos"}}],[5,"middle","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"top_left","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"top_right","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"bottom_left","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"bottom_right","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"mid_left","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"mid_right","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"mid_top","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"mid_bottom","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"middle_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"top_left_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"top_right_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"bottom_left_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"bottom_right_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"mid_left_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"mid_right_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"mid_top_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"mid_bottom_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"up","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"down","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"left","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"right","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"inward","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"outward","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"draw_element","","Draw an Element.",null,{"inputs":[{"name":"element"},{"name":"f32"},{"name":"g"},{"name":"option"},{"name":"context"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"properties"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"properties"}],"output":{"name":"properties"}}],[11,"fmt","","",6,{"inputs":[{"name":"element"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"element"}],"output":{"name":"element"}}],[11,"width","","Create an `Element` with a given width.",6,{"inputs":[{"name":"element"},{"name":"i32"}],"output":{"name":"element"}}],[11,"height","","Create an `Element` with a given height.",6,{"inputs":[{"name":"element"},{"name":"i32"}],"output":{"name":"element"}}],[11,"size","","Create an `Element` with a given size.",6,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"}],"output":{"name":"element"}}],[11,"opacity","","Create an `Element` with a given opacity.",6,{"inputs":[{"name":"element"},{"name":"f32"}],"output":{"name":"element"}}],[11,"color","","Create an `Element with a given background color.",6,{"inputs":[{"name":"element"},{"name":"color"}],"output":{"name":"element"}}],[11,"crop","","Crops an `Element` with the given rectangle.",6,{"inputs":[{"name":"element"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"element"}}],[11,"container","","Put an element in a container. This lets you position the element really easily, and there are\ntons of ways to set the `Position`.",6,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"},{"name":"position"}],"output":{"name":"element"}}],[11,"clear","","Put an element in a cleared wrapper. The color provided will be the color that clears the\nscreen before rendering the contained element.",6,{"inputs":[{"name":"element"},{"name":"color"}],"output":{"name":"element"}}],[11,"above","","Stack elements vertically. To put `a` above `b` you would say: `a.above(b)`",6,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"below","","Stack elements vertically. To put `a` below `b` you would say: `a.below(b)`",6,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"beside","","Put elements beside each other horizontally. To put `b` to the right of `a` you would say:\n`a.beside(b)`",6,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"get_width","","Return the width of the Element.",6,{"inputs":[{"name":"element"}],"output":{"name":"i32"}}],[11,"get_height","","Return the height of the Element.",6,{"inputs":[{"name":"element"}],"output":{"name":"i32"}}],[11,"get_size","","Return the size of the Element's bounding rectangle.",6,null],[11,"draw","","Draw the form with some given graphics backend.",6,{"inputs":[{"name":"element"},{"name":"renderer"}],"output":null}],[11,"is_over","","Return whether or not a point is over the element.",6,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"prim"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"prim"}],"output":{"name":"prim"}}],[11,"fmt","","",8,{"inputs":[{"name":"imagestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"imagestyle"}],"output":{"name":"imagestyle"}}],[11,"fmt","","",9,{"inputs":[{"name":"three"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"three"}],"output":{"name":"three"}}],[11,"fmt","","",10,{"inputs":[{"name":"pos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"pos"}],"output":{"name":"pos"}}],[11,"fmt","","",12,{"inputs":[{"name":"position"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","","",11,{"inputs":[{"name":"direction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"new","","Construct a renderer, used for rendering elmesque `Element`s.",13,{"inputs":[{"name":"renderer"},{"name":"context"},{"name":"g"}],"output":{"name":"renderer"}}],[11,"character_cache","","Builder method for constructing a Renderer with a GlyphCache for drawing text.",13,{"inputs":[{"name":"renderer"},{"name":"c"}],"output":{"name":"renderer"}}],[0,"form","elmesque","",null,null],[3,"Form","elmesque::form","A general, freeform 2D graphics structure.",null,null],[12,"theta","","",14,null],[12,"scale","","",14,null],[12,"x","","",14,null],[12,"y","","",14,null],[12,"alpha","","",14,null],[12,"form","","",14,null],[3,"LineStyle","","",null,null],[12,"color","","",15,null],[12,"width","","",15,null],[12,"cap","","",15,null],[12,"join","","",15,null],[12,"dashing","","",15,null],[12,"dash_offset","","",15,null],[3,"PointPath","","A path described by a sequence of points.",null,null],[3,"Shape","","A shape described by its edges.",null,null],[4,"FillStyle","","",null,null],[13,"Solid","","",16,null],[13,"Texture","","",16,null],[13,"Grad","","",16,null],[4,"LineCap","","",null,null],[13,"Flat","","",17,null],[13,"Round","","",17,null],[13,"Padded","","",17,null],[4,"LineJoin","","",null,null],[13,"Smooth","","",18,null],[13,"Sharp","","",18,null],[13,"Clipped","","",18,null],[4,"BasicForm","","The basic variants a Form can consist of.",null,null],[13,"PointPath","","",19,null],[13,"Shape","","",19,null],[13,"OutlinedText","","",19,null],[13,"Text","","",19,null],[13,"Image","","",19,null],[13,"Element","","",19,null],[13,"Group","","",19,null],[4,"ShapeStyle","","Whether a shape is outlined or filled.",null,null],[13,"Line","","",20,null],[13,"Fill","","",20,null],[5,"solid","","Create a solid line style with a given color.",null,{"inputs":[{"name":"color"}],"output":{"name":"linestyle"}}],[5,"dashed","","Create a dashed line style with a given color. Dashing equals `[8, 4]`.",null,{"inputs":[{"name":"color"}],"output":{"name":"linestyle"}}],[5,"dotted","","Create a dotted line style with a given color. Dashing equals `[3, 3]`.",null,{"inputs":[{"name":"color"}],"output":{"name":"linestyle"}}],[5,"to_form","","Turn any `Element` into a `Form`. This lets you use text, gifs, and video in your collage. This\nmeans you can move, rotate, and scale an `Element` however you want.",null,{"inputs":[{"name":"element"}],"output":{"name":"form"}}],[5,"group","","Flatten many forms into a single `Form`. This lets you move and rotate them as a single unit,\nmaking it possible to build small, modular components.",null,{"inputs":[{"name":"vec"}],"output":{"name":"form"}}],[5,"group_transform","","Flatten many forms into a single `Form` and then apply a matrix transformation.",null,{"inputs":[{"name":"transform2d"},{"name":"vec"}],"output":{"name":"form"}}],[5,"traced","","Trace a path with a given line style.",null,{"inputs":[{"name":"linestyle"},{"name":"pointpath"}],"output":{"name":"form"}}],[5,"line","","Create a line with a given line style.",null,{"inputs":[{"name":"linestyle"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"form"}}],[5,"sprite","","Create a sprite from a sprite sheet. It cuts out a rectangle at a given position.",null,null],[5,"collage","","A collage is a collection of 2D forms. There are no strict positioning relationships between\nforms, so you are free to do all kinds of 2D graphics.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"vec"}],"output":{"name":"element"}}],[5,"point_path","","Create a PointPath that follows a sequence of points.",null,{"inputs":[{"name":"vec"}],"output":{"name":"pointpath"}}],[5,"segment","","Create a PointPath along a given line segment.",null,null],[5,"polygon","","Create an arbitrary polygon by specifying its corners in order. `polygon` will automatically\nclose all shapes, so the given list of points does not need to start and end with the same\nposition.",null,{"inputs":[{"name":"vec"}],"output":{"name":"shape"}}],[5,"rect","","A rectangle with a given width and height.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"shape"}}],[5,"square","","A square with a given edge length.",null,{"inputs":[{"name":"f64"}],"output":{"name":"shape"}}],[5,"oval","","An oval with a given width and height.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"shape"}}],[5,"circle","","A circle with a given radius.",null,{"inputs":[{"name":"f64"}],"output":{"name":"shape"}}],[5,"ngon","","A regular polygon with N sides. The first argument specifies the number of sides and the second\nis the radius. So to create a pentagon with radius 30, you would say `ngon(5, 30.0)`",null,{"inputs":[{"name":"usize"},{"name":"f64"}],"output":{"name":"shape"}}],[5,"text","","Create some text. Details like size and color are part of the `Text` value itself, so you can\nmix colors and sizes and fonts easily.",null,{"inputs":[{"name":"text"}],"output":{"name":"form"}}],[5,"draw_form","","",null,{"inputs":[{"name":"form"},{"name":"f32"},{"name":"g"},{"name":"option"},{"name":"context"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"form"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"form"}],"output":{"name":"form"}}],[11,"fmt","","",16,{"inputs":[{"name":"fillstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"fillstyle"}],"output":{"name":"fillstyle"}}],[11,"fmt","","",17,{"inputs":[{"name":"linecap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"linecap"}],"output":{"name":"linecap"}}],[11,"fmt","","",18,{"inputs":[{"name":"linejoin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"linejoin"}],"output":{"name":"linejoin"}}],[11,"fmt","","",15,{"inputs":[{"name":"linestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"linestyle"}],"output":{"name":"linestyle"}}],[11,"default","","The default LineStyle.",15,{"inputs":[{"name":"linestyle"}],"output":{"name":"linestyle"}}],[11,"width","","The LineStyle with some given width.",15,{"inputs":[{"name":"linestyle"},{"name":"f64"}],"output":{"name":"linestyle"}}],[11,"fmt","","",19,{"inputs":[{"name":"basicform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"basicform"}],"output":{"name":"basicform"}}],[11,"fmt","","",20,{"inputs":[{"name":"shapestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"shapestyle"}],"output":{"name":"shapestyle"}}],[11,"shift","","Move a form by the given amount. this is a relative translation so `shift(10.0, 10.0, form)\nwould move `form` ten pixels up and ten pixels to the right.",14,{"inputs":[{"name":"form"},{"name":"f64"},{"name":"f64"}],"output":{"name":"form"}}],[11,"shift_x","","Move a shape in the x direction. This is relative so `shift_x(10.0, form)` moves `form` 10\npixels to the right.",14,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"shift_y","","Move a shape in the y direction. This is relative so `shift_y(10.0, form)` moves `form\nupwards by 10 pixels.",14,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"scale","","Scale a form by a given factor. Scaling by 2 doubles both dimensions and quadruples the\narea.",14,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"rotate","","Rotate a form by a given angle. Rotate takes radians and turns things counterclockwise.\nSo to turn `form` 30 degrees to the left you would say `rotate(degrees(30), form)`.",14,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"alpha","","Set the alpha of a Form. The default is 1 and 0 is totally transparent.",14,{"inputs":[{"name":"form"},{"name":"f32"}],"output":{"name":"form"}}],[11,"fmt","","",21,{"inputs":[{"name":"pointpath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"pointpath"}],"output":{"name":"pointpath"}}],[11,"fmt","","",22,{"inputs":[{"name":"shape"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"filled","","Create a filled-in shape.",22,{"inputs":[{"name":"shape"},{"name":"color"}],"output":{"name":"form"}}],[11,"textured","","Create a textured shape.\nThe texture is described by some path and is tiled to fill the entire shape.",22,{"inputs":[{"name":"shape"},{"name":"pathbuf"}],"output":{"name":"form"}}],[11,"gradient","","Fill a shape with a gradient.",22,{"inputs":[{"name":"shape"},{"name":"gradient"}],"output":{"name":"form"}}],[11,"outlined","","Outline a shape with a given line style.",22,{"inputs":[{"name":"shape"},{"name":"linestyle"}],"output":{"name":"form"}}],[0,"text","elmesque","",null,null],[3,"Text","elmesque::text","Drawable Text.",null,null],[12,"sequence","","",23,null],[12,"position","","",23,null],[3,"TextUnit","","",null,null],[12,"string","","",24,null],[12,"style","","",24,null],[3,"Style","","Represents all the ways you can style `Text`. If the `type_face` list is empty or the `height`\nis `None`, the users will fall back on their default settings. The following `Style` is black,\n16 pixel tall, underlined, and Times New Roman (assuming that typeface is available on the\nuser's computer):",null,null],[12,"typeface","","",25,null],[12,"height","","",25,null],[12,"color","","",25,null],[12,"bold","","",25,null],[12,"italic","","",25,null],[12,"line","","",25,null],[12,"monospace","","",25,null],[4,"Line","","Styles for lines on text. This allows you to add an underline, an overline, or strike out text.",null,null],[13,"Under","","",26,null],[13,"Over","","",26,null],[13,"Through","","",26,null],[4,"Position","","Text position relative to center point",null,null],[13,"Center","","",27,null],[13,"ToLeft","","",27,null],[13,"ToRight","","",27,null],[11,"fmt","","",23,{"inputs":[{"name":"text"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"fmt","","",24,{"inputs":[{"name":"textunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"textunit"}],"output":{"name":"textunit"}}],[11,"fmt","","",26,{"inputs":[{"name":"line"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"line"}],"output":{"name":"line"}}],[11,"fmt","","",27,{"inputs":[{"name":"position"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","","",25,{"inputs":[{"name":"style"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"style"}],"output":{"name":"style"}}],[11,"default","","",25,{"inputs":[{"name":"style"}],"output":{"name":"style"}}],[11,"from_string","","Convert a string into text which can be styled and displayed.",23,{"inputs":[{"name":"text"},{"name":"string"}],"output":{"name":"text"}}],[11,"empty","","Text with nothing in it.",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"append","","Put two chunks of text together.",23,{"inputs":[{"name":"text"},{"name":"text"}],"output":{"name":"text"}}],[11,"concat","","Put many chunks of text together.",23,{"inputs":[{"name":"text"},{"name":"vec"}],"output":{"name":"text"}}],[11,"join","","Put many chunks of text together with a separator.",23,{"inputs":[{"name":"text"},{"name":"text"},{"name":"vec"}],"output":{"name":"text"}}],[11,"style","","Set the style of some text. For example, if you design a `Style` called `foorter_style` that is\nspecifically for the bottom of your page, you could apply it to text like this:",23,{"inputs":[{"name":"text"},{"name":"style"}],"output":{"name":"text"}}],[11,"typeface","","Provide a path of a typeface to be used for some text.",23,{"inputs":[{"name":"text"},{"name":"pathbuf"}],"output":{"name":"text"}}],[11,"monospace","","Switch to a monospace typeface. Good for code snippets.",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"height","","Set the height of some text in pixels.",23,{"inputs":[{"name":"text"},{"name":"f64"}],"output":{"name":"text"}}],[11,"color","","Set the color of some text.",23,{"inputs":[{"name":"text"},{"name":"color"}],"output":{"name":"text"}}],[11,"bold","","Make the text bold.",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"italic","","Make the text italic.",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"line","","Put lines on text.",23,{"inputs":[{"name":"text"},{"name":"line"}],"output":{"name":"text"}}],[11,"position","","Change the text position relative to it's center point",23,{"inputs":[{"name":"text"},{"name":"position"}],"output":{"name":"text"}}],[0,"transform_2d","elmesque","",null,null],[3,"Transform2D","elmesque::transform_2d","Represents a 2D transform.",null,null],[5,"identity","","Create an identity transform. Transforming by the identity does not change anything, but it can\ncome in handy as a default or base case.",null,{"inputs":[],"output":{"name":"transform2d"}}],[5,"matrix","","Creates a transformation matrix. This lets you create transforms such as scales, shears,\nreflections and translations.",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"rotation","","Create a [rotation matrix](http://en.wikipedia.org/wiki/Rotation_matrix). Given an angle t, it\ncreates a counterclockwise rotation matrix.",null,{"inputs":[{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"translation","","Creates a transformation matrix for translation.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"scale","","Creates a transformation matrix for scaling by all directions.",null,{"inputs":[{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"scale_x","","Creates a transformation for horizontal scaling.",null,{"inputs":[{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"scale_y","","Creates a transformation for vertical scaling.",null,{"inputs":[{"name":"f64"}],"output":{"name":"transform2d"}}],[6,"Matrix2d","","",null,null],[11,"fmt","","",28,{"inputs":[{"name":"transform2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"transform2d"}],"output":{"name":"transform2d"}}],[11,"multiply","","Multiply two transforms together.",28,{"inputs":[{"name":"transform2d"},{"name":"transform2d"}],"output":{"name":"transform2d"}}],[0,"utils","elmesque","",null,null],[5,"clampf32","elmesque::utils","Clamp a f32 between 0f32 and 1f32.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"degrees","","Convert degrees to radians.",null,{"inputs":[{"name":"f"}],"output":{"name":"f"}}],[5,"turns","","Convert turns to radians.",null,{"inputs":[{"name":"f"}],"output":{"name":"f"}}],[5,"modulo","","The modulo function.",null,{"inputs":[{"name":"i"},{"name":"i"}],"output":{"name":"i"}}],[5,"fmod","","Modulo float.",null,{"inputs":[{"name":"f32"},{"name":"i32"}],"output":{"name":"f32"}}],[5,"min","","Return the min between to floats.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"max","","Return the max between to floats.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"clamp","","Clamp a value to a range.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"map_range","","Map a value from a given range to a new given range.",null,{"inputs":[{"name":"x"},{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"}],"output":{"name":"y"}}]],"paths":[[4,"Color"],[4,"Gradient"],[8,"Colorable"],[3,"Hsla"],[3,"Rgba"],[3,"Properties"],[3,"Element"],[4,"Prim"],[4,"ImageStyle"],[4,"Three"],[4,"Pos"],[4,"Direction"],[3,"Position"],[3,"Renderer"],[3,"Form"],[3,"LineStyle"],[4,"FillStyle"],[4,"LineCap"],[4,"LineJoin"],[4,"BasicForm"],[4,"ShapeStyle"],[3,"PointPath"],[3,"Shape"],[3,"Text"],[3,"TextUnit"],[3,"Style"],[4,"Line"],[4,"Position"],[3,"Transform2D"]]};
searchIndex['graphics'] = {"items":[[0,"","graphics","A library for 2D graphics that works with multiple back-ends.",null,null],[8,"ImageSize","","Implemented by all images to be used with generic algorithms.",null,null],[10,"get_size","","Get the image size.",0,null],[11,"get_width","","Gets the image width.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[11,"get_height","","Gets the image height.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[0,"draw_state","","",null,null],[0,"state","graphics::draw_state","Fixed-function hardware state.",null,null],[11,"fmt","draw_state::state","",1,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",1,null],[11,"partial_cmp","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"cmp","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",5,{"inputs":[{"name":"primitive"}],"output":{"name":"cullface"}}],[11,"default","","",5,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"cmp","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"cmp","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"cmp","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"cmp","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"default","","",9,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"cmp","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"cmp","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"default","","",11,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"cmp","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"cmp","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"cmp","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"fmt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",15,null],[11,"partial_cmp","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",15,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"eq","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"default","","",16,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",16,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"cmp","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",17,null],[11,"remove","","Removes the specified flags in-place.",17,null],[11,"toggle","","Toggles the specified flags in-place.",17,null],[11,"bitor","","Returns the union of the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"partial_cmp","draw_state::target","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",19,null],[11,"cmp","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"eq","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"mask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"all","","Returns the set containing all flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",19,{"inputs":[{"name":"mask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",19,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",19,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"mask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",19,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",19,null],[11,"remove","","Removes the specified flags in-place.",19,null],[11,"toggle","","Toggles the specified flags in-place.",19,null],[11,"bitor","","Returns the union of the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"not","","Returns the complement of this set of flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"hash","","",20,null],[11,"cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[11,"bitor","","Returns the union of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"eq","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"cleardata"}],"output":{"name":"cleardata"}}],[11,"fmt","","",21,{"inputs":[{"name":"cleardata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","draw_state","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"drawstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"cmp","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"fmt","","",23,{"inputs":[{"name":"blendpreset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"blendpreset"}],"output":{"name":"blendpreset"}}],[11,"new","","Create a default `DrawState`. Uses counter-clockwise winding, culls the backface of each\nprimitive, and does no scissor/stencil/depth/blend/color masking.",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"get_target_mask","","Return a target mask that contains all the planes required by this state.",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"mask"}}],[11,"multi_sample","","Enable multi-sampled rasterization",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"stencil","","Set the stencil test to a simple expression",22,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"u8"}],"output":{"name":"drawstate"}}],[11,"depth","","Set the depth test with the mask",22,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"bool"}],"output":{"name":"drawstate"}}],[11,"scissor","","Set the scissor",22,{"inputs":[{"name":"drawstate"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"drawstate"}}],[11,"blend","","Set the blend mode to one of the presets",22,{"inputs":[{"name":"drawstate"},{"name":"blendpreset"}],"output":{"name":"drawstate"}}],[4,"FrontFace","graphics::draw_state::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",1,null],[13,"CounterClockwise","","Counter-clockwise winding order.",1,null],[6,"LineWidth","","",null,null],[6,"OffsetFactor","","",null,null],[6,"OffsetUnits","","",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",3,null],[13,"Front","","",3,null],[13,"Back","","",3,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",4,null],[13,"Line","","Rasterize as a line with the given width.",4,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",4,null],[3,"Primitive","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",7,null],[13,"Less","","`x < y`",7,null],[13,"LessEqual","","`x <= y`",7,null],[13,"Equal","","`x == y`",7,null],[13,"GreaterEqual","","`x >= y`",7,null],[13,"Greater","","`x > y`",7,null],[13,"NotEqual","","`x != y`",7,null],[13,"Always","","`true`",7,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",8,null],[13,"Zero","","Set the value in the stencil buffer to zero.",8,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",8,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",8,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",8,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",8,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",8,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",8,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",9,null],[12,"value","","Reference value to compare the value in the stencil buffer with.",9,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",9,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",9,null],[12,"op_fail","","What operation to do if the stencil test fails.",9,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",9,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",9,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",10,null],[12,"back","","",10,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",11,null],[12,"write","","Specify whether to write to the depth buffer or not.",11,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",12,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",12,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",12,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",13,null],[13,"SourceAlpha","","",13,null],[13,"DestColor","","",13,null],[13,"DestAlpha","","",13,null],[13,"ConstColor","","",13,null],[13,"ConstAlpha","","",13,null],[4,"Factor","","",null,null],[13,"Zero","","",14,null],[13,"One","","",14,null],[13,"SourceAlphaSaturated","","",14,null],[13,"ZeroPlus","","",14,null],[13,"OneMinus","","",14,null],[3,"BlendChannel","","",null,null],[12,"equation","","",15,null],[12,"source","","",15,null],[12,"destination","","",15,null],[3,"Blend","","",null,null],[12,"color","","",16,null],[12,"alpha","","",16,null],[12,"value","","",16,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[0,"target","graphics::draw_state","Render target specification.",null,null],[6,"Layer","graphics::draw_state::target","",null,null],[6,"Level","","",null,null],[6,"Depth","","",null,null],[6,"Stencil","","",null,null],[3,"Rect","","A screen space rectangle",null,null],[12,"x","","",18,null],[12,"y","","",18,null],[12,"w","","",18,null],[12,"h","","",18,null],[6,"ColorValue","","",null,null],[3,"Mask","","/// Output mask, used for blitting and clearing",null,null],[17,"COLOR","","",null,null],[17,"COLOR0","","",null,null],[17,"COLOR1","","",null,null],[17,"COLOR2","","",null,null],[17,"COLOR3","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[3,"Mirror","","/// Mirroring flags, used for blitting",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[3,"ClearData","","How to clear a frame.",null,null],[12,"color","","The color to clear the frame with",21,null],[12,"depth","","The depth value to clear the frame with",21,null],[12,"stencil","","The stencil value to clear the frame with",21,null],[3,"DrawState","graphics::draw_state","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",22,null],[12,"multi_sample","","Multi-sampling mode",22,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",22,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",22,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",22,null],[12,"blend","","Blend function to use. If None, no blending is done.",22,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",22,null],[4,"BlendPreset","","Blend function presets for ease of use.",null,null],[13,"Add","","When combining two fragments, add their values together, saturating at 1.0",23,null],[13,"Multiply","","When combining two fragments, multiply their values together.",23,null],[13,"Alpha","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",23,null],[13,"Invert","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",23,null],[3,"DrawState","graphics","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",22,null],[12,"multi_sample","","Multi-sampling mode",22,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",22,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",22,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",22,null],[12,"blend","","Blend function to use. If None, no blending is done.",22,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",22,null],[11,"abs_transform","viewport","Computes absolute transform for 2D graphics,\nwhich uses a row major 2x3 matrix.\nThe origin is in the upper left corner of the viewport rectangle.\nThe x axis points to the right, and the y axis points down.\nThe units are in points (window coordinates).",24,null],[11,"clone","","",24,{"inputs":[{"name":"viewport"}],"output":{"name":"viewport"}}],[3,"Viewport","graphics","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels.\n```[x, y, width height]``` where ```(x, y)``` is lower left corner.",24,null],[12,"draw_size","","The size of frame buffer in pixels.",24,null],[12,"window_size","","The size of window in points.",24,null],[5,"default_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"clip_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"inside_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"outside_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"clear","","Clears the screen.",null,{"inputs":[{"name":"color"},{"name":"g"}],"output":null}],[5,"image","","Draws image.",null,null],[5,"ellipse","","Draws ellipse.",null,{"inputs":[{"name":"color"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"rectangle","","Draws rectangle.",null,{"inputs":[{"name":"color"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"polygon","","Draws polygon.",null,{"inputs":[{"name":"color"},{"name":"polygon"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"character","","A text character",null,null],[3,"Character","graphics::character","Holds rendered character data.",null,null],[12,"offset","","The offset of character.",25,null],[12,"size","","The size of character, including space.",25,null],[12,"texture","","The texture of the character.",25,null],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The textyre type associated with the character cache.",26,null],[10,"character","","Get reference to character.",26,{"inputs":[{"name":"charactercache"},{"name":"fontsize"},{"name":"char"}],"output":{"name":"character"}}],[11,"width","","Return the width for some given text.",26,{"inputs":[{"name":"charactercache"},{"name":"fontsize"},{"name":"str"}],"output":{"name":"scalar"}}],[11,"clone","","",25,{"inputs":[{"name":"character"}],"output":{"name":"character"}}],[11,"left","","The left offset.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"top","","The top offset.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"width","","Gets width of character, including space to the next one.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"height","","Sets height of character, including space to the next one.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[0,"context","graphics","Transformation context",null,null],[3,"Context","graphics::context","Drawing 2d context.",null,null],[12,"viewport","","Viewport information.",27,null],[12,"view","","View transformation.",27,null],[12,"transform","","Current transformation.",27,null],[12,"draw_state","","Current draw state settings.",27,null],[11,"clone","","",27,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new","","Creates a new drawing context.",27,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new_viewport","","Creates a new context with absolute transform in point coordinates.",27,{"inputs":[{"name":"context"},{"name":"viewport"}],"output":{"name":"context"}}],[11,"abs","","Creates a new drawing context in absolute coordinates.",27,{"inputs":[{"name":"context"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"context"}}],[11,"view","","Moves the current transform to the view coordinate system.",27,{"inputs":[{"name":"context"}],"output":{"name":"self"}}],[11,"reset","","Moves the current transform to the default coordinate system.",27,{"inputs":[{"name":"context"}],"output":{"name":"self"}}],[11,"store_view","","Stores the current transform as new view.",27,{"inputs":[{"name":"context"}],"output":{"name":"self"}}],[11,"get_view_size","","Computes the current view size.",27,{"inputs":[{"name":"context"}],"output":{"name":"vec2d"}}],[0,"color","graphics","Helper methods for colors",null,null],[5,"grey","graphics::color","Returns a grey color",null,{"inputs":[{"name":"colorcomponent"}],"output":{"name":"color"}}],[5,"alpha","","Returns a semi-transparent white color",null,{"inputs":[{"name":"colorcomponent"}],"output":{"name":"color"}}],[5,"hex","","Converts from hexadecimal color format",null,{"inputs":[{"name":"str"}],"output":{"name":"color"}}],[17,"WHITE","","White color.",null,null],[17,"BLACK","","Black color.",null,null],[17,"TRANSPARENT","","Transparent color.",null,null],[0,"polygon","graphics","Draw polygon",null,null],[3,"Polygon","graphics::polygon","A polygon",null,null],[12,"color","","The color of the polygon",28,null],[11,"clone","","",28,{"inputs":[{"name":"polygon"}],"output":{"name":"polygon"}}],[11,"new","","Creates new polygon",28,{"inputs":[{"name":"polygon"},{"name":"color"}],"output":{"name":"polygon"}}],[11,"color","","Sets color.",28,{"inputs":[{"name":"polygon"},{"name":"color"}],"output":{"name":"self"}}],[11,"draw","","Draws polygon",28,{"inputs":[{"name":"polygon"},{"name":"polygon"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation",28,{"inputs":[{"name":"polygon"},{"name":"polygons"},{"name":"scalar"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"line","graphics","Draw Line",null,null],[3,"Line","graphics::line","A colored line with a default border radius",null,null],[12,"color","","The line color",29,null],[12,"radius","","The line radius",29,null],[12,"shape","","The line shape",29,null],[4,"Shape","","The shape of the line",null,null],[13,"Square","","Square edges",30,null],[13,"Round","","Round edges",30,null],[13,"Bevel","","Bevel edges",30,null],[11,"clone","","",30,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"clone","","",29,{"inputs":[{"name":"line"}],"output":{"name":"line"}}],[11,"new","","Creates a new line",29,{"inputs":[{"name":"line"},{"name":"color"},{"name":"radius"}],"output":{"name":"line"}}],[11,"new_round","","Creates a new line",29,{"inputs":[{"name":"line"},{"name":"color"},{"name":"radius"}],"output":{"name":"line"}}],[11,"color","","Sets color.",29,{"inputs":[{"name":"line"},{"name":"color"}],"output":{"name":"self"}}],[11,"radius","","Sets radius.",29,{"inputs":[{"name":"line"},{"name":"radius"}],"output":{"name":"self"}}],[11,"width","","Sets width.",29,{"inputs":[{"name":"line"},{"name":"width"}],"output":{"name":"self"}}],[11,"shape","","Sets shape.",29,{"inputs":[{"name":"line"},{"name":"shape"}],"output":{"name":"self"}}],[11,"draw","","Draw the line.",29,{"inputs":[{"name":"line"},{"name":"l"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"draw_arrow","","Draws an arrow",29,{"inputs":[{"name":"line"},{"name":"l"},{"name":"scalar"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"ellipse","graphics","Draw ellipse",null,null],[3,"Border","graphics::ellipse","Ellipse border",null,null],[12,"color","","The border color",31,null],[12,"radius","","The border radius",31,null],[3,"Ellipse","","An ellipse with filled color",null,null],[12,"color","","The ellipse color",32,null],[12,"border","","The ellipse border",32,null],[12,"resolution","","The resolution for the shape, 360 degrees.",32,null],[11,"clone","","",31,{"inputs":[{"name":"border"}],"output":{"name":"border"}}],[11,"clone","","",32,{"inputs":[{"name":"ellipse"}],"output":{"name":"ellipse"}}],[11,"new","","Creates a new ellipse",32,{"inputs":[{"name":"ellipse"},{"name":"color"}],"output":{"name":"ellipse"}}],[11,"new_border","","Creates a new ellipse border",32,{"inputs":[{"name":"ellipse"},{"name":"color"},{"name":"radius"}],"output":{"name":"ellipse"}}],[11,"color","","Sets ellipse color.",32,{"inputs":[{"name":"ellipse"},{"name":"color"}],"output":{"name":"self"}}],[11,"border","","Sets ellipse border.",32,{"inputs":[{"name":"ellipse"},{"name":"border"}],"output":{"name":"self"}}],[11,"maybe_border","","Sets optional ellipse border.",32,{"inputs":[{"name":"ellipse"},{"name":"option"}],"output":{"name":"self"}}],[11,"resolution","","Sets resolution of the ellipse smoothness.",32,{"inputs":[{"name":"ellipse"},{"name":"resolution"}],"output":{"name":"self"}}],[11,"draw","","Draws the ellipse.",32,{"inputs":[{"name":"ellipse"},{"name":"r"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"rectangle","graphics","Draw rectangle",null,null],[3,"Border","graphics::rectangle","The border of the rectangle",null,null],[12,"color","","The color of the border",33,null],[12,"radius","","The radius of the border",33,null],[3,"Rectangle","","A filled rectangle",null,null],[12,"color","","The rectangle color",34,null],[12,"shape","","The roundness of the rectangle",34,null],[12,"border","","The border",34,null],[4,"Shape","","The shape of the rectangle",null,null],[13,"Square","","Square corners",35,null],[13,"Round","","Round corners, with resolution per corner.",35,null],[13,"Bevel","","Bevel corners",35,null],[5,"centered","","Use x, y, half-width, half-height",null,{"inputs":[{"name":"rectangle"}],"output":{"name":"rectangle"}}],[5,"centered_square","","Use centered square",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[5,"square","","Use square with x, y in upper left corner",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[11,"clone","","",35,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"clone","","",33,{"inputs":[{"name":"border"}],"output":{"name":"border"}}],[11,"clone","","",34,{"inputs":[{"name":"rectangle"}],"output":{"name":"rectangle"}}],[11,"new","","Creates a new rectangle.",34,{"inputs":[{"name":"rectangle"},{"name":"color"}],"output":{"name":"rectangle"}}],[11,"new_round","","Creates a new round rectangle.",34,{"inputs":[{"name":"rectangle"},{"name":"color"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"new_border","","Creates a new rectangle border.",34,{"inputs":[{"name":"rectangle"},{"name":"color"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"new_round_border","","Creates a new round rectangle border.",34,{"inputs":[{"name":"rectangle"},{"name":"color"},{"name":"radius"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"color","","Sets color.",34,{"inputs":[{"name":"rectangle"},{"name":"color"}],"output":{"name":"self"}}],[11,"shape","","Sets shape.",34,{"inputs":[{"name":"rectangle"},{"name":"shape"}],"output":{"name":"self"}}],[11,"border","","Sets border.",34,{"inputs":[{"name":"rectangle"},{"name":"border"}],"output":{"name":"self"}}],[11,"maybe_border","","Sets optional border.",34,{"inputs":[{"name":"rectangle"},{"name":"option"}],"output":{"name":"self"}}],[11,"draw","","Draws the rectangle",34,{"inputs":[{"name":"rectangle"},{"name":"r"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"image","graphics","Draw an image",null,null],[3,"Image","graphics::image","An image",null,null],[12,"color","","The color",36,null],[12,"rectangle","","The rectangle to draw image inside",36,null],[12,"source_rectangle","","The image source rectangle",36,null],[5,"draw_many","","Draws many images.",null,null],[11,"clone","","",36,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"new","","Creates a new image",36,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"new_colored","","Creates a new colored image",36,{"inputs":[{"name":"image"},{"name":"color"}],"output":{"name":"image"}}],[11,"color","","Sets color.",36,{"inputs":[{"name":"image"},{"name":"color"}],"output":{"name":"self"}}],[11,"maybe_color","","Sets optional color.",36,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"self"}}],[11,"rect","","Sets rectangle.",36,{"inputs":[{"name":"image"},{"name":"r"}],"output":{"name":"self"}}],[11,"maybe_rect","","Sets optional rectangle.",36,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"self"}}],[11,"src_rect","","Sets source rectangle.",36,{"inputs":[{"name":"image"},{"name":"sourcerectangle"}],"output":{"name":"self"}}],[11,"maybe_src_rect","","Sets optional source rectangle.",36,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"self"}}],[11,"draw","","Draws the image.",36,null],[0,"types","graphics","Contains type aliases used in this library",null,null],[6,"Area","graphics::types","The type used for area.",null,null],[6,"Color","","[red, green, blue, alpha]",null,null],[6,"ColorComponent","","The type used for color component.",null,null],[6,"Line","","[x1, y1, x2, y2]",null,null],[6,"SourceRectangle","","[x, y, w, h]",null,null],[6,"Polygon","","[p0, p1, ...]",null,null],[6,"Polygons","","A slice of polygons.",null,null],[6,"Radius","","The type used for radius.",null,null],[6,"Resolution","","The type used for resolution.",null,null],[6,"Ray","","[x, y, dir_x, dir_y]",null,null],[6,"Rectangle","","[x, y, w, h]",null,null],[6,"Triangle","","[x1, y1, x2, y2, x3, y3]",null,null],[6,"Width","","The type used for width.",null,null],[6,"FontSize","","The type used for font size.",null,null],[0,"modular_index","graphics","Helper functions for computing modular index safely.",null,null],[5,"offset","graphics::modular_index","Computes modular offset safely for indices.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"isize"}],"output":{"name":"usize"}}],[5,"previous","","Computes previous modular index safely.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[5,"next","","Computes next modular index safely.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[0,"text","graphics","Draw text",null,null],[3,"Text","graphics::text","Renders text",null,null],[12,"color","","The color",37,null],[12,"font_size","","The font size",37,null],[11,"clone","","",37,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"new","","Creates a new text with black color",37,{"inputs":[{"name":"text"},{"name":"fontsize"}],"output":{"name":"text"}}],[11,"colored","","Creates a new colored text",37,{"inputs":[{"name":"text"},{"name":"color"},{"name":"fontsize"}],"output":{"name":"text"}}],[11,"draw","","Draws text with a character cache",37,{"inputs":[{"name":"text"},{"name":"str"},{"name":"c"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"triangulation","graphics","Methods for converting shapes into triangles.",null,null],[5,"tx","graphics::triangulation","Transformed x coordinate as f32.",null,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"f32"}}],[5,"ty","","Transformed y coordinate as f32.",null,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"f32"}}],[5,"with_lerp_polygons_tri_list","","Streams tweened polygons using linear interpolation.",null,{"inputs":[{"name":"matrix2d"},{"name":"polygons"},{"name":"scalar"},{"name":"f"}],"output":null}],[5,"with_ellipse_tri_list","","Streams an ellipse specified by a resolution.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"f"}],"output":null}],[5,"with_round_border_line_tri_list","","Streams a round border line.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"line"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_round_rectangle_tri_list","","Streams a round rectangle.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"stream_polygon_tri_list","","Streams a polygon into tri list.\nUses buffers that fit inside L1 cache.",null,{"inputs":[{"name":"matrix2d"},{"name":"e"},{"name":"f"}],"output":null}],[5,"with_ellipse_border_tri_list","","Streams an ellipse border specified by a resolution.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_round_rectangle_border_tri_list","","Streams a round rectangle border.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"stream_quad_tri_list","","Streams a quad into tri list.",null,{"inputs":[{"name":"matrix2d"},{"name":"e"},{"name":"f"}],"output":null}],[5,"with_polygon_tri_list","","Splits polygon into convex segments.\nCreate a buffer that fits into L1 cache with 1KB overhead.",null,{"inputs":[{"name":"matrix2d"},{"name":"polygon"},{"name":"f"}],"output":null}],[5,"rect_tri_list_xy","","Creates triangle list vertices from rectangle.",null,null],[5,"rect_border_tri_list_xy","","Creates triangle list vertices from rectangle.",null,null],[5,"rect_tri_list_uv","","Creates triangle list texture coords from image.",null,null],[0,"math","graphics","Various methods for computing with vectors.",null,null],[5,"multiply","graphics::math","Multiplies two matrices.",null,null],[5,"dot","","Computes the dot product.",null,null],[5,"cross","","Computes the cross product.",null,null],[5,"add","","Adds two vectors.",null,null],[5,"sub","","Subtracts 'b' from 'a'.",null,null],[5,"cast","","Converts to another vector type.",null,null],[5,"mul","","Multiplies two vectors component wise.",null,null],[5,"mul_scalar","","Multiplies the vector with a scalar.",null,null],[5,"square_len","","Computes the square length of a vector.",null,null],[5,"transform_pos","","Transforms a 2D position through matrix.",null,null],[5,"transform_vec","","Transforms a 2D vector through matrix.",null,null],[5,"perp","","Creates a perpendicular vector.",null,null],[5,"abs_transform","","Transforms from normalized to absolute coordinates.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"translate","","Creates a translation matrix.",null,{"inputs":[{"name":"vec2d"}],"output":{"name":"matrix2d"}}],[5,"rotate_radians","","Creates a rotation matrix.",null,{"inputs":[{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"orient","","Orients x axis to look at point.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"scale","","Create a scale matrix.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"shear","","Create a shear matrix.",null,{"inputs":[{"name":"vec2d"}],"output":{"name":"matrix2d"}}],[5,"identity","","Create an identity matrix.",null,{"inputs":[],"output":{"name":"matrix2d"}}],[5,"get_scale","","Extract scale information from matrix.",null,{"inputs":[{"name":"matrix2d"}],"output":{"name":"vec2d"}}],[5,"separation","","Compute the shortest vector from point to ray.\nA ray stores starting point and directional vector.",null,{"inputs":[{"name":"ray"},{"name":"vec2d"}],"output":{"name":"vec2d"}}],[5,"least_separation_4","","Returns the least separation out of four.\nEach seperation can be computed using `separation` function.\nThe separation returned can be used\nto solve collision of rectangles.",null,{"inputs":[{"name":"vec2d"},{"name":"vec2d"},{"name":"vec2d"},{"name":"vec2d"}],"output":{"name":"vec2d"}}],[5,"margin_rectangle","","Shrinks a rectangle by a factor on all sides.",null,{"inputs":[{"name":"rectangle"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[5,"relative_rectangle","","Computes a relative rectangle using the rectangle as a tile.",null,{"inputs":[{"name":"rectangle"},{"name":"vec2d"}],"output":{"name":"rectangle"}}],[5,"overlap_rectangle","","Computes overlap between two rectangles.\nThe area of the overlapping rectangle is positive.\nA shared edge or corner is not considered overlap.",null,{"inputs":[{"name":"rectangle"},{"name":"rectangle"}],"output":{"name":"option"}}],[5,"relative_source_rectangle","","Computes a relative source rectangle using\nthe source rectangle as a tile.",null,{"inputs":[{"name":"sourcerectangle"},{"name":"i32"},{"name":"i32"}],"output":{"name":"sourcerectangle"}}],[5,"modular_offset","","Computes modular offset safely for numbers.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"area_centroid","","Computes the area and centroid of a simple polygon.",null,null],[5,"area","","Computes area of a simple polygon.",null,{"inputs":[{"name":"polygon"}],"output":{"name":"scalar"}}],[5,"centroid","","Computes centroid of a simple polygon.",null,{"inputs":[{"name":"polygon"}],"output":{"name":"vec2d"}}],[5,"line_side","","Returns a number that tells which side it is relative to a line.",null,{"inputs":[{"name":"line"},{"name":"vec2d"}],"output":{"name":"scalar"}}],[5,"inside_triangle","","Returns true if point is inside triangle.",null,{"inputs":[{"name":"triangle"},{"name":"vec2d"}],"output":{"name":"bool"}}],[5,"triangle_face","","Returns true if triangle is clockwise.",null,{"inputs":[{"name":"triangle"}],"output":{"name":"bool"}}],[5,"to_barycentric","","Transforms from cartesian coordinates to barycentric.",null,{"inputs":[{"name":"triangle"},{"name":"vec2d"}],"output":{"name":"vec3d"}}],[5,"from_barycentric","","Transforms from barycentric coordinates to cartesian.",null,{"inputs":[{"name":"triangle"},{"name":"vec3d"}],"output":{"name":"vec2d"}}],[5,"hsv","","Transform color with hue, saturation and value.",null,{"inputs":[{"name":"color"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[6,"Scalar","","The type used for scalars.",null,null],[6,"Matrix2d","","The type used for matrices.",null,null],[6,"Vec2d","","The type used for 2D vectors.",null,null],[6,"Vec3d","","The type used for 3D vectors.",null,null],[0,"deform","graphics","Least square deforming of a 2D grid.",null,null],[3,"DeformGrid","graphics::deform","Represents a deformed grid.",null,null],[12,"cols","","The number of columns in the grid.",38,null],[12,"rows","","The number of rows in the grid.",38,null],[12,"rect","","The grid undeformed, which is a plain rectangle.",38,null],[12,"vertices","","The vertices, deformed.",38,null],[12,"indices","","The triangle indices.",38,null],[12,"texture_coords","","The texture coordinates.",38,null],[12,"ps","","Initial position of control points.",38,null],[12,"qs","","The current position of control points.",38,null],[12,"wis","","A weight computation buffer, one for each control point.",38,null],[11,"clone","","",38,{"inputs":[{"name":"deformgrid"}],"output":{"name":"deformgrid"}}],[11,"new","","Creates a new DeformGrid.",38,{"inputs":[{"name":"deformgrid"},{"name":"rectangle"},{"name":"usize"},{"name":"usize"}],"output":{"name":"deformgrid"}}],[11,"set_current","","Sets current control position.",38,{"inputs":[{"name":"deformgrid"},{"name":"usize"},{"name":"vec2d"}],"output":null}],[11,"set_original","","Sets original control position.",38,{"inputs":[{"name":"deformgrid"},{"name":"usize"},{"name":"vec2d"}],"output":null}],[11,"reset_control_points","","Removes all control points.",38,{"inputs":[{"name":"deformgrid"}],"output":null}],[11,"reset_vertices_and_texture_coords","","Sets vertices and texture coords back to default.",38,{"inputs":[{"name":"deformgrid"}],"output":null}],[11,"hit","","Finds original coordinate.\nIf the deformed grid is overlapping itself, multiple hits might occur.\nReturns the first hit it finds.",38,{"inputs":[{"name":"deformgrid"},{"name":"vec2d"}],"output":{"name":"option"}}],[11,"draw_image","","Draws deformed image.",38,null],[11,"add_control_point","","Adds a control point, in original coordinates.",38,{"inputs":[{"name":"deformgrid"},{"name":"vec2d"}],"output":null}],[11,"draw_vertical_lines","","Draw vertical grid lines.",38,{"inputs":[{"name":"deformgrid"},{"name":"line"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"draw_horizontal_lines","","Draw horizontal grid lines.",38,{"inputs":[{"name":"deformgrid"},{"name":"line"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"update","","Updates the grid, by deforming the vertices.",38,{"inputs":[{"name":"deformgrid"}],"output":null}],[0,"grid","graphics","A flat grid with square cells.",null,null],[3,"Grid","graphics::grid","Represents a flat grid with square cells.",null,null],[12,"cols","","Number of columns.",39,null],[12,"rows","","Number of rows.",39,null],[12,"units","","The width and height of each grid cell.",39,null],[3,"GridCells","","Iterates through the cells of a grid as (u32, u32).",null,null],[11,"clone","","",39,{"inputs":[{"name":"grid"}],"output":{"name":"grid"}}],[11,"clone","","",40,{"inputs":[{"name":"gridcells"}],"output":{"name":"gridcells"}}],[11,"draw","","Draws the grid.",39,{"inputs":[{"name":"grid"},{"name":"line"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"cells","","Get a GridIterator for the grid",39,{"inputs":[{"name":"grid"}],"output":{"name":"gridcells"}}],[11,"next","","",40,{"inputs":[{"name":"gridcells"}],"output":{"name":"option"}}],[0,"radians","graphics","Reexport radians helper trait from vecmath",null,null],[8,"Radians","graphics::radians","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_180","","Returns radians corresponding to 180 degrees.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_360","","Returns radians corresponding to 360 degrees.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"rad_to_deg","","Convert a value to degrees from radians.\nEquivalent to ```value * (180 / π)```.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[7,"BACK_END_MAX_VERTEX_COUNT","graphics","Any triangulation method called on the back-end\nnever exceeds this number of vertices.\nThis can be used to initialize buffers that fit the chunk size.",null,null],[8,"Graphics","","Implemented by all graphics back-ends.",null,null],[16,"Texture","","The texture type associated with the back-end.",42,null],[10,"clear_color","","Clears background with a color.",42,null],[10,"clear_stencil","","Clears stencil buffer with a value.",42,{"inputs":[{"name":"graphics"},{"name":"u8"}],"output":null}],[10,"tri_list","","Renders list of 2d triangles.",42,null],[10,"tri_list_uv","","Renders list of 2d triangles.",42,null],[8,"SourceRectangled","","Should be implemented by contexts that\nhave source rectangle information.",null,null],[10,"src_rect","","Adds a source rectangle.",43,{"inputs":[{"name":"sourcerectangled"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[10,"src_rel","","Moves to a relative source rectangle using\nthe current source rectangle as tile.",43,{"inputs":[{"name":"sourcerectangled"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[10,"src_flip_h","","Flips the source rectangle horizontally.",43,{"inputs":[{"name":"sourcerectangled"}],"output":{"name":"self"}}],[10,"src_flip_v","","Flips the source rectangle vertically.",43,{"inputs":[{"name":"sourcerectangled"}],"output":{"name":"self"}}],[10,"src_flip_hv","","Flips the source rectangle horizontally and vertically.",43,{"inputs":[{"name":"sourcerectangled"}],"output":{"name":"self"}}],[8,"Rectangled","","Should be implemented by contexts that have rectangle information.",null,null],[10,"margin","","Shrinks the current rectangle equally by all sides.",44,{"inputs":[{"name":"rectangled"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"expand","","Expands the current rectangle equally by all sides.",44,{"inputs":[{"name":"rectangled"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"rel","","Moves to a relative rectangle using the current rectangle as tile.",44,{"inputs":[{"name":"rectangled"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[8,"Transformed","","Implemented by contexts that can transform.",null,null],[10,"append_transform","","Appends transform to the current one.",45,{"inputs":[{"name":"transformed"},{"name":"matrix2d"}],"output":{"name":"self"}}],[10,"prepend_transform","","Prepends transform to the current one.",45,{"inputs":[{"name":"transformed"},{"name":"matrix2d"}],"output":{"name":"self"}}],[10,"trans","","Translate x an y in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rot_deg","","Rotates degrees in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"rot_rad","","Rotate radians in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"orient","","Orients x axis to look at point locally.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"scale","","Scales in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"zoom","","Scales in both directions in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"flip_v","","Flips vertically in local coordinates.",45,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_h","","Flips horizontally in local coordinates.",45,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",45,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[10,"shear","","Shears in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"vec2d"}],"output":{"name":"self"}}],[8,"Colored","","Implemented by contexts that contains color.",null,null],[10,"mul_rgba","","Multiplies with red, green, blue and alpha values.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"tint","","Mixes the current color with white.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"shade","","Mixes the current color with black.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_deg","","Rotates hue by degrees.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[10,"hue_rad","","Rotates hue by radians.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"src_rect","graphics::types","",47,{"inputs":[{"name":"sourcerectangle"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[11,"src_rel","","",47,{"inputs":[{"name":"sourcerectangle"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[11,"src_flip_h","","",47,{"inputs":[{"name":"sourcerectangle"}],"output":{"name":"self"}}],[11,"src_flip_v","","",47,{"inputs":[{"name":"sourcerectangle"}],"output":{"name":"self"}}],[11,"src_flip_hv","","",47,{"inputs":[{"name":"sourcerectangle"}],"output":{"name":"self"}}],[11,"expand","graphics","Expands the current rectangle equally by all sides.",44,{"inputs":[{"name":"rectangled"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"margin","graphics::types","",48,{"inputs":[{"name":"rectangle"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rel","","",48,{"inputs":[{"name":"rectangle"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rot_deg","graphics","Rotates degrees in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"zoom","","Scales in both directions in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"flip_v","","Flips vertically in local coordinates.",45,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_h","","Flips horizontally in local coordinates.",45,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",45,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"append_transform","graphics::math","",49,{"inputs":[{"name":"matrix2d"},{"name":"matrix2d"}],"output":{"name":"self"}}],[11,"prepend_transform","","",49,{"inputs":[{"name":"matrix2d"},{"name":"matrix2d"}],"output":{"name":"self"}}],[11,"trans","","",49,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rot_rad","","",49,{"inputs":[{"name":"matrix2d"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"orient","","",49,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"scale","","",49,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"shear","","",49,{"inputs":[{"name":"matrix2d"},{"name":"vec2d"}],"output":{"name":"self"}}],[11,"append_transform","graphics::context","",27,{"inputs":[{"name":"context"},{"name":"matrix2d"}],"output":{"name":"self"}}],[11,"prepend_transform","","",27,{"inputs":[{"name":"context"},{"name":"matrix2d"}],"output":{"name":"self"}}],[11,"trans","","",27,{"inputs":[{"name":"context"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rot_rad","","",27,{"inputs":[{"name":"context"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"orient","","",27,{"inputs":[{"name":"context"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"scale","","",27,{"inputs":[{"name":"context"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"shear","","",27,{"inputs":[{"name":"context"},{"name":"vec2d"}],"output":{"name":"self"}}],[11,"tint","graphics","Mixes the current color with white.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"shade","","Mixes the current color with black.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_deg","","Rotates hue by degrees.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"mul_rgba","graphics::types","",50,{"inputs":[{"name":"color"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_rad","","",50,{"inputs":[{"name":"color"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"mul_rgba","graphics::line","",29,{"inputs":[{"name":"line"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_rad","","",29,{"inputs":[{"name":"line"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"mul_rgba","graphics::ellipse","",32,{"inputs":[{"name":"ellipse"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_rad","","",32,{"inputs":[{"name":"ellipse"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"mul_rgba","graphics::rectangle","",34,{"inputs":[{"name":"rectangle"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_rad","","",34,{"inputs":[{"name":"rectangle"},{"name":"colorcomponent"}],"output":{"name":"self"}}]],"paths":[[8,"ImageSize"],[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Primitive"],[3,"MultiSample"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Rect"],[3,"Mask"],[3,"Mirror"],[3,"ClearData"],[3,"DrawState"],[4,"BlendPreset"],[3,"Viewport"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[3,"Line"],[4,"Shape"],[3,"Border"],[3,"Ellipse"],[3,"Border"],[3,"Rectangle"],[4,"Shape"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GridCells"],[8,"Radians"],[8,"Graphics"],[8,"SourceRectangled"],[8,"Rectangled"],[8,"Transformed"],[8,"Colored"],[6,"SourceRectangle"],[6,"Rectangle"],[6,"Matrix2d"],[6,"Color"]]};
searchIndex['num'] = {"items":[[0,"","num","Simple numerics.",null,null],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[0,"bigint","","A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).",null,null],[3,"BigUint","num::bigint","A big unsigned integer type.",null,null],[3,"RadixFmt","","",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num::bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num::bigint","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,{"inputs":[{"name":"tobiguint"}],"output":{"name":"option"}}],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,{"inputs":[{"name":"tobigint"}],"output":{"name":"option"}}],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"biguint"}}],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"biguint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"biguint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"eq","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"hash","","",5,{"inputs":[{"name":"biguint"},{"name":"h"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",5,{"inputs":[{"name":"biguint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"shl","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"shr","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[11,"zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"is_zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"neg","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"checked_add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"div_rem","","",5,null],[11,"div_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"to_i64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"biguint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"biguint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_biguint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_biguint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",7,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"usize"}}],[11,"decode","","",0,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"neg","","Negate Sign value.",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"bigint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"bigint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"eq","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,{"inputs":[{"name":"bigint"},{"name":"h"}],"output":null}],[11,"from_str","","",6,{"inputs":[{"name":"bigint"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"shl","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"shr","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[11,"zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_positive","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_negative","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"neg","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"div_rem","","",6,null],[11,"div_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"to_i64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_u64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"from_i64","","",6,{"inputs":[{"name":"bigint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"bigint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_bigint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_bigint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"parsebiginterror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[0,"complex","num","Complex numbers.",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",8,null],[12,"im","","Imaginary portion of the complex number",8,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"clone","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"eq","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"decode","","",8,{"inputs":[{"name":"complex"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"complex"},{"name":"__s"}],"output":{"name":"result"}}],[11,"new","","Create a new Complex",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",8,null],[11,"from_polar","","Convert a polar representation into a complex number.",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[11,"neg","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"integer","num","Integer trait and functions.",null,null],[5,"div_rem","num::integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[0,"iter","num","External iterators for generic mathematics",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",10,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"next_back","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"rangestep"}}],[11,"next","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"rangestepinclusive"}}],[11,"next","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"option"}}],[0,"traits","num","Numeric traits for generic mathematics",null,null],[3,"ParseFloatError","num::traits","",null,null],[12,"kind","","",14,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",15,null],[13,"Invalid","","",15,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","Parse error for `from_str_radix`",16,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",16,{"inputs":[{"name":"num"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",17,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",17,{"inputs":[{"name":"zero"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",18,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",19,{"inputs":[{"name":"signed"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",22,{"inputs":[{"name":"checkedadd"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",23,{"inputs":[{"name":"checkedsub"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",24,{"inputs":[{"name":"checkedmul"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",25,{"inputs":[{"name":"checkeddiv"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",29,{"inputs":[{"name":"numcast"},{"name":"t"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",30,{"inputs":[{"name":"float"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",30,{"inputs":[{"name":"float"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",30,{"inputs":[{"name":"float"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",30,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",30,null],[0,"rational","num","Rational numbers",null,null],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"clone","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"decode","","",31,{"inputs":[{"name":"ratio"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"ratio"},{"name":"__s"}],"output":{"name":"result"}}],[11,"from_integer","","Creates a ratio representing the integer `t`.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"numer","","Gets an immutable reference to the numerator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"denom","","Gets an immutable reference to the denominator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"reduced","","Returns a `reduce`d copy of self.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"recip","","Returns the reciprocal.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"floor","","Rounds towards minus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"ceil","","Rounds towards plus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"trunc","","Rounds towards zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"fract","","Returns the fractional part of a number.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"pow","","Raises the ratio to the power of an exponent",31,{"inputs":[{"name":"ratio"},{"name":"i32"}],"output":{"name":"ratio"}}],[11,"from_float","","Converts a float into a rational number.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"option"}}],[11,"eq","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"lt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ordering"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"neg","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"one","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",31,{"inputs":[{"name":"ratio"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"abs_sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"signum","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_positive","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"is_negative","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","Parses `numer/denom` or just `numer`.",31,{"inputs":[{"name":"ratio"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"parseratioerror"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"str"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"],[3,"RadixFmt"],[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"Float"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex['json_io'] = {"items":[[0,"","json_io","",null,null],[4,"Error","","Represents the different kinds of errors returned by Librar.",null,null],[13,"IO","","Some std::io Error.",0,null],[13,"JsonParserError","","An error returned by the JSON parser.",0,null],[13,"JsonDecoderError","","An error returned by the JSON decoder.",0,null],[13,"JsonEncoderError","","An error returned by the JSON encoder.",0,null],[5,"load","","Construct a Decodable type from a JSON file at the given path.\njson_io will first try and open the file with the path exactly as given.\nIf the file isn't found, it will set the extension to .json and try again.",null,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[5,"save","","Save an Encodable type to a JSON file at the given path.\nThe file will be saved with the \".json\" extension whether or not it was given with the Path.",null,{"inputs":[{"name":"path"},{"name":"t"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"error"}],"output":{"name":"str"}}]],"paths":[[4,"Error"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",3,{"inputs":[{"name":"cow"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"cow"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",4,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",5,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",6,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",7,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",9,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",11,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",12,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",13,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",14,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",15,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",17,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",17,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",18,null],[12,"newline","","Newline to use",18,null],[12,"pad","","True to pad output with `=` characters",18,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",18,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",19,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",19,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",20,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",20,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",21,null],[13,"InvalidBase64Length","","The input had an invalid length",21,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",22,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",23,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",20,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",18,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",21,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",21,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",24,null],[13,"InvalidHexLength","","The input had an invalid length",24,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",25,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",26,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",24,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",24,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",27,null],[13,"U64","","",27,null],[13,"F64","","",27,null],[13,"String","","",27,null],[13,"Boolean","","",27,null],[13,"Array","","",27,null],[13,"Object","","",27,null],[13,"Null","","",27,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",28,null],[13,"InvalidNumber","","",28,null],[13,"EOFWhileParsingObject","","",28,null],[13,"EOFWhileParsingArray","","",28,null],[13,"EOFWhileParsingValue","","",28,null],[13,"EOFWhileParsingString","","",28,null],[13,"KeyMustBeAString","","",28,null],[13,"ExpectedColon","","",28,null],[13,"TrailingCharacters","","",28,null],[13,"TrailingComma","","",28,null],[13,"InvalidEscape","","",28,null],[13,"InvalidUnicodeCodePoint","","",28,null],[13,"LoneLeadingSurrogateInHexEscape","","",28,null],[13,"UnexpectedEndOfHexEscape","","",28,null],[13,"UnrecognizedHex","","",28,null],[13,"NotFourDigit","","",28,null],[13,"ControlCharacterInString","","",28,null],[13,"NotUtf8","","",28,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",29,null],[13,"IoError","","",29,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",30,null],[13,"ExpectedError","","",30,null],[13,"MissingFieldError","","",30,null],[13,"UnknownVariantError","","",30,null],[13,"ApplicationError","","",30,null],[13,"EOF","","",30,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",31,null],[13,"BadHashmapKey","","",31,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",32,null],[13,"ObjectEnd","","",32,null],[13,"ArrayStart","","",32,null],[13,"ArrayEnd","","",32,null],[13,"BooleanValue","","",32,null],[13,"I64Value","","",32,null],[13,"U64Value","","",32,null],[13,"F64Value","","",32,null],[13,"StringValue","","",32,null],[13,"NullValue","","",32,null],[13,"Error","","",32,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",33,null],[13,"Key","","",33,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",34,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",28,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",30,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"decodererror"},{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",29,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",29,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",29,{"inputs":[{"name":"parsererror"},{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",31,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",31,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",31,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",35,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[11,"emit_nil","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",35,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",35,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",35,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",35,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",35,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",35,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",35,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",35,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",35,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",35,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",35,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",35,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",35,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",35,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",35,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",35,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",35,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",35,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",27,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",27,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",27,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",27,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",27,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[11,"index","","",27,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",32,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",36,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",36,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",36,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",36,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",36,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",36,null],[11,"top","","Returns the top-most element (if any).",36,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"next","","",37,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",37,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",37,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",38,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",38,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",39,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",39,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",39,null],[11,"read_enum_variant_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",39,null],[11,"read_enum_struct_variant_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",39,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",39,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",39,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",39,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",27,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",4,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",14,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",16,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",5,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",27,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",42,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",42,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",43,null],[10,"read_nil","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",43,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",43,null],[10,"read_enum_variant_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",43,null],[10,"read_enum_struct_variant_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",43,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",43,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",43,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",43,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",44,null],[10,"emit_nil","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",44,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",44,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",44,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",44,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",44,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",44,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",44,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",44,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",44,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",44,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",44,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",44,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",44,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",44,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",44,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",44,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",44,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",44,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",45,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",46,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",47,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",48,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"OsRng","","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",3,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",4,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",5,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",7,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",8,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",9,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",11,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"clone","","",0,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"clone","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",30,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[11,"next","","",31,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"rand","","",32,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",33,null],[11,"from_seed","","",33,null],[11,"clone","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",34,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['draw_state'] = {"items":[[0,"","draw_state","Graphics state blocks for gfx-rs",null,null],[3,"DrawState","","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",0,null],[12,"multi_sample","","Multi-sampling mode",0,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",0,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",0,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",0,null],[12,"blend","","Blend function to use. If None, no blending is done.",0,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",0,null],[4,"BlendPreset","","Blend function presets for ease of use.",null,null],[13,"Add","","When combining two fragments, add their values together, saturating at 1.0",1,null],[13,"Multiply","","When combining two fragments, multiply their values together.",1,null],[13,"Alpha","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",1,null],[13,"Invert","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",1,null],[0,"state","","Fixed-function hardware state.",null,null],[3,"Offset","draw_state::state","How to offset vertices in screen space, if at all.",null,null],[3,"Primitive","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",2,null],[12,"method","","How to rasterize this primitive.",2,null],[12,"offset","","Any polygon offset to apply.",2,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",3,null],[12,"value","","Reference value to compare the value in the stencil buffer with.",3,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",3,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",3,null],[12,"op_fail","","What operation to do if the stencil test fails.",3,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",3,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",3,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",4,null],[12,"back","","",4,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",5,null],[12,"write","","Specify whether to write to the depth buffer or not.",5,null],[3,"BlendChannel","","",null,null],[12,"equation","","",6,null],[12,"source","","",6,null],[12,"destination","","",6,null],[3,"Blend","","",null,null],[12,"color","","",7,null],[12,"alpha","","",7,null],[12,"value","","",7,null],[3,"ColorMask","","",null,null],[4,"FrontFace","","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",8,null],[13,"CounterClockwise","","Counter-clockwise winding order.",8,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",9,null],[13,"Front","","",9,null],[13,"Back","","",9,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",10,null],[13,"Line","","Rasterize as a line with the given width.",10,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",10,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",11,null],[13,"Less","","`x < y`",11,null],[13,"LessEqual","","`x <= y`",11,null],[13,"Equal","","`x == y`",11,null],[13,"GreaterEqual","","`x >= y`",11,null],[13,"Greater","","`x > y`",11,null],[13,"NotEqual","","`x != y`",11,null],[13,"Always","","`true`",11,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",12,null],[13,"Zero","","Set the value in the stencil buffer to zero.",12,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",12,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",12,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",12,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",12,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",12,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",12,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",13,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",13,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",13,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",13,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",13,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",14,null],[13,"SourceAlpha","","",14,null],[13,"DestColor","","",14,null],[13,"DestAlpha","","",14,null],[13,"ConstColor","","",14,null],[13,"ConstAlpha","","",14,null],[4,"Factor","","",null,null],[13,"Zero","","",15,null],[13,"One","","",15,null],[13,"SourceAlphaSaturated","","",15,null],[13,"ZeroPlus","","",15,null],[13,"OneMinus","","",15,null],[6,"LineWidth","","Width of a line.",null,null],[6,"OffsetFactor","","",null,null],[6,"OffsetUnits","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",8,null],[11,"partial_cmp","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"cmp","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",2,{"inputs":[{"name":"primitive"}],"output":{"name":"cullface"}}],[11,"default","","",2,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"cmp","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"fmt","","",17,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"cmp","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"cmp","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"cmp","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"default","","",3,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"cmp","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"cmp","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"default","","",5,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"cmp","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"cmp","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"cmp","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"fmt","","",6,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",6,null],[11,"partial_cmp","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"eq","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"default","","",7,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",7,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"cmp","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",18,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",18,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"not","","Returns the complement of this set of flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[0,"target","draw_state","Render target specification.",null,null],[3,"Rect","draw_state::target","A screen space rectangle",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"w","","",19,null],[12,"h","","",19,null],[3,"Mask","","/// Output mask, used for blitting and clearing",null,null],[3,"Mirror","","/// Mirroring flags, used for blitting",null,null],[3,"ClearData","","How to clear a frame.",null,null],[12,"color","","The color to clear the frame with",20,null],[12,"depth","","The depth value to clear the frame with",20,null],[12,"stencil","","The stencil value to clear the frame with",20,null],[6,"Layer","","A depth value, specifying which plane to select out of a 3D texture.",null,null],[6,"Level","","Mipmap level to select in a texture.",null,null],[6,"Depth","","A single depth value from a depth buffer.",null,null],[6,"Stencil","","A single value from a stencil stencstencil buffer.",null,null],[6,"ColorValue","","A color with floating-point components.",null,null],[17,"COLOR","","",null,null],[17,"COLOR0","","",null,null],[17,"COLOR1","","",null,null],[17,"COLOR2","","",null,null],[17,"COLOR3","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[11,"partial_cmp","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",21,null],[11,"cmp","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"eq","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"mask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"all","","Returns the set containing all flags.",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",21,{"inputs":[{"name":"mask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",21,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",21,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"mask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",21,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",21,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[11,"not","","Returns the complement of this set of flags.",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"hash","","",22,null],[11,"cmp","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",22,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",22,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"sub","","Returns the set difference of the two sets of flags.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"not","","Returns the complement of this set of flags.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"eq","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"cleardata"},{"name":"cleardata"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"cleardata"}],"output":{"name":"cleardata"}}],[11,"fmt","","",20,{"inputs":[{"name":"cleardata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","draw_state","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"drawstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"cmp","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"blendpreset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"blendpreset"}],"output":{"name":"blendpreset"}}],[11,"new","","Create a default `DrawState`. Uses counter-clockwise winding, culls the backface of each\nprimitive, and does no scissor/stencil/depth/blend/color masking.",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"get_target_mask","","Return a target mask that contains all the planes required by this state.",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"mask"}}],[11,"multi_sample","","Enable multi-sampled rasterization",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"stencil","","Set the stencil test to a simple expression",0,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"stencil"}],"output":{"name":"drawstate"}}],[11,"depth","","Set the depth test with the mask",0,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"bool"}],"output":{"name":"drawstate"}}],[11,"scissor","","Set the scissor",0,{"inputs":[{"name":"drawstate"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"drawstate"}}],[11,"blend","","Set the blend mode to one of the presets",0,{"inputs":[{"name":"drawstate"},{"name":"blendpreset"}],"output":{"name":"drawstate"}}]],"paths":[[3,"DrawState"],[4,"BlendPreset"],[3,"Primitive"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[3,"BlendChannel"],[3,"Blend"],[4,"FrontFace"],[4,"CullFace"],[4,"RasterMethod"],[4,"Comparison"],[4,"StencilOp"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"Offset"],[3,"MultiSample"],[3,"ColorMask"],[3,"Rect"],[3,"ClearData"],[3,"Mask"],[3,"Mirror"]]};
searchIndex['vecmath'] = {"items":[[0,"","vecmath","A simple and generic library for vector math.",null,null],[5,"col_mat3x2_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"col_mat3_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat4_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat2x3_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3x4_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat4_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat3x2_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"col_mat3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"col_mat4x3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"col_mat4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"row_mat2x3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"row_mat3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"row_mat3x4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"row_mat4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"mat2x3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix2x3"}}],[5,"mat3x2_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3x2"}}],[5,"mat3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3"}}],[5,"mat3x4_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3x4"}}],[5,"mat4x3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix4x3"}}],[5,"mat4_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix4"}}],[5,"vec2_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_add","","Adds two vectors.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_add","","Adds two vectors.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_add","","Adds two vectors.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_cross","","Computes the cross product.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_cross","","Computes the cross product.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec2_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector2"},{"name":"t"}],"output":{"name":"vector2"}}],[5,"vec3_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector3"},{"name":"t"}],"output":{"name":"vector3"}}],[5,"vec4_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector4"},{"name":"t"}],"output":{"name":"vector4"}}],[5,"vec2_neg","","Negates the vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_neg","","Negates the vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_neg","","Negates the vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec3_dot_vec2","","Computes transformed vector component.",null,{"inputs":[{"name":"vector3"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec4_dot_vec3","","Computes transformed vector component.",null,{"inputs":[{"name":"vector4"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec3_dot_pos2","","Computes transformed position component.",null,{"inputs":[{"name":"vector3"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec4_dot_pos3","","Computes transformed position component.",null,{"inputs":[{"name":"vector4"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"row_mat2x3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"col_mat2x3_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"row_mat3x2_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3x2_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3x4_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3x4_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat4x3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat4x3_row","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat4_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat4_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"mat2x3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix3x2"}}],[5,"mat3x2_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix2x3"}}],[5,"mat3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix4x3"}}],[5,"mat4x3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix3x4"}}],[5,"mat4_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"col_mat3_transform","","Transforms a 3D vector through a matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4_transform","","Transforms a 4D vector through a matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"row_mat3_transform","","Transforms a 3D vector through a matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"row_mat4_transform","","Transforms a 4D vector through a matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"row_mat2x3_transform_pos2","","Transforms a 2D position through matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3x2_transform_pos2","","Transforms a 2D position through matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3_transform_pos2","","Transforms a 2D position through row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3_transform_pos2","","Transforms a 2D position through column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3x4_transform_pos3","","Transforms a 3D position through matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_transform_pos3","","Transforms a 3D position through matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"row_mat2x3_transform_vec2","","Transforms a 2D vector through matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3x2_transform_vec2","","Transforms a 2D vector through matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3_transform_vec2","","Transforms a 2D vector through row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3_transform_vec2","","Transforms a 2D vector through column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3x4_transform_vec3","","Transforms a 3D vector through matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_transform_vec3","","Transforms a 3D vector through matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"mat2x3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"t"}}],[5,"mat3x2_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"t"}}],[5,"mat3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"t"}}],[5,"mat3x4_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"t"}}],[5,"mat4x3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"t"}}],[5,"mat4_det","","Computes the determinant of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"t"}}],[5,"mat2x3_inv_det","","Computes inverse determinant of a 2x3 matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"t"}}],[5,"mat3x2_inv_det","","Computes inverse determinant of a 3x2 matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"t"}}],[5,"mat3_inv_det","","Computes inverse determinant of a 3x3 matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"t"}}],[5,"mat3x4_inv_det","","Computes inverse determinant of a 3x4 matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"t"}}],[5,"mat4x3_inv_det","","Computes inverse determinant of a 4x3 matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"t"}}],[5,"mat4_inv_det","","Computes the inverse determinant of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"t"}}],[5,"mat2x3_inv","","Computes the inverse of a 2x3 matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_inv","","Computes the inverse of a 3x2 matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_inv","","Computes the inverse of a 3x3 matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_inv","","Computes the inverse of a 3x4 matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_inv","","Computes the inverse of a 4x3 matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_inv","","Computes the inverse of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[0,"traits","","Various useful traits",null,null],[6,"Vector2","","A 2D vector.",null,null],[6,"Vector3","","A 3D vector.",null,null],[6,"Vector4","","A 4D vector.",null,null],[6,"Matrix2x3","","A 2x3 matrix.",null,null],[6,"Matrix3x2","","A 3x2 matrix.",null,null],[6,"Matrix3","","A 3x3 matrix.",null,null],[6,"Matrix3x4","","A 3x4 matrix.",null,null],[6,"Matrix4x3","","A 4x3 matrix.",null,null],[6,"Matrix4","","A 4x4 matrix.",null,null]],"paths":[]};
searchIndex['clock_ticks'] = {"items":[[0,"","clock_ticks","",null,null],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"precise_time_ms","","Returns the current value of a high-resolution performance counter\nin milliseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}]],"paths":[]};
searchIndex['viewport'] = {"items":[[0,"","viewport","A library for storing viewport information",null,null],[3,"Viewport","","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels.\n```[x, y, width height]``` where ```(x, y)``` is lower left corner.",0,null],[12,"draw_size","","The size of frame buffer in pixels.",0,null],[12,"window_size","","The size of window in points.",0,null],[11,"clone","","",0,{"inputs":[{"name":"viewport"}],"output":{"name":"viewport"}}],[11,"abs_transform","","Computes absolute transform for 2D graphics,\nwhich uses a row major 2x3 matrix.\nThe origin is in the upper left corner of the viewport rectangle.\nThe x axis points to the right, and the y axis points down.\nThe units are in points (window coordinates).",0,null]],"paths":[[3,"Viewport"]]};
searchIndex['interpolation'] = {"items":[[0,"","interpolation","Interpolation algorithms.",null,null],[4,"EaseFunction","","",null,null],[13,"QuadraticIn","","",0,null],[13,"QuadraticOut","","",0,null],[13,"QuadraticInOut","","",0,null],[13,"CubicIn","","",0,null],[13,"CubicOut","","",0,null],[13,"CubicInOut","","",0,null],[13,"QuarticIn","","",0,null],[13,"QuarticOut","","",0,null],[13,"QuarticInOut","","",0,null],[13,"QuinticIn","","",0,null],[13,"QuinticOut","","",0,null],[13,"QuinticInOut","","",0,null],[13,"SineIn","","",0,null],[13,"SineOut","","",0,null],[13,"SineInOut","","",0,null],[13,"CircularIn","","",0,null],[13,"CircularOut","","",0,null],[13,"CircularInOut","","",0,null],[13,"ExponentialIn","","",0,null],[13,"ExponentialOut","","",0,null],[13,"ExponentialInOut","","",0,null],[13,"ElasticIn","","",0,null],[13,"ElasticOut","","",0,null],[13,"ElasticInOut","","",0,null],[13,"BackIn","","",0,null],[13,"BackOut","","",0,null],[13,"BackInOut","","",0,null],[13,"BounceIn","","",0,null],[13,"BounceOut","","",0,null],[13,"BounceInOut","","",0,null],[5,"lerp","","Performs linear interpolation.\nA linear interpolation consists of two states 'a' and 'b'.\nThe 't' variable is a factor between 0 and 1 that\ngives weight to 'a' or 'b'.\nWhen 't' is zero then 'a' has full weight.\nWhen 't' is one then 'b' has full weight.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"scalar"}],"output":{"name":"t"}}],[5,"quad_bez","","Performs quadratic beziér interpolation.\nThis is done by nesting linear interpolations.\nFor more information, see:",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"scalar"}],"output":{"name":"t"}}],[5,"cub_bez","","Performs cubic beziér interpolation.\nThis is done by interpolation between two quadratic beziér.\nFor more information, see:",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"scalar"}],"output":{"name":"t"}}],[11,"eq","","",0,{"inputs":[{"name":"easefunction"},{"name":"easefunction"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"easefunction"},{"name":"easefunction"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"easefunction"}],"output":{"name":"easefunction"}}],[8,"Ease","","",null,null],[10,"calc","","Calculate the eased value, normalized",1,{"inputs":[{"name":"ease"},{"name":"easefunction"}],"output":{"name":"self"}}],[10,"quadratic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quadratic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quadratic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"cubic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"cubic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"cubic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quartic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quartic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quartic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quintic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quintic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quintic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"sine_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"sine_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"sine_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"circular_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"circular_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"circular_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"exponential_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"exponential_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"exponential_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"elastic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"elastic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"elastic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"back_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"back_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"back_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"bounce_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"bounce_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"bounce_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[8,"Spatial","","Used for interpolation over spatial structures.",null,null],[16,"Scalar","","The scalar type.",2,null],[10,"add","","Add",2,{"inputs":[{"name":"spatial"},{"name":"self"}],"output":{"name":"self"}}],[10,"sub","","Subtract",2,{"inputs":[{"name":"spatial"},{"name":"self"}],"output":{"name":"self"}}],[10,"scale","","Scales with a scalar.",2,{"inputs":[{"name":"spatial"},{"name":"scalar"}],"output":{"name":"self"}}]],"paths":[[4,"EaseFunction"],[8,"Ease"],[8,"Spatial"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"gl_pathv","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused1","","",1,null],[12,"__unused2","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_ifu","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_ino","","",17,null],[12,"st_nlink","","",17,null],[12,"st_mode","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"__pad0","","",17,null],[12,"st_rdev","","",17,null],[12,"st_size","","",17,null],[12,"st_blksize","","",17,null],[12,"st_blocks","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"__unused","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"sockaddr_ll","libc::types::os::arch::extra","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"AF_PACKET","libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"fdatasync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"getdtablesize","libc::funcs::bsd44","",null,null],[5,"ioctl","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex['shader_version'] = {"items":[[0,"","shader_version","A helper library for detecting and picking compatible shaders.",null,null],[3,"Shaders","","Shader picker.",null,null],[0,"opengl","","Models versions of OpenGL",null,null],[4,"OpenGL","shader_version::opengl","",null,null],[13,"V2_0","","",0,null],[13,"V2_1","","",0,null],[13,"V3_0","","",0,null],[13,"V3_1","","",0,null],[13,"V3_2","","",0,null],[13,"V3_3","","",0,null],[13,"V4_0","","",0,null],[13,"V4_1","","",0,null],[13,"V4_2","","",0,null],[13,"V4_3","","",0,null],[13,"V4_4","","",0,null],[13,"V4_5","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"opengl"}],"output":{"name":"opengl"}}],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,null],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,{"inputs":[{"name":"opengl"}],"output":{"name":"glsl"}}],[0,"glsl","shader_version","Models versions of OpenGL Shader Language (GLSL)",null,null],[4,"GLSL","shader_version::glsl","For OpenGL version 3.3 and above,\nthe GLSL version is the same as the OpenGL version.",null,null],[13,"V1_10","","",1,null],[13,"V1_20","","",1,null],[13,"V1_30","","",1,null],[13,"V1_40","","",1,null],[13,"V1_50","","",1,null],[13,"V3_30","","",1,null],[13,"V4_00","","",1,null],[13,"V4_10","","",1,null],[13,"V4_20","","",1,null],[13,"V4_30","","",1,null],[13,"V4_40","","",1,null],[13,"V4_50","","",1,null],[11,"cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"glsl"}],"output":{"name":"glsl"}}],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,{"inputs":[{"name":"glsl"}],"output":{"name":"opengl"}}],[11,"pick_shader","","",1,{"inputs":[{"name":"glsl"},{"name":"shaders"}],"output":{"name":"option"}}],[8,"PickShader","shader_version","Implemented by shader enums.",null,null],[10,"pick_shader","","Pick shader.",2,{"inputs":[{"name":"pickshader"},{"name":"shaders"}],"output":{"name":"option"}}],[11,"new","","Creates a new shader picker.",3,{"inputs":[{"name":"shaders"}],"output":{"name":"self"}}],[11,"set","","Sets source for a shader version.",3,{"inputs":[{"name":"shaders"},{"name":"v"},{"name":"s"}],"output":{"name":"self"}}],[11,"get","","Get the closest shader to a shader version.",3,{"inputs":[{"name":"shaders"},{"name":"v"}],"output":{"name":"option"}}]],"paths":[[4,"OpenGL"],[4,"GLSL"],[8,"PickShader"],[3,"Shaders"]]};
searchIndex['float'] = {"items":[[0,"","float","Traits for generic floats in game programming",null,null],[8,"Float","","Convenience trait for floats.",null,null],[8,"Min","","Minimum value.",null,null],[10,"min","","Returns the minimum value of self or other.",0,{"inputs":[{"name":"min"},{"name":"self"}],"output":{"name":"self"}}],[8,"Max","","Maximum value.",null,null],[10,"max","","Returns the maximum value of self or other.",1,{"inputs":[{"name":"max"},{"name":"self"}],"output":{"name":"self"}}],[8,"Signum","","The sign of the number.",null,null],[10,"signum","","Returns number representing the sign of self",2,{"inputs":[{"name":"signum"}],"output":{"name":"self"}}],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_180","","Returns radians corresponding to 180 degrees.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_360","","Returns radians corresponding to 360 degrees.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"rad_to_deg","","Convert a value to degrees from radians.\nEquivalent to ```value * (180 / π)```.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[8,"One","","Number 1.",null,null],[10,"one","","Returns 1.",4,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Zero","","Number 0.",null,null],[10,"zero","","Returns 0.",5,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[8,"Sqrt","","Square root.",null,null],[10,"sqrt","","Returns square root.",6,{"inputs":[{"name":"sqrt"}],"output":{"name":"self"}}],[8,"Trig","","Basic trigonometry functions",null,null],[10,"sin","","Returns sine of self",7,{"inputs":[{"name":"trig"}],"output":{"name":"self"}}],[10,"cos","","Returns cosine of self",7,{"inputs":[{"name":"trig"}],"output":{"name":"self"}}],[10,"tan","","Returns tangent of self",7,{"inputs":[{"name":"trig"}],"output":{"name":"self"}}],[8,"Cast","","Casts into another type.",null,null],[10,"cast","","Casts into other type.",8,{"inputs":[{"name":"cast"}],"output":{"name":"t"}}],[8,"FromPrimitive","","Trait for converting from different numeric types",null,null],[10,"from_f64","","from a f64",9,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"self"}}],[10,"from_f32","","from a f32",9,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"self"}}],[10,"from_isize","","from a isze",9,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"self"}}]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex['texture'] = {"items":[[0,"","texture","A library for texture conventions.",null,null],[3,"TextureSettings","","Texture creation parameters.",null,null],[0,"ops","","Image operations for textures.",null,null],[5,"flip_vertical","texture::ops","Flips the image vertically.",null,null],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",null,null],[8,"ImageSize","texture","Implemented by all images to be used with generic algorithms.",null,null],[10,"get_size","","Get the image size.",0,null],[11,"get_width","","Gets the image width.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[11,"get_height","","Gets the image height.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[8,"Rgba8Texture","","Implemented by rgba8 textures.",null,null],[16,"Error","","The error when creating or updating texture.",1,null],[10,"create","","Create rgba8 texture from memory.",1,null],[10,"update","","Update rgba8 texture.",1,null],[11,"new","","Create default settings.",2,{"inputs":[{"name":"texturesettings"}],"output":{"name":"texturesettings"}}],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color space.",2,{"inputs":[{"name":"texturesettings"}],"output":{"name":"bool"}}],[11,"set_convert_gamma","","Sets convert gamma.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":null}],[11,"convert_gamma","","Sets convert gamma.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_compress","","Gets wheter compress on the GPU.",2,{"inputs":[{"name":"texturesettings"}],"output":{"name":"bool"}}],[11,"set_compress","","Sets compress.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":null}],[11,"compress","","Sets compress.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_generate_mipmap","","Gets generate mipmap.",2,{"inputs":[{"name":"texturesettings"}],"output":{"name":"bool"}}],[11,"set_generate_mipmap","","Sets generate mipmap.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":null}],[11,"generate_mipmap","","Sets generate mipmap.",2,{"inputs":[{"name":"texturesettings"},{"name":"bool"}],"output":{"name":"self"}}]],"paths":[[8,"ImageSize"],[8,"Rgba8Texture"],[3,"TextureSettings"]]};
searchIndex['read_color'] = {"items":[[0,"","read_color","A simple library for reading hex colors.",null,null],[5,"char_to_hex","","Converts a character into a u8 value.",null,{"inputs":[{"name":"char"}],"output":{"name":"option"}}],[5,"hex","","Reads a hex value from an iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"hex_pair","","Reads a pair of hex values, joining them in value range 0-255.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgb","","Reads RGB colors from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgba","","Reads RGBA colors from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgb_maybe_a","","Reads RGB with optional alpha from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}]],"paths":[]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
